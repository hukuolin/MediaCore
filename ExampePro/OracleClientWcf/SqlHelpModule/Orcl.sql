-------------------------------------------------
-- Export file for user CEAICREW@CEAIR         --
-- Created by niuguobin on 2018/5/14, 17:27:51 --
-------------------------------------------------

set define off
spool Orcl.log

prompt
prompt Creating table ABC
prompt ==================
prompt
create table ABC
(
  flight_leg_id    NUMBER not null,
  flight_date      DATE,
  flight_no        VARCHAR2(10),
  acreg            VARCHAR2(10),
  departureairport NVARCHAR2(8),
  arrivalairport   NVARCHAR2(8),
  qar滑出时刻          DATE,
  qar起飞时刻          DATE,
  qar降落时刻          DATE,
  qar滑入时刻          DATE,
  acars滑出时刻        DATE,
  acars起飞时刻        DATE,
  acars降落时刻        DATE,
  acars滑入时刻        DATE,
  time_stamp       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table AIRLINE
prompt ======================
prompt
create table AIRLINE
(
  序号                   VARCHAR2(150),
  性质                   VARCHAR2(150),
  航线                   VARCHAR2(150),
  去程走向                 VARCHAR2(350),
  航线2                  VARCHAR2(150),
  回程走向                 VARCHAR2(350),
  备注                   VARCHAR2(550),
  departure_airport4   VARCHAR2(10),
  arrival_airport4     VARCHAR2(10),
  departure_airport3   VARCHAR2(10),
  arrival_airport3     VARCHAR2(10),
  t_departure_airport4 VARCHAR2(10),
  t_arrival_airport4   VARCHAR2(10),
  t_departure_airport3 VARCHAR2(10),
  t_arrival_airport3   VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table AIRLINE_V2
prompt =========================
prompt
create table AIRLINE_V2
(
  公司代号               VARCHAR2(150),
  起始时间               VARCHAR2(150),
  截止时间               VARCHAR2(150),
  起飞机场               VARCHAR2(150),
  目的地机场              VARCHAR2(150),
  去程代号               VARCHAR2(150),
  回程代号               VARCHAR2(150),
  departure_airport3 VARCHAR2(10),
  arrival_airport3   VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table AIROPS_INFO_FOC_ABC
prompt ==================================
prompt
create table AIROPS_INFO_FOC_ABC
(
  leg_id                   NUMBER(19) not null,
  flight_no                VARCHAR2(4 CHAR),
  suffix                   CHAR(1 CHAR) not null,
  carrier                  VARCHAR2(3 CHAR) not null,
  dept_airport             VARCHAR2(8),
  arr_airport              VARCHAR2(8),
  plan_dept_airport        VARCHAR2(8),
  plan_arr_airport         VARCHAR2(8),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(4000 CHAR),
  tail_number              VARCHAR2(32 CHAR),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  flight_date              DATE not null,
  leg_sequence_number      NUMBER(19) not null,
  flight_service_type_code VARCHAR2(1 CHAR) not null,
  carrier_code             VARCHAR2(3 CHAR) not null,
  fleet_code               VARCHAR2(4 CHAR) not null,
  publish_carrier_code     VARCHAR2(3 CHAR) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ALL_INVALID_TECH_INFO
prompt ====================================
prompt
create table ALL_INVALID_TECH_INFO
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ALL_INVALID_TECH_QULIFICATION
prompt ============================================
prompt
create table ALL_INVALID_TECH_QULIFICATION
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table A_JOB
prompt ====================
prompt
create table A_JOB
(
  autoid     NUMBER(12),
  createdate DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table A_STUDENT
prompt ========================
prompt
create table A_STUDENT
(
  autoid     NUMBER(12),
  createdate DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table CECS_CHULI_DATA
prompt ==============================
prompt
create table CECS_CHULI_DATA
(
  work_no       VARCHAR2(50),
  ac_types      VARCHAR2(100),
  qlf_name_cecs VARCHAR2(60),
  p_code        VARCHAR2(50),
  qlf_code      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_M_PASSPORT
prompt ============================
prompt
create table CK_M_PASSPORT
(
  pass_id       NUMBER(11),
  p_code        VARCHAR2(20),
  source_p_code VARCHAR2(10) not null,
  foc_p_code    NUMBER,
  c_name        VARCHAR2(60) not null,
  id_no         VARCHAR2(26),
  license_code  VARCHAR2(10) not null,
  cert_type     VARCHAR2(10),
  cert_name     VARCHAR2(40) not null,
  license_no    VARCHAR2(30),
  from_date     DATE,
  end_date      DATE,
  en_born_in    VARCHAR2(20),
  ch_born_in    VARCHAR2(20),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_M_VISA
prompt ========================
prompt
create table CK_M_VISA
(
  p_code            VARCHAR2(20),
  passport_id       NUMBER(11),
  source_p_code     VARCHAR2(10) not null,
  foc_p_code        NUMBER,
  c_name            VARCHAR2(60) not null,
  id_no             VARCHAR2(26),
  passport_no       VARCHAR2(30),
  pass_license_code VARCHAR2(10),
  pass_cert_type    VARCHAR2(10),
  visa_license_code VARCHAR2(10) not null,
  visa_cert_type    VARCHAR2(10),
  visa_name         VARCHAR2(40) not null,
  visa_no           VARCHAR2(30),
  from_date         DATE,
  end_date          DATE,
  en_born_in        VARCHAR2(20),
  ch_born_in        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_FLT_SCHEDULE
prompt ================================
prompt
create table CK_T_FLT_SCHEDULE
(
  flight_id         NUMBER(11),
  crew_link_line    NUMBER(11),
  ftb_no            NUMBER(11),
  flight_date       DATE,
  ck_flight_id      NUMBER(11),
  ck_crew_link_line NUMBER(11),
  sch_com_flag      VARCHAR2(2),
  sch_ver_flag      VARCHAR2(2),
  sch_pub_flag      VARCHAR2(2),
  ftb_rec_flag      VARCHAR2(2),
  std               DATE,
  sta               DATE,
  oper              VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_FLT_SCHEDULE20160624
prompt ========================================
prompt
create table CK_T_FLT_SCHEDULE20160624
(
  flight_id         NUMBER(11),
  crew_link_line    NUMBER(11),
  ftb_no            NUMBER(11),
  flight_date       DATE,
  ck_flight_id      NUMBER(11),
  ck_crew_link_line NUMBER(11),
  sch_com_flag      VARCHAR2(2),
  sch_ver_flag      VARCHAR2(2),
  sch_pub_flag      VARCHAR2(2),
  ftb_rec_flag      VARCHAR2(2),
  std               DATE,
  sta               DATE,
  oper              VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SCH_PAIRING
prompt ===============================
prompt
create table CK_T_SCH_PAIRING
(
  flight_date            DATE,
  crew_link_line         NUMBER(11),
  module_flag            VARCHAR2(1) not null,
  crew_pairing_line      NUMBER(11),
  flight_ids             VARCHAR2(200),
  ac_type_crew           VARCHAR2(10),
  ac_type                VARCHAR2(10),
  ac_reg                 VARCHAR2(10),
  flight_com             VARCHAR2(60),
  flight_voyage          VARCHAR2(100),
  flight_code            VARCHAR2(60),
  depa_airport           VARCHAR2(4),
  arri_airport           VARCHAR2(4),
  td_punch               NUMBER(3),
  td_before              NUMBER(3),
  td                     DATE not null,
  ta                     DATE not null,
  ta_after               NUMBER(3),
  d_or_i                 VARCHAR2(1),
  flight_type            VARCHAR2(1),
  fly_hours              NUMBER(4) default 0,
  filiale                VARCHAR2(10),
  base                   VARCHAR2(4),
  carrier                VARCHAR2(2),
  p_or_c                 VARCHAR2(1) default 'P',
  crew_id                NUMBER(9),
  flight_flag            VARCHAR2(1),
  icao_flag              VARCHAR2(1),
  foreign_flag           VARCHAR2(1),
  special_flag           VARCHAR2(1),
  fxw_id                 NUMBER(11),
  rec_id                 NUMBER(11),
  oper                   VARCHAR2(10),
  op_time                DATE,
  remarks                VARCHAR2(200),
  oper_ip                VARCHAR2(15),
  oper_host              VARCHAR2(50),
  sch_pub_flag           VARCHAR2(1) default 'N',
  dep_code               VARCHAR2(10),
  crew_pairing_line_lock VARCHAR2(1) default 'N',
  duty_line              NUMBER(11),
  cat_flag               VARCHAR2(1),
  sal_crew_link_line     NUMBER(11),
  ck_crew_link_line      NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SCH_ROSTER
prompt ==============================
prompt
create table CK_T_SCH_ROSTER
(
  flight_id       NUMBER(11),
  flight_date     DATE,
  p_code          VARCHAR2(10),
  module_flag     VARCHAR2(1),
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4),
  rank_no         VARCHAR2(4),
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1) default 'N',
  backup_yn       VARCHAR2(1) default 'N',
  carry_yn        VARCHAR2(1) default 'N',
  carry_after_yn  VARCHAR2(1) default 'N',
  check_yn        VARCHAR2(1) default 'N',
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1) default 'Y',
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1) default 'Y',
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1) default 'N',
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11),
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6) default 0,
  night_days      NUMBER(2) default 0,
  modify_time     DATE,
  fly_hours1      NUMBER(6) default 0,
  fly_hours2      NUMBER(6) default 0,
  pub_time        DATE,
  ck_flight_id    VARCHAR2(12),
  ck_p_code       VARCHAR2(12),
  is_imp          VARCHAR2(2) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SVC_FTB
prompt ===========================
prompt
create table CK_T_SVC_FTB
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6) default 0,
  grnd_hours    NUMBER(6) default 0,
  night_hours   NUMBER(6) default 0,
  totl_hours    NUMBER(6) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11),
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9),
  ck_flight_id  NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SVC_FTB20160624
prompt ===================================
prompt
create table CK_T_SVC_FTB20160624
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6) default 0,
  grnd_hours    NUMBER(6) default 0,
  night_hours   NUMBER(6) default 0,
  totl_hours    NUMBER(6) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11),
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9),
  ck_flight_id  NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SVC_FTB20160628
prompt ===================================
prompt
create table CK_T_SVC_FTB20160628
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6) default 0,
  grnd_hours    NUMBER(6) default 0,
  night_hours   NUMBER(6) default 0,
  totl_hours    NUMBER(6) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11),
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9),
  ck_flight_id  NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SVC_FTB_DETAIL
prompt ==================================
prompt
create table CK_T_SVC_FTB_DETAIL
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  p_code        VARCHAR2(10),
  fly_hours     NUMBER(6) default 0,
  exp_hours     NUMBER(6) default 0,
  left_hours    NUMBER(6) default 0,
  left_updowns  NUMBER(3) default 0,
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6) default 0,
  right_updowns NUMBER(3) default 0,
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11),
  flight_date   DATE,
  left_night    NUMBER(6) default 0,
  left_teach    NUMBER(6) default 0,
  right_night   NUMBER(6) default 0,
  right_teach   NUMBER(6) default 0,
  left_downs    NUMBER(3) default 0,
  right_downs   NUMBER(3) default 0,
  ck_flight_id  NUMBER(11),
  ck_p_code     VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CK_T_SVC_FTB_DETAIL20160624
prompt ==========================================
prompt
create table CK_T_SVC_FTB_DETAIL20160624
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  p_code        VARCHAR2(10),
  fly_hours     NUMBER(6) default 0,
  exp_hours     NUMBER(6) default 0,
  left_hours    NUMBER(6) default 0,
  left_updowns  NUMBER(3) default 0,
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6) default 0,
  right_updowns NUMBER(3) default 0,
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11),
  flight_date   DATE,
  left_night    NUMBER(6) default 0,
  left_teach    NUMBER(6) default 0,
  right_night   NUMBER(6) default 0,
  right_teach   NUMBER(6) default 0,
  left_downs    NUMBER(3) default 0,
  right_downs   NUMBER(3) default 0,
  ck_flight_id  NUMBER(11),
  ck_p_code     VARCHAR2(10),
  is_imp        VARCHAR2(2) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table CODESMITH_EXTENDED_PROPERTIES
prompt ============================================
prompt
create table CODESMITH_EXTENDED_PROPERTIES
(
  container_object_owner VARCHAR2(50) not null,
  object_name            VARCHAR2(61) not null,
  codesmith_schema_type  VARCHAR2(200) not null,
  property_name          VARCHAR2(75) not null,
  property_value         VARCHAR2(4000),
  clr_type               VARCHAR2(50) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table CODESMITH_EXTENDED_PROPERTIES
  add constraint PKCODESMITHEXTENDEDPROPERTIES primary key (CONTAINER_OBJECT_OWNER, OBJECT_NAME, CODESMITH_SCHEMA_TYPE, PROPERTY_NAME)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table DEL_NGB
prompt ======================
prompt
create table DEL_NGB
(
  人员编号 VARCHAR2(10) not null,
  人员姓名 VARCHAR2(60) not null,
  工号   VARCHAR2(10),
  排班部门 VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table DEL_TR_SCHEDULE
prompt ==============================
prompt
create table DEL_TR_SCHEDULE
(
  fxw_suitid    VARCHAR2(60),
  basic_info_id VARCHAR2(40)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table DOC_DOC_BAK20140515
prompt ==================================
prompt
create table DOC_DOC_BAK20140515
(
  序号          VARCHAR2(50),
  源类型         VARCHAR2(50),
  飞行日期        DATE,
  航班号         VARCHAR2(50),
  飞机号         VARCHAR2(50),
  机型          VARCHAR2(50),
  起飞机场        VARCHAR2(50),
  降落机场        VARCHAR2(50),
  最终滑出时间      DATE,
  最终起飞时间      DATE,
  最终降落时间      DATE,
  最终滑入时间      DATE,
  飞行时长        VARCHAR2(50),
  空中时长        VARCHAR2(50),
  qar滑出时间     DATE,
  qar起飞时间     DATE,
  qar降落时间     DATE,
  qar滑入时间     DATE,
  acars滑出时间   DATE,
  acars起飞时间   DATE,
  acars降落时间   DATE,
  acars滑入时间   DATE,
  yy撤销轮档时刻    DATE,
  yy起飞时刻      DATE,
  yy降落时刻      DATE,
  yy上轮档时刻     DATE,
  sabre撤销轮挡时间 DATE,
  sabre起飞时间   DATE,
  sabre降落时间   DATE,
  sabre上轮挡时间  DATE,
  修正原因        VARCHAR2(50),
  起飞机场3       VARCHAR2(50),
  降落机场3       VARCHAR2(50),
  航班号3        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table DOC_TIMEINFO20141217
prompt ===================================
prompt
create table DOC_TIMEINFO20141217
(
  flight_leg_id      INTEGER not null,
  flight_no          VARCHAR2(10),
  flight_date        DATE,
  plan_dept_time     DATE,
  depart_port_code3  VARCHAR2(4),
  arrival_port_code3 VARCHAR2(4),
  slide_start_time   DATE,
  take_off_time      DATE,
  land_time          DATE,
  slide_end_time     DATE,
  time_stamp         DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table EA16_T_FLT_SCHEDULE
prompt ==================================
prompt
create table EA16_T_FLT_SCHEDULE
(
  org_code            VARCHAR2(50),
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table EMPLOYEE
prompt =======================
prompt
create table EMPLOYEE
(
  empid  INTEGER,
  deptid INTEGER,
  salary NUMBER(10,2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FENXI_JIEGUO
prompt ===========================
prompt
create table FENXI_JIEGUO
(
  航班id          NUMBER(11) not null,
  mm航班id        NUMBER(13),
  航班日期          DATE not null,
  航班号           VARCHAR2(15) not null,
  起飞机场          VARCHAR2(4) not null,
  起飞机场_中        VARCHAR2(50),
  落地机场          VARCHAR2(4) not null,
  落地机场_中        VARCHAR2(50),
  计划起飞时间        DATE not null,
  机型            VARCHAR2(10),
  机号            VARCHAR2(10),
  执飞单位          VARCHAR2(4),
  计划差值都不为空      CHAR(1),
  滑出_应取的值       VARCHAR2(11),
  滑出时间          DATE,
  滑入_应取的值       VARCHAR2(11),
  滑入时间          DATE,
  acars_总时间     NUMBER,
  qar_总时间       NUMBER,
  efb_总时间       NUMBER,
  取计算后的总时间      NUMBER,
  计算后的总时间_acars NUMBER,
  计算后的总时间_qar   NUMBER,
  计算后的总时间_efb   NUMBER,
  现保开车时间        DATE,
  现保撤轮挡时间       DATE,
  现保上轮挡时间       DATE,
  现保关车时间        DATE,
  现保_总时间        NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 10M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FENXI_JIEGUO_ALL
prompt ===============================
prompt
create table FENXI_JIEGUO_ALL
(
  航班id            NUMBER(11) not null,
  mm航班id          NUMBER(13),
  航班日期            DATE not null,
  航班号             VARCHAR2(15) not null,
  起飞机场            VARCHAR2(4) not null,
  起飞机场_中          VARCHAR2(50),
  落地机场            VARCHAR2(4) not null,
  落地机场_中          VARCHAR2(50),
  计划起飞时间          DATE not null,
  机型              VARCHAR2(10),
  机号              VARCHAR2(10),
  执飞单位            VARCHAR2(4),
  acars_滑出时间      DATE,
  acars_滑入时间      DATE,
  qar_滑出时间        DATE,
  qar_滑入时间        DATE,
  efb_滑出时间        DATE,
  efb_滑入时间        DATE,
  "滑出(acars-qar)" NUMBER,
  "滑出(acars-efb)" NUMBER,
  "滑出(qar-efb)"   NUMBER,
  计划差值都不为空        CHAR(1),
  滑出_应取的值         VARCHAR2(11),
  滑出时间            DATE,
  "滑入(acars-qar)" NUMBER,
  "滑入(acars-efb)" NUMBER,
  "滑入(qar-efb)"   NUMBER,
  滑入_应取的值         VARCHAR2(11),
  滑入时间            DATE,
  acars_总时间       NUMBER,
  qar_总时间         NUMBER,
  efb_总时间         NUMBER,
  取计算后的总时间        NUMBER,
  计算后的总时间_acars   NUMBER,
  计算后的总时间_qar     NUMBER,
  计算后的总时间_efb     NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FENXI_JIEGUO_NEW
prompt ===============================
prompt
create table FENXI_JIEGUO_NEW
(
  航班id          NUMBER(11) not null,
  mm航班id        NUMBER(13),
  航班日期          DATE not null,
  航班号           VARCHAR2(15) not null,
  起飞机场          VARCHAR2(4) not null,
  起飞机场_中        VARCHAR2(50),
  落地机场          VARCHAR2(4) not null,
  落地机场_中        VARCHAR2(50),
  计划起飞时间        DATE not null,
  机型            VARCHAR2(10),
  机号            VARCHAR2(10),
  执飞单位          VARCHAR2(4),
  计划差值都不为空      CHAR(1),
  滑出_应取的值       VARCHAR2(11),
  滑出时间          DATE,
  滑入_应取的值       VARCHAR2(11),
  滑入时间          DATE,
  acars_总时间     NUMBER,
  qar_总时间       NUMBER,
  efb_总时间       NUMBER,
  取计算后的总时间      NUMBER,
  计算后的总时间_acars NUMBER,
  计算后的总时间_qar   NUMBER,
  计算后的总时间_efb   NUMBER,
  现保开车时间        DATE,
  现保撤轮挡时间       DATE,
  现保上轮挡时间       DATE,
  现保关车时间        DATE,
  现保_总时间        NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FENXI_JIEGUO_NEW2
prompt ================================
prompt
create table FENXI_JIEGUO_NEW2
(
  航班id          NUMBER(11) not null,
  mm航班id        NUMBER(13),
  航班日期          DATE not null,
  航班号           VARCHAR2(15) not null,
  起飞机场          VARCHAR2(4) not null,
  起飞机场_中        VARCHAR2(50),
  落地机场          VARCHAR2(4) not null,
  落地机场_中        VARCHAR2(50),
  计划起飞时间        DATE not null,
  机型            VARCHAR2(10),
  机号            VARCHAR2(10),
  执飞单位          VARCHAR2(4),
  计划差值都不为空      CHAR(1),
  滑出_应取的值       VARCHAR2(11),
  滑出时间          DATE,
  滑入_应取的值       VARCHAR2(11),
  滑入时间          DATE,
  acars_总时间     NUMBER,
  qar_总时间       NUMBER,
  efb_总时间       NUMBER,
  取计算后的总时间      NUMBER,
  计算后的总时间_acars NUMBER,
  计算后的总时间_qar   NUMBER,
  计算后的总时间_efb   NUMBER,
  现保开车时间        DATE,
  现保撤轮挡时间       DATE,
  现保上轮挡时间       DATE,
  现保关车时间        DATE,
  现保_总时间        NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FLIGH_ID_WRONG
prompt =============================
prompt
create table FLIGH_ID_WRONG
(
  flight_id            NUMBER(11) not null,
  flight_unit_code     VARCHAR2(4),
  p_code               VARCHAR2(10),
  fxw_id               VARCHAR2(10),
  rank_no              VARCHAR2(10),
  passport_no          VARCHAR2(20),
  passport_type        VARCHAR2(10),
  passport_expire_date DATE,
  nation               VARCHAR2(10),
  nation_ch            VARCHAR2(100),
  birth_addr           VARCHAR2(100),
  birth_date           DATE,
  visa_no              VARCHAR2(20),
  visa_type            VARCHAR2(10),
  visa_grant_date      DATE,
  visa_expire_date     DATE,
  crew_link_line       NUMBER(11) not null,
  last_modify_time     DATE,
  rec_id               NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FLIGH_ID_WRONG2
prompt ==============================
prompt
create table FLIGH_ID_WRONG2
(
  flight_id NUMBER(11),
  p_code    VARCHAR2(10),
  rec_id    NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FMT3001
prompt ======================
prompt
create table FMT3001
(
  flight_date        DATE not null,
  crew_link_line     NUMBER(6) not null,
  flight_com         VARCHAR2(60),
  flight_voyage      VARCHAR2(30),
  line_depa_airport  CHAR(4),
  line_arri_airport  CHAR(4),
  td                 DATE,
  ta                 DATE,
  fly_hours          NUMBER(4) not null,
  d_or_i             VARCHAR2(1),
  ac_type            VARCHAR2(10),
  ac_reg             VARCHAR2(10),
  use_flag           VARCHAR2(1) not null,
  ftb_no             VARCHAR2(11),
  new_crew_link_line NUMBER(11),
  new_dep            VARCHAR2(4),
  new_arri           VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FMT3005
prompt ======================
prompt
create table FMT3005
(
  flight_date        DATE not null,
  crew_link_line     NUMBER(6) not null,
  p_code             VARCHAR2(8) not null,
  c_name             VARCHAR2(50) not null,
  id_card            VARCHAR2(36),
  rank_no            VARCHAR2(4) not null,
  fjs_order          NUMBER(4),
  tech_no            VARCHAR2(4),
  ts_flag            VARCHAR2(1),
  fly_hours          NUMBER(4),
  check_type         VARCHAR2(4),
  new_crew_link_line NUMBER(11),
  new_p_code         VARCHAR2(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_ENGLISH_AIRLINE
prompt =================================
prompt
create table FM_ENGLISH_AIRLINE
(
  flight_date    DATE not null,
  crew_link_line NUMBER(6) not null,
  flight_com     VARCHAR2(60),
  flight_voyage  VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_INVALID_HR_CREW_W
prompt ===================================
prompt
create table FM_INVALID_HR_CREW_W
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_FLT_SCHEDULE
prompt ================================
prompt
create table FM_T_FLT_SCHEDULE
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_HR_PASSPORT
prompt ===============================
prompt
create table FM_T_HR_PASSPORT
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_LOG
prompt =======================
prompt
create table FM_T_LOG
(
  log_id        NUMBER(12) not null,
  table_name    VARCHAR2(50) not null,
  key_values    VARCHAR2(300),
  chg_columns   VARCHAR2(2000),
  chg_values    VARCHAR2(4000),
  uids          VARCHAR2(1),
  module_flag   VARCHAR2(1),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  flight_leg_id NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_SCH_DUTYLINE
prompt ================================
prompt
create table FM_T_SCH_DUTYLINE
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_SCH_PAIRING
prompt ===============================
prompt
create table FM_T_SCH_PAIRING
(
  flight_date            DATE not null,
  crew_link_line         NUMBER(11) not null,
  module_flag            VARCHAR2(1) not null,
  crew_pairing_line      NUMBER(11),
  flight_ids             VARCHAR2(200),
  ac_type_crew           VARCHAR2(10),
  ac_type                VARCHAR2(10),
  ac_reg                 VARCHAR2(10),
  flight_com             VARCHAR2(60),
  flight_voyage          VARCHAR2(100),
  flight_code            VARCHAR2(60),
  depa_airport           VARCHAR2(4),
  arri_airport           VARCHAR2(4),
  td_punch               NUMBER(3),
  td_before              NUMBER(3),
  td                     DATE not null,
  ta                     DATE not null,
  ta_after               NUMBER(3),
  d_or_i                 VARCHAR2(1),
  flight_type            VARCHAR2(1),
  fly_hours              NUMBER(4),
  filiale                VARCHAR2(10),
  base                   VARCHAR2(4),
  carrier                VARCHAR2(2),
  p_or_c                 VARCHAR2(1),
  crew_id                NUMBER(9),
  flight_flag            VARCHAR2(1),
  icao_flag              VARCHAR2(1),
  foreign_flag           VARCHAR2(1),
  special_flag           VARCHAR2(1),
  fxw_id                 NUMBER(11),
  rec_id                 NUMBER(11),
  oper                   VARCHAR2(10),
  op_time                DATE,
  remarks                VARCHAR2(200),
  oper_ip                VARCHAR2(15),
  oper_host              VARCHAR2(50),
  sch_pub_flag           VARCHAR2(1),
  dep_code               VARCHAR2(10),
  crew_pairing_line_lock VARCHAR2(1),
  duty_line              NUMBER(11),
  cat_flag               VARCHAR2(1),
  sal_crew_link_line     NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_SCH_ROSTER_LOG
prompt ==================================
prompt
create table FM_T_SCH_ROSTER_LOG
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_SCH_ROSTER_LOGHIS
prompt =====================================
prompt
create table FM_T_SCH_ROSTER_LOGHIS
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_T_SVC_RECORD
prompt ==============================
prompt
create table FM_T_SVC_RECORD
(
  step_id   NUMBER(11) not null,
  flight_id NUMBER(11) not null,
  step_type VARCHAR2(4) not null,
  step_yn   VARCHAR2(1) not null,
  step_desc VARCHAR2(200),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FM_V_INTF_FXW_TASK
prompt =================================
prompt
create table FM_V_INTF_FXW_TASK
(
  flight_date      DATE not null,
  crew_link_line   NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  flight_unit_code VARCHAR2(22),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  sign_time        DATE,
  drive_time       DATE,
  last_modify_time DATE,
  depart_flight_no VARCHAR2(15),
  publish_status   VARCHAR2(1),
  rec_id           NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FRMS_DATA_20160203
prompt =================================
prompt
create table FRMS_DATA_20160203
(
  姓名                VARCHAR2(50),
  工号                VARCHAR2(50),
  执照单位              VARCHAR2(50),
  技术授权              VARCHAR2(50),
  crew_op_auth_id   VARCHAR2(50),
  pilot_id          VARCHAR2(50),
  op_auth_id        VARCHAR2(50),
  op_auth_code      VARCHAR2(50),
  op_auth_value     VARCHAR2(50),
  crew_tech_auth_id VARCHAR2(50),
  ac_type_code      VARCHAR2(50),
  port_code3        VARCHAR2(50),
  route_code        VARCHAR2(50),
  acq_date          VARCHAR2(50),
  valid_beg_date    VARCHAR2(50),
  valid_end_date    VARCHAR2(50),
  status            VARCHAR2(50),
  creator           VARCHAR2(50),
  create_time       VARCHAR2(50),
  last_modifier     VARCHAR2(50),
  last_modify_time  VARCHAR2(50),
  ceacrs_interface  VARCHAR2(50),
  is_chief          VARCHAR2(50),
  chief_grade       VARCHAR2(50),
  allow_post        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FRMS_DATA_20160223
prompt =================================
prompt
create table FRMS_DATA_20160223
(
  姓名                VARCHAR2(50),
  工号                VARCHAR2(50),
  执照单位              VARCHAR2(50),
  技术授权              VARCHAR2(50),
  crew_op_auth_id   VARCHAR2(50),
  pilot_id          VARCHAR2(50),
  op_auth_id        VARCHAR2(50),
  op_auth_code      VARCHAR2(50),
  op_auth_value     VARCHAR2(50),
  crew_tech_auth_id VARCHAR2(50),
  ac_type_code      VARCHAR2(50),
  port_code3        VARCHAR2(50),
  route_code        VARCHAR2(50),
  acq_date          VARCHAR2(50),
  valid_beg_date    VARCHAR2(50),
  valid_end_date    VARCHAR2(50),
  status            VARCHAR2(50),
  creator           VARCHAR2(50),
  create_time       VARCHAR2(50),
  last_modifier     VARCHAR2(50),
  last_modify_time  VARCHAR2(50),
  ceacrs_interface  VARCHAR2(50),
  is_chief          VARCHAR2(50),
  chief_grade       VARCHAR2(50),
  allow_post        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FRMS_DATA_AC_TYPE
prompt ================================
prompt
create table FRMS_DATA_AC_TYPE
(
  ac_type_code     VARCHAR2(50),
  ac_type_name     VARCHAR2(50),
  ac_type_name_exp VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FRMS_DATA_TECH
prompt =============================
prompt
create table FRMS_DATA_TECH
(
  tech_auth_id   VARCHAR2(50),
  tech_auth_code VARCHAR2(50),
  tech_auth_name VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FTB20150414
prompt ==========================
prompt
create table FTB20150414
(
  ftb_no           VARCHAR2(12),
  flight_id        NUMBER(11) not null,
  totl_hours       NUMBER,
  taxi_out_time    DATE,
  takeoff_time     DATE,
  landing_time     DATE,
  taxi_in_time     DATE,
  grnd_hours       NUMBER,
  air_hours        NUMBER,
  night_hours      NUMBER,
  is_icao          VARCHAR2(1),
  last_modify_time DATE,
  old_fuel         NUMBER,
  new_fuel         NUMBER,
  left_fuel        NUMBER,
  rec_id           NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FTB_ABC
prompt ======================
prompt
create table FTB_ABC
(
  rec_id NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FTB_DETAIL20150414
prompt =================================
prompt
create table FTB_DETAIL20150414
(
  ftb_no           VARCHAR2(12),
  flight_id        NUMBER(11) not null,
  p_code           VARCHAR2(10) not null,
  fly_hours        NUMBER,
  exp_hours        NUMBER,
  left_hours       NUMBER,
  left_updowns     NUMBER,
  left_ups         NUMBER,
  left_op_manu     VARCHAR2(6),
  right_hours      NUMBER,
  right_updowns    NUMBER,
  right_ups        NUMBER,
  right_op_manu    VARCHAR2(6),
  last_modify_time DATE,
  rec_id           NUMBER(11) not null,
  left_night       NUMBER,
  left_teach       NUMBER,
  right_night      NUMBER,
  right_teach      NUMBER,
  fxw_id           VARCHAR2(10),
  id_no            VARCHAR2(20),
  filiale          VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 14M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FTB_DETAIL20150415
prompt =================================
prompt
create table FTB_DETAIL20150415
(
  ftb_no           VARCHAR2(12),
  flight_id        NUMBER(11) not null,
  p_code           VARCHAR2(10) not null,
  fly_hours        NUMBER,
  exp_hours        NUMBER,
  left_hours       NUMBER,
  left_updowns     NUMBER,
  left_ups         NUMBER,
  left_op_manu     VARCHAR2(6),
  right_hours      NUMBER,
  right_updowns    NUMBER,
  right_ups        NUMBER,
  right_op_manu    VARCHAR2(6),
  last_modify_time DATE,
  rec_id           NUMBER(11) not null,
  left_night       NUMBER,
  left_teach       NUMBER,
  right_night      NUMBER,
  right_teach      NUMBER,
  fxw_id           VARCHAR2(10),
  id_no            VARCHAR2(20),
  filiale          VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 15M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table FXW_ADD
prompt ======================
prompt
create table FXW_ADD
(
  flight_id         VARCHAR2(20),
  flight_date       DATE,
  carrier           VARCHAR2(20),
  flight_no         VARCHAR2(20),
  plan_departure    VARCHAR2(20),
  departure_airport VARCHAR2(20),
  plan_arrival      VARCHAR2(20),
  arrival_airport   VARCHAR2(20),
  ac_type           VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table HUG
prompt ==================
prompt
create table HUG
(
  公司编码   VARCHAR2(4) not null,
  分公司    VARCHAR2(50) not null,
  部门     VARCHAR2(50) not null,
  人员编码   VARCHAR2(10) not null,
  姓名     VARCHAR2(60) not null,
  工号     VARCHAR2(10),
  技术授权   VARCHAR2(50) not null,
  航班日期   DATE not null,
  航班号    VARCHAR2(15) not null,
  计划起飞机场 VARCHAR2(4) not null,
  计划落地机场 VARCHAR2(4) not null,
  告警规则   VARCHAR2(1000),
  原始值    VARCHAR2(1000),
  航班id   NUMBER(11) not null,
  四码     VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table HUG_NO_P_CODE
prompt ============================
prompt
create table HUG_NO_P_CODE
(
  p_code NUMBER(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table HUG_TASK_20160222
prompt ================================
prompt
create table HUG_TASK_20160222
(
  flight_date      DATE not null,
  crew_link_line   NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  flight_unit_code VARCHAR2(88),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  sign_time        DATE,
  drive_time       DATE,
  last_modify_time DATE,
  depart_flight_no VARCHAR2(15),
  publish_status   VARCHAR2(1),
  rec_id           NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 896K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table HUG_TASK_201602222
prompt =================================
prompt
create table HUG_TASK_201602222
(
  flight_date      DATE not null,
  crew_link_line   NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  flight_unit_code VARCHAR2(88),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  sign_time        DATE,
  drive_time       DATE,
  last_modify_time DATE,
  depart_flight_no VARCHAR2(15),
  publish_status   VARCHAR2(1),
  rec_id           NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table HUG_TEST1
prompt ========================
prompt
create table HUG_TEST1
(
  flt_sn                 VARCHAR2(4000),
  ac_type_crew           VARCHAR2(10),
  departure_airport_name VARCHAR2(50),
  arrival_airport_name   VARCHAR2(50),
  totl_hours             NUMBER(6),
  departure_airport      VARCHAR2(4) not null,
  arrival_airport        VARCHAR2(4) not null,
  rank                   NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table HUG_TEST2
prompt ========================
prompt
create table HUG_TEST2
(
  flt_sn                 VARCHAR2(4000),
  ac_type_crew           VARCHAR2(10),
  departure_airport_name VARCHAR2(50),
  arrival_airport_name   VARCHAR2(50),
  totl_hours             NUMBER(6),
  departure_airport      VARCHAR2(4) not null,
  arrival_airport        VARCHAR2(4) not null,
  rank                   NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table IIS_LOG
prompt ======================
prompt
create table IIS_LOG
(
  "Line Number"   NUMBER(9),
  "Date"          VARCHAR2(500),
  "Time"          VARCHAR2(500),
  "Client-IP"     VARCHAR2(500),
  "Server IP"     VARCHAR2(500),
  "Server Port"   VARCHAR2(500),
  "Request Verb"  VARCHAR2(500),
  "Request URI"   VARCHAR2(500),
  "Bytes sent"    VARCHAR2(500),
  "Status"        VARCHAR2(500),
  "Sub-status"    VARCHAR2(500),
  "Win 32 Status" VARCHAR2(500),
  "Time Taken"    VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 704K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table IMP_FLIGHT_PLAN2014401
prompt =====================================
prompt
create table IMP_FLIGHT_PLAN2014401
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE,
  mm_leg_id               NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 896K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_FLIGHT_PLAN20140519
prompt ======================================
prompt
create table NGB_FLIGHT_PLAN20140519
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_HR_CERT
prompt ==================================
prompt
create table NGB_INVALID_HR_CERT
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_HR_CREW
prompt ==================================
prompt
create table NGB_INVALID_HR_CREW
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(10),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_HR_HEALTH
prompt ====================================
prompt
create table NGB_INVALID_HR_HEALTH
(
  health_id    NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  over_date    DATE,
  health_info  VARCHAR2(300),
  health_limit VARCHAR2(300),
  health_level VARCHAR2(5),
  duty_rank    VARCHAR2(10),
  d_person     VARCHAR2(10),
  s_person     VARCHAR2(10),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_HR_LICENSE
prompt =====================================
prompt
create table NGB_INVALID_HR_LICENSE
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_HR_PASSPORT
prompt ======================================
prompt
create table NGB_INVALID_HR_PASSPORT
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_HR_VISA
prompt ==================================
prompt
create table NGB_INVALID_HR_VISA
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_SCH_ROSTER
prompt =====================================
prompt
create table NGB_INVALID_SCH_ROSTER
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_SVC_FTB_DETAIL
prompt =========================================
prompt
create table NGB_INVALID_SVC_FTB_DETAIL
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_TECH_INFO
prompt ====================================
prompt
create table NGB_INVALID_TECH_INFO
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_TECH_QULIFICATION
prompt ============================================
prompt
create table NGB_INVALID_TECH_QULIFICATION
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NGB_INVALID_TR_SCHEDULE
prompt ======================================
prompt
create table NGB_INVALID_TR_SCHEDULE
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) not null,
  train_flag      NUMBER(11) not null,
  train_result_yn VARCHAR2(1),
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1),
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NINGNINGWA
prompt =========================
prompt
create table NINGNINGWA
(
  age      INTEGER,
  name     CHAR(8) not null,
  sex      CHAR(2) not null,
  telphone INTEGER,
  height   INTEGER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table NNW
prompt ==================
prompt
create table NNW
(
  id  VARCHAR2(50),
  pwd VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PASS_WRONG
prompt =========================
prompt
create table PASS_WRONG
(
  passport_code VARCHAR2(20),
  count1        NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PERSONS
prompt ======================
prompt
create table PERSONS
(
  name    VARCHAR2(255),
  sex     VARCHAR2(255),
  address VARCHAR2(255),
  age     INTEGER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_PASSPORTERROR
prompt ==================================
prompt
create table PILOT_PASSPORTERROR
(
  passport_id      NUMBER(10) not null,
  pilot_info_id    NUMBER(10) not null,
  passport_code    VARCHAR2(50) not null,
  passport_type    VARCHAR2(50) not null,
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(50),
  remark           VARCHAR2(100),
  creator          NUMBER(10),
  create_date      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  pass_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_PASSPORT_20140619
prompt ======================================
prompt
create table PILOT_PASSPORT_20140619
(
  passport_id      NUMBER(10) not null,
  pilot_info_id    NUMBER(10) not null,
  passport_code    VARCHAR2(50) not null,
  passport_type    VARCHAR2(50) not null,
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(50),
  remark           VARCHAR2(100),
  creator          NUMBER(10),
  create_date      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  pass_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_PASSPORT_2014061922
prompt ========================================
prompt
create table PILOT_PASSPORT_2014061922
(
  passport_id      NUMBER(10) not null,
  pilot_info_id    NUMBER(10) not null,
  passport_code    VARCHAR2(50) not null,
  passport_type    VARCHAR2(50) not null,
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(50),
  remark           VARCHAR2(100),
  creator          NUMBER(10),
  create_date      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  pass_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_PASSPORT_DEL
prompt =================================
prompt
create table PILOT_PASSPORT_DEL
(
  passport_id      NUMBER(10) not null,
  pilot_info_id    NUMBER(10) not null,
  passport_code    VARCHAR2(50) not null,
  passport_type    VARCHAR2(50) not null,
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(50),
  remark           VARCHAR2(100),
  creator          NUMBER(10),
  create_date      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  pass_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_SEAT_REC_PEK
prompt =================================
prompt
create table PILOT_SEAT_REC_PEK
(
  seat_rec_id      NUMBER(10) not null,
  flight_plan_id   NUMBER(10) not null,
  pilot_id         NUMBER(10),
  fly_time         NUMBER(4),
  seat_type        VARCHAR2(30),
  creator          NUMBER(10),
  create_time      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  operate_type     VARCHAR2(30),
  is_land_operator VARCHAR2(30),
  p_remark         VARCHAR2(20),
  fly_sortie       NUMBER(4),
  rec_id           NUMBER(10),
  flying_hour      NUMBER(10),
  night_time       NUMBER(4),
  teacher_time     NUMBER(4),
  up_sortie        NUMBER(4),
  down_sortie      NUMBER(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_VISA_20140620
prompt ==================================
prompt
create table PILOT_VISA_20140620
(
  pilot_visa_id    NUMBER(10) not null,
  pilot_info_id    NUMBER(10) not null,
  passport_id      NUMBER(10) not null,
  visa_code        VARCHAR2(20) not null,
  visa_type        VARCHAR2(5),
  nation           VARCHAR2(20),
  valid_date       DATE,
  begin_date       DATE,
  grant_date       DATE,
  creator          NUMBER(10),
  create_date      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  visa_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PILOT_VISA_2014062020
prompt ====================================
prompt
create table PILOT_VISA_2014062020
(
  pilot_visa_id    NUMBER(10) not null,
  pilot_info_id    NUMBER(10) not null,
  passport_id      NUMBER(10) not null,
  visa_code        VARCHAR2(20) not null,
  visa_type        VARCHAR2(5),
  nation           VARCHAR2(20),
  valid_date       DATE,
  begin_date       DATE,
  grant_date       DATE,
  creator          NUMBER(10),
  create_date      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  visa_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table PLAN_TABLE
prompt =========================
prompt
create table PLAN_TABLE
(
  statement_id      VARCHAR2(30),
  plan_id           NUMBER,
  timestamp         DATE,
  remarks           VARCHAR2(4000),
  operation         VARCHAR2(30),
  options           VARCHAR2(255),
  object_node       VARCHAR2(128),
  object_owner      VARCHAR2(30),
  object_name       VARCHAR2(30),
  object_alias      VARCHAR2(65),
  object_instance   INTEGER,
  object_type       VARCHAR2(30),
  optimizer         VARCHAR2(255),
  search_columns    NUMBER,
  id                INTEGER,
  parent_id         INTEGER,
  depth             INTEGER,
  position          INTEGER,
  cost              INTEGER,
  cardinality       INTEGER,
  bytes             INTEGER,
  other_tag         VARCHAR2(255),
  partition_start   VARCHAR2(255),
  partition_stop    VARCHAR2(255),
  partition_id      INTEGER,
  other             LONG,
  distribution      VARCHAR2(30),
  cpu_cost          INTEGER,
  io_cost           INTEGER,
  temp_space        INTEGER,
  access_predicates VARCHAR2(4000),
  filter_predicates VARCHAR2(4000),
  projection        VARCHAR2(4000),
  time              INTEGER,
  qblock_name       VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ROSTER20150414
prompt =============================
prompt
create table ROSTER20150414
(
  flight_id         NUMBER(11),
  mm_leg_id         NUMBER,
  flight_date       DATE,
  p_code            VARCHAR2(10),
  fxw_id            VARCHAR2(10),
  id_no             VARCHAR2(20),
  rank_no           VARCHAR2(4),
  fjs_order         NUMBER,
  crew_link_line    NUMBER(11),
  ts_flag           VARCHAR2(60),
  last_modify_time  DATE,
  rec_id            NUMBER(11),
  task_date         DATE,
  back_departure    VARCHAR2(4),
  ac_type           VARCHAR2(10),
  flight_flag       VARCHAR2(1),
  a_op_time         DATE,
  a_pub_time        DATE,
  b_op_time         DATE,
  b1_op_time        DATE,
  c_op_time         DATE,
  d_op_time         CHAR(1),
  check_type        VARCHAR2(200),
  check_name        VARCHAR2(4000),
  flight_no         VARCHAR2(15),
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  fly_hours         NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ROSTER20150415
prompt =============================
prompt
create table ROSTER20150415
(
  flight_id         NUMBER(11),
  mm_leg_id         NUMBER,
  flight_date       DATE,
  p_code            VARCHAR2(10),
  fxw_id            VARCHAR2(10),
  id_no             VARCHAR2(20),
  rank_no           VARCHAR2(4),
  fjs_order         NUMBER,
  crew_link_line    NUMBER(11),
  ts_flag           VARCHAR2(60),
  last_modify_time  DATE,
  rec_id            NUMBER(11),
  task_date         DATE,
  back_departure    VARCHAR2(4),
  ac_type           VARCHAR2(10),
  flight_flag       VARCHAR2(1),
  a_op_time         DATE,
  a_pub_time        DATE,
  b_op_time         DATE,
  b1_op_time        DATE,
  c_op_time         DATE,
  d_op_time         CHAR(1),
  check_type        VARCHAR2(200),
  check_name        VARCHAR2(4000),
  flight_no         VARCHAR2(15),
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  fly_hours         NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 24M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ROSTER_TEST
prompt ==========================
prompt
create table ROSTER_TEST
(
  序号   VARCHAR2(20),
  姓名   VARCHAR2(20),
  日期   VARCHAR2(20),
  航班号  VARCHAR2(20),
  起飞站  VARCHAR2(20),
  落地站  VARCHAR2(20),
  划出时刻 VARCHAR2(20),
  起飞时刻 VARCHAR2(20),
  落地时刻 VARCHAR2(20),
  滑入时刻 VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ROSTER_TEST_CULI
prompt ===============================
prompt
create table ROSTER_TEST_CULI
(
  序号                NUMBER,
  姓名                VARCHAR2(20),
  日期                DATE,
  航班号               VARCHAR2(20),
  起飞站               VARCHAR2(20),
  落地站               VARCHAR2(20),
  滑出时刻              DATE,
  起飞时刻              DATE,
  落地时刻              DATE,
  滑入时刻              DATE,
  p_code            VARCHAR2(10),
  flight_no         VARCHAR2(10),
  departure_airport VARCHAR2(3),
  arrival_airport   VARCHAR2(3),
  flight_id         VARCHAR2(10),
  mm_leg_id         VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table ROSTER_TEST_CULI_BAK
prompt ===================================
prompt
create table ROSTER_TEST_CULI_BAK
(
  序号                NUMBER,
  姓名                VARCHAR2(20),
  日期                DATE,
  航班号               VARCHAR2(20),
  起飞站               VARCHAR2(20),
  落地站               VARCHAR2(20),
  划出时刻              DATE,
  起飞时刻              DATE,
  落地时刻              DATE,
  滑入时刻              DATE,
  p_code            VARCHAR2(10),
  flight_no         VARCHAR2(10),
  departure_airport VARCHAR2(3),
  arrival_airport   VARCHAR2(3),
  flight_id         VARCHAR2(10),
  mm_leg_id         VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table SAP_FLT_SCH_ARG
prompt ==============================
prompt
create table SAP_FLT_SCH_ARG
(
  航班号    VARCHAR2(200),
  机号     VARCHAR2(200),
  飞行日期   VARCHAR2(200),
  起飞航站   VARCHAR2(200),
  到达航站   VARCHAR2(200),
  计划起飞日期 VARCHAR2(200),
  计划起飞时间 VARCHAR2(200),
  排班机型   VARCHAR2(200),
  状态     VARCHAR2(200),
  std    DATE,
  ac_reg VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T2001
prompt ====================
prompt
create table T2001
(
  flight_id             NUMBER(9) not null,
  flight_date           DATE not null,
  flight_type           CHAR(1) not null,
  flight_no             VARCHAR2(10) not null,
  ac_type               VARCHAR2(10),
  layout                VARCHAR2(10),
  ac_reg                VARCHAR2(10),
  departure_airport     CHAR(4) not null,
  arrival_airport       CHAR(4) not null,
  htd                   DATE,
  std                   DATE not null,
  etd                   DATE,
  out                   DATE,
  acars_atd             DATE,
  atd                   DATE,
  hta                   DATE,
  sta                   DATE not null,
  eta                   DATE,
  acars_ata             DATE,
  ata                   DATE,
  inn                   DATE,
  bay                   VARCHAR2(5),
  bay_2                 VARCHAR2(5),
  on_board_time         DATE,
  close_door_time       DATE,
  open_door_time        DATE,
  d_or_i                CHAR(1),
  p_or_c                CHAR(1),
  adjust_type           CHAR(1),
  flg_delay             CHAR(1),
  flg_vr                VARCHAR2(2),
  flg_patch             CHAR(1),
  flg_cs                CHAR(1),
  base                  CHAR(4),
  carrier               VARCHAR2(2),
  filiale               VARCHAR2(4),
  serial                NUMBER(3),
  ac_link_line          VARCHAR2(20),
  crew_link_line        NUMBER(15),
  depa_div_airport      CHAR(4),
  fpl_div_airport1      CHAR(4),
  fpl_div_airport2      CHAR(4),
  flag_fpl              CHAR(1),
  flag_rls              CHAR(1),
  flag_takeoff          CHAR(1),
  fly_times             VARCHAR2(50),
  flight_status         VARCHAR2(50),
  remark                VARCHAR2(500),
  estimate_sk_time      DATE,
  business_dynamic_time DATE,
  remark_business       VARCHAR2(500),
  select_flg            CHAR(1),
  total_fuel            NUMBER(7),
  trip_fuel             NUMBER(7),
  slide_fuel            NUMBER(7),
  real_fuel             NUMBER(7),
  impt_flt              CHAR(1),
  chk_step              VARCHAR2(11),
  voy_serialno          NUMBER(6),
  real_sz               NUMBER(9),
  max_depa_weight       NUMBER(9),
  max_no_oil_weight     NUMBER(9),
  add_weight            NUMBER(9),
  rls_remark            VARCHAR2(500),
  flight_date_week      DATE,
  max_sz                NUMBER(9),
  max_landfall_weight   NUMBER(9),
  fly_time              VARCHAR2(5),
  brwt                  NUMBER(8),
  zfwt                  NUMBER(8),
  mid_etd               DATE,
  mid_eta               DATE,
  max_no_oil_remark     VARCHAR2(500),
  max_no_oil_weight2    NUMBER(9),
  max_no_oil_remark2    VARCHAR2(500),
  ready_date            DATE,
  route_div_airport     VARCHAR2(50),
  plan_2_airport        CHAR(4),
  plan_2_div_airport    VARCHAR2(50),
  ii_ils                VARCHAR2(1),
  water                 VARCHAR2(10),
  out_fuel              NUMBER(9),
  inn_fuel              NUMBER(9),
  atd_fuel              NUMBER(9),
  ata_fuel              NUMBER(9),
  remind_flag           CHAR(1),
  chk_step_two          VARCHAR2(3),
  modify_time           DATE,
  pos_warn              CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T2001SAP
prompt =======================
prompt
create table T2001SAP
(
  flight_id         NUMBER(13) not null,
  flight_no         VARCHAR2(50),
  flight_date       DATE,
  carrier           VARCHAR2(10),
  ac_type           VARCHAR2(10),
  ac_reg            VARCHAR2(4),
  std               DATE,
  sta               DATE,
  op_time           DATE,
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T2001SAP_LOG
prompt ===========================
prompt
create table T2001SAP_LOG
(
  log_id      NUMBER(11) not null,
  start_time  DATE,
  end_time    DATE,
  proc_type   VARCHAR2(10),
  proc_cnt    NUMBER(9),
  proc_result VARCHAR2(4000),
  err_msg     VARCHAR2(4000),
  time_stamp  DATE,
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 768K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T2001_TMP
prompt ========================
prompt
create table T2001_TMP
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(9) not null,
  departure_airport VARCHAR2(3),
  arrival_airport   VARCHAR2(3),
  flight_id         NUMBER(8),
  crew_link_line    NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_T2001_TMP on T2001_TMP (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T3001_TMP
prompt ========================
prompt
create table T3001_TMP
(
  flight_date        DATE not null,
  crew_link_line     INTEGER,
  crew_paring_line   INTEGER,
  module_flag        CHAR(1),
  ac_type_crew       VARCHAR2(10),
  ac_type            VARCHAR2(10),
  ac_reg             VARCHAR2(10),
  flight_com         VARCHAR2(60),
  flight_voyage      VARCHAR2(30),
  line_depa_airport  VARCHAR2(3),
  line_arri_airport  VARCHAR2(3),
  td                 DATE,
  ta                 DATE,
  d_or_i             VARCHAR2(1),
  flight_type        VARCHAR2(1),
  fly_hours          NUMBER(4),
  filiale            CHAR(2),
  base               VARCHAR2(4),
  carrier            CHAR(2),
  p_or_c             CHAR(1) not null,
  crew_id            NUMBER,
  flight_flag        CHAR(1),
  oper               CHAR(9),
  optime             DATE,
  oper_ip            CHAR(14),
  oper_host          CHAR(5),
  sch_pub_flag       CHAR(1),
  sal_crew_link_line NUMBER(6) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_T3001 on T3001_TMP (FLIGHT_DATE, SAL_CREW_LINK_LINE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T3005_TMP
prompt ========================
prompt
create table T3005_TMP
(
  flight_id         NUMBER(8),
  flight_date       DATE not null,
  flight_no         VARCHAR2(9) not null,
  departure_airport CHAR(4) not null,
  arrival_airport   CHAR(4) not null,
  p_code            VARCHAR2(8) not null,
  fjs_order         NUMBER(4),
  rank_no           VARCHAR2(4),
  fly_hours         NUMBER(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 704K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T4004
prompt ====================
prompt
create table T4004
(
  item_no             VARCHAR2(30) not null,
  ac_no               VARCHAR2(10),
  unit                VARCHAR2(50),
  place               VARCHAR2(50),
  fh_ld_eng_cyc       VARCHAR2(1000),
  reported            VARCHAR2(30),
  reported_date       DATE,
  class               VARCHAR2(20),
  failure_description VARCHAR2(1000),
  reason_of_deferment VARCHAR2(1000),
  corrective_action   VARCHAR2(1000),
  operation_limit     VARCHAR2(1000),
  tlb_no              VARCHAR2(1000),
  deferred_basis      VARCHAR2(50),
  partname            VARCHAR2(1000),
  p_n                 VARCHAR2(1000),
  qat                 VARCHAR2(1000),
  first_limit         VARCHAR2(1000),
  first_examine_by    VARCHAR2(30),
  first_examine_date  DATE,
  second_limit        VARCHAR2(1000),
  second_examine_by   VARCHAR2(30),
  second_examine_date DATE,
  canceled_by         VARCHAR2(30),
  canceled_date       DATE,
  cancel_by_tlb_no    VARCHAR2(1000),
  canceled_yn         CHAR(1),
  remarks             VARCHAR2(1000),
  operation_crew      VARCHAR2(1000),
  crew_action         VARCHAR2(1000),
  last_modify         DATE,
  blgz_id             VARCHAR2(50),
  user_log            VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_T4004_ITEM_NO on T4004 (ITEM_NO)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T4004MEL
prompt =======================
prompt
create table T4004MEL
(
  tail_no      VARCHAR2(50),
  ddf_cd       VARCHAR2(50),
  start_time   DATE,
  end_time     DATE,
  ddf_desc     VARCHAR2(4000),
  ddf_status   VARCHAR2(50),
  ata_desc     VARCHAR2(50),
  task_code    VARCHAR2(50),
  task_actype  VARCHAR2(50),
  created_time DATE,
  updated_time DATE,
  zblcla       VARCHAR2(50),
  zdwmc        VARCHAR2(50),
  zszbm        VARCHAR2(50),
  zapper       VARCHAR2(50),
  zappdt       DATE,
  ztsnzcsn     VARCHAR2(50),
  zdefr        VARCHAR2(50),
  zmitem       VARCHAR2(100),
  zoitem       VARCHAR2(100),
  zoplimit     VARCHAR2(4000),
  ztkrec       VARCHAR2(50),
  zdefbs       VARCHAR2(50),
  zremark      VARCHAR2(4000),
  zsplx        VARCHAR2(50),
  zaprer       VARCHAR2(50),
  zaprdt       DATE,
  zaprtm       VARCHAR2(50),
  zpgfa        VARCHAR2(50),
  zifkcl       VARCHAR2(50),
  muid         VARCHAR2(50),
  zfl_date     DATE,
  zddffc       VARCHAR2(10),
  zddffh       VARCHAR2(10),
  zblth        VARCHAR2(50),
  zther        VARCHAR2(50),
  zthdat       DATE,
  zthtim       VARCHAR2(50),
  zcler        VARCHAR2(50),
  zclbm        VARCHAR2(50),
  zclth        VARCHAR2(50),
  ztjer        VARCHAR2(50),
  ztjrq        DATE,
  ztjtim       VARCHAR2(50),
  zayqdt       DATE,
  zyqdd        DATE,
  zyqer        VARCHAR2(50),
  zbyqdt       DATE,
  zifxz        VARCHAR2(50),
  zifrw        VARCHAR2(50),
  zifhc        VARCHAR2(50),
  mdnum        VARCHAR2(50),
  zxzid        VARCHAR2(50),
  zudnam       VARCHAR2(50),
  zwxdw        VARCHAR2(50),
  zchnnm       VARCHAR2(50),
  zclbmchn     VARCHAR2(50),
  crdat        DATE,
  crtim        VARCHAR2(50),
  zcldat       DATE,
  pn_qat       VARCHAR2(50),
  del_flag     VARCHAR2(50),
  first_limit  VARCHAR2(50),
  second_limit VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T4004MEL
  is 'MEL同步数据中间表';
comment on column T4004MEL.tail_no
  is '飞机号（飞机尾号）';
comment on column T4004MEL.ddf_cd
  is '故障号';
comment on column T4004MEL.start_time
  is '开始时间';
comment on column T4004MEL.end_time
  is '结束时间';
comment on column T4004MEL.ddf_desc
  is '故障描述';
comment on column T4004MEL.ddf_status
  is '故障状态';
comment on column T4004MEL.ata_desc
  is '章号描述';
comment on column T4004MEL.task_code
  is '任务编号';
comment on column T4004MEL.task_actype
  is '任务机型';
comment on column T4004MEL.created_time
  is '创建时间';
comment on column T4004MEL.updated_time
  is '更新时间';
comment on column T4004MEL.zblcla
  is '保留类型(CLASS)';
comment on column T4004MEL.zdwmc
  is '维修单位名称';
comment on column T4004MEL.zszbm
  is '站点';
comment on column T4004MEL.zapper
  is '申请提交人';
comment on column T4004MEL.zappdt
  is '申请日期';
comment on column T4004MEL.ztsnzcsn
  is '飞行小时/起落/发动机循环';
comment on column T4004MEL.zdefr
  is '保留原因';
comment on column T4004MEL.zmitem
  is '机务维护程序(M)';
comment on column T4004MEL.zoitem
  is '机组操作程序(O)';
comment on column T4004MEL.zoplimit
  is '操作及运行限制长文本';
comment on column T4004MEL.ztkrec
  is '技术/客舱记录';
comment on column T4004MEL.zdefbs
  is '保留依据';
comment on column T4004MEL.zremark
  is '备注';
comment on column T4004MEL.zsplx
  is '审批类型';
comment on column T4004MEL.zaprer
  is '审批人';
comment on column T4004MEL.zaprdt
  is '审批日期';
comment on column T4004MEL.zaprtm
  is '审批时刻';
comment on column T4004MEL.zpgfa
  is '排故方案';
comment on column T4004MEL.zifkcl
  is '是否客舱类';
comment on column T4004MEL.muid
  is '航班号';
comment on column T4004MEL.zfl_date
  is '飞行日期';
comment on column T4004MEL.zddffc
  is '保留循环';
comment on column T4004MEL.zddffh
  is '保留小时';
comment on column T4004MEL.zblth
  is '退回原因';
comment on column T4004MEL.zther
  is '退回人';
comment on column T4004MEL.zthdat
  is '退回日期';
comment on column T4004MEL.zthtim
  is '退回时刻';
comment on column T4004MEL.zcler
  is '撤销人';
comment on column T4004MEL.zclbm
  is '撤销地点';
comment on column T4004MEL.zclth
  is '取消原因';
comment on column T4004MEL.ztjer
  is '提交人';
comment on column T4004MEL.ztjrq
  is '提交日期';
comment on column T4004MEL.ztjtim
  is '提交时间';
comment on column T4004MEL.zayqdt
  is '延期开始日期';
comment on column T4004MEL.zyqdd
  is '截止日期';
comment on column T4004MEL.zyqer
  is '延期批准人';
comment on column T4004MEL.zbyqdt
  is '延期批准日期';
comment on column T4004MEL.zifxz
  is '是否有运行限制要求';
comment on column T4004MEL.zifrw
  is '已转任务';
comment on column T4004MEL.zifhc
  is '已转航材';
comment on column T4004MEL.mdnum
  is '维修项目号';
comment on column T4004MEL.zxzid
  is '限制ID';
comment on column T4004MEL.zudnam
  is '更改人';
comment on column T4004MEL.zwxdw
  is '原来维修单位代码';
comment on column T4004MEL.zchnnm
  is '站点';
comment on column T4004MEL.zclbmchn
  is '撤消站点';
comment on column T4004MEL.crdat
  is '建立日期';
comment on column T4004MEL.crtim
  is '创建时间';
comment on column T4004MEL.zcldat
  is '撤销日期';
comment on column T4004MEL.pn_qat
  is '部件信息';
comment on column T4004MEL.del_flag
  is '删除标记(Y：在正式表里直接删除)';
comment on column T4004MEL.first_limit
  is '批准保留时限_时间_起落_循环';
comment on column T4004MEL.second_limit
  is '延期修复批准保留时限';
create index IDX_TASK_CODE on T4004MEL (TASK_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T4004MEL_B
prompt =========================
prompt
create table T4004MEL_B
(
  tail_no      VARCHAR2(50),
  ddf_cd       VARCHAR2(50),
  start_time   DATE,
  end_time     DATE,
  ddf_desc     VARCHAR2(4000),
  ddf_status   VARCHAR2(50),
  ata_desc     VARCHAR2(50),
  task_code    VARCHAR2(50),
  task_actype  VARCHAR2(50),
  created_time DATE,
  updated_time DATE,
  zblcla       VARCHAR2(50),
  zdwmc        VARCHAR2(50),
  zszbm        VARCHAR2(50),
  zapper       VARCHAR2(50),
  zappdt       DATE,
  ztsnzcsn     VARCHAR2(50),
  zdefr        VARCHAR2(50),
  zmitem       VARCHAR2(100),
  zoitem       VARCHAR2(100),
  zoplimit     VARCHAR2(4000),
  ztkrec       VARCHAR2(50),
  zdefbs       VARCHAR2(50),
  zremark      VARCHAR2(4000),
  zsplx        VARCHAR2(50),
  zaprer       VARCHAR2(50),
  zaprdt       DATE,
  zaprtm       VARCHAR2(50),
  zpgfa        VARCHAR2(50),
  zifkcl       VARCHAR2(50),
  muid         VARCHAR2(50),
  zfl_date     DATE,
  zddffc       VARCHAR2(10),
  zddffh       VARCHAR2(10),
  zblth        VARCHAR2(50),
  zther        VARCHAR2(50),
  zthdat       DATE,
  zthtim       VARCHAR2(50),
  zcler        VARCHAR2(50),
  zclbm        VARCHAR2(50),
  zclth        VARCHAR2(50),
  ztjer        VARCHAR2(50),
  ztjrq        DATE,
  ztjtim       VARCHAR2(50),
  zayqdt       DATE,
  zyqdd        DATE,
  zyqer        VARCHAR2(50),
  zbyqdt       DATE,
  zifxz        VARCHAR2(50),
  zifrw        VARCHAR2(50),
  zifhc        VARCHAR2(50),
  mdnum        VARCHAR2(50),
  zxzid        VARCHAR2(50),
  zudnam       VARCHAR2(50),
  zwxdw        VARCHAR2(50),
  zchnnm       VARCHAR2(50),
  zclbmchn     VARCHAR2(50),
  crdat        DATE,
  crtim        VARCHAR2(50),
  zcldat       DATE,
  pn_qat       VARCHAR2(50),
  del_flag     VARCHAR2(50),
  first_limit  VARCHAR2(50),
  second_limit VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T4004MEL_HIS
prompt ===========================
prompt
create table T4004MEL_HIS
(
  tail_no      VARCHAR2(50),
  ddf_cd       VARCHAR2(50),
  start_time   DATE,
  end_time     DATE,
  ddf_desc     VARCHAR2(4000),
  ddf_status   VARCHAR2(50),
  ata_desc     VARCHAR2(50),
  task_code    VARCHAR2(50),
  task_actype  VARCHAR2(50),
  created_time DATE,
  updated_time DATE,
  zblcla       VARCHAR2(50),
  zdwmc        VARCHAR2(50),
  zszbm        VARCHAR2(50),
  zapper       VARCHAR2(50),
  zappdt       DATE,
  ztsnzcsn     VARCHAR2(50),
  zdefr        VARCHAR2(50),
  zmitem       VARCHAR2(100),
  zoitem       VARCHAR2(100),
  zoplimit     VARCHAR2(4000),
  ztkrec       VARCHAR2(50),
  zdefbs       VARCHAR2(50),
  zremark      VARCHAR2(4000),
  zsplx        VARCHAR2(50),
  zaprer       VARCHAR2(50),
  zaprdt       DATE,
  zaprtm       VARCHAR2(50),
  zpgfa        VARCHAR2(50),
  zifkcl       VARCHAR2(50),
  muid         VARCHAR2(50),
  zfl_date     DATE,
  zddffc       VARCHAR2(10),
  zddffh       VARCHAR2(10),
  zblth        VARCHAR2(50),
  zther        VARCHAR2(50),
  zthdat       DATE,
  zthtim       VARCHAR2(50),
  zcler        VARCHAR2(50),
  zclbm        VARCHAR2(50),
  zclth        VARCHAR2(50),
  ztjer        VARCHAR2(50),
  ztjrq        DATE,
  ztjtim       VARCHAR2(50),
  zayqdt       DATE,
  zyqdd        DATE,
  zyqer        VARCHAR2(50),
  zbyqdt       DATE,
  zifxz        VARCHAR2(50),
  zifrw        VARCHAR2(50),
  zifhc        VARCHAR2(50),
  mdnum        VARCHAR2(50),
  zxzid        VARCHAR2(50),
  zudnam       VARCHAR2(50),
  zwxdw        VARCHAR2(50),
  zchnnm       VARCHAR2(50),
  zclbmchn     VARCHAR2(50),
  crdat        DATE,
  crtim        VARCHAR2(50),
  zcldat       DATE,
  pn_qat       VARCHAR2(50),
  del_flag     VARCHAR2(50),
  first_limit  VARCHAR2(50),
  second_limit VARCHAR2(50),
  log_id       VARCHAR2(50),
  indate       DATE,
  op_time      DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T4004MEL_HIS
  is 'MEL同步数据历史表';
comment on column T4004MEL_HIS.tail_no
  is '飞机号（飞机尾号）';
comment on column T4004MEL_HIS.ddf_cd
  is '故障号';
comment on column T4004MEL_HIS.start_time
  is '开始时间';
comment on column T4004MEL_HIS.end_time
  is '结束时间';
comment on column T4004MEL_HIS.ddf_desc
  is '故障描述';
comment on column T4004MEL_HIS.ddf_status
  is '故障状态';
comment on column T4004MEL_HIS.ata_desc
  is '章号描述';
comment on column T4004MEL_HIS.task_code
  is '任务编号';
comment on column T4004MEL_HIS.task_actype
  is '任务机型';
comment on column T4004MEL_HIS.created_time
  is '创建时间';
comment on column T4004MEL_HIS.updated_time
  is '更新时间';
comment on column T4004MEL_HIS.zblcla
  is '保留类型(CLASS)';
comment on column T4004MEL_HIS.zdwmc
  is '维修单位名称';
comment on column T4004MEL_HIS.zszbm
  is '站点';
comment on column T4004MEL_HIS.zapper
  is '申请提交人';
comment on column T4004MEL_HIS.zappdt
  is '申请日期';
comment on column T4004MEL_HIS.ztsnzcsn
  is '飞行小时/起落/发动机循环';
comment on column T4004MEL_HIS.zdefr
  is '保留原因';
comment on column T4004MEL_HIS.zmitem
  is '机务维护程序(M)';
comment on column T4004MEL_HIS.zoitem
  is '机组操作程序(O)';
comment on column T4004MEL_HIS.zoplimit
  is '操作及运行限制长文本';
comment on column T4004MEL_HIS.ztkrec
  is '技术/客舱记录';
comment on column T4004MEL_HIS.zdefbs
  is '保留依据';
comment on column T4004MEL_HIS.zremark
  is '备注';
comment on column T4004MEL_HIS.zsplx
  is '审批类型';
comment on column T4004MEL_HIS.zaprer
  is '审批人';
comment on column T4004MEL_HIS.zaprdt
  is '审批日期';
comment on column T4004MEL_HIS.zaprtm
  is '审批时刻';
comment on column T4004MEL_HIS.zpgfa
  is '排故方案';
comment on column T4004MEL_HIS.zifkcl
  is '是否客舱类';
comment on column T4004MEL_HIS.muid
  is '航班号';
comment on column T4004MEL_HIS.zfl_date
  is '飞行日期';
comment on column T4004MEL_HIS.zddffc
  is '保留循环';
comment on column T4004MEL_HIS.zddffh
  is '保留小时';
comment on column T4004MEL_HIS.zblth
  is '退回原因';
comment on column T4004MEL_HIS.zther
  is '退回人';
comment on column T4004MEL_HIS.zthdat
  is '退回日期';
comment on column T4004MEL_HIS.zthtim
  is '退回时刻';
comment on column T4004MEL_HIS.zcler
  is '撤销人';
comment on column T4004MEL_HIS.zclbm
  is '撤销地点';
comment on column T4004MEL_HIS.zclth
  is '取消原因';
comment on column T4004MEL_HIS.ztjer
  is '提交人';
comment on column T4004MEL_HIS.ztjrq
  is '提交日期';
comment on column T4004MEL_HIS.ztjtim
  is '提交时间';
comment on column T4004MEL_HIS.zayqdt
  is '延期开始日期';
comment on column T4004MEL_HIS.zyqdd
  is '截止日期';
comment on column T4004MEL_HIS.zyqer
  is '延期批准人';
comment on column T4004MEL_HIS.zbyqdt
  is '延期批准日期';
comment on column T4004MEL_HIS.zifxz
  is '是否有运行限制要求';
comment on column T4004MEL_HIS.zifrw
  is '已转任务';
comment on column T4004MEL_HIS.zifhc
  is '已转航材';
comment on column T4004MEL_HIS.mdnum
  is '维修项目号';
comment on column T4004MEL_HIS.zxzid
  is '限制ID';
comment on column T4004MEL_HIS.zudnam
  is '更改人';
comment on column T4004MEL_HIS.zwxdw
  is '原来维修单位代码';
comment on column T4004MEL_HIS.zchnnm
  is '站点';
comment on column T4004MEL_HIS.zclbmchn
  is '撤消站点';
comment on column T4004MEL_HIS.crdat
  is '建立日期';
comment on column T4004MEL_HIS.crtim
  is '创建时间';
comment on column T4004MEL_HIS.zcldat
  is '撤销日期';
comment on column T4004MEL_HIS.pn_qat
  is '部件信息';
comment on column T4004MEL_HIS.del_flag
  is '删除标记(Y：在正式表里直接删除)';
comment on column T4004MEL_HIS.first_limit
  is '批准保留时限_时间_起落_循环';
comment on column T4004MEL_HIS.second_limit
  is '延期修复批准保留时限';
comment on column T4004MEL_HIS.log_id
  is '日志ID';
comment on column T4004MEL_HIS.indate
  is '传入的最后时间戳';
comment on column T4004MEL_HIS.op_time
  is '操作时间';

prompt
prompt Creating table T4005
prompt ====================
prompt
create table T4005
(
  last_modify DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T4006
prompt ====================
prompt
create table T4006
(
  ac_reg              VARCHAR2(10) not null,
  ac_type_short       VARCHAR2(10) not null,
  ac_type_long        VARCHAR2(15),
  fly_device          VARCHAR2(200),
  choice_call         VARCHAR2(4),
  max_load            NUMBER,
  max_oil             VARCHAR2(8),
  min_oil             VARCHAR2(8),
  available_load      NUMBER,
  base_weight         NUMBER(8),
  construction_weight NUMBER(8),
  max_slide_weight    NUMBER(8),
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  ew_index            NUMBER(5,2),
  mac                 NUMBER(5,2),
  h_arm               FLOAT,
  balance_index       NUMBER(5,2),
  oew                 NUMBER(6),
  seat_num            NUMBER,
  f_seat_num          NUMBER,
  b_seat_num          NUMBER,
  e_seat_num          NUMBER,
  start_date          DATE,
  end_date            DATE,
  qlcx                NUMBER(9),
  barycenter          NUMBER(5,2),
  layout              VARCHAR2(10),
  p_or_c              CHAR(1),
  filiale             VARCHAR2(10),
  base                CHAR(4),
  native              VARCHAR2(20),
  remark              VARCHAR2(2000),
  validate_time       DATE,
  fly_hours           NUMBER(9),
  fly_hours_date      DATE,
  is_loan             VARCHAR2(2),
  serial              NUMBER(3),
  carrier             VARCHAR2(2),
  fly_qls             NUMBER(9),
  max_load_rsp        NUMBER(8),
  use_load_rsp        NUMBER(8),
  max_seat_rsp        NUMBER(4),
  use_seat_rsp        NUMBER(4),
  oxygen_cabin_flag   CHAR(1),
  fact_max_load       FLOAT,
  sys_key             VARCHAR2(50),
  modified_date       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T4009_TMP
prompt ========================
prompt
create table T4009_TMP
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(9) not null,
  departure_airport VARCHAR2(3),
  arrival_airport   VARCHAR2(3),
  std               DATE not null,
  taxi_out_time     DATE,
  takeoff_time      DATE,
  landing_time      DATE,
  taxi_in_time      DATE,
  air_hours         NUMBER(4),
  grnd_hours        NUMBER(4),
  night_hours       NUMBER(4),
  totl_hours        NUMBER(4),
  old_fuel          NUMBER(6),
  new_fuel          NUMBER(6),
  left_fuel         NUMBER(6),
  left_p_code       VARCHAR2(20),
  right_p_code      VARCHAR2(20),
  up_operator       VARCHAR2(20),
  down_operator     VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_T4009 on T4009_TMP (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T8101
prompt ====================
prompt
create table T8101
(
  msg_no               NUMBER(10) not null,
  msg_content          VARCHAR2(2000) not null,
  msg_type             CHAR(1) not null,
  issue_dept           VARCHAR2(16),
  issue_person         VARCHAR2(30) not null,
  issue_time           DATE not null,
  recv_person          VARCHAR2(300),
  reponse_yn           CHAR(1),
  response_person      VARCHAR2(500),
  send_or_not          CHAR(1),
  msg_type_yw          CHAR(1),
  recv_person_code     VARCHAR2(200),
  response_person_code VARCHAR2(200),
  departure_airport    VARCHAR2(4),
  arrival_airport      VARCHAR2(4),
  adjust_type          VARCHAR2(1),
  d_or_i               CHAR(1),
  base                 CHAR(4),
  control_cancel       CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 960K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T8101
  is '消息信息';
comment on column T8101.msg_no
  is '消息编号';
comment on column T8101.msg_content
  is '消息内容';
comment on column T8101.msg_type
  is '消息类型';
comment on column T8101.issue_dept
  is '发布部门';
comment on column T8101.issue_person
  is '发布人';
comment on column T8101.issue_time
  is '发布时间';
comment on column T8101.recv_person
  is '接收人';
comment on column T8101.reponse_yn
  is '是否应答';
comment on column T8101.response_person
  is '应答人';
comment on column T8101.send_or_not
  is '是否发送';
comment on column T8101.recv_person_code
  is '接收人代码';
comment on column T8101.response_person_code
  is '回复人代码';
comment on column T8101.departure_airport
  is '起飞机场';
comment on column T8101.arrival_airport
  is '降落机场';
comment on column T8101.adjust_type
  is '调整类型';
comment on column T8101.d_or_i
  is '国际/内';
comment on column T8101.base
  is '基地';
alter table T8101
  add constraint PK_T8101 primary key (MSG_NO)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TABLE1
prompt =====================
prompt
create table TABLE1
(
  uname VARCHAR2(50),
  age   INTEGER,
  sex   VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table TABLE33
prompt ======================
prompt
create table TABLE33
(
  uname VARCHAR2(50),
  age   INTEGER,
  sex   VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table TABLE_NO
prompt =======================
prompt
create table TABLE_NO
(
  rec_id NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TAO_FLIGHT_PLAN
prompt ==============================
prompt
create table TAO_FLIGHT_PLAN
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TB_AIRPORTELEVATION
prompt ==================================
prompt
create table TB_AIRPORTELEVATION
(
  icaocode  VARCHAR2(14),
  iatacode  VARCHAR2(14),
  elevation NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TB_AIRPORTELEVATION1
prompt ===================================
prompt
create table TB_AIRPORTELEVATION1
(
  icaocode  VARCHAR2(14),
  iatacode  VARCHAR2(14),
  elevation NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TECH_INFO_WRONG
prompt ==============================
prompt
create table TECH_INFO_WRONG
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table TECH_INFO_WRONG
  is '要删除的重复的技术授权数据（不含FM系统数据）';

prompt
prompt Creating table TEMP_KGL
prompt =======================
prompt
create table TEMP_KGL
(
  flight_date DATE,
  flight_no   NVARCHAR2(20),
  std         DATE,
  sta         DATE,
  iskg        NUMBER(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table TEST1
prompt ====================
prompt
create table TEST1
(
  flight_id         NUMBER(11) not null,
  crew_owner        VARCHAR2(4),
  flight_date       DATE not null,
  ac_type           VARCHAR2(10),
  ac_type_crew      VARCHAR2(10),
  ac_reg            VARCHAR2(10),
  ac_link_line      VARCHAR2(10),
  carrier           VARCHAR2(10) not null,
  flight_no         VARCHAR2(15) not null,
  departure_airport VARCHAR2(4) not null,
  depa_chs          VARCHAR2(10),
  td                DATE,
  std               DATE,
  atd               DATE,
  arrival_airport   VARCHAR2(4) not null,
  arri_chs          VARCHAR2(10),
  ta                DATE,
  sta               DATE,
  ata               DATE,
  fly_hours         NUMBER,
  d_or_i            VARCHAR2(1),
  flight_type       VARCHAR2(1),
  flight_flag       VARCHAR2(1),
  ac_owner          VARCHAR2(4),
  p_or_c            VARCHAR2(1),
  flight_fen        NUMBER(4),
  gyts              NUMBER(2),
  remarks           VARCHAR2(200),
  crew_link_line    NUMBER(11),
  onward_flight     VARCHAR2(15),
  ac_layover        NUMBER(2),
  flg_delay         VARCHAR2(1),
  flg_vr            VARCHAR2(1),
  flg_cs            VARCHAR2(1),
  ftb_prn_flag      VARCHAR2(1),
  ftb_rec_flag      VARCHAR2(1),
  cust_app_flag     VARCHAR2(1),
  inde              NUMBER,
  duty_flag         VARCHAR2(1),
  co_old            VARCHAR2(4),
  oper              VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TEST_SHUJU
prompt =========================
prompt
create table TEST_SHUJU
(
  id    NUMBER,
  score NUMBER,
  type  CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TMP_PASSPORT
prompt ===========================
prompt
create table TMP_PASSPORT
(
  pass_id      NUMBER(12),
  pass_no      VARCHAR2(50),
  cecs_pass_id NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TMP_PASSREPORT
prompt =============================
prompt
create table TMP_PASSREPORT
(
  pass_id NUMBER(12),
  pilotid VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TMP_VISA
prompt =======================
prompt
create table TMP_VISA
(
  visa_id NUMBER(12),
  visa_no VARCHAR2(30),
  pass_id NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TNA_FLIGHT_PLAN
prompt ==============================
prompt
create table TNA_FLIGHT_PLAN
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TT_DD
prompt ====================
prompt
create table TT_DD
(
  crew_owner             VARCHAR2(4),
  flt_sn                 VARCHAR2(4000),
  ac_type_crew           VARCHAR2(10),
  departure_airport_name VARCHAR2(50),
  arrival_airport_name   VARCHAR2(50),
  totl_hours             NUMBER(6),
  departure_airport      VARCHAR2(4) not null,
  arrival_airport        VARCHAR2(4) not null,
  rank                   NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN12_FLIGHT_PLAN
prompt ================================
prompt
create table TYN12_FLIGHT_PLAN
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_FLIGHT_PLAN
prompt ==============================
prompt
create table TYN_FLIGHT_PLAN
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_HR_CERT
prompt ==================================
prompt
create table TYN_INVALID_HR_CERT
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_HR_CREW
prompt ==================================
prompt
create table TYN_INVALID_HR_CREW
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(10),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_HR_LICENSE
prompt =====================================
prompt
create table TYN_INVALID_HR_LICENSE
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_HR_PASSPORT
prompt ======================================
prompt
create table TYN_INVALID_HR_PASSPORT
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_HR_VISA
prompt ==================================
prompt
create table TYN_INVALID_HR_VISA
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_SCH_ROSTER
prompt =====================================
prompt
create table TYN_INVALID_SCH_ROSTER
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(50),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_TECH_INFO
prompt ====================================
prompt
create table TYN_INVALID_TECH_INFO
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table TYN_INVALID_TECH_QULIFICATION
prompt ============================================
prompt
create table TYN_INVALID_TECH_QULIFICATION
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_AOC_BLOCK_TIME
prompt ===============================
prompt
create table T_AOC_BLOCK_TIME
(
  leg_id            VARCHAR2(16) not null,
  pdate             DATE,
  carrier           VARCHAR2(2),
  flight_no         VARCHAR2(20),
  flight_no_disp    VARCHAR2(20),
  tail_no           VARCHAR2(20),
  ac_type           VARCHAR2(20),
  plan_dept_airport VARCHAR2(3),
  plan_arr_airport  VARCHAR2(3),
  arr_airport       VARCHAR2(3),
  arrapt_all_zhs    VARCHAR2(30),
  dept_airport      VARCHAR2(3),
  deptapt_all_zhs   VARCHAR2(30),
  depttimezone      VARCHAR2(3),
  arrtimezone       VARCHAR2(3),
  plan_dept_time    DATE,
  plan_arr_time     DATE,
  est_dept_time     DATE,
  est_arr_time      DATE,
  real_dept_time    DATE,
  real_arr_time     DATE,
  cab_close_time    DATE,
  cab_open_time     DATE,
  board_begin_time  DATE,
  board_end_time    DATE,
  dcs_close_time    DATE,
  block_off_time    DATE,
  block_on_time     DATE,
  bgg_wait          VARCHAR2(20),
  arr_agt           VARCHAR2(10),
  dept_agt          VARCHAR2(10),
  arr_gate          VARCHAR2(20),
  dept_gate         VARCHAR2(20),
  check_in          VARCHAR2(20),
  alter_flag        VARCHAR2(20),
  dept_ac_loc       VARCHAR2(20),
  arr_ac_loc        VARCHAR2(20),
  dept_terminal     VARCHAR2(50),
  arr_terminal      VARCHAR2(50),
  int_or_dom        VARCHAR2(20),
  flt_prop          VARCHAR2(3),
  time_stamp        DATE,
  adult_pax_ldm     VARCHAR2(50),
  child_pax_ldm     VARCHAR2(50),
  infant_pax_ldm    VARCHAR2(50),
  fst_pax_ldm       VARCHAR2(50),
  bus_pax_ldm       VARCHAR2(50),
  ecn_pax_ldm       VARCHAR2(50),
  bag_wt_ldm        VARCHAR2(50),
  cgo_wt_ldm        VARCHAR2(50),
  mail_wt_ldm       VARCHAR2(50),
  vipsvc_flag       VARCHAR2(15),
  spcsvc_flag       VARCHAR2(10),
  res_pax           VARCHAR2(50),
  res_fst_pax       VARCHAR2(10),
  res_bns_pax       VARCHAR2(10),
  res_ecn_pax       VARCHAR2(10),
  res_adult_pax     VARCHAR2(10),
  res_child_pax     VARCHAR2(10),
  res_infant_pax    VARCHAR2(10),
  dcs_pax           VARCHAR2(20),
  dcs_fst_pax       VARCHAR2(20),
  dcs_bns_pax       VARCHAR2(20),
  dcs_ecn_pax       VARCHAR2(20),
  dcs_adult_pax     VARCHAR2(20),
  dcs_child_pax     VARCHAR2(20),
  dcs_infant_pax    VARCHAR2(20),
  dcs_vip_pax       VARCHAR2(20),
  seat_num          VARCHAR2(20),
  takeoff_weight    VARCHAR2(50),
  load_max_weight   VARCHAR2(50),
  bgg_weight        VARCHAR2(50),
  cgo_weight        VARCHAR2(50),
  mail_weight       VARCHAR2(50),
  total_weight      VARCHAR2(50),
  remark            VARCHAR2(4000),
  delete_flag       VARCHAR2(10),
  statuscode        VARCHAR2(10),
  delayflag         VARCHAR2(10),
  delay_code        VARCHAR2(50),
  delay_reason      VARCHAR2(100),
  delay_desc        VARCHAR2(500),
  line_id           VARCHAR2(500),
  turnon            DATE,
  turnoff           DATE,
  aoc_leg_id        VARCHAR2(20),
  flight_no_all     VARCHAR2(15),
  position          VARCHAR2(30) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_AOC_BLOCK_TIME
  is '同步AOC撤轮当时间版本变化表';
comment on column T_AOC_BLOCK_TIME.leg_id
  is '唯一标示';
comment on column T_AOC_BLOCK_TIME.pdate
  is '航班日期';
comment on column T_AOC_BLOCK_TIME.carrier
  is '承运人';
comment on column T_AOC_BLOCK_TIME.flight_no
  is '航班号';
comment on column T_AOC_BLOCK_TIME.flight_no_disp
  is '航班号';
comment on column T_AOC_BLOCK_TIME.tail_no
  is '机号';
comment on column T_AOC_BLOCK_TIME.ac_type
  is '机型';
comment on column T_AOC_BLOCK_TIME.plan_dept_airport
  is '计划起飞站';
comment on column T_AOC_BLOCK_TIME.plan_arr_airport
  is '计划到达站';
comment on column T_AOC_BLOCK_TIME.arr_airport
  is '到达站三字码';
comment on column T_AOC_BLOCK_TIME.arrapt_all_zhs
  is '到达站中文名';
comment on column T_AOC_BLOCK_TIME.dept_airport
  is '始发站三字码';
comment on column T_AOC_BLOCK_TIME.deptapt_all_zhs
  is '始发站中文名';
comment on column T_AOC_BLOCK_TIME.depttimezone
  is '始发站时区';
comment on column T_AOC_BLOCK_TIME.arrtimezone
  is '到达站时区';
comment on column T_AOC_BLOCK_TIME.plan_dept_time
  is '计划飞时间';
comment on column T_AOC_BLOCK_TIME.plan_arr_time
  is '计划到时间';
comment on column T_AOC_BLOCK_TIME.est_dept_time
  is '预计起飞时间';
comment on column T_AOC_BLOCK_TIME.est_arr_time
  is '预计到达时间';
comment on column T_AOC_BLOCK_TIME.real_dept_time
  is '实际起飞时间';
comment on column T_AOC_BLOCK_TIME.real_arr_time
  is '实际到达时间';
comment on column T_AOC_BLOCK_TIME.cab_close_time
  is '关舱门时间';
comment on column T_AOC_BLOCK_TIME.cab_open_time
  is '开门时间';
comment on column T_AOC_BLOCK_TIME.board_begin_time
  is '登机开始时间';
comment on column T_AOC_BLOCK_TIME.board_end_time
  is '登机结束时间';
comment on column T_AOC_BLOCK_TIME.dcs_close_time
  is '办票柜台关闭时间';
comment on column T_AOC_BLOCK_TIME.block_off_time
  is '撤轮挡时间';
comment on column T_AOC_BLOCK_TIME.block_on_time
  is '上轮挡时间';
comment on column T_AOC_BLOCK_TIME.bgg_wait
  is '行李转盘';
comment on column T_AOC_BLOCK_TIME.arr_agt
  is '降落代理';
comment on column T_AOC_BLOCK_TIME.dept_agt
  is '起飞代理';
comment on column T_AOC_BLOCK_TIME.arr_gate
  is '到达机口';
comment on column T_AOC_BLOCK_TIME.dept_gate
  is '登机口';
comment on column T_AOC_BLOCK_TIME.check_in
  is '值机柜台';
comment on column T_AOC_BLOCK_TIME.dept_ac_loc
  is '出港桥位';
comment on column T_AOC_BLOCK_TIME.arr_ac_loc
  is '进港桥位';
comment on column T_AOC_BLOCK_TIME.dept_terminal
  is '出港航站楼';
comment on column T_AOC_BLOCK_TIME.arr_terminal
  is '进港航站楼';
comment on column T_AOC_BLOCK_TIME.int_or_dom
  is '航班类型(国内,国际)';
comment on column T_AOC_BLOCK_TIME.flt_prop
  is '航班性质';
comment on column T_AOC_BLOCK_TIME.time_stamp
  is '时间戳';
comment on column T_AOC_BLOCK_TIME.vipsvc_flag
  is 'VIP标志';
comment on column T_AOC_BLOCK_TIME.spcsvc_flag
  is '特服标志';
comment on column T_AOC_BLOCK_TIME.res_fst_pax
  is '头等舱订票数';
comment on column T_AOC_BLOCK_TIME.res_bns_pax
  is '商务舱订票数';
comment on column T_AOC_BLOCK_TIME.dcs_pax
  is '旅客人数';
comment on column T_AOC_BLOCK_TIME.dcs_fst_pax
  is '头等舱旅客人数';
comment on column T_AOC_BLOCK_TIME.dcs_bns_pax
  is '商务舱旅客人数';
comment on column T_AOC_BLOCK_TIME.dcs_ecn_pax
  is '经济舱旅客人数';
comment on column T_AOC_BLOCK_TIME.dcs_adult_pax
  is '离港成人数';
comment on column T_AOC_BLOCK_TIME.dcs_child_pax
  is '离港儿童数';
comment on column T_AOC_BLOCK_TIME.dcs_infant_pax
  is '离港婴儿数';
comment on column T_AOC_BLOCK_TIME.dcs_vip_pax
  is 'VIP旅客数';
comment on column T_AOC_BLOCK_TIME.seat_num
  is '最大座位数';
comment on column T_AOC_BLOCK_TIME.takeoff_weight
  is '最大起飞重量';
comment on column T_AOC_BLOCK_TIME.load_max_weight
  is '最大负载';
comment on column T_AOC_BLOCK_TIME.bgg_weight
  is '行李重量';
comment on column T_AOC_BLOCK_TIME.cgo_weight
  is '货物重量';
comment on column T_AOC_BLOCK_TIME.mail_weight
  is '邮件重量';
comment on column T_AOC_BLOCK_TIME.total_weight
  is '总重量';
comment on column T_AOC_BLOCK_TIME.remark
  is '备注';
comment on column T_AOC_BLOCK_TIME.delete_flag
  is '航班状态';
comment on column T_AOC_BLOCK_TIME.statuscode
  is '航班状态';
comment on column T_AOC_BLOCK_TIME.delayflag
  is '延误标识';
comment on column T_AOC_BLOCK_TIME.delay_code
  is '延误原因代码';
comment on column T_AOC_BLOCK_TIME.delay_reason
  is '延误原因名称';
comment on column T_AOC_BLOCK_TIME.delay_desc
  is '延误原因详情';
comment on column T_AOC_BLOCK_TIME.line_id
  is '连线号';
comment on column T_AOC_BLOCK_TIME.turnon
  is '开车时间';
comment on column T_AOC_BLOCK_TIME.turnoff
  is '关车时间';
comment on column T_AOC_BLOCK_TIME.aoc_leg_id
  is 'MM系统主键ID';
comment on column T_AOC_BLOCK_TIME.flight_no_all
  is '转成机组排班航班号';
comment on column T_AOC_BLOCK_TIME.position
  is '版本号(OLD/NEW)';
alter table T_AOC_BLOCK_TIME
  add constraint PK_AOC_BLOCK_TIME primary key (LEG_ID, POSITION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_AOC_BLOCK_TIME_BEFORE_DAYS
prompt ===========================================
prompt
create table T_AOC_BLOCK_TIME_BEFORE_DAYS
(
  leg_id            VARCHAR2(16) not null,
  pdate             DATE,
  carrier           VARCHAR2(2),
  flight_no         VARCHAR2(20),
  flight_no_disp    VARCHAR2(20),
  tail_no           VARCHAR2(20),
  ac_type           VARCHAR2(20),
  plan_dept_airport VARCHAR2(3),
  plan_arr_airport  VARCHAR2(3),
  arr_airport       VARCHAR2(3),
  arrapt_all_zhs    VARCHAR2(30),
  dept_airport      VARCHAR2(3),
  deptapt_all_zhs   VARCHAR2(30),
  depttimezone      VARCHAR2(3),
  arrtimezone       VARCHAR2(3),
  plan_dept_time    DATE,
  plan_arr_time     DATE,
  est_dept_time     DATE,
  est_arr_time      DATE,
  real_dept_time    DATE,
  real_arr_time     DATE,
  cab_close_time    DATE,
  cab_open_time     DATE,
  board_begin_time  DATE,
  board_end_time    DATE,
  dcs_close_time    DATE,
  block_off_time    DATE,
  block_on_time     DATE,
  bgg_wait          VARCHAR2(20),
  arr_agt           VARCHAR2(10),
  dept_agt          VARCHAR2(10),
  arr_gate          VARCHAR2(20),
  dept_gate         VARCHAR2(20),
  check_in          VARCHAR2(20),
  alter_flag        VARCHAR2(20),
  dept_ac_loc       VARCHAR2(20),
  arr_ac_loc        VARCHAR2(20),
  dept_terminal     VARCHAR2(50),
  arr_terminal      VARCHAR2(50),
  int_or_dom        VARCHAR2(20),
  flt_prop          VARCHAR2(3),
  time_stamp        DATE,
  adult_pax_ldm     VARCHAR2(50),
  child_pax_ldm     VARCHAR2(50),
  infant_pax_ldm    VARCHAR2(50),
  fst_pax_ldm       VARCHAR2(50),
  bus_pax_ldm       VARCHAR2(50),
  ecn_pax_ldm       VARCHAR2(50),
  bag_wt_ldm        VARCHAR2(50),
  cgo_wt_ldm        VARCHAR2(50),
  mail_wt_ldm       VARCHAR2(50),
  vipsvc_flag       VARCHAR2(15),
  spcsvc_flag       VARCHAR2(10),
  res_pax           VARCHAR2(50),
  res_fst_pax       VARCHAR2(10),
  res_bns_pax       VARCHAR2(10),
  res_ecn_pax       VARCHAR2(10),
  res_adult_pax     VARCHAR2(10),
  res_child_pax     VARCHAR2(10),
  res_infant_pax    VARCHAR2(10),
  dcs_pax           VARCHAR2(20),
  dcs_fst_pax       VARCHAR2(20),
  dcs_bns_pax       VARCHAR2(20),
  dcs_ecn_pax       VARCHAR2(20),
  dcs_adult_pax     VARCHAR2(20),
  dcs_child_pax     VARCHAR2(20),
  dcs_infant_pax    VARCHAR2(20),
  dcs_vip_pax       VARCHAR2(20),
  seat_num          VARCHAR2(20),
  takeoff_weight    VARCHAR2(50),
  load_max_weight   VARCHAR2(50),
  bgg_weight        VARCHAR2(50),
  cgo_weight        VARCHAR2(50),
  mail_weight       VARCHAR2(50),
  total_weight      VARCHAR2(50),
  remark            VARCHAR2(4000),
  delete_flag       VARCHAR2(10),
  statuscode        VARCHAR2(10),
  delayflag         VARCHAR2(10),
  delay_code        VARCHAR2(50),
  delay_reason      VARCHAR2(100),
  delay_desc        VARCHAR2(500),
  line_id           VARCHAR2(500),
  turnon            DATE,
  turnoff           DATE,
  aoc_leg_id        VARCHAR2(20),
  flight_no_all     VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_AOC_BLOCK_TIME_BEFORE_DAYS
  is '同步AOC撤轮当时间(N天前)版本变化表';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.leg_id
  is '唯一标示';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.pdate
  is '航班日期';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.carrier
  is '承运人';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.flight_no
  is '航班号';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.flight_no_disp
  is '航班号';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.tail_no
  is '机号';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.ac_type
  is '机型';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.plan_dept_airport
  is '计划起飞站';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.plan_arr_airport
  is '计划到达站';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arr_airport
  is '到达站三字码';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arrapt_all_zhs
  is '到达站中文名';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dept_airport
  is '始发站三字码';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.deptapt_all_zhs
  is '始发站中文名';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.depttimezone
  is '始发站时区';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arrtimezone
  is '到达站时区';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.plan_dept_time
  is '计划飞时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.plan_arr_time
  is '计划到时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.est_dept_time
  is '预计起飞时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.est_arr_time
  is '预计到达时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.real_dept_time
  is '实际起飞时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.real_arr_time
  is '实际到达时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.cab_close_time
  is '关舱门时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.cab_open_time
  is '开门时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.board_begin_time
  is '登机开始时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.board_end_time
  is '登机结束时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_close_time
  is '办票柜台关闭时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.block_off_time
  is '撤轮挡时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.block_on_time
  is '上轮挡时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.bgg_wait
  is '行李转盘';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arr_agt
  is '降落代理';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dept_agt
  is '起飞代理';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arr_gate
  is '到达机口';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dept_gate
  is '登机口';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.check_in
  is '值机柜台';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dept_ac_loc
  is '出港桥位';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arr_ac_loc
  is '进港桥位';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dept_terminal
  is '出港航站楼';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.arr_terminal
  is '进港航站楼';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.int_or_dom
  is '航班类型(国内,国际)';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.flt_prop
  is '航班性质';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.time_stamp
  is '时间戳';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.vipsvc_flag
  is 'VIP标志';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.spcsvc_flag
  is '特服标志';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.res_fst_pax
  is '头等舱订票数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.res_bns_pax
  is '商务舱订票数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_pax
  is '旅客人数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_fst_pax
  is '头等舱旅客人数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_bns_pax
  is '商务舱旅客人数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_ecn_pax
  is '经济舱旅客人数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_adult_pax
  is '离港成人数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_child_pax
  is '离港儿童数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_infant_pax
  is '离港婴儿数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.dcs_vip_pax
  is 'VIP旅客数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.seat_num
  is '最大座位数';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.takeoff_weight
  is '最大起飞重量';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.load_max_weight
  is '最大负载';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.bgg_weight
  is '行李重量';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.cgo_weight
  is '货物重量';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.mail_weight
  is '邮件重量';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.total_weight
  is '总重量';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.remark
  is '备注';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.delete_flag
  is '航班状态';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.statuscode
  is '航班状态';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.delayflag
  is '延误标识';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.delay_code
  is '延误原因代码';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.delay_reason
  is '延误原因名称';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.delay_desc
  is '延误原因详情';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.line_id
  is '连线号';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.turnon
  is '开车时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.turnoff
  is '关车时间';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.aoc_leg_id
  is 'MM系统主键ID';
comment on column T_AOC_BLOCK_TIME_BEFORE_DAYS.flight_no_all
  is '转成机组排班航班号';
alter table T_AOC_BLOCK_TIME_BEFORE_DAYS
  add constraint PK_AOC_BLOCK_TIME_BEFORE_DAYS primary key (LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_AOC_BLOCK_TIME_HIS
prompt ===================================
prompt
create table T_AOC_BLOCK_TIME_HIS
(
  leg_id            VARCHAR2(16) not null,
  pdate             DATE,
  carrier           VARCHAR2(2),
  flight_no         VARCHAR2(20),
  flight_no_disp    VARCHAR2(20),
  tail_no           VARCHAR2(20),
  ac_type           VARCHAR2(20),
  plan_dept_airport VARCHAR2(3),
  plan_arr_airport  VARCHAR2(3),
  arr_airport       VARCHAR2(3),
  arrapt_all_zhs    VARCHAR2(30),
  dept_airport      VARCHAR2(3),
  deptapt_all_zhs   VARCHAR2(30),
  depttimezone      VARCHAR2(3),
  arrtimezone       VARCHAR2(3),
  plan_dept_time    DATE,
  plan_arr_time     DATE,
  est_dept_time     DATE,
  est_arr_time      DATE,
  real_dept_time    DATE,
  real_arr_time     DATE,
  cab_close_time    DATE,
  cab_open_time     DATE,
  board_begin_time  DATE,
  board_end_time    DATE,
  dcs_close_time    DATE,
  block_off_time    DATE,
  block_on_time     DATE,
  bgg_wait          VARCHAR2(20),
  arr_agt           VARCHAR2(10),
  dept_agt          VARCHAR2(10),
  arr_gate          VARCHAR2(20),
  dept_gate         VARCHAR2(20),
  check_in          VARCHAR2(20),
  alter_flag        VARCHAR2(20),
  dept_ac_loc       VARCHAR2(20),
  arr_ac_loc        VARCHAR2(20),
  dept_terminal     VARCHAR2(50),
  arr_terminal      VARCHAR2(50),
  int_or_dom        VARCHAR2(20),
  flt_prop          VARCHAR2(3),
  time_stamp        DATE,
  adult_pax_ldm     VARCHAR2(50),
  child_pax_ldm     VARCHAR2(50),
  infant_pax_ldm    VARCHAR2(50),
  fst_pax_ldm       VARCHAR2(50),
  bus_pax_ldm       VARCHAR2(50),
  ecn_pax_ldm       VARCHAR2(50),
  bag_wt_ldm        VARCHAR2(50),
  cgo_wt_ldm        VARCHAR2(50),
  mail_wt_ldm       VARCHAR2(50),
  vipsvc_flag       VARCHAR2(15),
  spcsvc_flag       VARCHAR2(10),
  res_pax           VARCHAR2(50),
  res_fst_pax       VARCHAR2(10),
  res_bns_pax       VARCHAR2(10),
  res_ecn_pax       VARCHAR2(10),
  res_adult_pax     VARCHAR2(10),
  res_child_pax     VARCHAR2(10),
  res_infant_pax    VARCHAR2(10),
  dcs_pax           VARCHAR2(20),
  dcs_fst_pax       VARCHAR2(20),
  dcs_bns_pax       VARCHAR2(20),
  dcs_ecn_pax       VARCHAR2(20),
  dcs_adult_pax     VARCHAR2(20),
  dcs_child_pax     VARCHAR2(20),
  dcs_infant_pax    VARCHAR2(20),
  dcs_vip_pax       VARCHAR2(20),
  seat_num          VARCHAR2(20),
  takeoff_weight    VARCHAR2(50),
  load_max_weight   VARCHAR2(50),
  bgg_weight        VARCHAR2(50),
  cgo_weight        VARCHAR2(50),
  mail_weight       VARCHAR2(50),
  total_weight      VARCHAR2(50),
  remark            VARCHAR2(4000),
  delete_flag       VARCHAR2(10),
  statuscode        VARCHAR2(10),
  delayflag         VARCHAR2(10),
  delay_code        VARCHAR2(50),
  delay_reason      VARCHAR2(100),
  delay_desc        VARCHAR2(500),
  line_id           VARCHAR2(500),
  turnon            DATE,
  turnoff           DATE,
  aoc_leg_id        VARCHAR2(20),
  flight_no_all     VARCHAR2(15),
  position          VARCHAR2(30),
  log_id            VARCHAR2(50) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 164M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_AOC_BLOCK_TIME_HIS
  is '同步AOC撤轮当时间历史表';
comment on column T_AOC_BLOCK_TIME_HIS.leg_id
  is '唯一标示';
comment on column T_AOC_BLOCK_TIME_HIS.pdate
  is '航班日期';
comment on column T_AOC_BLOCK_TIME_HIS.carrier
  is '承运人';
comment on column T_AOC_BLOCK_TIME_HIS.flight_no
  is '航班号';
comment on column T_AOC_BLOCK_TIME_HIS.flight_no_disp
  is '航班号';
comment on column T_AOC_BLOCK_TIME_HIS.tail_no
  is '机号';
comment on column T_AOC_BLOCK_TIME_HIS.ac_type
  is '机型';
comment on column T_AOC_BLOCK_TIME_HIS.plan_dept_airport
  is '计划起飞站';
comment on column T_AOC_BLOCK_TIME_HIS.plan_arr_airport
  is '计划到达站';
comment on column T_AOC_BLOCK_TIME_HIS.arr_airport
  is '到达站三字码';
comment on column T_AOC_BLOCK_TIME_HIS.arrapt_all_zhs
  is '到达站中文名';
comment on column T_AOC_BLOCK_TIME_HIS.dept_airport
  is '始发站三字码';
comment on column T_AOC_BLOCK_TIME_HIS.deptapt_all_zhs
  is '始发站中文名';
comment on column T_AOC_BLOCK_TIME_HIS.depttimezone
  is '始发站时区';
comment on column T_AOC_BLOCK_TIME_HIS.arrtimezone
  is '到达站时区';
comment on column T_AOC_BLOCK_TIME_HIS.plan_dept_time
  is '计划飞时间';
comment on column T_AOC_BLOCK_TIME_HIS.plan_arr_time
  is '计划到时间';
comment on column T_AOC_BLOCK_TIME_HIS.est_dept_time
  is '预计起飞时间';
comment on column T_AOC_BLOCK_TIME_HIS.est_arr_time
  is '预计到达时间';
comment on column T_AOC_BLOCK_TIME_HIS.real_dept_time
  is '实际起飞时间';
comment on column T_AOC_BLOCK_TIME_HIS.real_arr_time
  is '实际到达时间';
comment on column T_AOC_BLOCK_TIME_HIS.cab_close_time
  is '关舱门时间';
comment on column T_AOC_BLOCK_TIME_HIS.cab_open_time
  is '开门时间';
comment on column T_AOC_BLOCK_TIME_HIS.board_begin_time
  is '登机开始时间';
comment on column T_AOC_BLOCK_TIME_HIS.board_end_time
  is '登机结束时间';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_close_time
  is '办票柜台关闭时间';
comment on column T_AOC_BLOCK_TIME_HIS.block_off_time
  is '撤轮挡时间';
comment on column T_AOC_BLOCK_TIME_HIS.block_on_time
  is '上轮挡时间';
comment on column T_AOC_BLOCK_TIME_HIS.bgg_wait
  is '行李转盘';
comment on column T_AOC_BLOCK_TIME_HIS.arr_agt
  is '降落代理';
comment on column T_AOC_BLOCK_TIME_HIS.dept_agt
  is '起飞代理';
comment on column T_AOC_BLOCK_TIME_HIS.arr_gate
  is '到达机口';
comment on column T_AOC_BLOCK_TIME_HIS.dept_gate
  is '登机口';
comment on column T_AOC_BLOCK_TIME_HIS.check_in
  is '值机柜台';
comment on column T_AOC_BLOCK_TIME_HIS.dept_ac_loc
  is '出港桥位';
comment on column T_AOC_BLOCK_TIME_HIS.arr_ac_loc
  is '进港桥位';
comment on column T_AOC_BLOCK_TIME_HIS.dept_terminal
  is '出港航站楼';
comment on column T_AOC_BLOCK_TIME_HIS.arr_terminal
  is '进港航站楼';
comment on column T_AOC_BLOCK_TIME_HIS.int_or_dom
  is '航班类型(国内,国际)';
comment on column T_AOC_BLOCK_TIME_HIS.flt_prop
  is '航班性质';
comment on column T_AOC_BLOCK_TIME_HIS.time_stamp
  is '时间戳';
comment on column T_AOC_BLOCK_TIME_HIS.vipsvc_flag
  is 'VIP标志';
comment on column T_AOC_BLOCK_TIME_HIS.spcsvc_flag
  is '特服标志';
comment on column T_AOC_BLOCK_TIME_HIS.res_fst_pax
  is '头等舱订票数';
comment on column T_AOC_BLOCK_TIME_HIS.res_bns_pax
  is '商务舱订票数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_pax
  is '旅客人数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_fst_pax
  is '头等舱旅客人数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_bns_pax
  is '商务舱旅客人数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_ecn_pax
  is '经济舱旅客人数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_adult_pax
  is '离港成人数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_child_pax
  is '离港儿童数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_infant_pax
  is '离港婴儿数';
comment on column T_AOC_BLOCK_TIME_HIS.dcs_vip_pax
  is 'VIP旅客数';
comment on column T_AOC_BLOCK_TIME_HIS.seat_num
  is '最大座位数';
comment on column T_AOC_BLOCK_TIME_HIS.takeoff_weight
  is '最大起飞重量';
comment on column T_AOC_BLOCK_TIME_HIS.load_max_weight
  is '最大负载';
comment on column T_AOC_BLOCK_TIME_HIS.bgg_weight
  is '行李重量';
comment on column T_AOC_BLOCK_TIME_HIS.cgo_weight
  is '货物重量';
comment on column T_AOC_BLOCK_TIME_HIS.mail_weight
  is '邮件重量';
comment on column T_AOC_BLOCK_TIME_HIS.total_weight
  is '总重量';
comment on column T_AOC_BLOCK_TIME_HIS.remark
  is '备注';
comment on column T_AOC_BLOCK_TIME_HIS.delete_flag
  is '航班状态';
comment on column T_AOC_BLOCK_TIME_HIS.statuscode
  is '航班状态';
comment on column T_AOC_BLOCK_TIME_HIS.delayflag
  is '延误标识';
comment on column T_AOC_BLOCK_TIME_HIS.delay_code
  is '延误原因代码';
comment on column T_AOC_BLOCK_TIME_HIS.delay_reason
  is '延误原因名称';
comment on column T_AOC_BLOCK_TIME_HIS.delay_desc
  is '延误原因详情';
comment on column T_AOC_BLOCK_TIME_HIS.line_id
  is '连线号';
comment on column T_AOC_BLOCK_TIME_HIS.turnon
  is '开车时间';
comment on column T_AOC_BLOCK_TIME_HIS.turnoff
  is '关车时间';
comment on column T_AOC_BLOCK_TIME_HIS.aoc_leg_id
  is 'MM系统主键ID';
comment on column T_AOC_BLOCK_TIME_HIS.flight_no_all
  is '转成机组排班航班号';
comment on column T_AOC_BLOCK_TIME_HIS.position
  is '版本号(OLD/NEW)';
comment on column T_AOC_BLOCK_TIME_HIS.log_id
  is '日志ID';
comment on column T_AOC_BLOCK_TIME_HIS.oper
  is '操作人';
comment on column T_AOC_BLOCK_TIME_HIS.op_time
  is '操作时间';
comment on column T_AOC_BLOCK_TIME_HIS.remarks
  is '备注';
comment on column T_AOC_BLOCK_TIME_HIS.oper_ip
  is 'IP地址';
comment on column T_AOC_BLOCK_TIME_HIS.oper_host
  is '主机名';
alter table T_AOC_BLOCK_TIME_HIS
  add constraint PK_AOC_BLOCK_TIME_HIS primary key (LEG_ID, LOG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 17M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_AOC_BLOCK_TIME_LOG
prompt ===================================
prompt
create table T_AOC_BLOCK_TIME_LOG
(
  aoc_block_logid NUMBER(11) not null,
  start_date      DATE,
  end_date        DATE,
  proc_cnt        NUMBER(9),
  proc_result     VARCHAR2(4000),
  err_msg         VARCHAR2(4000),
  time_stamp      DATE,
  op_time         DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_AOC_BLOCK_TIME_LOG
  is '同步AOC撤轮当时间日志表';
comment on column T_AOC_BLOCK_TIME_LOG.aoc_block_logid
  is '日志ID';
comment on column T_AOC_BLOCK_TIME_LOG.start_date
  is '开始日期';
comment on column T_AOC_BLOCK_TIME_LOG.end_date
  is '结束日期';
comment on column T_AOC_BLOCK_TIME_LOG.proc_cnt
  is '同步条数';
comment on column T_AOC_BLOCK_TIME_LOG.proc_result
  is '同步结果';
comment on column T_AOC_BLOCK_TIME_LOG.err_msg
  is '错误信息';
comment on column T_AOC_BLOCK_TIME_LOG.time_stamp
  is '时间戳';
alter table T_AOC_BLOCK_TIME_LOG
  add constraint PK_AOC_BLOCK_TIME_LOG primary key (AOC_BLOCK_LOGID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_AOC_BLOCK_TIME_MID
prompt ===================================
prompt
create table T_AOC_BLOCK_TIME_MID
(
  leg_id         VARCHAR2(16) not null,
  real_dept_time DATE,
  real_arr_time  DATE,
  block_off_time DATE,
  block_on_time  DATE,
  turnon         DATE,
  turnoff        DATE,
  aoc_leg_id     VARCHAR2(20),
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 200M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_AOC_BLOCK_TIME_MID
  is '同步AOC撤轮当时间中间表';
comment on column T_AOC_BLOCK_TIME_MID.leg_id
  is '唯一标示';
comment on column T_AOC_BLOCK_TIME_MID.real_dept_time
  is '实际起飞时间';
comment on column T_AOC_BLOCK_TIME_MID.real_arr_time
  is '实际到达时间';
comment on column T_AOC_BLOCK_TIME_MID.block_off_time
  is '撤轮挡时间';
comment on column T_AOC_BLOCK_TIME_MID.block_on_time
  is '上轮挡时间';
comment on column T_AOC_BLOCK_TIME_MID.turnon
  is '开车时间';
comment on column T_AOC_BLOCK_TIME_MID.turnoff
  is '关车时间';
comment on column T_AOC_BLOCK_TIME_MID.aoc_leg_id
  is 'MM系统主键ID';
comment on column T_AOC_BLOCK_TIME_MID.oper
  is '操作人';
comment on column T_AOC_BLOCK_TIME_MID.op_time
  is '操作时间';
comment on column T_AOC_BLOCK_TIME_MID.remarks
  is '备注';
comment on column T_AOC_BLOCK_TIME_MID.oper_ip
  is 'IP地址';
comment on column T_AOC_BLOCK_TIME_MID.oper_host
  is '主机名';
create index IDX_AOC_LEG_ID on T_AOC_BLOCK_TIME_MID (AOC_LEG_ID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 34M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_AOC_BLOCK_TIME_MID
  add constraint PK_AOC_BLOCK_TIME_MID primary key (LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 44M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_APRIL_DAYS
prompt ===========================
prompt
create table T_APRIL_DAYS
(
  flt_date DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_ATTENDANCE_LOG
prompt ===============================
prompt
create table T_ATTENDANCE_LOG
(
  attendance_log_id NUMBER(11) not null,
  operater          VARCHAR2(50),
  operatetime       DATE,
  p_code            VARCHAR2(50),
  ddo_code          VARCHAR2(10),
  ta                DATE,
  remark            VARCHAR2(50),
  td                DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 20M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_ATTENDANCE_LOG
  is '考勤安排日志';
comment on column T_ATTENDANCE_LOG.attendance_log_id
  is '日志ID';
comment on column T_ATTENDANCE_LOG.operater
  is '录入人姓名';
comment on column T_ATTENDANCE_LOG.operatetime
  is '录入人操作时间';
comment on column T_ATTENDANCE_LOG.p_code
  is '被录入人姓名';
comment on column T_ATTENDANCE_LOG.ddo_code
  is '被录入人占位事由';
comment on column T_ATTENDANCE_LOG.ta
  is '占位开始日期';
comment on column T_ATTENDANCE_LOG.remark
  is '记录添加/删除';
comment on column T_ATTENDANCE_LOG.td
  is '占位结束日期';
alter table T_ATTENDANCE_LOG
  add constraint PK_ATTENDANCE_ID primary key (ATTENDANCE_LOG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_AUTO_RECYCLE_FTB_LOG
prompt =====================================
prompt
create table T_AUTO_RECYCLE_FTB_LOG
(
  ftb_log_id  NVARCHAR2(36),
  start_time  DATE,
  end_time    DATE,
  proc_type   NVARCHAR2(10),
  proc_cnt    NUMBER(10),
  proc_result NVARCHAR2(100),
  err_msg     NVARCHAR2(200),
  time_stamp  DATE,
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_AUTO_RECYCLE_FTB_LOG
  is '任务书自动回收操作日志';
comment on column T_AUTO_RECYCLE_FTB_LOG.ftb_log_id
  is 'LOG ID';
comment on column T_AUTO_RECYCLE_FTB_LOG.start_time
  is '开始时间';
comment on column T_AUTO_RECYCLE_FTB_LOG.end_time
  is '结束时间';
comment on column T_AUTO_RECYCLE_FTB_LOG.proc_type
  is '操作类型';
comment on column T_AUTO_RECYCLE_FTB_LOG.proc_cnt
  is '操作数量';
comment on column T_AUTO_RECYCLE_FTB_LOG.proc_result
  is '操作结果';
comment on column T_AUTO_RECYCLE_FTB_LOG.err_msg
  is '错误信息';
comment on column T_AUTO_RECYCLE_FTB_LOG.time_stamp
  is '操作时间戳';
comment on column T_AUTO_RECYCLE_FTB_LOG.op_time
  is '操作时间';

prompt
prompt Creating table T_AUTO_RECYCLE_LOG
prompt =================================
prompt
create table T_AUTO_RECYCLE_LOG
(
  flight_id      NUMBER(11) not null,
  recycle_status CHAR(1),
  faild_type     VARCHAR2(12),
  remarks        VARCHAR2(400),
  oper           VARCHAR2(10),
  oper_host      VARCHAR2(50),
  oper_ip        VARCHAR2(15),
  oper_time      DATE,
  rec_flag       CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_AUTO_RECYCLE_LOG
  is '任务书自动回收日志';
comment on column T_AUTO_RECYCLE_LOG.flight_id
  is '航班ID';
comment on column T_AUTO_RECYCLE_LOG.recycle_status
  is '回收状态';
comment on column T_AUTO_RECYCLE_LOG.faild_type
  is '回收失败原因类型：A滑出时间，B起飞时间，C落地时间，D滑入时间，O其他';
comment on column T_AUTO_RECYCLE_LOG.remarks
  is '备注';
comment on column T_AUTO_RECYCLE_LOG.oper
  is '操作人';
comment on column T_AUTO_RECYCLE_LOG.oper_host
  is '主机名';
comment on column T_AUTO_RECYCLE_LOG.oper_ip
  is '主机IP';
comment on column T_AUTO_RECYCLE_LOG.oper_time
  is '操作时间';
comment on column T_AUTO_RECYCLE_LOG.rec_flag
  is '回收类型 A:自动，H：手动';

prompt
prompt Creating table T_BAS_AIRCRAFT
prompt =============================
prompt
create table T_BAS_AIRCRAFT
(
  ac_reg               VARCHAR2(10) not null,
  ac_type              VARCHAR2(10) not null,
  filiale              VARCHAR2(4) not null,
  rest_yn              VARCHAR2(1) default 'N',
  dow                  NUMBER(8),
  doi                  NUMBER(5,2),
  start_date           DATE,
  end_date             DATE,
  max_depart_weight    NUMBER(8),
  max_landfall_weight  NUMBER(8),
  max_no_oil_weight    NUMBER(8),
  fly_device           VARCHAR2(100),
  valid_flag           VARCHAR2(1) default 'Y',
  dow_l                NUMBER(8),
  doi_l                NUMBER(5,2),
  oper                 VARCHAR2(10),
  op_time              DATE,
  remarks              VARCHAR2(200),
  oper_ip              VARCHAR2(15),
  oper_host            VARCHAR2(50),
  iscat2               VARCHAR2(1) default 'N',
  is_hud               VARCHAR2(1),
  rest_equipment_level VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_AIRCRAFT
  is '飞机信息表';
comment on column T_BAS_AIRCRAFT.ac_reg
  is '机号';
comment on column T_BAS_AIRCRAFT.ac_type
  is '机型';
comment on column T_BAS_AIRCRAFT.filiale
  is '分公司';
comment on column T_BAS_AIRCRAFT.rest_yn
  is '是否有休息区(Y/N)';
comment on column T_BAS_AIRCRAFT.dow
  is '基本重量-近程';
comment on column T_BAS_AIRCRAFT.doi
  is '空重指数-近程';
comment on column T_BAS_AIRCRAFT.start_date
  is '服役日期';
comment on column T_BAS_AIRCRAFT.end_date
  is '退役日期';
comment on column T_BAS_AIRCRAFT.max_depart_weight
  is '最大起飞重量';
comment on column T_BAS_AIRCRAFT.max_landfall_weight
  is '最大着陆重量';
comment on column T_BAS_AIRCRAFT.max_no_oil_weight
  is '最大无油重量';
comment on column T_BAS_AIRCRAFT.fly_device
  is '飞机飞行设备';
comment on column T_BAS_AIRCRAFT.valid_flag
  is '有效标志';
comment on column T_BAS_AIRCRAFT.dow_l
  is '基本重量-远程';
comment on column T_BAS_AIRCRAFT.doi_l
  is '空重指数-远程';
comment on column T_BAS_AIRCRAFT.oper
  is '操作人';
comment on column T_BAS_AIRCRAFT.op_time
  is '操作时间';
comment on column T_BAS_AIRCRAFT.remarks
  is '备注';
comment on column T_BAS_AIRCRAFT.oper_ip
  is 'IP地址';
comment on column T_BAS_AIRCRAFT.oper_host
  is '主机名';
comment on column T_BAS_AIRCRAFT.is_hud
  is '是否有HUD标识';
comment on column T_BAS_AIRCRAFT.rest_equipment_level
  is '休息设施等级维护（L1一级 L2二级 L3三级）';
alter table T_BAS_AIRCRAFT
  add constraint PK_AIRCRAFT primary key (AC_REG)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRCRAFT20140708
prompt =====================================
prompt
create table T_BAS_AIRCRAFT20140708
(
  ac_reg              VARCHAR2(10) not null,
  ac_type             VARCHAR2(10) not null,
  filiale             VARCHAR2(4) not null,
  rest_yn             VARCHAR2(1),
  dow                 NUMBER(8),
  doi                 NUMBER(5,2),
  start_date          DATE,
  end_date            DATE,
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  fly_device          VARCHAR2(8),
  valid_flag          VARCHAR2(1),
  dow_l               NUMBER(8),
  doi_l               NUMBER(5,2),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  iscat2              VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRCRAFT201407082
prompt ======================================
prompt
create table T_BAS_AIRCRAFT201407082
(
  ac_reg              VARCHAR2(10) not null,
  ac_type             VARCHAR2(10) not null,
  filiale             VARCHAR2(4) not null,
  rest_yn             VARCHAR2(1),
  dow                 NUMBER(8),
  doi                 NUMBER(5,2),
  start_date          DATE,
  end_date            DATE,
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  fly_device          VARCHAR2(8),
  valid_flag          VARCHAR2(1),
  dow_l               NUMBER(8),
  doi_l               NUMBER(5,2),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  iscat2              VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRCRAFT20140903
prompt =====================================
prompt
create table T_BAS_AIRCRAFT20140903
(
  ac_reg              VARCHAR2(10) not null,
  ac_type             VARCHAR2(10) not null,
  filiale             VARCHAR2(4) not null,
  rest_yn             VARCHAR2(1),
  dow                 NUMBER(8),
  doi                 NUMBER(5,2),
  start_date          DATE,
  end_date            DATE,
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  fly_device          VARCHAR2(8),
  valid_flag          VARCHAR2(1),
  dow_l               NUMBER(8),
  doi_l               NUMBER(5,2),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  iscat2              VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRCRAFT_TEST
prompt ==================================
prompt
create table T_BAS_AIRCRAFT_TEST
(
  ac_reg              VARCHAR2(10) not null,
  ac_type             VARCHAR2(10) not null,
  filiale             VARCHAR2(4) not null,
  rest_yn             VARCHAR2(1) default 'N',
  dow                 NUMBER(8),
  doi                 NUMBER(5,2),
  start_date          DATE,
  end_date            DATE,
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  fly_device          VARCHAR2(100),
  valid_flag          VARCHAR2(1) default 'Y',
  dow_l               NUMBER(8),
  doi_l               NUMBER(5,2),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  iscat2              VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRLINES
prompt =============================
prompt
create table T_BAS_AIRLINES
(
  airline_type      VARCHAR2(10) not null,
  foreign_flag      VARCHAR2(4) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flight_com        VARCHAR2(500),
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_AIRLINES
  is '航线属性表';
comment on column T_BAS_AIRLINES.airline_type
  is 'ETOP,CAPT,RADI,FORE,ICAO,TICE';
comment on column T_BAS_AIRLINES.foreign_flag
  is '子项值';
comment on column T_BAS_AIRLINES.departure_airport
  is '起飞机场';
comment on column T_BAS_AIRLINES.arrival_airport
  is '到达机场';
comment on column T_BAS_AIRLINES.flight_com
  is '可飞航班列表';
comment on column T_BAS_AIRLINES.oper
  is '操作人';
comment on column T_BAS_AIRLINES.op_time
  is '操作时间';
comment on column T_BAS_AIRLINES.remarks
  is '备注';
comment on column T_BAS_AIRLINES.oper_ip
  is 'IP地址';
comment on column T_BAS_AIRLINES.oper_host
  is '主机名';
alter table T_BAS_AIRLINES
  add constraint PK_CM4027 primary key (AIRLINE_TYPE, FOREIGN_FLAG, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRLINES20160601_ICAO_CK
prompt =============================================
prompt
create table T_BAS_AIRLINES20160601_ICAO_CK
(
  airline_type      VARCHAR2(10) not null,
  foreign_flag      VARCHAR2(4) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flight_com        VARCHAR2(500),
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRPORT
prompt ============================
prompt
create table T_BAS_AIRPORT
(
  airport_4code   VARCHAR2(4) not null,
  airport_3code   VARCHAR2(3) not null,
  chinese_name    VARCHAR2(50) default '*' not null,
  english_name    VARCHAR2(100),
  chinese_abbr    VARCHAR2(10),
  city_3code      VARCHAR2(3) not null,
  city_ch_name    VARCHAR2(50) not null,
  d_or_i          VARCHAR2(1) not null,
  native          VARCHAR2(10),
  zone_time       NUMBER(3),
  in_time         NUMBER(3) default 0,
  out_time        NUMBER(3) default 0,
  radio_area      VARCHAR2(10),
  foreign_yn      VARCHAR2(1) default 'N',
  rest_yn         VARCHAR2(1) default 'N',
  a_icao          NUMBER(1),
  a_cls           VARCHAR2(10),
  a_cls_cycle     NUMBER(3),
  a_cats          VARCHAR2(10),
  a_rnpar         VARCHAR2(10),
  a_railway       VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  special_yn      VARCHAR2(1) default 'N',
  radio_yn        VARCHAR2(1) default 'N',
  duty_person     VARCHAR2(200),
  duty_tel        VARCHAR2(200),
  a_distance      VARCHAR2(1) default 'N',
  capt_area       VARCHAR2(10),
  cert_yn         VARCHAR2(1) default 'N',
  car_time        NUMBER(3) default 0,
  resttime        NUMBER(4),
  special_owner   VARCHAR2(500),
  elevation       NUMBER(5),
  general_plateau VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_AIRPORT
  is '机场信息';
comment on column T_BAS_AIRPORT.airport_4code
  is '机场四码';
comment on column T_BAS_AIRPORT.airport_3code
  is '机场三字码';
comment on column T_BAS_AIRPORT.chinese_name
  is '机场中文名称';
comment on column T_BAS_AIRPORT.english_name
  is '机场英文名称';
comment on column T_BAS_AIRPORT.chinese_abbr
  is '机场中文简称';
comment on column T_BAS_AIRPORT.city_3code
  is '所在城市三字码';
comment on column T_BAS_AIRPORT.city_ch_name
  is '所在城市中文名称';
comment on column T_BAS_AIRPORT.d_or_i
  is '国际/国内(D国内I国际R地区)';
comment on column T_BAS_AIRPORT.native
  is '国家(字典)';
comment on column T_BAS_AIRPORT.zone_time
  is '时差';
comment on column T_BAS_AIRPORT.in_time
  is '标准机组进场时间';
comment on column T_BAS_AIRPORT.out_time
  is '标准机组离场时间';
comment on column T_BAS_AIRPORT.radio_area
  is '报务区域(字典)X';
comment on column T_BAS_AIRPORT.foreign_yn
  is '是否外籍可飞(Y/N)X';
comment on column T_BAS_AIRPORT.rest_yn
  is '是否有休息场所(Y/N)';
comment on column T_BAS_AIRPORT.a_icao
  is 'ICAO(3,4,5,6,7,8级)';
comment on column T_BAS_AIRPORT.a_cls
  is '机场类型(1类2类3类=特殊、高原、高高原)';
comment on column T_BAS_AIRPORT.a_cls_cycle
  is '机场有效月数';
comment on column T_BAS_AIRPORT.a_cats
  is '机场仪表等级(CAT-I CAT-II RVR)';
comment on column T_BAS_AIRPORT.a_rnpar
  is '机场RNPAR属性,对应t_tech_qlf表的qlf_code字段';
comment on column T_BAS_AIRPORT.a_railway
  is '长跑道/L
短跑道/S';
comment on column T_BAS_AIRPORT.oper
  is '操作人';
comment on column T_BAS_AIRPORT.op_time
  is '操作时间';
comment on column T_BAS_AIRPORT.remarks
  is '备注';
comment on column T_BAS_AIRPORT.oper_ip
  is 'IP地址';
comment on column T_BAS_AIRPORT.oper_host
  is '主机名';
comment on column T_BAS_AIRPORT.special_yn
  is '特殊机场放飞';
comment on column T_BAS_AIRPORT.radio_yn
  is '报务机场放飞X';
comment on column T_BAS_AIRPORT.duty_person
  is '外站值班人';
comment on column T_BAS_AIRPORT.duty_tel
  is '外站值班电话';
comment on column T_BAS_AIRPORT.a_distance
  is '长航线Y/N';
comment on column T_BAS_AIRPORT.capt_area
  is '机长单飞区域(字典)X';
comment on column T_BAS_AIRPORT.cert_yn
  is '是否需要提前报备';
comment on column T_BAS_AIRPORT.car_time
  is '开车时间';
comment on column T_BAS_AIRPORT.resttime
  is '休息时间(分钟)';
comment on column T_BAS_AIRPORT.special_owner
  is '特殊机场放飞所属分公司';
comment on column T_BAS_AIRPORT.elevation
  is '机场标高';
comment on column T_BAS_AIRPORT.general_plateau
  is '是否是一般高原(Y是一般高原,N不是一般高原,NULL,机场没有标高不计算';
alter table T_BAS_AIRPORT
  add constraint PK_AIRPORT primary key (AIRPORT_3CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_AIRPORT_EXTEND
prompt ===================================
prompt
create table T_BAS_AIRPORT_EXTEND
(
  airport_3code  VARCHAR2(3) not null,
  filiale        VARCHAR2(4) default 'Y',
  rest_yn        VARCHAR2(1) default 'Y',
  is_dep_airport VARCHAR2(1) default 'Y',
  is_arr_airport VARCHAR2(1) default 'Y',
  flight_nos     VARCHAR2(2000),
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_BAS_AIRPORT_EXTEND
  is '机场扩展信息(T_BAS_AIRPORT_EXTEND)';
comment on column T_BAS_AIRPORT_EXTEND.airport_3code
  is '机场三字码';
comment on column T_BAS_AIRPORT_EXTEND.filiale
  is '分子公司编码';
comment on column T_BAS_AIRPORT_EXTEND.rest_yn
  is '是否有休息场所(Y/N)';
comment on column T_BAS_AIRPORT_EXTEND.is_dep_airport
  is '是否起飞机场(Y/N)';
comment on column T_BAS_AIRPORT_EXTEND.is_arr_airport
  is '是否落地机场(Y/N)';
comment on column T_BAS_AIRPORT_EXTEND.flight_nos
  is '航班号串(中间/隔开)';
comment on column T_BAS_AIRPORT_EXTEND.oper
  is '操作人';
comment on column T_BAS_AIRPORT_EXTEND.op_time
  is '操作时间';
comment on column T_BAS_AIRPORT_EXTEND.remarks
  is '备注';
comment on column T_BAS_AIRPORT_EXTEND.oper_ip
  is 'IP地址';
comment on column T_BAS_AIRPORT_EXTEND.oper_host
  is '主机名';
alter table T_BAS_AIRPORT_EXTEND
  add constraint PK_T_BAS_AIRPORT_EXTEND primary key (AIRPORT_3CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_BAS_BASE
prompt =========================
prompt
create table T_BAS_BASE
(
  filiale   VARCHAR2(4) not null,
  base      VARCHAR2(4) not null,
  base_name VARCHAR2(50),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50),
  base_yn   VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_BASE
  is '基地表';
comment on column T_BAS_BASE.filiale
  is '分公司';
comment on column T_BAS_BASE.base
  is '基地';
comment on column T_BAS_BASE.base_name
  is '基地名称';
comment on column T_BAS_BASE.oper
  is '操作人';
comment on column T_BAS_BASE.op_time
  is '操作时间';
comment on column T_BAS_BASE.remarks
  is '备注';
comment on column T_BAS_BASE.oper_ip
  is 'IP地址';
comment on column T_BAS_BASE.oper_host
  is '主机名';
comment on column T_BAS_BASE.base_yn
  is '是否主基地';
alter table T_BAS_BASE
  add constraint PK_BASE primary key (FILIALE, BASE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_CARRIER
prompt ============================
prompt
create table T_BAS_CARRIER
(
  airline_2code VARCHAR2(2) not null,
  chinese_name  VARCHAR2(60) not null,
  english_name  VARCHAR2(100),
  logo          VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_CARRIER
  is '承运人表';
comment on column T_BAS_CARRIER.airline_2code
  is '编码';
comment on column T_BAS_CARRIER.chinese_name
  is '名称';
comment on column T_BAS_CARRIER.english_name
  is '英文名称';
comment on column T_BAS_CARRIER.logo
  is 'LOGO';
alter table T_BAS_CARRIER
  add constraint PK_T_BAS_CARRIER primary key (AIRLINE_2CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_CARRY
prompt ==========================
prompt
create table T_BAS_CARRY
(
  carry_code  VARCHAR2(10) not null,
  carry_name  VARCHAR2(50) not null,
  carry_ename VARCHAR2(100),
  filiale     VARCHAR2(4),
  idx         NUMBER(3),
  module_flag VARCHAR2(1),
  valid_flag  VARCHAR2(1) default 'Y',
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_CARRY
  is 'BAS-接车地址编码表';
comment on column T_BAS_CARRY.carry_code
  is '接车编码';
comment on column T_BAS_CARRY.carry_name
  is '中文名称';
comment on column T_BAS_CARRY.carry_ename
  is '英文名称';
comment on column T_BAS_CARRY.filiale
  is '分公司';
comment on column T_BAS_CARRY.idx
  is '序号';
comment on column T_BAS_CARRY.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_BAS_CARRY.valid_flag
  is '有效标志';
comment on column T_BAS_CARRY.oper
  is '操作人';
comment on column T_BAS_CARRY.op_time
  is '操作时间';
comment on column T_BAS_CARRY.remarks
  is '备注';
comment on column T_BAS_CARRY.oper_ip
  is 'IP地址';
comment on column T_BAS_CARRY.oper_host
  is '主机名';
alter table T_BAS_CARRY
  add constraint PK_T_BAS_CARRY primary key (CARRY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_CARRY20150203
prompt ==================================
prompt
create table T_BAS_CARRY20150203
(
  carry_code  VARCHAR2(10) not null,
  carry_name  VARCHAR2(50) not null,
  carry_ename VARCHAR2(100),
  filiale     VARCHAR2(4),
  idx         NUMBER(3),
  module_flag VARCHAR2(1),
  valid_flag  VARCHAR2(1),
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_CARRYHOURS
prompt ===============================
prompt
create table T_BAS_CARRYHOURS
(
  carry_code  VARCHAR2(10) not null,
  base        VARCHAR2(4) not null,
  carry_hours NUMBER(3) default 0,
  filiale     VARCHAR2(4),
  carry_type  NUMBER(3) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_CARRYHOURS
  is 'BAS-车程表';
comment on column T_BAS_CARRYHOURS.carry_code
  is '接车编码';
comment on column T_BAS_CARRYHOURS.base
  is '基地';
comment on column T_BAS_CARRYHOURS.carry_hours
  is '车程';
comment on column T_BAS_CARRYHOURS.filiale
  is '分公司';
comment on column T_BAS_CARRYHOURS.carry_type
  is '乘车点类型（定点沿线，市区）';
comment on column T_BAS_CARRYHOURS.oper
  is '操作人';
comment on column T_BAS_CARRYHOURS.op_time
  is '操作时间';
comment on column T_BAS_CARRYHOURS.remarks
  is '备注';
comment on column T_BAS_CARRYHOURS.oper_ip
  is 'IP地址';
comment on column T_BAS_CARRYHOURS.oper_host
  is '主机名';
alter table T_BAS_CARRYHOURS
  add constraint PK_BAS_CARRYHOURS primary key (CARRY_CODE, BASE, CARRY_TYPE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_BAS_CARRYHOURS
  add constraint UK_BAS_CARRYHOURS unique (CARRY_CODE, BASE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_COUNTRY
prompt ============================
prompt
create table T_BAS_COUNTRY
(
  country_code  VARCHAR2(10) not null,
  country_name  VARCHAR2(100) not null,
  country_ename VARCHAR2(100),
  country_abbr  VARCHAR2(10),
  base_area     VARCHAR2(10) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  country_3code VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_COUNTRY
  is '国家表';
comment on column T_BAS_COUNTRY.country_code
  is '国家编码';
comment on column T_BAS_COUNTRY.country_name
  is '国家名称';
comment on column T_BAS_COUNTRY.country_ename
  is '国家英文名称';
comment on column T_BAS_COUNTRY.country_abbr
  is '国家简称';
comment on column T_BAS_COUNTRY.base_area
  is '所在洲(字典)';
comment on column T_BAS_COUNTRY.oper
  is '操作人';
comment on column T_BAS_COUNTRY.op_time
  is '操作时间';
comment on column T_BAS_COUNTRY.remarks
  is '备注';
comment on column T_BAS_COUNTRY.oper_ip
  is 'IP地址';
comment on column T_BAS_COUNTRY.oper_host
  is '主机名';
comment on column T_BAS_COUNTRY.country_3code
  is '国家三字编码';
alter table T_BAS_COUNTRY
  add constraint PK_T_BAS_COUNTRY primary key (COUNTRY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_DDO
prompt ========================
prompt
create table T_BAS_DDO
(
  ddo_code     VARCHAR2(10) not null,
  ddo_name     VARCHAR2(50) not null,
  ddo_type     VARCHAR2(10),
  idx          NUMBER(3),
  module_flags VARCHAR2(6),
  filiales     VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  valid_flag   VARCHAR2(1),
  is_duty      VARCHAR2(2) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_DDO
  is '不能飞原因代码表';
comment on column T_BAS_DDO.ddo_code
  is '原因代码';
comment on column T_BAS_DDO.ddo_name
  is '原因名称';
comment on column T_BAS_DDO.ddo_type
  is '分类(0福利假1临时请假2公务3停飞4值班5航医)';
comment on column T_BAS_DDO.idx
  is '序号';
comment on column T_BAS_DDO.module_flags
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_BAS_DDO.filiales
  is '分公司(默认全部)';
comment on column T_BAS_DDO.oper
  is '操作人';
comment on column T_BAS_DDO.op_time
  is '操作时间';
comment on column T_BAS_DDO.remarks
  is '备注';
comment on column T_BAS_DDO.oper_ip
  is 'IP地址';
comment on column T_BAS_DDO.oper_host
  is '主机名';
comment on column T_BAS_DDO.valid_flag
  is '有效标志';
comment on column T_BAS_DDO.is_duty
  is '是否算值勤期(Y算 N不算)';
alter table T_BAS_DDO
  add constraint PK_ABSENT_CODE primary key (DDO_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_DDO_ADD
prompt ============================
prompt
create table T_BAS_DDO_ADD
(
  ddo_add_code VARCHAR2(4) not null,
  ddo_add_name VARCHAR2(100) not null,
  contactor    VARCHAR2(20),
  tel          VARCHAR2(20),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_BAS_DDO_ADD
  is '疗养地点表';
comment on column T_BAS_DDO_ADD.ddo_add_code
  is '疗养地点编号';
comment on column T_BAS_DDO_ADD.ddo_add_name
  is '疗养地点名称';
comment on column T_BAS_DDO_ADD.contactor
  is '联系人';
comment on column T_BAS_DDO_ADD.tel
  is '联系电话';
comment on column T_BAS_DDO_ADD.oper
  is '操作人';
comment on column T_BAS_DDO_ADD.op_time
  is '操作时间';
comment on column T_BAS_DDO_ADD.remarks
  is '备注';
comment on column T_BAS_DDO_ADD.oper_ip
  is 'IP地址';
comment on column T_BAS_DDO_ADD.oper_host
  is '主机名';
alter table T_BAS_DDO_ADD
  add constraint PK_RECOVERY_ADDR primary key (DDO_ADD_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_BAS_DICT
prompt =========================
prompt
create table T_BAS_DICT
(
  parent_code   VARCHAR2(4) not null,
  bm_code       VARCHAR2(4) not null,
  bm_name       VARCHAR2(100),
  bm_ename      VARCHAR2(100),
  idx           NUMBER(3),
  readonly_flag VARCHAR2(1) default 'N',
  filiales      VARCHAR2(200),
  module_flags  VARCHAR2(10),
  valid_flag    VARCHAR2(1),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  bm_sql        VARCHAR2(300)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_DICT
  is '编码字典表';
comment on column T_BAS_DICT.parent_code
  is '父编码';
comment on column T_BAS_DICT.bm_code
  is '编码';
comment on column T_BAS_DICT.bm_name
  is '编码中文名称';
comment on column T_BAS_DICT.bm_ename
  is '编码英文名称';
comment on column T_BAS_DICT.idx
  is '序号';
comment on column T_BAS_DICT.readonly_flag
  is '是否只读';
comment on column T_BAS_DICT.filiales
  is '分公司(默认全部)';
comment on column T_BAS_DICT.module_flags
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_BAS_DICT.valid_flag
  is '有效标志';
comment on column T_BAS_DICT.oper
  is '操作人';
comment on column T_BAS_DICT.op_time
  is '操作时间';
comment on column T_BAS_DICT.remarks
  is '备注';
comment on column T_BAS_DICT.oper_ip
  is 'IP地址';
comment on column T_BAS_DICT.oper_host
  is '主机名';
comment on column T_BAS_DICT.bm_sql
  is '是否存在判断';
alter table T_BAS_DICT
  add constraint PK_CODE_DICT primary key (BM_CODE, PARENT_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_DICT20140901
prompt =================================
prompt
create table T_BAS_DICT20140901
(
  parent_code   VARCHAR2(4) not null,
  bm_code       VARCHAR2(4) not null,
  bm_name       VARCHAR2(100),
  bm_ename      VARCHAR2(100),
  idx           NUMBER(3),
  readonly_flag VARCHAR2(1),
  filiales      VARCHAR2(200),
  module_flags  VARCHAR2(10),
  valid_flag    VARCHAR2(1),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  bm_sql        VARCHAR2(300)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_DUTY
prompt =========================
prompt
create table T_BAS_DUTY
(
  duty_code   VARCHAR2(10) not null,
  duty_name   VARCHAR2(50) not null,
  start_time  DATE not null,
  end_time    DATE not null,
  filiale     VARCHAR2(4) not null,
  base        VARCHAR2(4) not null,
  module_flag VARCHAR2(1) not null,
  valid_flag  VARCHAR2(1) default 'Y' not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_DUTY
  is '值班类型编码表';
comment on column T_BAS_DUTY.duty_code
  is '值班代码';
comment on column T_BAS_DUTY.duty_name
  is '值班名称';
comment on column T_BAS_DUTY.start_time
  is '开始时间';
comment on column T_BAS_DUTY.end_time
  is '结束时间';
comment on column T_BAS_DUTY.filiale
  is '分公司';
comment on column T_BAS_DUTY.base
  is '基地';
comment on column T_BAS_DUTY.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_BAS_DUTY.valid_flag
  is '有效标志';
comment on column T_BAS_DUTY.oper
  is '操作人';
comment on column T_BAS_DUTY.op_time
  is '操作时间';
comment on column T_BAS_DUTY.remarks
  is '备注';
comment on column T_BAS_DUTY.oper_ip
  is 'IP地址';
comment on column T_BAS_DUTY.oper_host
  is '主机名';
alter table T_BAS_DUTY
  add constraint PK_DUTY_TYPE primary key (DUTY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_ENTRYTIME
prompt ==============================
prompt
create table T_BAS_ENTRYTIME
(
  id                NUMBER(8) not null,
  filiale           VARCHAR2(4),
  departure_airport VARCHAR2(4),
  d_or_i            VARCHAR2(1),
  start_time        DATE,
  end_time          DATE,
  entry_time        NUMBER(6),
  remarks           VARCHAR2(200),
  oper              VARCHAR2(10),
  op_time           DATE,
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_ENTRYTIME
  is '进场时间表';
comment on column T_BAS_ENTRYTIME.id
  is '主键ID ，取 SEQ_BASE_ENTRYTIME_ID';
comment on column T_BAS_ENTRYTIME.filiale
  is '分公司';
comment on column T_BAS_ENTRYTIME.departure_airport
  is '起飞机场';
comment on column T_BAS_ENTRYTIME.d_or_i
  is '国际/国内（D:国内,I:国际,R:地区）';
comment on column T_BAS_ENTRYTIME.start_time
  is '开始时间';
comment on column T_BAS_ENTRYTIME.end_time
  is '结束时间';
comment on column T_BAS_ENTRYTIME.entry_time
  is '进场时间（分钟）';
comment on column T_BAS_ENTRYTIME.remarks
  is '备注';
comment on column T_BAS_ENTRYTIME.oper
  is '操作人';
comment on column T_BAS_ENTRYTIME.op_time
  is '操作时间';
comment on column T_BAS_ENTRYTIME.oper_ip
  is 'IP地址';
comment on column T_BAS_ENTRYTIME.oper_host
  is '主机名';
alter table T_BAS_ENTRYTIME
  add constraint PK_ENTRYTIME primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_FILIALE
prompt ============================
prompt
create table T_BAS_FILIALE
(
  filiale      VARCHAR2(4) not null,
  filiale_name VARCHAR2(50) not null,
  home_base    VARCHAR2(4) not null,
  area_code    VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_code     VARCHAR2(20),
  is_online    VARCHAR2(1) default 'N',
  online_date  DATE,
  flt_syn_date DATE,
  tsk_syn_date DATE,
  argb         NUMBER(9),
  idx          NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_FILIALE
  is '分公司代码表';
comment on column T_BAS_FILIALE.filiale
  is '分公司';
comment on column T_BAS_FILIALE.filiale_name
  is '分公司名称';
comment on column T_BAS_FILIALE.home_base
  is '主基地';
comment on column T_BAS_FILIALE.area_code
  is '辖区(字典)';
comment on column T_BAS_FILIALE.valid_flag
  is '有效标志';
comment on column T_BAS_FILIALE.oper
  is '操作人';
comment on column T_BAS_FILIALE.op_time
  is '操作时间';
comment on column T_BAS_FILIALE.remarks
  is '备注';
comment on column T_BAS_FILIALE.oper_ip
  is 'IP地址';
comment on column T_BAS_FILIALE.oper_host
  is '主机名';
comment on column T_BAS_FILIALE.fxw_code
  is '对应飞行网分公司代码';
comment on column T_BAS_FILIALE.is_online
  is '机组排班系统是否上线';
comment on column T_BAS_FILIALE.online_date
  is '上线日期(飞行员静态信息往飞行网推送)';
comment on column T_BAS_FILIALE.flt_syn_date
  is '航班计划同步日期';
comment on column T_BAS_FILIALE.tsk_syn_date
  is '上线日期(飞行员任务、排班等动态信息往飞行网推送)';
comment on column T_BAS_FILIALE.argb
  is '颜色';
comment on column T_BAS_FILIALE.idx
  is '显示顺序';
alter table T_BAS_FILIALE
  add constraint PK_FILIALE primary key (FILIALE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_FILIALE20150410
prompt ====================================
prompt
create table T_BAS_FILIALE20150410
(
  filiale      VARCHAR2(4) not null,
  filiale_name VARCHAR2(50) not null,
  home_base    VARCHAR2(4) not null,
  area_code    VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_code     VARCHAR2(20),
  is_online    VARCHAR2(1),
  online_date  DATE,
  flt_syn_date DATE,
  tsk_syn_date DATE,
  argb         NUMBER(9),
  idx          NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_FLEET
prompt ==========================
prompt
create table T_BAS_FLEET
(
  ac_type              VARCHAR2(10) not null,
  ac_type_long         VARCHAR2(15),
  ac_type_crew         VARCHAR2(10),
  valid_flag           VARCHAR2(1) default 'Y',
  oper                 VARCHAR2(10),
  op_time              DATE,
  remarks              VARCHAR2(200),
  oper_ip              VARCHAR2(15),
  oper_host            VARCHAR2(50),
  ac_type_index        NUMBER(6,3),
  daily_rate           NUMBER(6,3),
  sap_is_online        VARCHAR2(2),
  rest_equipment_level VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_FLEET
  is '机型信息表';
comment on column T_BAS_FLEET.ac_type
  is '机型';
comment on column T_BAS_FLEET.ac_type_long
  is '长机型';
comment on column T_BAS_FLEET.ac_type_crew
  is '排班机型组';
comment on column T_BAS_FLEET.valid_flag
  is '有效标志';
comment on column T_BAS_FLEET.oper
  is '操作人';
comment on column T_BAS_FLEET.op_time
  is '操作时间';
comment on column T_BAS_FLEET.remarks
  is '备注';
comment on column T_BAS_FLEET.oper_ip
  is 'IP地址';
comment on column T_BAS_FLEET.oper_host
  is '主机名';
comment on column T_BAS_FLEET.ac_type_index
  is '机型系数';
comment on column T_BAS_FLEET.daily_rate
  is '日利用率';
comment on column T_BAS_FLEET.sap_is_online
  is 'SAP系统是否上线(Y上线,N未上线)';
comment on column T_BAS_FLEET.rest_equipment_level
  is '休息设施等级维护（L1一级 L2二级 L3三级）';
alter table T_BAS_FLEET
  add constraint PK_FLEET primary key (AC_TYPE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_FLEET20140903
prompt ==================================
prompt
create table T_BAS_FLEET20140903
(
  ac_type       VARCHAR2(10) not null,
  ac_type_long  VARCHAR2(15),
  ac_type_crew  VARCHAR2(10),
  valid_flag    VARCHAR2(1),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  ac_type_index NUMBER(6,3),
  daily_rate    NUMBER(6,3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_FLEET_FRMS
prompt ===============================
prompt
create table T_BAS_FLEET_FRMS
(
  ac_type          VARCHAR2(15),
  ac_type_long     VARCHAR2(15),
  ac_type_crew     VARCHAR2(10),
  frs_ac_type_code VARCHAR2(10),
  frs_ac_type_name VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_FLEET_FRMS
  is '飞管网(FRMS)与机组排班小机型对应关系';
comment on column T_BAS_FLEET_FRMS.ac_type
  is '机型';
comment on column T_BAS_FLEET_FRMS.ac_type_long
  is '长机型';
comment on column T_BAS_FLEET_FRMS.ac_type_crew
  is '机型组';
comment on column T_BAS_FLEET_FRMS.frs_ac_type_code
  is '飞管网机型';
comment on column T_BAS_FLEET_FRMS.frs_ac_type_name
  is '飞管网名称';

prompt
prompt Creating table T_BAS_FLEET_TEST
prompt ===============================
prompt
create table T_BAS_FLEET_TEST
(
  ac_type       VARCHAR2(10) not null,
  ac_type_long  VARCHAR2(15),
  ac_type_crew  VARCHAR2(10),
  valid_flag    VARCHAR2(1) default 'Y',
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  ac_type_index NUMBER(6,3),
  daily_rate    NUMBER(6,3),
  sap_is_online VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_HOLIDAY
prompt ============================
prompt
create table T_BAS_HOLIDAY
(
  holiday_id   NUMBER(5) not null,
  start_date   DATE not null,
  end_date     DATE not null,
  holiday_name VARCHAR2(100) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_HOLIDAY
  is '节假日表';
comment on column T_BAS_HOLIDAY.holiday_id
  is '节假日ID';
comment on column T_BAS_HOLIDAY.start_date
  is '开始日期';
comment on column T_BAS_HOLIDAY.end_date
  is '结束日期';
comment on column T_BAS_HOLIDAY.holiday_name
  is '节假日名称';
comment on column T_BAS_HOLIDAY.remarks
  is '备注';
comment on column T_BAS_HOLIDAY.oper
  is '操作人';
comment on column T_BAS_HOLIDAY.op_time
  is '操作日期';
comment on column T_BAS_HOLIDAY.oper_ip
  is 'IP地址';
comment on column T_BAS_HOLIDAY.oper_host
  is '主机名';
alter table T_BAS_HOLIDAY
  add constraint PK_T_BAS_HOLIDAY primary key (HOLIDAY_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_NBASE
prompt ==========================
prompt
create table T_BAS_NBASE
(
  filiale      VARCHAR2(4) not null,
  airport_code CHAR(4) not null,
  chinese_name VARCHAR2(50) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_NBASE
  is '过夜机场表';
comment on column T_BAS_NBASE.filiale
  is '分公司';
comment on column T_BAS_NBASE.airport_code
  is '机场三码';
comment on column T_BAS_NBASE.chinese_name
  is '机场中文名称';
comment on column T_BAS_NBASE.oper
  is '操作人';
comment on column T_BAS_NBASE.op_time
  is '操作时间';
comment on column T_BAS_NBASE.remarks
  is '备注';
comment on column T_BAS_NBASE.oper_ip
  is 'IP地址';
comment on column T_BAS_NBASE.oper_host
  is '主机名';
alter table T_BAS_NBASE
  add constraint PK_NIGHT_BASE primary key (FILIALE, AIRPORT_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_PINYIN
prompt ===========================
prompt
create table T_BAS_PINYIN
(
  hanzi      VARCHAR2(10) not null,
  pinyin     VARCHAR2(16) not null,
  pinyin_old VARCHAR2(16)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_PINYIN
  is '汉字拼音表';
comment on column T_BAS_PINYIN.hanzi
  is '汉字';
comment on column T_BAS_PINYIN.pinyin
  is '拼音1';
comment on column T_BAS_PINYIN.pinyin_old
  is '拼音2';
alter table T_BAS_PINYIN
  add constraint PK_T_BAS_PINYIN primary key (HANZI)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_RANK
prompt =========================
prompt
create table T_BAS_RANK
(
  rank_no     VARCHAR2(4) not null,
  rank_name   VARCHAR2(50) not null,
  rank_ename  VARCHAR2(100),
  idx         NUMBER(3),
  argb        NUMBER(9),
  module_flag VARCHAR2(1),
  valid_flag  VARCHAR2(1) default 'Y',
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_RANK
  is '机上岗位表';
comment on column T_BAS_RANK.rank_no
  is '岗位代码';
comment on column T_BAS_RANK.rank_name
  is '岗位名称';
comment on column T_BAS_RANK.rank_ename
  is '岗位英文名';
comment on column T_BAS_RANK.idx
  is '序号';
comment on column T_BAS_RANK.argb
  is '用户自定义颜色';
comment on column T_BAS_RANK.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_BAS_RANK.valid_flag
  is '有效标志';
comment on column T_BAS_RANK.oper
  is '操作人';
comment on column T_BAS_RANK.op_time
  is '操作时间';
comment on column T_BAS_RANK.remarks
  is '备注';
comment on column T_BAS_RANK.oper_ip
  is 'IP地址';
comment on column T_BAS_RANK.oper_host
  is '主机名';
alter table T_BAS_RANK
  add constraint PK_RANK primary key (RANK_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BAS_TECH
prompt =========================
prompt
create table T_BAS_TECH
(
  tech_no          VARCHAR2(4) not null,
  tech_name        VARCHAR2(50) not null,
  tech_ename       VARCHAR2(100),
  module_flag      VARCHAR2(1) not null,
  in_ex            VARCHAR2(1) default 'I' not null,
  tech_type        VARCHAR2(1) default 'A' not null,
  tech_rank        VARCHAR2(1) default 'S' not null,
  idx              NUMBER(3) default 99 not null,
  rank_nos         VARCHAR2(100),
  argb             NUMBER(9),
  valid_flag       VARCHAR2(1) default 'Y',
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  tech_description VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BAS_TECH
  is '技术授权代码表';
comment on column T_BAS_TECH.tech_no
  is '授权代码';
comment on column T_BAS_TECH.tech_name
  is '授权名称';
comment on column T_BAS_TECH.tech_ename
  is '授权英文名';
comment on column T_BAS_TECH.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_BAS_TECH.in_ex
  is '公司I/排班Z';
comment on column T_BAS_TECH.tech_type
  is '分类(A飞行线B报务线L检查员)';
comment on column T_BAS_TECH.tech_rank
  is '属性(A检查员B教员C机长F副驾驶S学员J机械员R报务员)';
comment on column T_BAS_TECH.idx
  is '授权等级';
comment on column T_BAS_TECH.rank_nos
  is '适用岗位列表';
comment on column T_BAS_TECH.argb
  is '用户自定义颜色';
comment on column T_BAS_TECH.valid_flag
  is '有效标志';
comment on column T_BAS_TECH.oper
  is '操作人';
comment on column T_BAS_TECH.op_time
  is '操作时间';
comment on column T_BAS_TECH.remarks
  is '备注';
comment on column T_BAS_TECH.oper_ip
  is 'IP地址';
comment on column T_BAS_TECH.oper_host
  is '主机名';
comment on column T_BAS_TECH.tech_description
  is '授权中文名';
alter table T_BAS_TECH
  add constraint PK_TECH_CODE primary key (TECH_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BLOB_IMAGE
prompt ===========================
prompt
create table T_BLOB_IMAGE
(
  work_no VARCHAR2(10) not null,
  photo   BLOB not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BLOB_IMAGE
  is 'BLOB测试表';
alter table T_BLOB_IMAGE
  add constraint PK_WORKNO primary key (WORK_NO)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_BO_DESCRIBE
prompt ============================
prompt
create table T_BO_DESCRIBE
(
  id      VARCHAR2(40),
  name_cn VARCHAR2(100),
  remark  VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_BO_DESCRIBE
  is '报表逻辑说明';
comment on column T_BO_DESCRIBE.id
  is '报表ID';
comment on column T_BO_DESCRIBE.name_cn
  is '报表名称';
comment on column T_BO_DESCRIBE.remark
  is '备注';

prompt
prompt Creating table T_BO_TOKEN_RECORD
prompt ================================
prompt
create table T_BO_TOKEN_RECORD
(
  id        INTEGER not null,
  usertype  INTEGER,
  starttime DATE,
  endtime   DATE,
  tokenstr  VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_BO_TOKEN_RECORD
  add primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_CLASSROOM
prompt =================================
prompt
create table T_CEAFTC_CLASSROOM
(
  classroomid   VARCHAR2(60) not null,
  updatedate    DATE,
  enable        NUMBER(2),
  classroomcode VARCHAR2(60),
  classroomname VARCHAR2(60),
  classroomtype VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_CLASSROOM
  is '东方飞行培训教室';
comment on column T_CEAFTC_CLASSROOM.classroomid
  is '客户Id';
comment on column T_CEAFTC_CLASSROOM.updatedate
  is '更新时间';
comment on column T_CEAFTC_CLASSROOM.enable
  is '逻辑有效标识';
comment on column T_CEAFTC_CLASSROOM.classroomcode
  is '教室代码';
comment on column T_CEAFTC_CLASSROOM.classroomname
  is '教室名称';
comment on column T_CEAFTC_CLASSROOM.classroomtype
  is '教室分类';
alter table T_CEAFTC_CLASSROOM
  add constraint PK_CEAFTC_CLASSROOM primary key (CLASSROOMID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_CLASSTASK
prompt =================================
prompt
create table T_CEAFTC_CLASSTASK
(
  classtaskid      VARCHAR2(60) not null,
  updatedate       DATE,
  courseplantype   VARCHAR2(60),
  placeid          VARCHAR2(60),
  traintypeid      VARCHAR2(60),
  starttime        DATE,
  endtime          DATE,
  coursetasktypeid VARCHAR2(60),
  simtypeid        VARCHAR2(60),
  poption          VARCHAR2(30) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_CEAFTC_CLASSTASK
  is '东方飞行培训训练场次';
comment on column T_CEAFTC_CLASSTASK.classtaskid
  is '班级任务Id';
comment on column T_CEAFTC_CLASSTASK.updatedate
  is '更新时间';
comment on column T_CEAFTC_CLASSTASK.courseplantype
  is '任务类型';
comment on column T_CEAFTC_CLASSTASK.placeid
  is '训练场地';
comment on column T_CEAFTC_CLASSTASK.traintypeid
  is '训练类型';
comment on column T_CEAFTC_CLASSTASK.starttime
  is '训练开始时间';
comment on column T_CEAFTC_CLASSTASK.endtime
  is '训练结束时间';
comment on column T_CEAFTC_CLASSTASK.coursetasktypeid
  is '课程任务类型';
comment on column T_CEAFTC_CLASSTASK.simtypeid
  is '机型型号ID';
comment on column T_CEAFTC_CLASSTASK.poption
  is '版本NEW/OLD';
create index IDX_CEAFTC_CLASSTASK_POP on T_CEAFTC_CLASSTASK (POPTION)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_CEAFTC_CLASSTASK
  add constraint PK_CEAFTC_CLASSTASK primary key (CLASSTASKID, POPTION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_CEAFTC_CLASSTASK_HIS
prompt =====================================
prompt
create table T_CEAFTC_CLASSTASK_HIS
(
  classtaskid      VARCHAR2(60) not null,
  updatedate       DATE,
  courseplantype   VARCHAR2(60),
  placeid          VARCHAR2(60),
  traintypeid      VARCHAR2(60),
  starttime        DATE,
  endtime          DATE,
  coursetasktypeid VARCHAR2(60),
  simtypeid        VARCHAR2(60),
  poption          VARCHAR2(30),
  log_id           VARCHAR2(30) not null,
  new_poption      VARCHAR2(30) not null,
  old_poption      VARCHAR2(30) not null,
  status           VARCHAR2(20),
  remark           VARCHAR2(100),
  op_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 168M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_CLASSTASK_HIS
  is '东方飞行培训训练场次历史表';
comment on column T_CEAFTC_CLASSTASK_HIS.classtaskid
  is '班级任务Id';
comment on column T_CEAFTC_CLASSTASK_HIS.updatedate
  is '更新时间';
comment on column T_CEAFTC_CLASSTASK_HIS.courseplantype
  is '任务类型';
comment on column T_CEAFTC_CLASSTASK_HIS.placeid
  is '训练场地';
comment on column T_CEAFTC_CLASSTASK_HIS.traintypeid
  is '训练类型';
comment on column T_CEAFTC_CLASSTASK_HIS.starttime
  is '训练开始时间';
comment on column T_CEAFTC_CLASSTASK_HIS.endtime
  is '训练结束时间';
comment on column T_CEAFTC_CLASSTASK_HIS.coursetasktypeid
  is '课程任务类型';
comment on column T_CEAFTC_CLASSTASK_HIS.simtypeid
  is '机型型号ID';
comment on column T_CEAFTC_CLASSTASK_HIS.poption
  is '当前版本';
comment on column T_CEAFTC_CLASSTASK_HIS.log_id
  is '日志ID';
comment on column T_CEAFTC_CLASSTASK_HIS.new_poption
  is '新版本';
comment on column T_CEAFTC_CLASSTASK_HIS.old_poption
  is '旧版本';
comment on column T_CEAFTC_CLASSTASK_HIS.status
  is '操作状态(INSERT/UPDATE/DELETE/CANCEL)';
comment on column T_CEAFTC_CLASSTASK_HIS.remark
  is '备注';
comment on column T_CEAFTC_CLASSTASK_HIS.op_time
  is '操作时间';
alter table T_CEAFTC_CLASSTASK_HIS
  add constraint PK_T_CEAFTC_CLASSTASK_HIS primary key (CLASSTASKID, LOG_ID, NEW_POPTION, OLD_POPTION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_CTINSTRUCTOR
prompt ====================================
prompt
create table T_CEAFTC_CTINSTRUCTOR
(
  taskresid   VARCHAR2(60) not null,
  updatedate  DATE,
  classtaskid VARCHAR2(60),
  personid    VARCHAR2(60),
  personname  VARCHAR2(60),
  certno      VARCHAR2(60),
  starttime   DATE,
  endtime     DATE,
  resusetype  VARCHAR2(60),
  poption     VARCHAR2(30) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_CEAFTC_CTINSTRUCTOR
  is '东方飞行培训教员场次';
comment on column T_CEAFTC_CTINSTRUCTOR.taskresid
  is '学员任务Id';
comment on column T_CEAFTC_CTINSTRUCTOR.updatedate
  is '更新时间';
comment on column T_CEAFTC_CTINSTRUCTOR.classtaskid
  is '班级任务Id';
comment on column T_CEAFTC_CTINSTRUCTOR.personid
  is '人员Id';
comment on column T_CEAFTC_CTINSTRUCTOR.personname
  is '学员姓名';
comment on column T_CEAFTC_CTINSTRUCTOR.certno
  is '证件号';
comment on column T_CEAFTC_CTINSTRUCTOR.starttime
  is '训练开始时间';
comment on column T_CEAFTC_CTINSTRUCTOR.endtime
  is '训练结束时间';
comment on column T_CEAFTC_CTINSTRUCTOR.resusetype
  is '教员使用类型';
comment on column T_CEAFTC_CTINSTRUCTOR.poption
  is '版本NEW/OLD';
create index IDX_CEAFTC_INSTRUCT_POP on T_CEAFTC_CTINSTRUCTOR (POPTION)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_CEAFTC_CTINSTRUCTOR
  add constraint PK_CEAFTC_CTINSTRUCTOR primary key (TASKRESID, POPTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_CEAFTC_CTINSTRUCTOR_HIS
prompt ========================================
prompt
create table T_CEAFTC_CTINSTRUCTOR_HIS
(
  taskresid   VARCHAR2(60) not null,
  updatedate  DATE,
  classtaskid VARCHAR2(60),
  personid    VARCHAR2(60),
  personname  VARCHAR2(60),
  certno      VARCHAR2(60),
  starttime   DATE,
  endtime     DATE,
  resusetype  VARCHAR2(60),
  poption     VARCHAR2(30),
  log_id      VARCHAR2(30) not null,
  new_poption VARCHAR2(30) not null,
  old_poption VARCHAR2(30) not null,
  status      VARCHAR2(20),
  remark      VARCHAR2(100),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 176M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_CTINSTRUCTOR_HIS
  is '东方飞行培训教员场次历史表';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.taskresid
  is '学员任务Id';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.updatedate
  is '更新时间';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.classtaskid
  is '班级任务Id';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.personid
  is '人员Id';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.personname
  is '学员姓名';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.certno
  is '证件号';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.starttime
  is '训练开始时间';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.endtime
  is '训练结束时间';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.resusetype
  is '教员使用类型';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.poption
  is '当前版本';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.log_id
  is '日志ID';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.new_poption
  is '新版本';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.old_poption
  is '旧版本';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.status
  is '操作状态(INSERT/UPDATE/DELETE/CANCEL)';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.remark
  is '备注';
comment on column T_CEAFTC_CTINSTRUCTOR_HIS.op_time
  is '操作时间';
alter table T_CEAFTC_CTINSTRUCTOR_HIS
  add constraint PK_T_CEAFTC_CTINSTRUCTOR_HIS primary key (TASKRESID, LOG_ID, NEW_POPTION, OLD_POPTION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_CTTRAINEE
prompt =================================
prompt
create table T_CEAFTC_CTTRAINEE
(
  cttraineeid VARCHAR2(60) not null,
  updatedate  DATE,
  classtaskid VARCHAR2(60),
  personid    VARCHAR2(60),
  personname  VARCHAR2(60),
  certno      VARCHAR2(60),
  starttime   DATE,
  endtime     DATE,
  poption     VARCHAR2(30) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_CEAFTC_CTTRAINEE
  is '东方飞行培训学员场次';
comment on column T_CEAFTC_CTTRAINEE.cttraineeid
  is '学员任务Id';
comment on column T_CEAFTC_CTTRAINEE.updatedate
  is '更新时间';
comment on column T_CEAFTC_CTTRAINEE.classtaskid
  is '班级任务Id';
comment on column T_CEAFTC_CTTRAINEE.personid
  is '人员Id';
comment on column T_CEAFTC_CTTRAINEE.personname
  is '学员姓名';
comment on column T_CEAFTC_CTTRAINEE.certno
  is '证件号';
comment on column T_CEAFTC_CTTRAINEE.starttime
  is '训练开始时间';
comment on column T_CEAFTC_CTTRAINEE.endtime
  is '训练结束时间';
comment on column T_CEAFTC_CTTRAINEE.poption
  is '版本NEW/OLD';
create index IDX_CEAFTC_POPTION on T_CEAFTC_CTTRAINEE (POPTION)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
create index IDX_CEATFC_CLS_PERSON on T_CEAFTC_CTTRAINEE (CLASSTASKID, PERSONID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_CEAFTC_CTTRAINEE
  add constraint PK_CEAFTC_CTTRAINEE primary key (CTTRAINEEID, POPTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_CEAFTC_CTTRAINEE_HIS
prompt =====================================
prompt
create table T_CEAFTC_CTTRAINEE_HIS
(
  cttraineeid VARCHAR2(60) not null,
  updatedate  DATE,
  classtaskid VARCHAR2(60),
  personid    VARCHAR2(60),
  personname  VARCHAR2(60),
  certno      VARCHAR2(60),
  starttime   DATE,
  endtime     DATE,
  poption     VARCHAR2(30) not null,
  log_id      VARCHAR2(30) not null,
  new_poption VARCHAR2(30) not null,
  old_poption VARCHAR2(30) not null,
  status      VARCHAR2(20),
  remark      VARCHAR2(100),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 288M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_CTTRAINEE_HIS
  is '东方飞行培训学员场次历史表';
comment on column T_CEAFTC_CTTRAINEE_HIS.cttraineeid
  is '学员任务Id';
comment on column T_CEAFTC_CTTRAINEE_HIS.updatedate
  is '更新时间';
comment on column T_CEAFTC_CTTRAINEE_HIS.classtaskid
  is '班级任务Id';
comment on column T_CEAFTC_CTTRAINEE_HIS.personid
  is '人员Id';
comment on column T_CEAFTC_CTTRAINEE_HIS.personname
  is '学员姓名';
comment on column T_CEAFTC_CTTRAINEE_HIS.certno
  is '证件号';
comment on column T_CEAFTC_CTTRAINEE_HIS.starttime
  is '训练开始时间';
comment on column T_CEAFTC_CTTRAINEE_HIS.endtime
  is '训练结束时间';
comment on column T_CEAFTC_CTTRAINEE_HIS.poption
  is '版本号';
comment on column T_CEAFTC_CTTRAINEE_HIS.log_id
  is '日志ID';
comment on column T_CEAFTC_CTTRAINEE_HIS.new_poption
  is '新版本';
comment on column T_CEAFTC_CTTRAINEE_HIS.old_poption
  is '旧版本';
comment on column T_CEAFTC_CTTRAINEE_HIS.status
  is '操作状态(INSERT/UPDATE/DELETE/CANCEL)';
comment on column T_CEAFTC_CTTRAINEE_HIS.remark
  is '备注';
comment on column T_CEAFTC_CTTRAINEE_HIS.op_time
  is '操作时间';
alter table T_CEAFTC_CTTRAINEE_HIS
  add constraint PK_T_CEAFTC_CTTRAINEE_HIS primary key (CTTRAINEEID, LOG_ID, NEW_POPTION, OLD_POPTION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_CUSTOMER
prompt ================================
prompt
create table T_CEAFTC_CUSTOMER
(
  customerid   VARCHAR2(60) not null,
  updatedate   DATE,
  enable       NUMBER(2) not null,
  customercode VARCHAR2(60),
  customername VARCHAR2(60),
  pcustomerid  VARCHAR2(60),
  filiale      VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_CUSTOMER
  is '东方飞行培训受训单位';
comment on column T_CEAFTC_CUSTOMER.customerid
  is '客户Id';
comment on column T_CEAFTC_CUSTOMER.updatedate
  is '更新时间';
comment on column T_CEAFTC_CUSTOMER.enable
  is '逻辑有效标识';
comment on column T_CEAFTC_CUSTOMER.customercode
  is '客户代码';
comment on column T_CEAFTC_CUSTOMER.customername
  is '客户名称';
comment on column T_CEAFTC_CUSTOMER.pcustomerid
  is '上级客户';
comment on column T_CEAFTC_CUSTOMER.filiale
  is '分子公司名称';
alter table T_CEAFTC_CUSTOMER
  add constraint PK_CEAFTC_CUSTOMER primary key (CUSTOMERID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_LOG
prompt ===========================
prompt
create table T_CEAFTC_LOG
(
  ceaftc_logid NUMBER(11) not null,
  start_date   DATE,
  end_date     DATE,
  proc_cnt     NUMBER(9),
  proc_result  VARCHAR2(4000),
  err_msg      VARCHAR2(4000),
  time_stamp   DATE,
  op_time      DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 144M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_LOG
  is '东方飞行培训操作日志表';
comment on column T_CEAFTC_LOG.ceaftc_logid
  is '日志ID';
comment on column T_CEAFTC_LOG.start_date
  is '开始日期';
comment on column T_CEAFTC_LOG.end_date
  is '结束日期';
comment on column T_CEAFTC_LOG.proc_cnt
  is '同步条数';
comment on column T_CEAFTC_LOG.proc_result
  is '同步结果';
comment on column T_CEAFTC_LOG.err_msg
  is '错误信息';
comment on column T_CEAFTC_LOG.time_stamp
  is '时间戳';
alter table T_CEAFTC_LOG
  add constraint PK_CEAFTC_LOG primary key (CEAFTC_LOGID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 29M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_PERSON
prompt ==============================
prompt
create table T_CEAFTC_PERSON
(
  personid      VARCHAR2(60) not null,
  updatedate    DATE,
  enable        NUMBER(2),
  personname    VARCHAR2(60),
  certtype      NUMBER(2),
  certno        VARCHAR2(60),
  customerid    VARCHAR2(60),
  customername  VARCHAR2(60),
  p_code        VARCHAR2(10),
  aocpersonname VARCHAR2(60),
  aoccertno     VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_PERSON
  is '东方飞行培训人员';
comment on column T_CEAFTC_PERSON.personid
  is '客户Id';
comment on column T_CEAFTC_PERSON.updatedate
  is '更新时间';
comment on column T_CEAFTC_PERSON.enable
  is '逻辑有效标识';
comment on column T_CEAFTC_PERSON.personname
  is '人员姓名';
comment on column T_CEAFTC_PERSON.certtype
  is '证件类型';
comment on column T_CEAFTC_PERSON.certno
  is '证件号';
comment on column T_CEAFTC_PERSON.customerid
  is '所属客户Id';
comment on column T_CEAFTC_PERSON.customername
  is '所属客户名称';
comment on column T_CEAFTC_PERSON.p_code
  is '人员编码';
comment on column T_CEAFTC_PERSON.aocpersonname
  is 'AOC人员姓名';
comment on column T_CEAFTC_PERSON.aoccertno
  is 'AOC证件号';
alter table T_CEAFTC_PERSON
  add constraint PK_CEAFTC_PERSON primary key (PERSONID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_PERSON20150321
prompt ======================================
prompt
create table T_CEAFTC_PERSON20150321
(
  personid      VARCHAR2(60) not null,
  updatedate    DATE,
  enable        NUMBER(2),
  personname    VARCHAR2(60),
  certtype      NUMBER(2),
  certno        VARCHAR2(60),
  customerid    VARCHAR2(60),
  customername  VARCHAR2(60),
  p_code        VARCHAR2(10),
  aocpersonname VARCHAR2(60),
  aoccertno     VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_SCHEDULE
prompt ================================
prompt
create table T_CEAFTC_SCHEDULE
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) not null,
  train_flag      NUMBER(11) not null,
  train_result_yn VARCHAR2(1),
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1),
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60),
  del_oper        VARCHAR2(60),
  del_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_SCHEDULE
  is '飞培接口删除日志表';
comment on column T_CEAFTC_SCHEDULE.train_id
  is '训练ID';
comment on column T_CEAFTC_SCHEDULE.train_date
  is '训练日期';
comment on column T_CEAFTC_SCHEDULE.p_code
  is '人员';
comment on column T_CEAFTC_SCHEDULE.fjs_order
  is '序号';
comment on column T_CEAFTC_SCHEDULE.rank_no
  is '学员、教练员、检查员';
comment on column T_CEAFTC_SCHEDULE.ts_flag
  is '兼职(字典)';
comment on column T_CEAFTC_SCHEDULE.atd
  is '实际开始时间';
comment on column T_CEAFTC_SCHEDULE.ata
  is '实际结束时间';
comment on column T_CEAFTC_SCHEDULE.train_hours
  is '实际课时(分钟)';
comment on column T_CEAFTC_SCHEDULE.train_flag
  is '训练标志(0正常1补训)';
comment on column T_CEAFTC_SCHEDULE.train_result_yn
  is '合格否(Y/N)';
comment on column T_CEAFTC_SCHEDULE.train_result
  is '教员评语';
comment on column T_CEAFTC_SCHEDULE.instructor
  is '教员';
comment on column T_CEAFTC_SCHEDULE.oper
  is '经办人';
comment on column T_CEAFTC_SCHEDULE.op_time
  is '操作时间';
comment on column T_CEAFTC_SCHEDULE.remarks
  is '备注';
comment on column T_CEAFTC_SCHEDULE.oper_ip
  is 'IP地址';
comment on column T_CEAFTC_SCHEDULE.oper_host
  is '主机名';
comment on column T_CEAFTC_SCHEDULE.is_from_fxw
  is '是否从飞行网导入';
comment on column T_CEAFTC_SCHEDULE.updowns
  is '起落次数';
comment on column T_CEAFTC_SCHEDULE.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_CEAFTC_SCHEDULE.seat
  is '左座(C)/右座(F)';
comment on column T_CEAFTC_SCHEDULE.table_name
  is '飞行培训的表名';
comment on column T_CEAFTC_SCHEDULE.table_id
  is '飞行培训的表中对应的主键值';
comment on column T_CEAFTC_SCHEDULE.del_oper
  is '删除人';
comment on column T_CEAFTC_SCHEDULE.del_time
  is '删除时间';

prompt
prompt Creating table T_CEAFTC_SIMTYPE
prompt ===============================
prompt
create table T_CEAFTC_SIMTYPE
(
  simtypeid    VARCHAR2(60) not null,
  updatedate   DATE,
  enable       NUMBER(2),
  simtypename  VARCHAR2(60),
  psimtypeid   VARCHAR2(60),
  ac_type_crew VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_SIMTYPE
  is '东方飞行培训机型型号';
comment on column T_CEAFTC_SIMTYPE.simtypeid
  is '机型型号Id';
comment on column T_CEAFTC_SIMTYPE.updatedate
  is '更新时间';
comment on column T_CEAFTC_SIMTYPE.enable
  is '逻辑有效标识';
comment on column T_CEAFTC_SIMTYPE.simtypename
  is '机型型号名称';
comment on column T_CEAFTC_SIMTYPE.psimtypeid
  is '父机型型号';
comment on column T_CEAFTC_SIMTYPE.ac_type_crew
  is '排班机型组';
alter table T_CEAFTC_SIMTYPE
  add constraint PK_CEAFTC_SIMTYPE primary key (SIMTYPEID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_SIMTYPE20150318
prompt =======================================
prompt
create table T_CEAFTC_SIMTYPE20150318
(
  simtypeid    VARCHAR2(60) not null,
  updatedate   DATE,
  enable       NUMBER(2),
  simtypename  VARCHAR2(60),
  psimtypeid   VARCHAR2(60),
  ac_type_crew VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CEAFTC_SIMULATOR
prompt =================================
prompt
create table T_CEAFTC_SIMULATOR
(
  simulatorid   VARCHAR2(60) not null,
  updatedate    DATE,
  enable        NUMBER(2),
  simulatorcode VARCHAR2(60),
  simulatorname VARCHAR2(60),
  simtypeid     VARCHAR2(60),
  simtypename   VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CEAFTC_SIMULATOR
  is '东方飞行培训模拟机';
comment on column T_CEAFTC_SIMULATOR.simulatorid
  is '模拟机Id';
comment on column T_CEAFTC_SIMULATOR.updatedate
  is '更新时间';
comment on column T_CEAFTC_SIMULATOR.enable
  is '逻辑有效标识';
comment on column T_CEAFTC_SIMULATOR.simulatorcode
  is '模拟机代码';
comment on column T_CEAFTC_SIMULATOR.simulatorname
  is '模拟机名称';
comment on column T_CEAFTC_SIMULATOR.simtypeid
  is '机型型号ID';
comment on column T_CEAFTC_SIMULATOR.simtypename
  is '机型型号名称';
alter table T_CEAFTC_SIMULATOR
  add constraint PK_CEAFTC_SIMULATOR primary key (SIMULATORID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_CK_FOC_LOG
prompt ===========================
prompt
create table T_CK_FOC_LOG
(
  log_id      NUMBER(11) not null,
  start_time  DATE,
  end_time    DATE,
  proc_type   VARCHAR2(10),
  proc_cnt    NUMBER(9),
  proc_result VARCHAR2(50),
  err_msg     VARCHAR2(4000),
  time_stamp  DATE,
  op_time     DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CK_FOC_LOG
  is '同步中货航FOC系统日志主表';
comment on column T_CK_FOC_LOG.log_id
  is '编号';
comment on column T_CK_FOC_LOG.start_time
  is '开始时间';
comment on column T_CK_FOC_LOG.end_time
  is '结束时间';
comment on column T_CK_FOC_LOG.proc_type
  is '同步数据类型';
comment on column T_CK_FOC_LOG.proc_cnt
  is '同步条数';
comment on column T_CK_FOC_LOG.proc_result
  is '同步结果';
comment on column T_CK_FOC_LOG.err_msg
  is '错误信息';
comment on column T_CK_FOC_LOG.time_stamp
  is '时间戳';
comment on column T_CK_FOC_LOG.op_time
  is '操作时间';

prompt
prompt Creating table T_CREW_EXCEPT
prompt ============================
prompt
create table T_CREW_EXCEPT
(
  p_code VARCHAR2(10) not null,
  c_name VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_CREW_EXCEPT
  is '排检查员不进行规则验证的飞行员';
alter table T_CREW_EXCEPT
  add constraint PK_CREW_EXCEPT primary key (P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DEPLOY_ORDER
prompt =============================
prompt
create table T_DEPLOY_ORDER
(
  deploy_id         VARCHAR2(36) not null,
  flight_date       DATE not null,
  flight_no         VARCHAR2(15) not null,
  ac_type_crew      VARCHAR2(10),
  ac_type           VARCHAR2(10),
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  td                DATE not null,
  ta                DATE not null,
  crew_owner        VARCHAR2(4) not null,
  deploy_state      VARCHAR2(1) default 'N',
  oper              VARCHAR2(10),
  oper_host         VARCHAR2(50),
  oper_ip           VARCHAR2(16),
  op_time           DATE,
  remarks           VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DEPLOY_ORDER
  is '不正常航班推荐表';
comment on column T_DEPLOY_ORDER.deploy_id
  is '调配单ID';
comment on column T_DEPLOY_ORDER.flight_date
  is '航班日期';
comment on column T_DEPLOY_ORDER.flight_no
  is '航班号';
comment on column T_DEPLOY_ORDER.ac_type_crew
  is '机型组';
comment on column T_DEPLOY_ORDER.ac_type
  is '机型';
comment on column T_DEPLOY_ORDER.departure_airport
  is '起飞机场';
comment on column T_DEPLOY_ORDER.arrival_airport
  is '落地机场';
comment on column T_DEPLOY_ORDER.td
  is '起飞时间';
comment on column T_DEPLOY_ORDER.ta
  is '落地时间';
comment on column T_DEPLOY_ORDER.crew_owner
  is '执飞单位';
comment on column T_DEPLOY_ORDER.deploy_state
  is 'N待处理，Y已处理';
comment on column T_DEPLOY_ORDER.oper
  is '操作人';
comment on column T_DEPLOY_ORDER.oper_host
  is '主机名';
comment on column T_DEPLOY_ORDER.oper_ip
  is '操作人IP';
comment on column T_DEPLOY_ORDER.op_time
  is '操作时间';
comment on column T_DEPLOY_ORDER.remarks
  is '描述';
alter table T_DEPLOY_ORDER
  add constraint PK_DEPLOY_ORDER primary key (DEPLOY_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DEPLOY_ROSTER_ADVICE
prompt =====================================
prompt
create table T_DEPLOY_ROSTER_ADVICE
(
  deploy_id   VARCHAR2(36) not null,
  flight_date DATE not null,
  p_code      VARCHAR2(2000) not null,
  rank_no     VARCHAR2(4),
  filiale     VARCHAR2(4),
  channel     INTEGER,
  oper        VARCHAR2(18),
  oper_host   VARCHAR2(50),
  oper_ip     VARCHAR2(15),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DEPLOY_ROSTER_ADVICE
  is '不正常航班机组表';
comment on column T_DEPLOY_ROSTER_ADVICE.deploy_id
  is '调配单ID';
comment on column T_DEPLOY_ROSTER_ADVICE.flight_date
  is '航班日期';
comment on column T_DEPLOY_ROSTER_ADVICE.p_code
  is '人员P_CODE';
comment on column T_DEPLOY_ROSTER_ADVICE.rank_no
  is '岗位';
comment on column T_DEPLOY_ROSTER_ADVICE.filiale
  is '人员分公司';
comment on column T_DEPLOY_ROSTER_ADVICE.channel
  is '1备份，2推荐';
comment on column T_DEPLOY_ROSTER_ADVICE.oper
  is '操作人';
comment on column T_DEPLOY_ROSTER_ADVICE.oper_host
  is '主机名';
comment on column T_DEPLOY_ROSTER_ADVICE.oper_ip
  is '操作人IP';
comment on column T_DEPLOY_ROSTER_ADVICE.op_time
  is '操作时间';
alter table T_DEPLOY_ROSTER_ADVICE
  add constraint PK_T_DEPLOY_ROSTER_ADVICE primary key (DEPLOY_ID, FLIGHT_DATE, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC20140901
prompt ============================
prompt
create table T_DOC20140901
(
  doc_id            NUMBER(11) not null,
  flight_no         VARCHAR2(10),
  flight_date       DATE,
  plan_dept_time    DATE,
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  slide_start_time  DATE,
  take_off_time     DATE,
  land_time         DATE,
  slide_end_time    DATE,
  time_stamp        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_HIS
prompt ========================
prompt
create table T_DOC_HIS
(
  doc_log_id        NUMBER(11) not null,
  doc_id            NUMBER(11) not null,
  flight_no         VARCHAR2(10),
  flight_date       DATE,
  plan_dept_time    DATE,
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  slide_start_time  DATE,
  take_off_time     DATE,
  land_time         DATE,
  slide_end_time    DATE,
  time_stamp        DATE,
  op_time           DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 608M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_HIS
  is 'DOC系统航段明细历史表';
comment on column T_DOC_HIS.doc_log_id
  is '日志Id';
comment on column T_DOC_HIS.doc_id
  is 'DOC_ID';
comment on column T_DOC_HIS.flight_no
  is '航班号';
comment on column T_DOC_HIS.flight_date
  is '航班日期';
comment on column T_DOC_HIS.plan_dept_time
  is '计划起飞时间';
comment on column T_DOC_HIS.departure_airport
  is '起飞机场';
comment on column T_DOC_HIS.arrival_airport
  is '到达机场';
comment on column T_DOC_HIS.slide_start_time
  is '滑出时间';
comment on column T_DOC_HIS.take_off_time
  is '起飞时间';
comment on column T_DOC_HIS.land_time
  is '着陆时间';
comment on column T_DOC_HIS.slide_end_time
  is '滑入时间';
comment on column T_DOC_HIS.time_stamp
  is '时间戳';
comment on column T_DOC_HIS.op_time
  is '操作时间';
alter table T_DOC_HIS
  add constraint PK_T_DOC_HIS primary key (DOC_ID, DOC_LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 217M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_HIS_ONE
prompt ============================
prompt
create table T_DOC_HIS_ONE
(
  doc_id            NUMBER(11) not null,
  flight_no         VARCHAR2(10),
  flight_date       DATE,
  plan_dept_time    DATE,
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  slide_start_time  DATE,
  take_off_time     DATE,
  land_time         DATE,
  slide_end_time    DATE,
  time_stamp        DATE,
  op_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_HIS_ONE
  is 'DOC系统航段明细表历史表';
comment on column T_DOC_HIS_ONE.doc_id
  is '对应MM系统的航班ID';
comment on column T_DOC_HIS_ONE.flight_no
  is '航班号';
comment on column T_DOC_HIS_ONE.flight_date
  is '航班日期';
comment on column T_DOC_HIS_ONE.plan_dept_time
  is '计划起飞时间';
comment on column T_DOC_HIS_ONE.departure_airport
  is '起飞机场';
comment on column T_DOC_HIS_ONE.arrival_airport
  is '到达机场';
comment on column T_DOC_HIS_ONE.slide_start_time
  is '滑出时间';
comment on column T_DOC_HIS_ONE.take_off_time
  is '起飞时间';
comment on column T_DOC_HIS_ONE.land_time
  is '着陆时间';
comment on column T_DOC_HIS_ONE.slide_end_time
  is '滑入时间';
comment on column T_DOC_HIS_ONE.time_stamp
  is '时间戳';
comment on column T_DOC_HIS_ONE.op_time
  is '操作时间';

prompt
prompt Creating table T_DOC_HIS_ONE_BAK
prompt ================================
prompt
create table T_DOC_HIS_ONE_BAK
(
  doc_id            NUMBER(11) not null,
  flight_no         VARCHAR2(10),
  flight_date       DATE,
  plan_dept_time    DATE,
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  slide_start_time  DATE,
  take_off_time     DATE,
  land_time         DATE,
  slide_end_time    DATE,
  time_stamp        DATE,
  op_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_HOURS
prompt ==========================
prompt
create table T_DOC_HOURS
(
  year_mon          VARCHAR2(6) not null,
  ac_type           VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  fly_hours         NUMBER(5) default 0 not null,
  grnd_hours        NUMBER(5) default 0,
  air_hours         NUMBER(5) default 0,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  fly_count         NUMBER(5),
  flt_sn            VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_HOURS
  is 'DOC航段平均时间';
comment on column T_DOC_HOURS.year_mon
  is '年月';
comment on column T_DOC_HOURS.ac_type
  is '机型组';
comment on column T_DOC_HOURS.departure_airport
  is '起飞机场';
comment on column T_DOC_HOURS.arrival_airport
  is '到达机场';
comment on column T_DOC_HOURS.fly_hours
  is '航段时间(分钟)';
comment on column T_DOC_HOURS.grnd_hours
  is '地面时间';
comment on column T_DOC_HOURS.air_hours
  is '空中时间';
comment on column T_DOC_HOURS.oper
  is '操作人';
comment on column T_DOC_HOURS.op_time
  is '操作时间';
comment on column T_DOC_HOURS.remarks
  is '备注';
comment on column T_DOC_HOURS.oper_ip
  is 'IP地址';
comment on column T_DOC_HOURS.oper_host
  is '主机名';
comment on column T_DOC_HOURS.fly_count
  is ' 航段总数';
comment on column T_DOC_HOURS.flt_sn
  is '航季(S 夏秋季 
 W 冬春季
)';
alter table T_DOC_HOURS
  add constraint PK_T_DOC_HOURS primary key (YEAR_MON, AC_TYPE, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_HOURS20140624
prompt ==================================
prompt
create table T_DOC_HOURS20140624
(
  year_mon          VARCHAR2(6) not null,
  ac_type           VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  fly_hours         NUMBER(5) not null,
  grnd_hours        NUMBER(5),
  air_hours         NUMBER(5),
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  fly_count         NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_LOG
prompt ========================
prompt
create table T_DOC_LOG
(
  doc_log_id  NUMBER(11) not null,
  start_time  DATE,
  end_time    DATE,
  proc_type   VARCHAR2(10) default 'DOC',
  proc_cnt    NUMBER(9),
  proc_result VARCHAR2(20),
  err_msg     VARCHAR2(1000),
  time_stamp  DATE,
  op_time     DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 20M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_LOG
  is 'DOC接口日志表';
comment on column T_DOC_LOG.doc_log_id
  is '日志Id';
comment on column T_DOC_LOG.start_time
  is '开始时间';
comment on column T_DOC_LOG.end_time
  is '结束时间';
comment on column T_DOC_LOG.proc_type
  is '处理类型,DOC-实际飞行小时,ASS-航段标准时间';
comment on column T_DOC_LOG.proc_cnt
  is '数据记录数';
comment on column T_DOC_LOG.proc_result
  is '处理结果';
comment on column T_DOC_LOG.err_msg
  is '错误信息';
comment on column T_DOC_LOG.time_stamp
  is '最大时间戳';
comment on column T_DOC_LOG.op_time
  is '操作时间';
alter table T_DOC_LOG
  add constraint PK_T_DOC_LOG primary key (DOC_LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 10M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_RESOURCES
prompt ==============================
prompt
create table T_DOC_RESOURCES
(
  flight_leg_id       NUMBER not null,
  flight_date         DATE,
  flight_no           VARCHAR2(10),
  acreg               VARCHAR2(10),
  departureairport    NVARCHAR2(8),
  arrivalairport      NVARCHAR2(8),
  plan_dept_time      DATE,
  qar_slideout_time   DATE,
  qar_takeoff_time    DATE,
  qar_landing_time    DATE,
  qar_slidein_time    DATE,
  acars_slideout_time DATE,
  acars_takeoff_time  DATE,
  acars_landing_time  DATE,
  acars_slidein_time  DATE,
  time_stamp          DATE,
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             CHAR(3),
  oper_ip             CHAR(3),
  oper_host           CHAR(3),
  aoc_turnon          DATE,
  aoc_block_off_time  DATE,
  aoc_block_on_time   DATE,
  aoc_turnoff         DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 88M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_RESOURCES
  is 'DOC系统资源表';
comment on column T_DOC_RESOURCES.flight_leg_id
  is 'MM系统航班计划主键';
comment on column T_DOC_RESOURCES.flight_date
  is '航班日期';
comment on column T_DOC_RESOURCES.flight_no
  is '航班号';
comment on column T_DOC_RESOURCES.acreg
  is '机号';
comment on column T_DOC_RESOURCES.departureairport
  is '起飞机场';
comment on column T_DOC_RESOURCES.arrivalairport
  is '落地机场';
comment on column T_DOC_RESOURCES.plan_dept_time
  is '计划起飞时间';
comment on column T_DOC_RESOURCES.qar_slideout_time
  is 'QAR滑出时刻';
comment on column T_DOC_RESOURCES.qar_takeoff_time
  is 'QAR起飞时刻';
comment on column T_DOC_RESOURCES.qar_landing_time
  is 'QAR降落时刻';
comment on column T_DOC_RESOURCES.qar_slidein_time
  is 'QAR滑入时刻';
comment on column T_DOC_RESOURCES.acars_slideout_time
  is 'ACARS滑出时刻';
comment on column T_DOC_RESOURCES.acars_takeoff_time
  is 'ACARS起飞时刻';
comment on column T_DOC_RESOURCES.acars_landing_time
  is 'ACARS降落时刻';
comment on column T_DOC_RESOURCES.acars_slidein_time
  is 'ACARS滑入时刻';
comment on column T_DOC_RESOURCES.time_stamp
  is '时间戳';
comment on column T_DOC_RESOURCES.oper
  is '操作人';
comment on column T_DOC_RESOURCES.op_time
  is '操作时间';
comment on column T_DOC_RESOURCES.remarks
  is '备注';
comment on column T_DOC_RESOURCES.oper_ip
  is '主机IP';
comment on column T_DOC_RESOURCES.oper_host
  is '主机名';
comment on column T_DOC_RESOURCES.aoc_turnon
  is '现保开车时间';
comment on column T_DOC_RESOURCES.aoc_block_off_time
  is '现保撤轮挡时间';
comment on column T_DOC_RESOURCES.aoc_block_on_time
  is '现保上轮挡时间';
comment on column T_DOC_RESOURCES.aoc_turnoff
  is '现保关车时间';
alter table T_DOC_RESOURCES
  add constraint PK_DOC_RESOURCE_LEG_ID primary key (FLIGHT_LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 13M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_RESOURCES_ALL
prompt ==================================
prompt
create table T_DOC_RESOURCES_ALL
(
  flight_leg_id       NUMBER not null,
  flight_date         DATE,
  flight_no           VARCHAR2(10),
  acreg               VARCHAR2(10),
  departureairport    NVARCHAR2(8),
  arrivalairport      NVARCHAR2(8),
  plan_dept_time      DATE,
  qar_slideout_time   DATE,
  qar_takeoff_time    DATE,
  qar_landing_time    DATE,
  qar_slidein_time    DATE,
  acars_slideout_time DATE,
  acars_takeoff_time  DATE,
  acars_landing_time  DATE,
  acars_slidein_time  DATE,
  time_stamp          DATE,
  oper                CHAR(3),
  op_time             DATE,
  remarks             CHAR(3),
  oper_ip             CHAR(3),
  oper_host           CHAR(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 104M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_RESOURCES_ALL
  is 'DOC系统资源表历史数据';
comment on column T_DOC_RESOURCES_ALL.flight_leg_id
  is 'MM系统航班计划主键';
comment on column T_DOC_RESOURCES_ALL.flight_date
  is '航班日期';
comment on column T_DOC_RESOURCES_ALL.flight_no
  is '航班号';
comment on column T_DOC_RESOURCES_ALL.acreg
  is '机号';
comment on column T_DOC_RESOURCES_ALL.departureairport
  is '起飞机场';
comment on column T_DOC_RESOURCES_ALL.arrivalairport
  is '落地机场';
comment on column T_DOC_RESOURCES_ALL.plan_dept_time
  is '计划起飞时间';
comment on column T_DOC_RESOURCES_ALL.qar_slideout_time
  is 'QAR滑出时刻';
comment on column T_DOC_RESOURCES_ALL.qar_takeoff_time
  is 'QAR起飞时刻';
comment on column T_DOC_RESOURCES_ALL.qar_landing_time
  is 'QAR降落时刻';
comment on column T_DOC_RESOURCES_ALL.qar_slidein_time
  is 'QAR滑入时刻';
comment on column T_DOC_RESOURCES_ALL.acars_slideout_time
  is 'ACARS滑出时刻';
comment on column T_DOC_RESOURCES_ALL.acars_takeoff_time
  is 'ACARS起飞时刻';
comment on column T_DOC_RESOURCES_ALL.acars_landing_time
  is 'ACARS降落时刻';
comment on column T_DOC_RESOURCES_ALL.acars_slidein_time
  is 'ACARS滑入时刻';
comment on column T_DOC_RESOURCES_ALL.time_stamp
  is '时间戳';
comment on column T_DOC_RESOURCES_ALL.oper
  is '操作人';
comment on column T_DOC_RESOURCES_ALL.op_time
  is '操作时间';
comment on column T_DOC_RESOURCES_ALL.remarks
  is '备注';
comment on column T_DOC_RESOURCES_ALL.oper_ip
  is '主机IP';
comment on column T_DOC_RESOURCES_ALL.oper_host
  is '主机名';

prompt
prompt Creating table T_DOC_RESOURCES_HIS
prompt ==================================
prompt
create table T_DOC_RESOURCES_HIS
(
  flight_leg_id       NUMBER not null,
  flight_date         DATE,
  flight_no           VARCHAR2(10),
  acreg               VARCHAR2(10),
  departureairport    NVARCHAR2(8),
  arrivalairport      NVARCHAR2(8),
  plan_dept_time      DATE,
  qar_slideout_time   DATE,
  qar_takeoff_time    DATE,
  qar_landing_time    DATE,
  qar_slidein_time    DATE,
  acars_slideout_time DATE,
  acars_takeoff_time  DATE,
  acars_landing_time  DATE,
  acars_slidein_time  DATE,
  time_stamp          DATE,
  oper                CHAR(3),
  op_time             DATE,
  remarks             CHAR(3),
  oper_ip             CHAR(3),
  oper_host           CHAR(3),
  doc_log_id          NUMBER not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 214M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DOC_RESOURCES_HIS
  is 'DOC系统资源表历史表';
comment on column T_DOC_RESOURCES_HIS.flight_leg_id
  is 'MM系统航班计划主键';
comment on column T_DOC_RESOURCES_HIS.flight_date
  is '航班日期';
comment on column T_DOC_RESOURCES_HIS.flight_no
  is '航班号';
comment on column T_DOC_RESOURCES_HIS.acreg
  is '机号';
comment on column T_DOC_RESOURCES_HIS.departureairport
  is '起飞机场';
comment on column T_DOC_RESOURCES_HIS.arrivalairport
  is '落地机场';
comment on column T_DOC_RESOURCES_HIS.plan_dept_time
  is '计划起飞时间';
comment on column T_DOC_RESOURCES_HIS.qar_slideout_time
  is 'QAR滑出时刻';
comment on column T_DOC_RESOURCES_HIS.qar_takeoff_time
  is 'QAR起飞时刻';
comment on column T_DOC_RESOURCES_HIS.qar_landing_time
  is 'QAR降落时刻';
comment on column T_DOC_RESOURCES_HIS.qar_slidein_time
  is 'QAR滑入时刻';
comment on column T_DOC_RESOURCES_HIS.acars_slideout_time
  is 'ACARS滑出时刻';
comment on column T_DOC_RESOURCES_HIS.acars_takeoff_time
  is 'ACARS起飞时刻';
comment on column T_DOC_RESOURCES_HIS.acars_landing_time
  is 'ACARS降落时刻';
comment on column T_DOC_RESOURCES_HIS.acars_slidein_time
  is 'ACARS滑入时刻';
comment on column T_DOC_RESOURCES_HIS.time_stamp
  is '时间戳';
comment on column T_DOC_RESOURCES_HIS.oper
  is '操作人';
comment on column T_DOC_RESOURCES_HIS.op_time
  is '操作时间';
comment on column T_DOC_RESOURCES_HIS.remarks
  is '备注';
comment on column T_DOC_RESOURCES_HIS.oper_ip
  is '主机IP';
comment on column T_DOC_RESOURCES_HIS.oper_host
  is '主机名';
comment on column T_DOC_RESOURCES_HIS.doc_log_id
  is '日志ID';
alter table T_DOC_RESOURCES_HIS
  add constraint PK_DOC_RESOURCE_HIS_LEG_ID primary key (DOC_LOG_ID, FLIGHT_LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 50M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_TEST3
prompt ==========================
prompt
create table T_DOC_TEST3
(
  sabre_id           VARCHAR2(20),
  final_slideouttime VARCHAR2(550),
  final_takeofftime  VARCHAR2(550),
  final_landingtime  VARCHAR2(550),
  final_slideintime  VARCHAR2(550),
  qar_slideouttime   VARCHAR2(550),
  qar_takeofftime    VARCHAR2(550),
  qar_landingtime    VARCHAR2(550),
  qar_slideintime    VARCHAR2(550),
  acars_slideouttime VARCHAR2(550),
  acars_takeofftime  VARCHAR2(550),
  acars_landingtime  VARCHAR2(550),
  acars_slideintime  VARCHAR2(550),
  sourcetype         VARCHAR2(550),
  ism44              VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 49M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_TEST4
prompt ==========================
prompt
create table T_DOC_TEST4
(
  sabre_id           VARCHAR2(20),
  final_slideouttime DATE,
  final_takeofftime  DATE,
  final_landingtime  DATE,
  final_slideintime  DATE,
  qar_slideouttime   DATE,
  qar_takeofftime    DATE,
  qar_landingtime    DATE,
  qar_slideintime    DATE,
  acars_slideouttime DATE,
  acars_takeofftime  DATE,
  acars_landingtime  DATE,
  acars_slideintime  DATE,
  sourcetype         VARCHAR2(550),
  ism44              VARCHAR2(20),
  flight_date        DATE,
  is_mm_flight_date  VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 17M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DOC_TEST5
prompt ==========================
prompt
create table T_DOC_TEST5
(
  sabre_id          VARCHAR2(20),
  slideouttime      DATE,
  slideintime       DATE,
  source_type       VARCHAR2(5),
  flight_date       DATE,
  is_mm_flight_date VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_CALL_LOGS
prompt =============================
prompt
create table T_DS_CALL_LOGS
(
  id                   NUMBER(11) not null,
  user_code            VARCHAR2(20) not null,
  op_time              DATE not null,
  seq_ds_function      NUMBER(6) not null,
  function_parms_value VARCHAR2(4000),
  records              VARCHAR2(200),
  minvalue             VARCHAR2(200),
  maxvalue             VARCHAR2(200),
  fun_call_name        VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_DS_CALL_LOGS
  is '调用函数日志表';
comment on column T_DS_CALL_LOGS.id
  is '主键ID';
comment on column T_DS_CALL_LOGS.user_code
  is '操作人ID';
comment on column T_DS_CALL_LOGS.op_time
  is '操作时间';
comment on column T_DS_CALL_LOGS.seq_ds_function
  is '函数ID';
comment on column T_DS_CALL_LOGS.function_parms_value
  is '函数值';
comment on column T_DS_CALL_LOGS.records
  is '记录条数';
comment on column T_DS_CALL_LOGS.minvalue
  is '最小时间戳';
comment on column T_DS_CALL_LOGS.maxvalue
  is '最大时间戳';
comment on column T_DS_CALL_LOGS.fun_call_name
  is '调用访求名';

prompt
prompt Creating table T_DS_FUNCTIONS
prompt =============================
prompt
create table T_DS_FUNCTIONS
(
  seq_ds_function NUMBER(6) not null,
  function_chs    VARCHAR2(4000) not null,
  function_params VARCHAR2(4000),
  function_code1  VARCHAR2(4000) not null,
  function_code2  VARCHAR2(4000),
  function_code3  VARCHAR2(4000),
  function_code4  VARCHAR2(4000),
  instructions    VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DS_FUNCTIONS
  is '数据交换中心WebService接口函数';
comment on column T_DS_FUNCTIONS.seq_ds_function
  is '主键ID';
comment on column T_DS_FUNCTIONS.function_chs
  is '接口函数中文描述';
comment on column T_DS_FUNCTIONS.function_params
  is '接口函数参数';
comment on column T_DS_FUNCTIONS.function_code1
  is '函数体1';
comment on column T_DS_FUNCTIONS.function_code2
  is '函数体2';
comment on column T_DS_FUNCTIONS.function_code3
  is '函数体3';
comment on column T_DS_FUNCTIONS.function_code4
  is '函数体4';
comment on column T_DS_FUNCTIONS.instructions
  is '使用说明';
alter table T_DS_FUNCTIONS
  add constraint PK_T_DS_FUNCTIONS primary key (SEQ_DS_FUNCTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_FUNCTIONS20150306
prompt =====================================
prompt
create table T_DS_FUNCTIONS20150306
(
  seq_ds_function NUMBER(6) not null,
  function_chs    VARCHAR2(4000) not null,
  function_params VARCHAR2(4000),
  function_code1  VARCHAR2(4000) not null,
  function_code2  VARCHAR2(4000),
  function_code3  VARCHAR2(4000),
  function_code4  VARCHAR2(4000),
  instructions    VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_FUNCTIONS20170808
prompt =====================================
prompt
create table T_DS_FUNCTIONS20170808
(
  seq_ds_function NUMBER(6) not null,
  function_chs    VARCHAR2(4000) not null,
  function_params VARCHAR2(4000),
  function_code1  VARCHAR2(4000) not null,
  function_code2  VARCHAR2(4000),
  function_code3  VARCHAR2(4000),
  function_code4  VARCHAR2(4000),
  instructions    VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_FUNCTIONS20171026
prompt =====================================
prompt
create table T_DS_FUNCTIONS20171026
(
  seq_ds_function NUMBER(6) not null,
  function_chs    VARCHAR2(4000) not null,
  function_params VARCHAR2(4000),
  function_code1  VARCHAR2(4000) not null,
  function_code2  VARCHAR2(4000),
  function_code3  VARCHAR2(4000),
  function_code4  VARCHAR2(4000),
  instructions    VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_LOGS
prompt ========================
prompt
create table T_DS_LOGS
(
  seq_ds_log           NUMBER(8) not null,
  user_code            VARCHAR2(20) not null,
  op_time              DATE not null,
  seq_ds_function      NUMBER(6) not null,
  function_parms_value VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 26M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DS_LOGS
  is '外部接口用户获取数据的操作日志';
comment on column T_DS_LOGS.seq_ds_log
  is '主键ID';
comment on column T_DS_LOGS.user_code
  is '用户名';
comment on column T_DS_LOGS.op_time
  is '操作时间';
comment on column T_DS_LOGS.seq_ds_function
  is '调用函数';
comment on column T_DS_LOGS.function_parms_value
  is '调用函数的参数值';
alter table T_DS_LOGS
  add constraint PK_I8203 primary key (SEQ_DS_LOG)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 13M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_USERS
prompt =========================
prompt
create table T_DS_USERS
(
  seq_ds_function NUMBER(6) not null,
  user_code       VARCHAR2(20) not null,
  passward        VARCHAR2(30) not null,
  begin_date      DATE not null,
  end_date        DATE not null,
  call_freq       NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_DS_USERS
  is '外部接口WebService登录用户';
comment on column T_DS_USERS.seq_ds_function
  is '函数ID';
comment on column T_DS_USERS.user_code
  is '用户名';
comment on column T_DS_USERS.passward
  is '口令';
comment on column T_DS_USERS.begin_date
  is '起效日期';
comment on column T_DS_USERS.end_date
  is '失效日期';
comment on column T_DS_USERS.call_freq
  is '调用限制间隔(秒)';
alter table T_DS_USERS
  add constraint PK_T_DS_USERS primary key (SEQ_DS_FUNCTION, USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_USERS20150805
prompt =================================
prompt
create table T_DS_USERS20150805
(
  seq_ds_function NUMBER(6) not null,
  user_code       VARCHAR2(20) not null,
  passward        VARCHAR2(30) not null,
  begin_date      DATE not null,
  end_date        DATE not null,
  call_freq       NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_DS_USERS20151012
prompt =================================
prompt
create table T_DS_USERS20151012
(
  seq_ds_function NUMBER(6) not null,
  user_code       VARCHAR2(20) not null,
  passward        VARCHAR2(30) not null,
  begin_date      DATE not null,
  end_date        DATE not null,
  call_freq       NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_EXP_CMD
prompt ========================
prompt
create table T_EXP_CMD
(
  cmd VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_EXP_CMD
  is '导出数据库的命令';
comment on column T_EXP_CMD.cmd
  is 'exp指令';

prompt
prompt Creating table T_FENS_PARAM
prompt ===========================
prompt
create table T_FENS_PARAM
(
  param_definevalue  INTEGER,
  param_fatigueindex VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FENS_PARAM
  is '疲劳系数分类表';
comment on column T_FENS_PARAM.param_definevalue
  is '疲劳系数分类值';
comment on column T_FENS_PARAM.param_fatigueindex
  is '疲劳系数分类名称';

prompt
prompt Creating table T_FENS_PARAM_DETAIL
prompt ==================================
prompt
create table T_FENS_PARAM_DETAIL
(
  parm_id           INTEGER,
  parm_mapvalue     INTEGER,
  parm_name         VARCHAR2(100),
  parm_defaultvalue NUMBER(6,2),
  parm_setvalue     NUMBER(6,2),
  parm_vaild_flag   VARCHAR2(1) default 'Y',
  parm_comments     VARCHAR2(150),
  parm_min          INTEGER default 0,
  parm_max          INTEGER default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FENS_PARAM_DETAIL
  is '疲劳参数系数';
comment on column T_FENS_PARAM_DETAIL.parm_id
  is 'ID';
comment on column T_FENS_PARAM_DETAIL.parm_mapvalue
  is '疲劳匹配种类值';
comment on column T_FENS_PARAM_DETAIL.parm_name
  is '疲劳参数名称';
comment on column T_FENS_PARAM_DETAIL.parm_defaultvalue
  is '系数默认值';
comment on column T_FENS_PARAM_DETAIL.parm_setvalue
  is '系数设定值';
comment on column T_FENS_PARAM_DETAIL.parm_vaild_flag
  is '有效标志位';
comment on column T_FENS_PARAM_DETAIL.parm_comments
  is '参数注释';
comment on column T_FENS_PARAM_DETAIL.parm_min
  is '参考最大值（分钟）';
comment on column T_FENS_PARAM_DETAIL.parm_max
  is '参考最小值 （分钟）';

prompt
prompt Creating table T_FENS_PARM_POSLVL
prompt =================================
prompt
create table T_FENS_PARM_POSLVL
(
  parm_id            INTEGER,
  parm_plevel        VARCHAR2(2),
  parm_llevel        VARCHAR2(1),
  parm_realmanage    NUMBER(6,2) default 0,
  parm_virtualmanage NUMBER(6,2) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FENS_PARM_POSLVL
  is '岗级系数表';
comment on column T_FENS_PARM_POSLVL.parm_id
  is 'ID';
comment on column T_FENS_PARM_POSLVL.parm_plevel
  is '职级';
comment on column T_FENS_PARM_POSLVL.parm_llevel
  is '层级';
comment on column T_FENS_PARM_POSLVL.parm_realmanage
  is '实职系数';
comment on column T_FENS_PARM_POSLVL.parm_virtualmanage
  is '虚职系数';

prompt
prompt Creating table T_FLT20150414
prompt ============================
prompt
create table T_FLT20150414
(
  flight_id         NUMBER(11),
  mm_leg_id         NUMBER,
  flight_date       DATE,
  carrier           VARCHAR2(10),
  flight_no         VARCHAR2(15),
  plan_departure    VARCHAR2(4),
  departure_airport VARCHAR2(4),
  plan_arrival      VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  ac_type           VARCHAR2(10),
  ac_reg            VARCHAR2(11),
  flight_type       VARCHAR2(1),
  flight_flag       VARCHAR2(1),
  flg_cs            VARCHAR2(1),
  flg_vr            VARCHAR2(1),
  flg_patch         VARCHAR2(1),
  std               DATE,
  etd               DATE,
  atd               DATE,
  sta               DATE,
  eta               DATE,
  ata               DATE,
  ac_owner          VARCHAR2(4),
  crew_owner        VARCHAR2(4),
  stew_owner        VARCHAR2(4),
  plce_owner        VARCHAR2(4),
  mant_owner        VARCHAR2(4),
  onward_fltdate    DATE,
  onward_flight     VARCHAR2(10),
  crew_link_line    NUMBER(11),
  last_modify_time  DATE,
  a_op_time         DATE,
  b_op_time         DATE,
  p_op_time         DATE,
  sch_pub_flag      VARCHAR2(1),
  ftb_rec_flag      VARCHAR2(1),
  ac_link_line      VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_ACREG
prompt ==========================
prompt
create table T_FLT_ACREG
(
  fltid            NUMBER not null,
  data_from        VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  carrier          VARCHAR2(20),
  flightdate       DATE,
  flightno         VARCHAR2(50),
  acoservicecode   VARCHAR2(50),
  depature_airport VARCHAR2(50),
  arrival_airport  VARCHAR2(50),
  ac_reg           VARCHAR2(50),
  ac_type          VARCHAR2(20),
  carrier_flightno VARCHAR2(50),
  suffix           VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );
comment on table T_FLT_ACREG
  is 'SAP_XYZ机尾号表';
comment on column T_FLT_ACREG.data_from
  is '数据来源';
comment on column T_FLT_ACREG.oper
  is '操作人';
comment on column T_FLT_ACREG.op_time
  is '操作时间';
comment on column T_FLT_ACREG.remarks
  is '备注';
comment on column T_FLT_ACREG.oper_ip
  is 'IP地址';
comment on column T_FLT_ACREG.oper_host
  is '主机名';
comment on column T_FLT_ACREG.carrier
  is '承运人';
comment on column T_FLT_ACREG.flightdate
  is '计划起飞时间';
comment on column T_FLT_ACREG.flightno
  is '航班号';
comment on column T_FLT_ACREG.acoservicecode
  is 'AOC服务代码';
comment on column T_FLT_ACREG.depature_airport
  is '起飞航站';
comment on column T_FLT_ACREG.arrival_airport
  is '到达航站';
comment on column T_FLT_ACREG.ac_reg
  is '机号';
comment on column T_FLT_ACREG.ac_type
  is '排班机型';
comment on column T_FLT_ACREG.carrier_flightno
  is '组合航班号';
comment on column T_FLT_ACREG.suffix
  is '后缀';
alter table T_FLT_ACREG
  add constraint FLTIDPK primary key (FLTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_ACREG20151106
prompt ==================================
prompt
create table T_FLT_ACREG20151106
(
  fltid            NUMBER not null,
  data_from        VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  carrier          VARCHAR2(20),
  flightdate       DATE,
  flightno         VARCHAR2(50),
  acoservicecode   VARCHAR2(50),
  depature_airport VARCHAR2(50),
  arrival_airport  VARCHAR2(50),
  ac_reg           VARCHAR2(50),
  ac_type          VARCHAR2(20),
  carrier_flightno VARCHAR2(50),
  suffix           VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_ACREG222
prompt =============================
prompt
create table T_FLT_ACREG222
(
  mm_leg_id_add    NUMBER(13),
  fltid            NUMBER not null,
  data_from        VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  carrier          VARCHAR2(20),
  flightdate       DATE,
  flightno         VARCHAR2(50),
  acoservicecode   VARCHAR2(50),
  depature_airport VARCHAR2(50),
  arrival_airport  VARCHAR2(50),
  ac_reg           VARCHAR2(50),
  ac_type          VARCHAR2(20),
  carrier_flightno VARCHAR2(50),
  suffix           VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_ACREG_HIS
prompt ==============================
prompt
create table T_FLT_ACREG_HIS
(
  data_from        VARCHAR2(50),
  oper             VARCHAR2(50),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  carrier          VARCHAR2(15),
  flightdate       DATE,
  flightno         VARCHAR2(50),
  arrival_airport  VARCHAR2(50),
  acoservicecode   VARCHAR2(50),
  ac_reg           VARCHAR2(50),
  ac_type          VARCHAR2(50),
  fltid            NUMBER,
  carrier_flightno VARCHAR2(50),
  flt_his_id       NUMBER not null,
  depature_airport VARCHAR2(50),
  suffix           VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
  );
comment on table T_FLT_ACREG_HIS
  is 'SAP_XYZ机尾号总表';
comment on column T_FLT_ACREG_HIS.data_from
  is '数据来源';
comment on column T_FLT_ACREG_HIS.oper
  is '操作人';
comment on column T_FLT_ACREG_HIS.op_time
  is '操作时间';
comment on column T_FLT_ACREG_HIS.remarks
  is '备注';
comment on column T_FLT_ACREG_HIS.oper_ip
  is 'IP地址';
comment on column T_FLT_ACREG_HIS.oper_host
  is '主机名';
comment on column T_FLT_ACREG_HIS.carrier
  is '承运人';
comment on column T_FLT_ACREG_HIS.flightdate
  is '计划起飞时间';
comment on column T_FLT_ACREG_HIS.flightno
  is '航班号';
comment on column T_FLT_ACREG_HIS.arrival_airport
  is '到达航站';
comment on column T_FLT_ACREG_HIS.acoservicecode
  is 'AOC服务代码';
comment on column T_FLT_ACREG_HIS.ac_reg
  is '机号';
comment on column T_FLT_ACREG_HIS.ac_type
  is '排班机型';
comment on column T_FLT_ACREG_HIS.carrier_flightno
  is '组合航班号';
comment on column T_FLT_ACREG_HIS.depature_airport
  is '起飞航站';
comment on column T_FLT_ACREG_HIS.suffix
  is '后缀';
alter table T_FLT_ACREG_HIS
  add constraint FLT_HIS_IDPK primary key (FLT_HIS_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_ACREG_HIS2
prompt ===============================
prompt
create table T_FLT_ACREG_HIS2
(
  data_from        VARCHAR2(50),
  oper             VARCHAR2(50),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  carrier          VARCHAR2(15),
  flightdate       DATE,
  flightno         VARCHAR2(50),
  arrival_airport  VARCHAR2(50),
  acoservicecode   VARCHAR2(50),
  ac_reg           VARCHAR2(50),
  ac_type          VARCHAR2(50),
  fltid            NUMBER,
  carrier_flightno VARCHAR2(50),
  flt_his_id       NUMBER not null,
  depature_airport VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_ACREG_LOG
prompt ==============================
prompt
create table T_FLT_ACREG_LOG
(
  fltlog_id        NUMBER not null,
  filename         VARCHAR2(100),
  data_from        VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  carrier          VARCHAR2(20),
  flightdate       DATE,
  flightno         VARCHAR2(50),
  acoservicecode   VARCHAR2(50),
  depature_airport VARCHAR2(50),
  arrival_airport  VARCHAR2(50),
  ac_reg           VARCHAR2(50),
  ac_type          VARCHAR2(20),
  carrier_flightno VARCHAR2(50),
  suffix           VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
  );
comment on column T_FLT_ACREG_LOG.suffix
  is '后缀';
alter table T_FLT_ACREG_LOG
  add constraint FLTLOG_IDPK primary key (FLTLOG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_ADJUST
prompt ===========================
prompt
create table T_FLT_ADJUST
(
  log_id                NUMBER(11) not null,
  adjust_type           VARCHAR2(150),
  log_time              DATE,
  log_desc              VARCHAR2(4000),
  flight_id             NUMBER(11) not null,
  flight_date           DATE,
  carrier               VARCHAR2(3),
  flight_no             VARCHAR2(15),
  departure_airport     VARCHAR2(4),
  arrival_airport       VARCHAR2(4),
  std                   DATE,
  sta                   DATE,
  d_or_i                VARCHAR2(1),
  flight_type           VARCHAR2(1),
  ac_type               VARCHAR2(10),
  ac_reg                VARCHAR2(10),
  flg_cs                VARCHAR2(1),
  ac_owner              VARCHAR2(3),
  crew_owner            VARCHAR2(3),
  stew_owner            VARCHAR2(3),
  plce_owner            VARCHAR2(3),
  mant_owner            VARCHAR2(3),
  onward_flight         VARCHAR2(10),
  ac_layover            NUMBER(2),
  old_flight_date       DATE,
  old_carrier           VARCHAR2(3),
  old_flight_no         VARCHAR2(15),
  old_departure_airport VARCHAR2(4),
  old_arrival_airport   VARCHAR2(4),
  old_std               DATE,
  old_sta               DATE,
  old_d_or_i            VARCHAR2(1),
  old_flight_type       VARCHAR2(1),
  old_ac_type           VARCHAR2(10),
  old_ac_reg            VARCHAR2(10),
  old_flg_cs            VARCHAR2(1),
  old_ac_owner          VARCHAR2(3),
  old_crew_owner        VARCHAR2(3),
  old_stew_owner        VARCHAR2(3),
  old_plce_owner        VARCHAR2(3),
  old_mant_owner        VARCHAR2(3),
  old_onward_flight     VARCHAR2(10),
  old_ac_layover        NUMBER(2),
  dep_bay               VARCHAR2(20),
  old_dep_bay           VARCHAR2(20),
  oper                  VARCHAR2(10)
)
partition by range (FLIGHT_DATE)
(
  partition FLTADJUST_2010 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTADJUST_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTADJUST_2012 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTADJUST_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 784M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTADJUST_2014 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTADJUST_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 3384M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTADJUST_2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTADJUST_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 1536M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTADJUST_2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTADJUST_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 320K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_FLT_ADJUST
  is '航班计划变更表';
comment on column T_FLT_ADJUST.log_id
  is '日志ID';
comment on column T_FLT_ADJUST.adjust_type
  is '变更类型';
comment on column T_FLT_ADJUST.log_time
  is '变更时间';
comment on column T_FLT_ADJUST.log_desc
  is '变更描述';
comment on column T_FLT_ADJUST.flight_id
  is '航班ID';
comment on column T_FLT_ADJUST.flight_date
  is '航班日期';
comment on column T_FLT_ADJUST.carrier
  is '承运人';
comment on column T_FLT_ADJUST.flight_no
  is '航班号';
comment on column T_FLT_ADJUST.departure_airport
  is '实际起飞机场';
comment on column T_FLT_ADJUST.arrival_airport
  is '实际到达机场';
comment on column T_FLT_ADJUST.std
  is '计划起飞时间';
comment on column T_FLT_ADJUST.sta
  is '计划到达时间';
comment on column T_FLT_ADJUST.d_or_i
  is '国际/国内（D:国内,I:国内,R:地区）';
comment on column T_FLT_ADJUST.flight_type
  is '航班性质';
comment on column T_FLT_ADJUST.ac_type
  is '机型';
comment on column T_FLT_ADJUST.ac_reg
  is '机号';
comment on column T_FLT_ADJUST.flg_cs
  is '取消标记';
comment on column T_FLT_ADJUST.ac_owner
  is '飞机执管单位';
comment on column T_FLT_ADJUST.crew_owner
  is '机组执飞单位';
comment on column T_FLT_ADJUST.stew_owner
  is '乘务员执飞单位';
comment on column T_FLT_ADJUST.plce_owner
  is '空警执飞单位';
comment on column T_FLT_ADJUST.mant_owner
  is '机务执飞单位';
comment on column T_FLT_ADJUST.onward_flight
  is '后续航班';
comment on column T_FLT_ADJUST.ac_layover
  is '后续航班跨天数';
comment on column T_FLT_ADJUST.old_flight_date
  is '航班日期';
comment on column T_FLT_ADJUST.old_carrier
  is '承运人';
comment on column T_FLT_ADJUST.old_flight_no
  is '航班号';
comment on column T_FLT_ADJUST.old_departure_airport
  is '实际起飞机场';
comment on column T_FLT_ADJUST.old_arrival_airport
  is '实际到达机场';
comment on column T_FLT_ADJUST.old_std
  is '计划起飞时间';
comment on column T_FLT_ADJUST.old_sta
  is '计划到达时间';
comment on column T_FLT_ADJUST.old_d_or_i
  is '国际/国内（D:国内,I:国内,R:地区）';
comment on column T_FLT_ADJUST.old_flight_type
  is '航班性质';
comment on column T_FLT_ADJUST.old_ac_type
  is '机型';
comment on column T_FLT_ADJUST.old_ac_reg
  is '机号';
comment on column T_FLT_ADJUST.old_flg_cs
  is '取消标记';
comment on column T_FLT_ADJUST.old_ac_owner
  is '飞机执管单位';
comment on column T_FLT_ADJUST.old_crew_owner
  is '机组执飞单位';
comment on column T_FLT_ADJUST.old_stew_owner
  is '乘务员执飞单位';
comment on column T_FLT_ADJUST.old_plce_owner
  is '空警执飞单位';
comment on column T_FLT_ADJUST.old_mant_owner
  is '机务执飞单位';
comment on column T_FLT_ADJUST.old_onward_flight
  is '后续航班';
comment on column T_FLT_ADJUST.old_ac_layover
  is '后续航班跨天';
comment on column T_FLT_ADJUST.dep_bay
  is '停机位';
comment on column T_FLT_ADJUST.old_dep_bay
  is '原停机位';
comment on column T_FLT_ADJUST.oper
  is '操作人';
create index IDX_FLTADJ_FLIGHT on T_FLT_ADJUST (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLTADJ_FLTID on T_FLT_ADJUST (FLIGHT_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1540M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_ADJUST
  add constraint PK_FLT_ADJUST primary key (LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 824M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_BACK_SCH
prompt =============================
prompt
create table T_FLT_BACK_SCH
(
  backup_id         NUMBER(9) not null,
  flight_no         VARCHAR2(15) not null,
  oper_start        DATE not null,
  oper_end          DATE not null,
  weeks             VARCHAR2(7) not null,
  flight_type       VARCHAR2(1) default 'J' not null,
  departure_airport VARCHAR2(3) not null,
  std               DATE not null,
  arrival_airport   VARCHAR2(3) not null,
  sta               DATE not null,
  ac_type           VARCHAR2(10),
  d_or_i            CHAR(1) default 'D' not null,
  filiale           VARCHAR2(4) not null,
  module_flag       VARCHAR2(1) not null,
  valid_flag        VARCHAR2(1) default 'Y' not null,
  flight_flag       VARCHAR2(1) default 'B' not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  fly_hours         NUMBER(6) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_BACK_SCH
  is '摆渡季度计划表';
comment on column T_FLT_BACK_SCH.backup_id
  is '序列号';
comment on column T_FLT_BACK_SCH.flight_no
  is '航班号';
comment on column T_FLT_BACK_SCH.oper_start
  is '起始日期';
comment on column T_FLT_BACK_SCH.oper_end
  is '结束日期';
comment on column T_FLT_BACK_SCH.weeks
  is '班期';
comment on column T_FLT_BACK_SCH.flight_type
  is '航班性质';
comment on column T_FLT_BACK_SCH.departure_airport
  is '起飞站';
comment on column T_FLT_BACK_SCH.std
  is '起飞时间';
comment on column T_FLT_BACK_SCH.arrival_airport
  is '到达站';
comment on column T_FLT_BACK_SCH.sta
  is '到达时间';
comment on column T_FLT_BACK_SCH.ac_type
  is '机型';
comment on column T_FLT_BACK_SCH.d_or_i
  is '国际/国内';
comment on column T_FLT_BACK_SCH.filiale
  is '分公司';
comment on column T_FLT_BACK_SCH.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_FLT_BACK_SCH.valid_flag
  is '有效标志';
comment on column T_FLT_BACK_SCH.flight_flag
  is '航班标记(B备份,D搭机)';
comment on column T_FLT_BACK_SCH.oper
  is '操作人';
comment on column T_FLT_BACK_SCH.op_time
  is '操作时间';
comment on column T_FLT_BACK_SCH.remarks
  is '备注';
comment on column T_FLT_BACK_SCH.oper_ip
  is 'IP地址';
comment on column T_FLT_BACK_SCH.oper_host
  is '主机名';
comment on column T_FLT_BACK_SCH.fly_hours
  is '飞行时间(备份手工维护，其他按规则算)';
alter table T_FLT_BACK_SCH
  add constraint PK_T_FLT_BACK_SCH primary key (BACKUP_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_CANCELFLY
prompt ==============================
prompt
create table T_FLT_CANCELFLY
(
  flight_id NUMBER(11) not null,
  flg_cs    VARCHAR2(1) not null,
  msg_flag  VARCHAR2(1) default 'N' not null,
  creattime DATE not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_CANCELFLY
  is '航班取消与恢复短信发送标记表';
comment on column T_FLT_CANCELFLY.flight_id
  is '航班ID';
comment on column T_FLT_CANCELFLY.flg_cs
  is '取消标记(C计划取消D取消R恢复)';
comment on column T_FLT_CANCELFLY.msg_flag
  is '短信发送标记';
comment on column T_FLT_CANCELFLY.creattime
  is '创建时间';
alter table T_FLT_CANCELFLY
  add constraint PK_T_FLT_CANCELFLY primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_CARES_NEWOPS
prompt =================================
prompt
create table T_FLT_CARES_NEWOPS
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  ac_reg            VARCHAR2(10),
  ac_type           VARCHAR2(10),
  std               DATE not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  )
nologging;
comment on table T_FLT_CARES_NEWOPS
  is '飞机排班计划快照表';
comment on column T_FLT_CARES_NEWOPS.flight_date
  is '航班日期';
comment on column T_FLT_CARES_NEWOPS.flight_no
  is '航班号';
comment on column T_FLT_CARES_NEWOPS.departure_airport
  is '起飞站';
comment on column T_FLT_CARES_NEWOPS.arrival_airport
  is '到达站';
comment on column T_FLT_CARES_NEWOPS.ac_reg
  is '机号';
comment on column T_FLT_CARES_NEWOPS.ac_type
  is '机型';
comment on column T_FLT_CARES_NEWOPS.std
  is '计划起飞时间';
alter table T_FLT_CARES_NEWOPS
  add constraint PK_CARES_NEWOPS primary key (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, STD)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_CARES_NEWOPS_DELTA
prompt =======================================
prompt
create table T_FLT_CARES_NEWOPS_DELTA
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  ac_reg            VARCHAR2(10),
  ac_type           VARCHAR2(10),
  old_ac_reg        VARCHAR2(10),
  old_ac_type       VARCHAR2(10),
  poption           VARCHAR2(10),
  std               DATE not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_CARES_NEWOPS_DELTA
  is '飞机排班计划增量表';
comment on column T_FLT_CARES_NEWOPS_DELTA.flight_date
  is '航班日期';
comment on column T_FLT_CARES_NEWOPS_DELTA.flight_no
  is '航班号';
comment on column T_FLT_CARES_NEWOPS_DELTA.departure_airport
  is '起飞站';
comment on column T_FLT_CARES_NEWOPS_DELTA.arrival_airport
  is '到达站';
comment on column T_FLT_CARES_NEWOPS_DELTA.ac_reg
  is '机号';
comment on column T_FLT_CARES_NEWOPS_DELTA.ac_type
  is '机型';
comment on column T_FLT_CARES_NEWOPS_DELTA.old_ac_reg
  is '原机号';
comment on column T_FLT_CARES_NEWOPS_DELTA.old_ac_type
  is '原机型';
comment on column T_FLT_CARES_NEWOPS_DELTA.poption
  is '操作类型';
comment on column T_FLT_CARES_NEWOPS_DELTA.std
  is '计划起飞时间';
create index IDX_CARES_NEWOPS_DELTA on T_FLT_CARES_NEWOPS_DELTA (STD, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 704K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_CARES_NEWOPS_DELTA
  add constraint PK_CARES_NEWOPS_DELTA primary key (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, STD)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 768K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_CARES_NEWOPS_LOG
prompt =====================================
prompt
create table T_FLT_CARES_NEWOPS_LOG
(
  log_id            NUMBER(11) not null,
  log_time          DATE,
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  ac_reg            VARCHAR2(10),
  ac_type           VARCHAR2(10),
  old_ac_reg        VARCHAR2(10),
  old_ac_type       VARCHAR2(10),
  poption           VARCHAR2(10),
  std               DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_FLT_CARES_NEWOPS_LOG
  is '飞机排班计划变更日志表';
comment on column T_FLT_CARES_NEWOPS_LOG.log_id
  is '日志ID';
comment on column T_FLT_CARES_NEWOPS_LOG.log_time
  is '日志时间';
comment on column T_FLT_CARES_NEWOPS_LOG.flight_date
  is '航班日期';
comment on column T_FLT_CARES_NEWOPS_LOG.flight_no
  is '航班号';
comment on column T_FLT_CARES_NEWOPS_LOG.departure_airport
  is '起飞机场';
comment on column T_FLT_CARES_NEWOPS_LOG.arrival_airport
  is '落地机场';
comment on column T_FLT_CARES_NEWOPS_LOG.ac_reg
  is '机号';
comment on column T_FLT_CARES_NEWOPS_LOG.ac_type
  is '机型';
comment on column T_FLT_CARES_NEWOPS_LOG.old_ac_reg
  is '原机号';
comment on column T_FLT_CARES_NEWOPS_LOG.old_ac_type
  is '原机型';
comment on column T_FLT_CARES_NEWOPS_LOG.poption
  is '操作类型';
comment on column T_FLT_CARES_NEWOPS_LOG.std
  is '计划起飞时间';
create index IDX_CARES_NEWOPS_LOGTIME on T_FLT_CARES_NEWOPS_LOG (LOG_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );
alter table T_FLT_CARES_NEWOPS_LOG
  add constraint PK_CARS_NEWOPS_LOG primary key (LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_CARES_TMPOPS
prompt =================================
prompt
create global temporary table T_FLT_CARES_TMPOPS
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  ac_reg            VARCHAR2(10),
  ac_type           VARCHAR2(10),
  std               DATE not null
)
on commit delete rows;
comment on table T_FLT_CARES_TMPOPS
  is '飞机排班计划快照表(临时表)';
comment on column T_FLT_CARES_TMPOPS.flight_date
  is '航班日期';
comment on column T_FLT_CARES_TMPOPS.flight_no
  is '航班号';
comment on column T_FLT_CARES_TMPOPS.departure_airport
  is '起飞站';
comment on column T_FLT_CARES_TMPOPS.arrival_airport
  is '到达站';
comment on column T_FLT_CARES_TMPOPS.ac_reg
  is '机号';
comment on column T_FLT_CARES_TMPOPS.ac_type
  is '机型';
comment on column T_FLT_CARES_TMPOPS.std
  is '计划起飞时间';
alter table T_FLT_CARES_TMPOPS
  add constraint PK_CARES_TMPOPS primary key (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, STD);

prompt
prompt Creating table T_FLT_FEN_CONFIG
prompt ===============================
prompt
create table T_FLT_FEN_CONFIG
(
  fen_id          NUMBER(9) not null,
  fen_name        VARCHAR2(60) not null,
  pri             NUMBER(3) not null,
  module_flag     VARCHAR2(1) not null,
  filiale         VARCHAR2(4) not null,
  fen             NUMBER(6,2) default 0,
  ac_types        VARCHAR2(500),
  flight_nos      VARCHAR2(500),
  flight_codes    VARCHAR2(800),
  airport_cls     VARCHAR2(100),
  std_min         DATE,
  std_max         DATE,
  sta_min         DATE,
  sta_max         DATE,
  d_or_i          VARCHAR2(1),
  night_flag      VARCHAR2(1),
  remarks         VARCHAR2(200),
  oper            VARCHAR2(10),
  op_time         DATE,
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  flight_name     VARCHAR2(800),
  airport_clsname VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_FEN_CONFIG
  is '机组疲劳系数定义表';
comment on column T_FLT_FEN_CONFIG.fen_id
  is '疲劳系数ID';
comment on column T_FLT_FEN_CONFIG.fen_name
  is '疲劳系数名称';
comment on column T_FLT_FEN_CONFIG.pri
  is '优先级';
comment on column T_FLT_FEN_CONFIG.module_flag
  is '模块标志';
comment on column T_FLT_FEN_CONFIG.filiale
  is '分公司';
comment on column T_FLT_FEN_CONFIG.fen
  is '疲劳系数';
comment on column T_FLT_FEN_CONFIG.ac_types
  is '机型串';
comment on column T_FLT_FEN_CONFIG.flight_nos
  is '航班串';
comment on column T_FLT_FEN_CONFIG.flight_codes
  is '航程串';
comment on column T_FLT_FEN_CONFIG.airport_cls
  is '机场属性串';
comment on column T_FLT_FEN_CONFIG.std_min
  is 'Std最小值';
comment on column T_FLT_FEN_CONFIG.std_max
  is 'Std最大值';
comment on column T_FLT_FEN_CONFIG.sta_min
  is 'Sta最小值';
comment on column T_FLT_FEN_CONFIG.sta_max
  is 'Sta最大值';
comment on column T_FLT_FEN_CONFIG.d_or_i
  is '国际地区';
comment on column T_FLT_FEN_CONFIG.night_flag
  is '是否过夜Y/N';
comment on column T_FLT_FEN_CONFIG.remarks
  is '备注';
comment on column T_FLT_FEN_CONFIG.oper
  is '操作人';
comment on column T_FLT_FEN_CONFIG.op_time
  is '操作时间';
comment on column T_FLT_FEN_CONFIG.oper_ip
  is 'IP地址';
comment on column T_FLT_FEN_CONFIG.oper_host
  is '主机名';
comment on column T_FLT_FEN_CONFIG.flight_name
  is '航段中文串';
comment on column T_FLT_FEN_CONFIG.airport_clsname
  is '机场属性中午串';
alter table T_FLT_FEN_CONFIG
  add primary key (FEN_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_FILIALE_DEFINE
prompt ===================================
prompt
create table T_FLT_FILIALE_DEFINE
(
  flt_filiale_id NUMBER(11) not null,
  co_olds        VARCHAR2(100) not null,
  ac_types       VARCHAR2(100) not null,
  begin_date     DATE not null,
  end_date       DATE not null,
  flight_nos     VARCHAR2(100) not null,
  crew_owner     VARCHAR2(4) not null,
  op_name        VARCHAR2(40),
  op_time        DATE,
  depa_airport   VARCHAR2(4),
  arri_airport   VARCHAR2(4),
  weeks          VARCHAR2(7),
  valid_flag     VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_FILIALE_DEFINE
  is '航班分子公司定义';
comment on column T_FLT_FILIALE_DEFINE.flt_filiale_id
  is '序列号';
comment on column T_FLT_FILIALE_DEFINE.co_olds
  is '分子公司(接口)';
comment on column T_FLT_FILIALE_DEFINE.ac_types
  is '机型范围';
comment on column T_FLT_FILIALE_DEFINE.begin_date
  is '开始日期';
comment on column T_FLT_FILIALE_DEFINE.end_date
  is '结束日期';
comment on column T_FLT_FILIALE_DEFINE.flight_nos
  is '航班号(英文/分隔)';
comment on column T_FLT_FILIALE_DEFINE.crew_owner
  is '分子公司';
comment on column T_FLT_FILIALE_DEFINE.op_name
  is '操作人';
comment on column T_FLT_FILIALE_DEFINE.op_time
  is '操作时间';
comment on column T_FLT_FILIALE_DEFINE.depa_airport
  is '发站';
comment on column T_FLT_FILIALE_DEFINE.arri_airport
  is '到站';
comment on column T_FLT_FILIALE_DEFINE.weeks
  is '班期';
comment on column T_FLT_FILIALE_DEFINE.valid_flag
  is '有效标志(有效为Y，其它为无效)';
create index IDX1_FLT_FILIALE_DEFINE on T_FLT_FILIALE_DEFINE (CO_OLDS, AC_TYPES)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX2_FLT_FILIALE_DEFINE on T_FLT_FILIALE_DEFINE (BEGIN_DATE, END_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_FILIALE_DEFINE
  add constraint PK_FLT_FILIALE_DEFINE primary key (FLT_FILIALE_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_FOIS_ABNORMAL
prompt ==================================
prompt
create table T_FLT_FOIS_ABNORMAL
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE,
  carrier             VARCHAR2(2),
  flight_no           VARCHAR2(10),
  departure_airport   VARCHAR2(4),
  arrival_airport     VARCHAR2(4),
  std                 DATE,
  dept_delay          NUMBER(5),
  arr_delay           NUMBER(5),
  aoc_delay_code      VARCHAR2(10),
  aoc_delay_reason    VARCHAR2(100),
  dept_delay_deadzone NUMBER(3),
  arr_delay_deadzone  NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 104M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_FOIS_ABNORMAL
  is '现保不正常航班表';
comment on column T_FLT_FOIS_ABNORMAL.flight_id
  is '航班ID';
comment on column T_FLT_FOIS_ABNORMAL.flight_date
  is '航班日期';
comment on column T_FLT_FOIS_ABNORMAL.carrier
  is '承运人';
comment on column T_FLT_FOIS_ABNORMAL.flight_no
  is '航班号';
comment on column T_FLT_FOIS_ABNORMAL.departure_airport
  is '起飞站';
comment on column T_FLT_FOIS_ABNORMAL.arrival_airport
  is '到达站';
comment on column T_FLT_FOIS_ABNORMAL.std
  is '计划起飞时间';
comment on column T_FLT_FOIS_ABNORMAL.dept_delay
  is '起飞延误时间';
comment on column T_FLT_FOIS_ABNORMAL.arr_delay
  is '落地延误时间';
comment on column T_FLT_FOIS_ABNORMAL.aoc_delay_code
  is 'AOC延误代码';
comment on column T_FLT_FOIS_ABNORMAL.aoc_delay_reason
  is 'AOC延误原因';
comment on column T_FLT_FOIS_ABNORMAL.dept_delay_deadzone
  is '起飞站延误标准';
comment on column T_FLT_FOIS_ABNORMAL.arr_delay_deadzone
  is '到达站延误标准';
alter table T_FLT_FOIS_ABNORMAL
  add constraint PK_FOIS_DELAY primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 46M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_FOIS_ABNORMAL_DELTA
prompt ========================================
prompt
create table T_FLT_FOIS_ABNORMAL_DELTA
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE,
  carrier             VARCHAR2(2),
  flight_no           VARCHAR2(10),
  departure_airport   VARCHAR2(4),
  arrival_airport     VARCHAR2(4),
  std                 DATE,
  dept_delay          NUMBER(5),
  arr_delay           NUMBER(5),
  aoc_delay_code      VARCHAR2(10),
  aoc_delay_reason    VARCHAR2(100),
  dept_delay_deadzone NUMBER(3),
  arr_delay_deadzone  NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_FOIS_ABNORMAL_DELTA
  is '现保不正常航班增量变化表';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.flight_id
  is '航班ID';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.flight_date
  is '航班日期';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.carrier
  is '承运人';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.flight_no
  is '航班号';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.departure_airport
  is '起飞站';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.arrival_airport
  is '到达站';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.std
  is '计划起飞时间';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.dept_delay
  is '起飞延误时间';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.arr_delay
  is '落地延误时间';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.aoc_delay_code
  is 'AOC延误代码';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.aoc_delay_reason
  is 'AOC延误原因';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.dept_delay_deadzone
  is '起飞站延误标准';
comment on column T_FLT_FOIS_ABNORMAL_DELTA.arr_delay_deadzone
  is '到达站延误标准';
alter table T_FLT_FOIS_ABNORMAL_DELTA
  add constraint PK_FOIS_DELAY_DELTA primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_FOIS_SCH_DELTA
prompt ===================================
prompt
create table T_FLT_FOIS_SCH_DELTA
(
  flight_id         NUMBER(11) not null,
  flight_date       DATE,
  carrier           VARCHAR2(2),
  flight_no         VARCHAR2(9),
  suffix            VARCHAR2(2),
  status            VARCHAR2(4),
  flight_type       VARCHAR2(4),
  d_or_i            VARCHAR2(1),
  ac_type           VARCHAR2(10),
  ac_reg            VARCHAR2(10),
  vip               VARCHAR2(10),
  spe               VARCHAR2(10),
  plan_departure    VARCHAR2(4),
  departure_airport VARCHAR2(4),
  std               DATE,
  etd               DATE,
  atd               DATE,
  cabin_close_time  DATE,
  block_off_time    DATE,
  turn_on_time      DATE,
  plan_arrival      VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  sta               DATE,
  eta               DATE,
  ata               DATE,
  turn_off_time     DATE,
  block_on_time     DATE,
  cabin_open_time   DATE,
  time_stamp        DATE,
  mm_leg_id         NUMBER(11),
  dep_bay           VARCHAR2(20),
  arr_bay           VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_FOIS_SCH_DELTA
  is '现保航班动态增量变化表';
comment on column T_FLT_FOIS_SCH_DELTA.flight_id
  is '航班ID';
comment on column T_FLT_FOIS_SCH_DELTA.flight_date
  is '航班日期';
comment on column T_FLT_FOIS_SCH_DELTA.carrier
  is '承运人';
comment on column T_FLT_FOIS_SCH_DELTA.flight_no
  is '航班号';
comment on column T_FLT_FOIS_SCH_DELTA.suffix
  is '航班后缀';
comment on column T_FLT_FOIS_SCH_DELTA.status
  is '航班状态';
comment on column T_FLT_FOIS_SCH_DELTA.flight_type
  is '航班性质';
comment on column T_FLT_FOIS_SCH_DELTA.d_or_i
  is '国际/国内';
comment on column T_FLT_FOIS_SCH_DELTA.ac_type
  is '机型';
comment on column T_FLT_FOIS_SCH_DELTA.ac_reg
  is '机号';
comment on column T_FLT_FOIS_SCH_DELTA.vip
  is 'VIP';
comment on column T_FLT_FOIS_SCH_DELTA.spe
  is '特服';
comment on column T_FLT_FOIS_SCH_DELTA.plan_departure
  is '计划起飞';
comment on column T_FLT_FOIS_SCH_DELTA.departure_airport
  is '实际起飞';
comment on column T_FLT_FOIS_SCH_DELTA.std
  is '计划起飞时间';
comment on column T_FLT_FOIS_SCH_DELTA.etd
  is '预计起飞时间';
comment on column T_FLT_FOIS_SCH_DELTA.atd
  is '实际起飞时间';
comment on column T_FLT_FOIS_SCH_DELTA.cabin_close_time
  is '关舱门时间';
comment on column T_FLT_FOIS_SCH_DELTA.block_off_time
  is '撤轮挡时间';
comment on column T_FLT_FOIS_SCH_DELTA.turn_on_time
  is '开车时间';
comment on column T_FLT_FOIS_SCH_DELTA.plan_arrival
  is '计划落地';
comment on column T_FLT_FOIS_SCH_DELTA.arrival_airport
  is '实际落地';
comment on column T_FLT_FOIS_SCH_DELTA.sta
  is '计划到达时间';
comment on column T_FLT_FOIS_SCH_DELTA.eta
  is '预计到达时间';
comment on column T_FLT_FOIS_SCH_DELTA.ata
  is '实际到达时间';
comment on column T_FLT_FOIS_SCH_DELTA.turn_off_time
  is '关车时间';
comment on column T_FLT_FOIS_SCH_DELTA.block_on_time
  is '挡轮挡时间';
comment on column T_FLT_FOIS_SCH_DELTA.cabin_open_time
  is '关舱门时间';
comment on column T_FLT_FOIS_SCH_DELTA.time_stamp
  is '时间戳';
comment on column T_FLT_FOIS_SCH_DELTA.mm_leg_id
  is '对应MM的ID';
comment on column T_FLT_FOIS_SCH_DELTA.dep_bay
  is '起飞机场停机位';
comment on column T_FLT_FOIS_SCH_DELTA.arr_bay
  is '到达机场停机位';
create index IDX_FOIS_FLTSCH_MMID on T_FLT_FOIS_SCH_DELTA (MM_LEG_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_FOIS_SCH_DELTA
  add constraint PK_FOIS_FLTSCH_DELTA primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS
prompt ==========================
prompt
create table T_FLT_HOURS
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) default 0 not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_HOURS
  is '航段标准时间表';
comment on column T_FLT_HOURS.ac_type_crew
  is '机型';
comment on column T_FLT_HOURS.departure_airport
  is '起飞机场';
comment on column T_FLT_HOURS.arrival_airport
  is '到达机场';
comment on column T_FLT_HOURS.flt_sn
  is '航季(S 夏秋季
 W 冬春季
)';
comment on column T_FLT_HOURS.fly_hours
  is '航段时间(分钟)';
comment on column T_FLT_HOURS.oper
  is '操作人';
comment on column T_FLT_HOURS.op_time
  is '操作时间';
comment on column T_FLT_HOURS.remarks
  is '备注';
comment on column T_FLT_HOURS.oper_ip
  is 'IP地址';
comment on column T_FLT_HOURS.oper_host
  is '主机名';
alter table T_FLT_HOURS
  add constraint PK_STDTIME primary key (AC_TYPE_CREW, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, FLT_SN)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20140624
prompt ==================================
prompt
create table T_FLT_HOURS20140624
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1),
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20140718
prompt ==================================
prompt
create table T_FLT_HOURS20140718
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1),
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20140915
prompt ==================================
prompt
create table T_FLT_HOURS20140915
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1),
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20161010
prompt ==================================
prompt
create table T_FLT_HOURS20161010
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  auto              VARCHAR2(2),
  flight_date       DATE not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20161020
prompt ==================================
prompt
create table T_FLT_HOURS20161020
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20161024
prompt ==================================
prompt
create table T_FLT_HOURS20161024
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20161102
prompt ==================================
prompt
create table T_FLT_HOURS20161102
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS20161109
prompt ==================================
prompt
create table T_FLT_HOURS20161109
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_HOURS_BG_CAL_AC_TYPE
prompt =========================================
prompt
create table T_FLT_HOURS_BG_CAL_AC_TYPE
(
  ac_type_crew      VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  flt_sn            VARCHAR2(1) not null,
  fly_hours         NUMBER(3) default 0,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
  );
comment on table T_FLT_HOURS_BG_CAL_AC_TYPE
  is '航段标准时间表';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.ac_type_crew
  is '机型';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.departure_airport
  is '起飞机场';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.arrival_airport
  is '到达机场';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.flt_sn
  is '航季(S 夏秋季
 W 冬春季
)';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.fly_hours
  is '航段时间(分钟)';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.oper
  is '操作人';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.op_time
  is '操作时间';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.remarks
  is '备注';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.oper_ip
  is 'IP地址';
comment on column T_FLT_HOURS_BG_CAL_AC_TYPE.oper_host
  is '主机名';
alter table T_FLT_HOURS_BG_CAL_AC_TYPE
  add constraint PK_FLT_HOURS_BG_CAL_AC_TYPE primary key (AC_TYPE_CREW, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, FLT_SN)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_INCURETD_TIME
prompt ==================================
prompt
create table T_FLT_INCURETD_TIME
(
  flight_id    NUMBER(11) not null,
  etd          DATE not null,
  creattime    DATE not null,
  msg_sms_flag VARCHAR2(1) default 'N' not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 576K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_INCURETD_TIME
  is '延误航班的预计起飞时间(ETD)';
comment on column T_FLT_INCURETD_TIME.flight_id
  is '航班ID';
comment on column T_FLT_INCURETD_TIME.etd
  is '预计起飞时间';
comment on column T_FLT_INCURETD_TIME.creattime
  is '操作时间';
comment on column T_FLT_INCURETD_TIME.msg_sms_flag
  is '短信发送标记';
alter table T_FLT_INCURETD_TIME
  add constraint PK_T_SCH_INCURETD_TIME primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 704K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_ADD
prompt ===========================
prompt
create table T_FLT_MM_ADD
(
  leg_id                   NUMBER(9) not null,
  fltdate                  DATE,
  fltno                    VARCHAR2(10),
  flight_no                VARCHAR2(10),
  suffix                   VARCHAR2(2),
  carrier                  VARCHAR2(3),
  dept_airport             VARCHAR2(4),
  arr_airport              VARCHAR2(4),
  plan_dept_airport        VARCHAR2(4),
  plan_arr_airport         VARCHAR2(4),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(1000),
  tail_number              VARCHAR2(10),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  flight_date              DATE,
  leg_sequence_number      NUMBER(9),
  flight_service_type_code VARCHAR2(1),
  carrier_code             VARCHAR2(10),
  fleet_code               VARCHAR2(10),
  publish_carrier_code     VARCHAR2(10),
  time_stamp               DATE,
  position                 VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 14M
    next 1M
    minextents 1
    maxextents unlimited
  )
nologging;
comment on table T_FLT_MM_ADD
  is 'MM视图快照(大于等于T+3)';
comment on column T_FLT_MM_ADD.leg_id
  is '航段ID';
comment on column T_FLT_MM_ADD.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_ADD.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_ADD.flight_no
  is '航班号';
comment on column T_FLT_MM_ADD.suffix
  is '后缀';
comment on column T_FLT_MM_ADD.carrier
  is '承运人';
comment on column T_FLT_MM_ADD.dept_airport
  is '起飞站';
comment on column T_FLT_MM_ADD.arr_airport
  is '到达站';
comment on column T_FLT_MM_ADD.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_ADD.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_ADD.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_ADD.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_ADD.status_code
  is '状态';
comment on column T_FLT_MM_ADD.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_ADD.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_ADD.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_ADD.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_ADD.remark
  is '备注';
comment on column T_FLT_MM_ADD.tail_number
  is '飞机号';
comment on column T_FLT_MM_ADD.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_ADD.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_ADD.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_ADD.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_ADD.flight_date
  is '航班日期';
comment on column T_FLT_MM_ADD.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_ADD.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_ADD.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_ADD.fleet_code
  is '机型';
comment on column T_FLT_MM_ADD.publish_carrier_code
  is '发布承运人代码';
comment on column T_FLT_MM_ADD.time_stamp
  is '时间戳';
comment on column T_FLT_MM_ADD.position
  is '版本号(OLD/NEW)';

prompt
prompt Creating table T_FLT_MM_ADD_HIS
prompt ===============================
prompt
create table T_FLT_MM_ADD_HIS
(
  mm_logid                 NUMBER(11) not null,
  leg_id                   NUMBER(9) not null,
  fltdate                  DATE,
  fltno                    VARCHAR2(10),
  flight_no                VARCHAR2(10),
  suffix                   VARCHAR2(2),
  carrier                  VARCHAR2(3),
  dept_airport             VARCHAR2(4),
  arr_airport              VARCHAR2(4),
  plan_dept_airport        VARCHAR2(4),
  plan_arr_airport         VARCHAR2(4),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(1000),
  tail_number              VARCHAR2(10),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  flight_date              DATE,
  leg_sequence_number      NUMBER(9),
  flight_service_type_code VARCHAR2(1),
  carrier_code             VARCHAR2(10),
  fleet_code               VARCHAR2(10),
  publish_carrier_code     VARCHAR2(10),
  time_stamp               DATE,
  position                 VARCHAR2(30),
  oper                     VARCHAR2(10),
  op_time                  DATE,
  remarks                  VARCHAR2(200),
  oper_ip                  VARCHAR2(15),
  oper_host                VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 38M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_ADD_HIS
  is '同步MM系统LegId,AcReg(大于等于T+3)历史表';
comment on column T_FLT_MM_ADD_HIS.mm_logid
  is 'MM日志ID';
comment on column T_FLT_MM_ADD_HIS.leg_id
  is '航段ID';
comment on column T_FLT_MM_ADD_HIS.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_ADD_HIS.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_ADD_HIS.flight_no
  is '航班号';
comment on column T_FLT_MM_ADD_HIS.suffix
  is '后缀';
comment on column T_FLT_MM_ADD_HIS.carrier
  is '承运人';
comment on column T_FLT_MM_ADD_HIS.dept_airport
  is '起飞站';
comment on column T_FLT_MM_ADD_HIS.arr_airport
  is '到达站';
comment on column T_FLT_MM_ADD_HIS.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_ADD_HIS.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_ADD_HIS.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_ADD_HIS.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_ADD_HIS.status_code
  is '状态';
comment on column T_FLT_MM_ADD_HIS.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_ADD_HIS.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_ADD_HIS.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_ADD_HIS.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_ADD_HIS.remark
  is '备注';
comment on column T_FLT_MM_ADD_HIS.tail_number
  is '飞机号';
comment on column T_FLT_MM_ADD_HIS.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_ADD_HIS.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_ADD_HIS.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_ADD_HIS.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_ADD_HIS.flight_date
  is '航班日期';
comment on column T_FLT_MM_ADD_HIS.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_ADD_HIS.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_ADD_HIS.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_ADD_HIS.fleet_code
  is '机型';
comment on column T_FLT_MM_ADD_HIS.publish_carrier_code
  is '发布承运人代码';
comment on column T_FLT_MM_ADD_HIS.time_stamp
  is '时间戳';
comment on column T_FLT_MM_ADD_HIS.position
  is '版本号(OLD/NEW)';
comment on column T_FLT_MM_ADD_HIS.oper
  is '操作人';
comment on column T_FLT_MM_ADD_HIS.op_time
  is '操作时间';
comment on column T_FLT_MM_ADD_HIS.remarks
  is '备注';
comment on column T_FLT_MM_ADD_HIS.oper_ip
  is 'IP地址';
comment on column T_FLT_MM_ADD_HIS.oper_host
  is '主机名';

prompt
prompt Creating table T_FLT_MM_ADD_LOG
prompt ===============================
prompt
create table T_FLT_MM_ADD_LOG
(
  mm_logid    NUMBER(15) not null,
  start_date  DATE,
  end_date    DATE,
  proc_cnt    NUMBER(9),
  proc_result VARCHAR2(4000),
  err_msg     VARCHAR2(4000),
  time_stamp  DATE,
  op_time     DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 832K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_ADD_LOG
  is '同步MM系统LegId,AcReg(大于等于T+3)日志表';
comment on column T_FLT_MM_ADD_LOG.mm_logid
  is '日志ID';
comment on column T_FLT_MM_ADD_LOG.start_date
  is '开始日期';
comment on column T_FLT_MM_ADD_LOG.end_date
  is '结束日期';
comment on column T_FLT_MM_ADD_LOG.proc_cnt
  is '同步条数';
comment on column T_FLT_MM_ADD_LOG.proc_result
  is '同步结果';
comment on column T_FLT_MM_ADD_LOG.err_msg
  is '错误信息';
comment on column T_FLT_MM_ADD_LOG.time_stamp
  is '时间戳';

prompt
prompt Creating table T_FLT_MM_LOGS
prompt ============================
prompt
create table T_FLT_MM_LOGS
(
  log_id          NUMBER(9) not null,
  log_time        DATE,
  content         VARCHAR2(4000),
  errmsg          VARCHAR2(4000),
  proc_start_time DATE,
  proc_end_time   DATE,
  secs            NUMBER(5),
  proc_cnt        NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_LOGS
  is 'MM处理日志';
comment on column T_FLT_MM_LOGS.log_id
  is '日志ID';
comment on column T_FLT_MM_LOGS.log_time
  is '日志时间';
comment on column T_FLT_MM_LOGS.content
  is '提示内容';
comment on column T_FLT_MM_LOGS.errmsg
  is '错误内容';
comment on column T_FLT_MM_LOGS.proc_start_time
  is '开始处理时间';
comment on column T_FLT_MM_LOGS.proc_end_time
  is '结束处理时间';
comment on column T_FLT_MM_LOGS.secs
  is '处理耗时';
comment on column T_FLT_MM_LOGS.proc_cnt
  is '处理记录数';
alter table T_FLT_MM_LOGS
  add constraint PK_MM_LOGS primary key (LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_MESSAGE
prompt ===============================
prompt
create table T_FLT_MM_MESSAGE
(
  message_id   NUMBER(10) not null,
  message_date DATE,
  message      VARCHAR2(1000),
  send_flg     CHAR(1),
  error_info   VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_MESSAGE
  is 'MM处理消息表';
comment on column T_FLT_MM_MESSAGE.message_id
  is '短信ID';
comment on column T_FLT_MM_MESSAGE.message_date
  is '短信生成时间';
comment on column T_FLT_MM_MESSAGE.message
  is '短信内容';
comment on column T_FLT_MM_MESSAGE.send_flg
  is '发送标志';
comment on column T_FLT_MM_MESSAGE.error_info
  is '发送错误信息';
alter table T_FLT_MM_MESSAGE
  add constraint PK_SSIM_MESSAGE primary key (MESSAGE_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_NEWOPS
prompt ==============================
prompt
create table T_FLT_MM_NEWOPS
(
  leg_id                   NUMBER(9) not null,
  fltdate                  DATE,
  fltno                    VARCHAR2(10),
  flight_no                VARCHAR2(10),
  suffix                   VARCHAR2(2),
  carrier                  VARCHAR2(3),
  dept_airport             VARCHAR2(4),
  arr_airport              VARCHAR2(4),
  plan_dept_airport        VARCHAR2(4),
  plan_arr_airport         VARCHAR2(4),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(1000),
  tail_number              VARCHAR2(10),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  flight_date              DATE,
  leg_sequence_number      NUMBER(9),
  flight_service_type_code VARCHAR2(1),
  carrier_code             VARCHAR2(10),
  fleet_code               VARCHAR2(10),
  publish_carrier_code     VARCHAR2(10),
  time_stamp               DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_NEWOPS
  is 'MM视图快照';
comment on column T_FLT_MM_NEWOPS.leg_id
  is '航段ID';
comment on column T_FLT_MM_NEWOPS.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_NEWOPS.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_NEWOPS.flight_no
  is '航班号';
comment on column T_FLT_MM_NEWOPS.suffix
  is '后缀';
comment on column T_FLT_MM_NEWOPS.carrier
  is '承运人';
comment on column T_FLT_MM_NEWOPS.dept_airport
  is '起飞站';
comment on column T_FLT_MM_NEWOPS.arr_airport
  is '到达站';
comment on column T_FLT_MM_NEWOPS.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_NEWOPS.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_NEWOPS.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_NEWOPS.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_NEWOPS.status_code
  is '状态';
comment on column T_FLT_MM_NEWOPS.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_NEWOPS.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_NEWOPS.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_NEWOPS.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_NEWOPS.remark
  is '备注';
comment on column T_FLT_MM_NEWOPS.tail_number
  is '飞机号';
comment on column T_FLT_MM_NEWOPS.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_NEWOPS.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_NEWOPS.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_NEWOPS.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_NEWOPS.flight_date
  is '航班日期';
comment on column T_FLT_MM_NEWOPS.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_NEWOPS.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_NEWOPS.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_NEWOPS.fleet_code
  is '机型';
comment on column T_FLT_MM_NEWOPS.publish_carrier_code
  is '发布承运人代码';
comment on column T_FLT_MM_NEWOPS.time_stamp
  is '时间戳';
create index IDX_MM_NEWOPS_FLT on T_FLT_MM_NEWOPS (FLIGHT_DATE, FLIGHT_NO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_MM_NEWOPS_FLT2 on T_FLT_MM_NEWOPS (FLTDATE, FLTNO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_MM_NEWOPS
  add constraint PK_MM_FLIGHT_NEWOPS primary key (LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_NEWOPS_DELTA
prompt ====================================
prompt
create table T_FLT_MM_NEWOPS_DELTA
(
  leg_id                       NUMBER(9) not null,
  flight_no                    VARCHAR2(10),
  suffix                       VARCHAR2(2),
  carrier                      VARCHAR2(3),
  dept_airport                 VARCHAR2(4),
  arr_airport                  VARCHAR2(4),
  plan_dept_airport            VARCHAR2(4),
  plan_arr_airport             VARCHAR2(4),
  real_dept_time               DATE,
  real_arr_time                DATE,
  status_code                  VARCHAR2(1),
  plan_dept_time               DATE,
  plan_arr_time                DATE,
  est_dept_time                DATE,
  est_arr_time                 DATE,
  remark                       VARCHAR2(1000),
  tail_number                  VARCHAR2(10),
  block_off_date_time          DATE,
  block_on_date_time           DATE,
  take_off_date_time           DATE,
  landing_date_time            DATE,
  flight_date                  DATE,
  leg_sequence_number          NUMBER(9),
  flight_service_type_code     VARCHAR2(1),
  carrier_code                 VARCHAR2(10),
  fleet_code                   VARCHAR2(10),
  publish_carrier_code         VARCHAR2(10),
  time_stamp                   DATE,
  old_flight_no                VARCHAR2(10),
  old_suffix                   VARCHAR2(2),
  old_carrier                  VARCHAR2(3),
  old_dept_airport             VARCHAR2(4),
  old_arr_airport              VARCHAR2(4),
  old_plan_dept_airport        VARCHAR2(4),
  old_plan_arr_airport         VARCHAR2(4),
  old_real_dept_time           DATE,
  old_real_arr_time            DATE,
  old_status_code              VARCHAR2(1),
  old_plan_dept_time           DATE,
  old_plan_arr_time            DATE,
  old_est_dept_time            DATE,
  old_est_arr_time             DATE,
  old_remark                   VARCHAR2(1000),
  old_tail_number              VARCHAR2(10),
  old_block_off_date_time      DATE,
  old_block_on_date_time       DATE,
  old_take_off_date_time       DATE,
  old_landing_date_time        DATE,
  old_flight_date              DATE,
  old_leg_sequence_number      NUMBER(9),
  old_flight_service_type_code VARCHAR2(1),
  old_carrier_code             VARCHAR2(10),
  old_fleet_code               VARCHAR2(10),
  old_publish_carrier_code     VARCHAR2(10),
  old_time_stamp               DATE,
  poption                      VARCHAR2(10),
  fltdate                      DATE,
  fltno                        VARCHAR2(10),
  old_fltdate                  DATE,
  old_fltno                    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_NEWOPS_DELTA
  is '视图快照变化信息';
comment on column T_FLT_MM_NEWOPS_DELTA.leg_id
  is '航段ID';
comment on column T_FLT_MM_NEWOPS_DELTA.flight_no
  is '航班号';
comment on column T_FLT_MM_NEWOPS_DELTA.suffix
  is '后缀';
comment on column T_FLT_MM_NEWOPS_DELTA.carrier
  is '承运人';
comment on column T_FLT_MM_NEWOPS_DELTA.dept_airport
  is '起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA.arr_airport
  is '到达站';
comment on column T_FLT_MM_NEWOPS_DELTA.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_NEWOPS_DELTA.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA.status_code
  is '状态';
comment on column T_FLT_MM_NEWOPS_DELTA.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA.remark
  is '备注';
comment on column T_FLT_MM_NEWOPS_DELTA.tail_number
  is '飞机号';
comment on column T_FLT_MM_NEWOPS_DELTA.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_NEWOPS_DELTA.flight_date
  is '航班日期';
comment on column T_FLT_MM_NEWOPS_DELTA.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_NEWOPS_DELTA.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_NEWOPS_DELTA.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_NEWOPS_DELTA.fleet_code
  is '机型';
comment on column T_FLT_MM_NEWOPS_DELTA.publish_carrier_code
  is '公布承运人';
comment on column T_FLT_MM_NEWOPS_DELTA.time_stamp
  is '时间戳';
comment on column T_FLT_MM_NEWOPS_DELTA.old_flight_no
  is '(原)航班号';
comment on column T_FLT_MM_NEWOPS_DELTA.old_suffix
  is '(原)后缀';
comment on column T_FLT_MM_NEWOPS_DELTA.old_carrier
  is '(原)承运人';
comment on column T_FLT_MM_NEWOPS_DELTA.old_dept_airport
  is '(原)起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA.old_arr_airport
  is '(原)到达站';
comment on column T_FLT_MM_NEWOPS_DELTA.old_plan_dept_airport
  is '(原)计划起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA.old_plan_arr_airport
  is '(原)计划到达站';
comment on column T_FLT_MM_NEWOPS_DELTA.old_real_dept_time
  is '(原)实际起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_real_arr_time
  is '(原)实际到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_status_code
  is '(原)状态';
comment on column T_FLT_MM_NEWOPS_DELTA.old_plan_dept_time
  is '(原)计划起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_plan_arr_time
  is '(原)计划到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_est_dept_time
  is '(原)预计起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_est_arr_time
  is '(原)预计到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_remark
  is '(原)备注';
comment on column T_FLT_MM_NEWOPS_DELTA.old_tail_number
  is '(原)飞机号';
comment on column T_FLT_MM_NEWOPS_DELTA.old_block_off_date_time
  is '(原)撤轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_block_on_date_time
  is '(原)挡轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_take_off_date_time
  is '(原)起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_landing_date_time
  is '(原)落地时间';
comment on column T_FLT_MM_NEWOPS_DELTA.old_flight_date
  is '(原)航班日期';
comment on column T_FLT_MM_NEWOPS_DELTA.old_leg_sequence_number
  is '(原)段号';
comment on column T_FLT_MM_NEWOPS_DELTA.old_flight_service_type_code
  is '(原)航班服务类型';
comment on column T_FLT_MM_NEWOPS_DELTA.old_carrier_code
  is '(原)承运人代码';
comment on column T_FLT_MM_NEWOPS_DELTA.old_fleet_code
  is '(原)机型';
comment on column T_FLT_MM_NEWOPS_DELTA.old_publish_carrier_code
  is '(原)公布承运人';
comment on column T_FLT_MM_NEWOPS_DELTA.old_time_stamp
  is '(原)时间戳';
comment on column T_FLT_MM_NEWOPS_DELTA.poption
  is '变化种类';
comment on column T_FLT_MM_NEWOPS_DELTA.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_NEWOPS_DELTA.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_NEWOPS_DELTA.old_fltdate
  is '(原)航班日期(北京时)';
comment on column T_FLT_MM_NEWOPS_DELTA.old_fltno
  is '(原)航班号(承运人)';
alter table T_FLT_MM_NEWOPS_DELTA
  add constraint PK_MM_FLIGHT_NEWOPS_DELTA primary key (LEG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_NEWOPS_DELTA_HUG
prompt ========================================
prompt
create table T_FLT_MM_NEWOPS_DELTA_HUG
(
  leg_id                       NUMBER(9) not null,
  flight_no                    VARCHAR2(10),
  suffix                       VARCHAR2(2),
  carrier                      VARCHAR2(3),
  dept_airport                 VARCHAR2(4),
  arr_airport                  VARCHAR2(4),
  plan_dept_airport            VARCHAR2(4),
  plan_arr_airport             VARCHAR2(4),
  real_dept_time               DATE,
  real_arr_time                DATE,
  status_code                  VARCHAR2(1),
  plan_dept_time               DATE,
  plan_arr_time                DATE,
  est_dept_time                DATE,
  est_arr_time                 DATE,
  remark                       VARCHAR2(1000),
  tail_number                  VARCHAR2(10),
  block_off_date_time          DATE,
  block_on_date_time           DATE,
  take_off_date_time           DATE,
  landing_date_time            DATE,
  flight_date                  DATE,
  leg_sequence_number          NUMBER(9),
  flight_service_type_code     VARCHAR2(1),
  carrier_code                 VARCHAR2(10),
  fleet_code                   VARCHAR2(10),
  publish_carrier_code         VARCHAR2(10),
  time_stamp                   DATE,
  old_flight_no                VARCHAR2(10),
  old_suffix                   VARCHAR2(2),
  old_carrier                  VARCHAR2(3),
  old_dept_airport             VARCHAR2(4),
  old_arr_airport              VARCHAR2(4),
  old_plan_dept_airport        VARCHAR2(4),
  old_plan_arr_airport         VARCHAR2(4),
  old_real_dept_time           DATE,
  old_real_arr_time            DATE,
  old_status_code              VARCHAR2(1),
  old_plan_dept_time           DATE,
  old_plan_arr_time            DATE,
  old_est_dept_time            DATE,
  old_est_arr_time             DATE,
  old_remark                   VARCHAR2(1000),
  old_tail_number              VARCHAR2(10),
  old_block_off_date_time      DATE,
  old_block_on_date_time       DATE,
  old_take_off_date_time       DATE,
  old_landing_date_time        DATE,
  old_flight_date              DATE,
  old_leg_sequence_number      NUMBER(9),
  old_flight_service_type_code VARCHAR2(1),
  old_carrier_code             VARCHAR2(10),
  old_fleet_code               VARCHAR2(10),
  old_publish_carrier_code     VARCHAR2(10),
  old_time_stamp               DATE,
  poption                      VARCHAR2(10),
  fltdate                      DATE,
  fltno                        VARCHAR2(10),
  old_fltdate                  DATE,
  old_fltno                    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_NEWOPS_DELTA_HUG
  is '手动拉取MM系统数据(视图快照变化信息)';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.leg_id
  is '航段ID';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.flight_no
  is '航班号';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.suffix
  is '后缀';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.carrier
  is '承运人';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.dept_airport
  is '起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.arr_airport
  is '到达站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.status_code
  is '状态';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.remark
  is '备注';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.tail_number
  is '飞机号';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.flight_date
  is '航班日期';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.fleet_code
  is '机型';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.publish_carrier_code
  is '公布承运人';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.time_stamp
  is '时间戳';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_flight_no
  is '(原)航班号';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_suffix
  is '(原)后缀';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_carrier
  is '(原)承运人';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_dept_airport
  is '(原)起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_arr_airport
  is '(原)到达站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_plan_dept_airport
  is '(原)计划起飞站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_plan_arr_airport
  is '(原)计划到达站';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_real_dept_time
  is '(原)实际起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_real_arr_time
  is '(原)实际到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_status_code
  is '(原)状态';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_plan_dept_time
  is '(原)计划起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_plan_arr_time
  is '(原)计划到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_est_dept_time
  is '(原)预计起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_est_arr_time
  is '(原)预计到达时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_remark
  is '(原)备注';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_tail_number
  is '(原)飞机号';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_block_off_date_time
  is '(原)撤轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_block_on_date_time
  is '(原)挡轮挡时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_take_off_date_time
  is '(原)起飞时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_landing_date_time
  is '(原)落地时间';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_flight_date
  is '(原)航班日期';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_leg_sequence_number
  is '(原)段号';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_flight_service_type_code
  is '(原)航班服务类型';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_carrier_code
  is '(原)承运人代码';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_fleet_code
  is '(原)机型';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_publish_carrier_code
  is '(原)公布承运人';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_time_stamp
  is '(原)时间戳';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.poption
  is '变化种类';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_fltdate
  is '(原)航班日期(北京时)';
comment on column T_FLT_MM_NEWOPS_DELTA_HUG.old_fltno
  is '(原)航班号(承运人)';

prompt
prompt Creating table T_FLT_MM_PROC_LOGS
prompt =================================
prompt
create table T_FLT_MM_PROC_LOGS
(
  log_id                       NUMBER(9) not null,
  leg_id                       NUMBER(9) not null,
  proc_desc                    VARCHAR2(4000),
  poption                      VARCHAR2(3),
  flight_no                    VARCHAR2(10),
  suffix                       VARCHAR2(2),
  carrier                      VARCHAR2(3),
  dept_airport                 VARCHAR2(4),
  arr_airport                  VARCHAR2(4),
  plan_dept_airport            VARCHAR2(4),
  plan_arr_airport             VARCHAR2(4),
  real_dept_time               DATE,
  real_arr_time                DATE,
  status_code                  VARCHAR2(1),
  plan_dept_time               DATE,
  plan_arr_time                DATE,
  est_dept_time                DATE,
  est_arr_time                 DATE,
  remark                       VARCHAR2(1000),
  tail_number                  VARCHAR2(10),
  block_off_date_time          DATE,
  block_on_date_time           DATE,
  take_off_date_time           DATE,
  landing_date_time            DATE,
  flight_date                  DATE,
  leg_sequence_number          NUMBER(9),
  flight_service_type_code     VARCHAR2(1),
  carrier_code                 VARCHAR2(10),
  fleet_code                   VARCHAR2(10),
  publish_carrier_code         VARCHAR2(10),
  time_stamp                   DATE,
  old_flight_no                VARCHAR2(10),
  old_suffix                   VARCHAR2(2),
  old_carrier                  VARCHAR2(3),
  old_dept_airport             VARCHAR2(4),
  old_arr_airport              VARCHAR2(4),
  old_plan_dept_airport        VARCHAR2(4),
  old_plan_arr_airport         VARCHAR2(4),
  old_real_dept_time           DATE,
  old_real_arr_time            DATE,
  old_status_code              VARCHAR2(1),
  old_plan_dept_time           DATE,
  old_plan_arr_time            DATE,
  old_est_dept_time            DATE,
  old_est_arr_time             DATE,
  old_remark                   VARCHAR2(1000),
  old_tail_number              VARCHAR2(10),
  old_block_off_date_time      DATE,
  old_block_on_date_time       DATE,
  old_take_off_date_time       DATE,
  old_landing_date_time        DATE,
  old_flight_date              DATE,
  old_leg_sequence_number      NUMBER(9),
  old_flight_service_type_code VARCHAR2(1),
  old_carrier_code             VARCHAR2(10),
  old_fleet_code               VARCHAR2(10),
  old_publish_carrier_code     VARCHAR2(10),
  old_time_stamp               DATE,
  fltdate                      DATE,
  fltno                        VARCHAR2(10),
  old_fltdate                  DATE,
  old_fltno                    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 248M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_PROC_LOGS
  is 'MM处理日志详细信息';
comment on column T_FLT_MM_PROC_LOGS.log_id
  is '日志ID';
comment on column T_FLT_MM_PROC_LOGS.leg_id
  is '航段ID';
comment on column T_FLT_MM_PROC_LOGS.proc_desc
  is 'PROC_DESC';
comment on column T_FLT_MM_PROC_LOGS.poption
  is '变化种类';
comment on column T_FLT_MM_PROC_LOGS.flight_no
  is '航班号';
comment on column T_FLT_MM_PROC_LOGS.suffix
  is '后缀';
comment on column T_FLT_MM_PROC_LOGS.carrier
  is '承运人';
comment on column T_FLT_MM_PROC_LOGS.dept_airport
  is '起飞站';
comment on column T_FLT_MM_PROC_LOGS.arr_airport
  is '到达站';
comment on column T_FLT_MM_PROC_LOGS.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_PROC_LOGS.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_PROC_LOGS.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_PROC_LOGS.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_PROC_LOGS.status_code
  is '状态';
comment on column T_FLT_MM_PROC_LOGS.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_PROC_LOGS.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_PROC_LOGS.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_PROC_LOGS.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_PROC_LOGS.remark
  is '备注';
comment on column T_FLT_MM_PROC_LOGS.tail_number
  is '飞机号';
comment on column T_FLT_MM_PROC_LOGS.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_PROC_LOGS.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_PROC_LOGS.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_PROC_LOGS.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_PROC_LOGS.flight_date
  is '航班日期';
comment on column T_FLT_MM_PROC_LOGS.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_PROC_LOGS.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_PROC_LOGS.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_PROC_LOGS.fleet_code
  is '机型';
comment on column T_FLT_MM_PROC_LOGS.publish_carrier_code
  is '公布承运人';
comment on column T_FLT_MM_PROC_LOGS.time_stamp
  is '时间戳';
comment on column T_FLT_MM_PROC_LOGS.old_flight_no
  is '(原)航班号';
comment on column T_FLT_MM_PROC_LOGS.old_suffix
  is '(原)后缀';
comment on column T_FLT_MM_PROC_LOGS.old_carrier
  is '(原)承运人';
comment on column T_FLT_MM_PROC_LOGS.old_dept_airport
  is '(原)起飞站';
comment on column T_FLT_MM_PROC_LOGS.old_arr_airport
  is '(原)到达站';
comment on column T_FLT_MM_PROC_LOGS.old_plan_dept_airport
  is '(原)计划起飞站';
comment on column T_FLT_MM_PROC_LOGS.old_plan_arr_airport
  is '(原)计划到达站';
comment on column T_FLT_MM_PROC_LOGS.old_real_dept_time
  is '(原)实际起飞时间';
comment on column T_FLT_MM_PROC_LOGS.old_real_arr_time
  is '(原)实际到达时间';
comment on column T_FLT_MM_PROC_LOGS.old_status_code
  is '(原)状态';
comment on column T_FLT_MM_PROC_LOGS.old_plan_dept_time
  is '(原)计划起飞时间';
comment on column T_FLT_MM_PROC_LOGS.old_plan_arr_time
  is '(原)计划到达时间';
comment on column T_FLT_MM_PROC_LOGS.old_est_dept_time
  is '(原)预计起飞时间';
comment on column T_FLT_MM_PROC_LOGS.old_est_arr_time
  is '(原)预计到达时间';
comment on column T_FLT_MM_PROC_LOGS.old_remark
  is '(原)备注';
comment on column T_FLT_MM_PROC_LOGS.old_tail_number
  is '(原)飞机号';
comment on column T_FLT_MM_PROC_LOGS.old_block_off_date_time
  is '(原)撤轮挡时间';
comment on column T_FLT_MM_PROC_LOGS.old_block_on_date_time
  is '(原)挡轮挡时间';
comment on column T_FLT_MM_PROC_LOGS.old_take_off_date_time
  is '(原)起飞时间';
comment on column T_FLT_MM_PROC_LOGS.old_landing_date_time
  is '(原)落地时间';
comment on column T_FLT_MM_PROC_LOGS.old_flight_date
  is '(原)航班日期';
comment on column T_FLT_MM_PROC_LOGS.old_leg_sequence_number
  is '(原)段号';
comment on column T_FLT_MM_PROC_LOGS.old_flight_service_type_code
  is '(原)航班服务类型';
comment on column T_FLT_MM_PROC_LOGS.old_carrier_code
  is '(原)承运人代码';
comment on column T_FLT_MM_PROC_LOGS.old_fleet_code
  is '(原)机型';
comment on column T_FLT_MM_PROC_LOGS.old_publish_carrier_code
  is '(原)公布承运人';
comment on column T_FLT_MM_PROC_LOGS.old_time_stamp
  is '(原)时间戳';
comment on column T_FLT_MM_PROC_LOGS.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_PROC_LOGS.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_PROC_LOGS.old_fltdate
  is '(原)航班日期(北京时)';
comment on column T_FLT_MM_PROC_LOGS.old_fltno
  is '(原)航班号(承运人)';
create index IDX_PROC_LOGS_FLT on T_FLT_MM_PROC_LOGS (FLTDATE, FLTNO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 44M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_MM_PROC_LOGS
  add constraint PK_MM_PROC_LOGS primary key (LOG_ID, LEG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 31M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_TMPOPS
prompt ==============================
prompt
create table T_FLT_MM_TMPOPS
(
  leg_id                   NUMBER(9) not null,
  fltdate                  DATE,
  fltno                    VARCHAR2(10),
  flight_no                VARCHAR2(10),
  suffix                   VARCHAR2(2),
  carrier                  VARCHAR2(3),
  dept_airport             VARCHAR2(4),
  arr_airport              VARCHAR2(4),
  plan_dept_airport        VARCHAR2(4),
  plan_arr_airport         VARCHAR2(4),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(1000),
  tail_number              VARCHAR2(10),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  flight_date              DATE,
  leg_sequence_number      NUMBER(9),
  flight_service_type_code VARCHAR2(1),
  carrier_code             VARCHAR2(10),
  fleet_code               VARCHAR2(10),
  publish_carrier_code     VARCHAR2(10),
  time_stamp               DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_TMPOPS
  is 'MM视图快照(临时表)';
comment on column T_FLT_MM_TMPOPS.leg_id
  is '航段ID';
comment on column T_FLT_MM_TMPOPS.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_TMPOPS.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_TMPOPS.flight_no
  is '航班号';
comment on column T_FLT_MM_TMPOPS.suffix
  is '后缀';
comment on column T_FLT_MM_TMPOPS.carrier
  is '承运人';
comment on column T_FLT_MM_TMPOPS.dept_airport
  is '起飞站';
comment on column T_FLT_MM_TMPOPS.arr_airport
  is '到达站';
comment on column T_FLT_MM_TMPOPS.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_TMPOPS.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_TMPOPS.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_TMPOPS.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_TMPOPS.status_code
  is '状态';
comment on column T_FLT_MM_TMPOPS.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_TMPOPS.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_TMPOPS.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_TMPOPS.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_TMPOPS.remark
  is '备注';
comment on column T_FLT_MM_TMPOPS.tail_number
  is '飞机号';
comment on column T_FLT_MM_TMPOPS.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_TMPOPS.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_TMPOPS.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_TMPOPS.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_TMPOPS.flight_date
  is '航班日期';
comment on column T_FLT_MM_TMPOPS.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_TMPOPS.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_TMPOPS.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_TMPOPS.fleet_code
  is '机型';
comment on column T_FLT_MM_TMPOPS.publish_carrier_code
  is '发布承运人代码';
comment on column T_FLT_MM_TMPOPS.time_stamp
  is '时间戳';
create index IDX_MM_TMPOPS_FLT on T_FLT_MM_TMPOPS (FLIGHT_DATE, FLIGHT_NO)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 896K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_MM_TMPOPS_FLT2 on T_FLT_MM_TMPOPS (FLTDATE, FLTNO)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_MM_TMPOPS
  add constraint PK_MM_FLIGHT_TMPOPS primary key (LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_MM_TMPOPS_HUG
prompt ==================================
prompt
create table T_FLT_MM_TMPOPS_HUG
(
  leg_id                   NUMBER(9) not null,
  fltdate                  DATE,
  fltno                    VARCHAR2(10),
  flight_no                VARCHAR2(10),
  suffix                   VARCHAR2(2),
  carrier                  VARCHAR2(3),
  dept_airport             VARCHAR2(4),
  arr_airport              VARCHAR2(4),
  plan_dept_airport        VARCHAR2(4),
  plan_arr_airport         VARCHAR2(4),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(1000),
  tail_number              VARCHAR2(10),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  flight_date              DATE,
  leg_sequence_number      NUMBER(9),
  flight_service_type_code VARCHAR2(1),
  carrier_code             VARCHAR2(10),
  fleet_code               VARCHAR2(10),
  publish_carrier_code     VARCHAR2(10),
  time_stamp               DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_MM_TMPOPS_HUG
  is '手动拉取MM视图快照(临时表)大于等于T+3';
comment on column T_FLT_MM_TMPOPS_HUG.leg_id
  is '航段ID';
comment on column T_FLT_MM_TMPOPS_HUG.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_MM_TMPOPS_HUG.fltno
  is '航班号(承运人)';
comment on column T_FLT_MM_TMPOPS_HUG.flight_no
  is '航班号';
comment on column T_FLT_MM_TMPOPS_HUG.suffix
  is '后缀';
comment on column T_FLT_MM_TMPOPS_HUG.carrier
  is '承运人';
comment on column T_FLT_MM_TMPOPS_HUG.dept_airport
  is '起飞站';
comment on column T_FLT_MM_TMPOPS_HUG.arr_airport
  is '到达站';
comment on column T_FLT_MM_TMPOPS_HUG.plan_dept_airport
  is '计划起飞站';
comment on column T_FLT_MM_TMPOPS_HUG.plan_arr_airport
  is '计划到达站';
comment on column T_FLT_MM_TMPOPS_HUG.real_dept_time
  is '实际起飞时间';
comment on column T_FLT_MM_TMPOPS_HUG.real_arr_time
  is '实际到达时间';
comment on column T_FLT_MM_TMPOPS_HUG.status_code
  is '状态';
comment on column T_FLT_MM_TMPOPS_HUG.plan_dept_time
  is '计划起飞时间';
comment on column T_FLT_MM_TMPOPS_HUG.plan_arr_time
  is '计划到达时间';
comment on column T_FLT_MM_TMPOPS_HUG.est_dept_time
  is '预计起飞时间';
comment on column T_FLT_MM_TMPOPS_HUG.est_arr_time
  is '预计到达时间';
comment on column T_FLT_MM_TMPOPS_HUG.remark
  is '备注';
comment on column T_FLT_MM_TMPOPS_HUG.tail_number
  is '飞机号';
comment on column T_FLT_MM_TMPOPS_HUG.block_off_date_time
  is '撤轮挡时间';
comment on column T_FLT_MM_TMPOPS_HUG.block_on_date_time
  is '挡轮挡时间';
comment on column T_FLT_MM_TMPOPS_HUG.take_off_date_time
  is '起飞时间';
comment on column T_FLT_MM_TMPOPS_HUG.landing_date_time
  is '落地时间';
comment on column T_FLT_MM_TMPOPS_HUG.flight_date
  is '航班日期';
comment on column T_FLT_MM_TMPOPS_HUG.leg_sequence_number
  is '段号';
comment on column T_FLT_MM_TMPOPS_HUG.flight_service_type_code
  is '航班服务类型';
comment on column T_FLT_MM_TMPOPS_HUG.carrier_code
  is '承运人代码';
comment on column T_FLT_MM_TMPOPS_HUG.fleet_code
  is '机型';
comment on column T_FLT_MM_TMPOPS_HUG.publish_carrier_code
  is '发布承运人代码';
comment on column T_FLT_MM_TMPOPS_HUG.time_stamp
  is '时间戳';

prompt
prompt Creating table T_FLT_SCHEDULE
prompt =============================
prompt
create table T_FLT_SCHEDULE
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1) default '0',
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1) default 'A',
  sch_com_flag        VARCHAR2(1) default 'N',
  sch_ver_flag        VARCHAR2(1) default 'N',
  sch_pub_flag        VARCHAR2(1) default 'N',
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1) default 'N',
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1) default 'N',
  ftb_rec_flag        VARCHAR2(1) default 'N',
  cust_app_flag       VARCHAR2(1) default 'N',
  fly_hours           NUMBER(6) default 0,
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4) default 0,
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1) default 'P',
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1) default 'N',
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13),
  delay_type          VARCHAR2(2),
  delay_after_takeoff VARCHAR2(1)
)
partition by range (FLIGHT_DATE)
(
  partition FLTSCH_2010 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2012 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 256M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2014 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 544M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 256M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 384K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_FLT_SCHEDULE
  is '??????????';
comment on column T_FLT_SCHEDULE.flight_id
  is '????ID';
comment on column T_FLT_SCHEDULE.flight_date
  is '????????';
comment on column T_FLT_SCHEDULE.carrier
  is '??????';
comment on column T_FLT_SCHEDULE.flight_no
  is '??????';
comment on column T_FLT_SCHEDULE.plan_departure
  is '????????????';
comment on column T_FLT_SCHEDULE.departure_airport
  is '????????????';
comment on column T_FLT_SCHEDULE.plan_arrival
  is '????????????';
comment on column T_FLT_SCHEDULE.arrival_airport
  is '????????????';
comment on column T_FLT_SCHEDULE.std
  is '????????????';
comment on column T_FLT_SCHEDULE.etd
  is '????????????';
comment on column T_FLT_SCHEDULE.atd
  is '????????????';
comment on column T_FLT_SCHEDULE.sta
  is '????????????';
comment on column T_FLT_SCHEDULE.eta
  is '????????????';
comment on column T_FLT_SCHEDULE.ata
  is '????????????';
comment on column T_FLT_SCHEDULE.d_or_i
  is '????/??????D:????,I:????,R:??????';
comment on column T_FLT_SCHEDULE.flight_type
  is '????????';
comment on column T_FLT_SCHEDULE.ac_type
  is '????';
comment on column T_FLT_SCHEDULE.ac_reg
  is '????';
comment on column T_FLT_SCHEDULE.flg_delay
  is '????????';
comment on column T_FLT_SCHEDULE.flg_vr
  is '????/????????';
comment on column T_FLT_SCHEDULE.flg_cs
  is '????????(C????????D????R????)';
comment on column T_FLT_SCHEDULE.flg_patch
  is '????????/??????????';
comment on column T_FLT_SCHEDULE.off_wheel
  is '??????????';
comment on column T_FLT_SCHEDULE.on_wheel
  is '??????????';
comment on column T_FLT_SCHEDULE.ac_owner
  is '????????????';
comment on column T_FLT_SCHEDULE.crew_owner
  is '????????????';
comment on column T_FLT_SCHEDULE.stew_owner
  is '??????????????';
comment on column T_FLT_SCHEDULE.plce_owner
  is '????????????';
comment on column T_FLT_SCHEDULE.mant_owner
  is '????????????';
comment on column T_FLT_SCHEDULE.mm_leg_id
  is 'MM????LEG_ID';
comment on column T_FLT_SCHEDULE.leg_sequence_number
  is '????????';
comment on column T_FLT_SCHEDULE.is_manual
  is '????????((0MM????1????????)';
comment on column T_FLT_SCHEDULE.onward_flight
  is '????????';
comment on column T_FLT_SCHEDULE.ac_layover
  is '??????????????';
comment on column T_FLT_SCHEDULE.flight_flag
  is '????????(A????B????C????D????)';
comment on column T_FLT_SCHEDULE.sch_com_flag
  is '????????????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.sch_ver_flag
  is '????????????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.sch_pub_flag
  is '????????????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.tele_time
  is '????????';
comment on column T_FLT_SCHEDULE.tele_oper
  is '??????';
comment on column T_FLT_SCHEDULE.tele_flag
  is '????????N-O(????)-Y(????)';
comment on column T_FLT_SCHEDULE.ftb_no
  is 'FTB????';
comment on column T_FLT_SCHEDULE.ftb_prn_flag
  is 'FTB????????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.ftb_rec_flag
  is 'FTB????????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.cust_app_flag
  is '????????????????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.fly_hours
  is '????????????(DOC????)';
comment on column T_FLT_SCHEDULE.crew_link_line
  is '????????';
comment on column T_FLT_SCHEDULE.stew_link_line
  is '????????';
comment on column T_FLT_SCHEDULE.plce_link_line
  is '????????';
comment on column T_FLT_SCHEDULE.flight_fen
  is '????????';
comment on column T_FLT_SCHEDULE.oper
  is '??????';
comment on column T_FLT_SCHEDULE.op_time
  is '????????';
comment on column T_FLT_SCHEDULE.remarks
  is '????';
comment on column T_FLT_SCHEDULE.oper_ip
  is 'IP????';
comment on column T_FLT_SCHEDULE.oper_host
  is '??????';
comment on column T_FLT_SCHEDULE.p_or_c
  is '????????';
comment on column T_FLT_SCHEDULE.fxw_id
  is '??????????ID??????????????????';
comment on column T_FLT_SCHEDULE.flg_vip
  is 'vip';
comment on column T_FLT_SCHEDULE.duty_flag
  is '??????N-X(????)-Y(????)';
comment on column T_FLT_SCHEDULE.from_sm
  is '??????????????SM??';
comment on column T_FLT_SCHEDULE.co_old
  is '??????????????';
comment on column T_FLT_SCHEDULE.so_old
  is '??????????????';
comment on column T_FLT_SCHEDULE.po_old
  is '??????????????';
comment on column T_FLT_SCHEDULE.mo_old
  is '??????????????';
comment on column T_FLT_SCHEDULE.dep_bay
  is '??????????????';
comment on column T_FLT_SCHEDULE.arr_bay
  is '??????????????';
comment on column T_FLT_SCHEDULE.fltdate
  is 'AOC????????';
comment on column T_FLT_SCHEDULE.ao_old
  is '??????????';
comment on column T_FLT_SCHEDULE.flight_id_ref
  is '????????????????FLIGHT_ID';
comment on column T_FLT_SCHEDULE.flt_season
  is '????????????';
comment on column T_FLT_SCHEDULE.page_flag
  is '??????????????????????';
comment on column T_FLT_SCHEDULE.ac_link_line
  is '??????(????????)';
comment on column T_FLT_SCHEDULE.sal_id
  is '????FOC????ID??????????????????';
comment on column T_FLT_SCHEDULE.gyts
  is '????????';
comment on column T_FLT_SCHEDULE.turnon
  is '????????????';
comment on column T_FLT_SCHEDULE.block_off_time
  is '??????????????';
comment on column T_FLT_SCHEDULE.block_on_time
  is '??????????????';
comment on column T_FLT_SCHEDULE.turnoff
  is '????????????';
comment on column T_FLT_SCHEDULE.block_time
  is '????????????????????';
comment on column T_FLT_SCHEDULE.mm_leg_id_add
  is 'MM????LEG_ID(????????T+3)';
comment on column T_FLT_SCHEDULE.delay_type
  is '延误类型(B起飞前延误 A起飞后延误 BA起飞前和起飞后延误 )';
comment on column T_FLT_SCHEDULE.delay_after_takeoff
  is '起飞后延误';
create index IDX_FLTSCH_CREWLINKLINE on T_FLT_SCHEDULE (FLIGHT_DATE, CREW_LINK_LINE)
  nologging  local;
create index IDX_FLTSCH_FXWID on T_FLT_SCHEDULE (FXW_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 13M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLTSCH_MMID on T_FLT_SCHEDULE (MM_LEG_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 96M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLTSCH_OPTIME on T_FLT_SCHEDULE (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1821M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLT_CREWLINKLINE on T_FLT_SCHEDULE (CREW_LINK_LINE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 208M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLT_PLAN on T_FLT_SCHEDULE (FLIGHT_DATE, FLIGHT_NO)
  nologging  local;
create index IDX_FLT_PLAN3 on T_FLT_SCHEDULE (STD, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 200M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLT_PLAN4 on T_FLT_SCHEDULE (FLTDATE, FLIGHT_NO)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 177M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FTB_NO on T_FLT_SCHEDULE (FTB_NO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 80M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IFX_FLTSCH_IDREF on T_FLT_SCHEDULE (FLIGHT_ID_REF)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_SCHEDULE
  add constraint PK_FLT_SCHEDULE primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 144M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE2
prompt ==============================
prompt
create table T_FLT_SCHEDULE2
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE2013
prompt =================================
prompt
create table T_FLT_SCHEDULE2013
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 240M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20141029
prompt =====================================
prompt
create table T_FLT_SCHEDULE20141029
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 17M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20141205
prompt =====================================
prompt
create table T_FLT_SCHEDULE20141205
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 19M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150101
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150101
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 50M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150204
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150204
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 20M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150212AC_REG
prompt ===========================================
prompt
create table T_FLT_SCHEDULE20150212AC_REG
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 28M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150302
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150302
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 18M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150401
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150401
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 18M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150402
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150402
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 19M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150505
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150505
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 20M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150604
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150604
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 20M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150703
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150703
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 22M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150806
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150806
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 24M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20150907
prompt =====================================
prompt
create table T_FLT_SCHEDULE20150907
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 22M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20151010
prompt =====================================
prompt
create table T_FLT_SCHEDULE20151010
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 19M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20151102
prompt =====================================
prompt
create table T_FLT_SCHEDULE20151102
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 19M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20151208
prompt =====================================
prompt
create table T_FLT_SCHEDULE20151208
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160101
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160101
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160129_DEL
prompt =========================================
prompt
create table T_FLT_SCHEDULE20160129_DEL
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160202
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160202
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160303
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160303
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 18M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160407
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160407
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160503
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160503
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160602
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160602
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160707
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160707
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 24M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160720
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160720
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160809
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160809
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 25M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE20160906
prompt =====================================
prompt
create table T_FLT_SCHEDULE20160906
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 23M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE2016_G
prompt ===================================
prompt
create table T_FLT_SCHEDULE2016_G
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULEFLG_V
prompt ==================================
prompt
create table T_FLT_SCHEDULEFLG_V
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_521
prompt =================================
prompt
create table T_FLT_SCHEDULE_521
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_5435
prompt ==================================
prompt
create table T_FLT_SCHEDULE_5435
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_AC_TYPE1019
prompt =========================================
prompt
create table T_FLT_SCHEDULE_AC_TYPE1019
(
  flight_id NUMBER(11) not null,
  航班机型      VARCHAR2(10),
  航班机型组     VARCHAR2(10),
  飞机机型      VARCHAR2(10) not null,
  飞机机型组     VARCHAR2(10),
  飞机机号      VARCHAR2(10),
  是否同步      VARCHAR2(10),
  后台执行时间    DATE,
  航班日期      DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_CANCEL
prompt ====================================
prompt
create table T_FLT_SCHEDULE_CANCEL
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_C_WRONG
prompt =====================================
prompt
create table T_FLT_SCHEDULE_C_WRONG
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_OLD
prompt =================================
prompt
create table T_FLT_SCHEDULE_OLD
(
  flight_id           NUMBER(11),
  flight_date         DATE,
  carrier             VARCHAR2(10),
  flight_no           VARCHAR2(15),
  plan_departure      VARCHAR2(4),
  departure_airport   VARCHAR2(4),
  plan_arrival        VARCHAR2(4),
  arrival_airport     VARCHAR2(4),
  std                 DATE,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_TEST
prompt ==================================
prompt
create table T_FLT_SCHEDULE_TEST
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1) default '0',
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1) default 'A',
  sch_com_flag        VARCHAR2(1) default 'N',
  sch_ver_flag        VARCHAR2(1) default 'N',
  sch_pub_flag        VARCHAR2(1) default 'N',
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1) default 'N',
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1) default 'N',
  ftb_rec_flag        VARCHAR2(1) default 'N',
  cust_app_flag       VARCHAR2(1) default 'N',
  fly_hours           NUMBER(6) default 0,
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4) default 0,
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1) default 'P',
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1) default 'N',
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13),
  plan_id             NUMBER(13) not null
)
partition by range (FLIGHT_DATE)
(
  partition FLTSCH_2010 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2012 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 256M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2014 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 544M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 256M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition FLTSCH_2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace FLTSCH_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 384K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_FLT_SCHEDULE_TEST
  is '航班计划表';
comment on column T_FLT_SCHEDULE_TEST.flight_id
  is '航班ID';
comment on column T_FLT_SCHEDULE_TEST.flight_date
  is '航班日期';
comment on column T_FLT_SCHEDULE_TEST.carrier
  is '承运人';
comment on column T_FLT_SCHEDULE_TEST.flight_no
  is '航班号';
comment on column T_FLT_SCHEDULE_TEST.plan_departure
  is '计划起飞机场';
comment on column T_FLT_SCHEDULE_TEST.departure_airport
  is '实际起飞机场';
comment on column T_FLT_SCHEDULE_TEST.plan_arrival
  is '计划到达机场';
comment on column T_FLT_SCHEDULE_TEST.arrival_airport
  is '实际到达机场';
comment on column T_FLT_SCHEDULE_TEST.std
  is '计划起飞时间';
comment on column T_FLT_SCHEDULE_TEST.etd
  is '预计起飞时间';
comment on column T_FLT_SCHEDULE_TEST.atd
  is '实际起飞时间';
comment on column T_FLT_SCHEDULE_TEST.sta
  is '计划到达时间';
comment on column T_FLT_SCHEDULE_TEST.eta
  is '预计到达时间';
comment on column T_FLT_SCHEDULE_TEST.ata
  is '实际到达时间';
comment on column T_FLT_SCHEDULE_TEST.d_or_i
  is '国际/国内（D:国内,I:国际,R:地区）';
comment on column T_FLT_SCHEDULE_TEST.flight_type
  is '航班性质';
comment on column T_FLT_SCHEDULE_TEST.ac_type
  is '机型';
comment on column T_FLT_SCHEDULE_TEST.ac_reg
  is '机号';
comment on column T_FLT_SCHEDULE_TEST.flg_delay
  is '延误标记';
comment on column T_FLT_SCHEDULE_TEST.flg_vr
  is '返航/备降标记';
comment on column T_FLT_SCHEDULE_TEST.flg_cs
  is '取消标记(C计划取消D取消R恢复)';
comment on column T_FLT_SCHEDULE_TEST.flg_patch
  is '是否返航/备降新增段';
comment on column T_FLT_SCHEDULE_TEST.off_wheel
  is '撤轮档时间';
comment on column T_FLT_SCHEDULE_TEST.on_wheel
  is '挡轮档时间';
comment on column T_FLT_SCHEDULE_TEST.ac_owner
  is '飞机执管单位';
comment on column T_FLT_SCHEDULE_TEST.crew_owner
  is '飞行执飞单位';
comment on column T_FLT_SCHEDULE_TEST.stew_owner
  is '乘务员执飞单位';
comment on column T_FLT_SCHEDULE_TEST.plce_owner
  is '空警执飞单位';
comment on column T_FLT_SCHEDULE_TEST.mant_owner
  is '机务执飞单位';
comment on column T_FLT_SCHEDULE_TEST.mm_leg_id
  is 'MM系统LEG_ID';
comment on column T_FLT_SCHEDULE_TEST.leg_sequence_number
  is '航段序号';
comment on column T_FLT_SCHEDULE_TEST.is_manual
  is '手工新增((0MM导入1手工新增)';
comment on column T_FLT_SCHEDULE_TEST.onward_flight
  is '后续航班';
comment on column T_FLT_SCHEDULE_TEST.ac_layover
  is '后续航班跨天数';
comment on column T_FLT_SCHEDULE_TEST.flight_flag
  is '航班标记(A正常B备份C本场D摆渡)';
comment on column T_FLT_SCHEDULE_TEST.sch_com_flag
  is '计划提交标志N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.sch_ver_flag
  is '计划审核标志N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.sch_pub_flag
  is '计划发布标志N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.tele_time
  is '发报时间';
comment on column T_FLT_SCHEDULE_TEST.tele_oper
  is '发报人';
comment on column T_FLT_SCHEDULE_TEST.tele_flag
  is '发报标记N-O(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.ftb_no
  is 'FTB编号';
comment on column T_FLT_SCHEDULE_TEST.ftb_prn_flag
  is 'FTB打印标志N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.ftb_rec_flag
  is 'FTB回收标志N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.cust_app_flag
  is '出入境单生成标志N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.fly_hours
  is '经验飞行时间(DOC获取)';
comment on column T_FLT_SCHEDULE_TEST.crew_link_line
  is '飞行联班';
comment on column T_FLT_SCHEDULE_TEST.stew_link_line
  is '乘务联班';
comment on column T_FLT_SCHEDULE_TEST.plce_link_line
  is '空警联班';
comment on column T_FLT_SCHEDULE_TEST.flight_fen
  is '航班积分';
comment on column T_FLT_SCHEDULE_TEST.oper
  is '操作人';
comment on column T_FLT_SCHEDULE_TEST.op_time
  is '操作时间';
comment on column T_FLT_SCHEDULE_TEST.remarks
  is '备注';
comment on column T_FLT_SCHEDULE_TEST.oper_ip
  is 'IP地址';
comment on column T_FLT_SCHEDULE_TEST.oper_host
  is '主机名';
comment on column T_FLT_SCHEDULE_TEST.p_or_c
  is '客货标志';
comment on column T_FLT_SCHEDULE_TEST.fxw_id
  is '飞行网航班ID（导入历史数据用）';
comment on column T_FLT_SCHEDULE_TEST.flg_vip
  is 'vip';
comment on column T_FLT_SCHEDULE_TEST.duty_flag
  is '值班锁N-X(看过)-Y(通过)';
comment on column T_FLT_SCHEDULE_TEST.from_sm
  is '数据来源（来自SM）';
comment on column T_FLT_SCHEDULE_TEST.co_old
  is '原飞行执飞单位';
comment on column T_FLT_SCHEDULE_TEST.so_old
  is '原乘务执飞单位';
comment on column T_FLT_SCHEDULE_TEST.po_old
  is '原空警执飞单位';
comment on column T_FLT_SCHEDULE_TEST.mo_old
  is '原机组跟班单位';
comment on column T_FLT_SCHEDULE_TEST.dep_bay
  is '起飞机场停机位';
comment on column T_FLT_SCHEDULE_TEST.arr_bay
  is '到达机场停机位';
comment on column T_FLT_SCHEDULE_TEST.fltdate
  is 'AOC航班日期';
comment on column T_FLT_SCHEDULE_TEST.ao_old
  is '原执管单位';
comment on column T_FLT_SCHEDULE_TEST.flight_id_ref
  is '所指向的正常航班FLIGHT_ID';
comment on column T_FLT_SCHEDULE_TEST.flt_season
  is '版本结束日期';
comment on column T_FLT_SCHEDULE_TEST.page_flag
  is '分页（来回程跨天）标志';
comment on column T_FLT_SCHEDULE_TEST.ac_link_line
  is '运力号(手工生成)';
comment on column T_FLT_SCHEDULE_TEST.sal_id
  is '上航FOC航班ID（导入历史数据用）';
comment on column T_FLT_SCHEDULE_TEST.gyts
  is '过夜天数';
comment on column T_FLT_SCHEDULE_TEST.turnon
  is '现保开车时间';
comment on column T_FLT_SCHEDULE_TEST.block_off_time
  is '现保撤轮挡时间';
comment on column T_FLT_SCHEDULE_TEST.block_on_time
  is '现保上轮挡时间';
comment on column T_FLT_SCHEDULE_TEST.turnoff
  is '现保关车时间';
comment on column T_FLT_SCHEDULE_TEST.block_time
  is '现保接口最后修改时间';
comment on column T_FLT_SCHEDULE_TEST.mm_leg_id_add
  is 'MM系统LEG_ID(大于等于T+3)';
comment on column T_FLT_SCHEDULE_TEST.plan_id
  is '方案ID';
create index IDX_FLTSCH_TEST_CREWLINKLINE on T_FLT_SCHEDULE_TEST (FLIGHT_DATE, CREW_LINK_LINE)
  nologging  local;
create index IDX_FLTSCH_TEST_FXWID on T_FLT_SCHEDULE_TEST (FXW_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 13M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLTSCH_TEST_MMID on T_FLT_SCHEDULE_TEST (MM_LEG_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLTSCH_TEST_OPTIME on T_FLT_SCHEDULE_TEST (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLT_TEST_CREWLINKLINE on T_FLT_SCHEDULE_TEST (CREW_LINK_LINE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLT_TEST_PLAN on T_FLT_SCHEDULE_TEST (FLIGHT_DATE, FLIGHT_NO)
  nologging  local;
create index IDX_FLT_TEST_PLAN3 on T_FLT_SCHEDULE_TEST (STD, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLT_TEST_PLAN4 on T_FLT_SCHEDULE_TEST (FLTDATE, FLIGHT_NO)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FTB_NO_TEST on T_FLT_SCHEDULE_TEST (FTB_NO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IFX_FLTSCH_TEST_IDREF on T_FLT_SCHEDULE_TEST (FLIGHT_ID_REF)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_SCHEDULE_TEST
  add constraint PK_FLT_TEST_SCHEDULE primary key (PLAN_ID, FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_UNIFIED
prompt =====================================
prompt
create table T_FLT_SCHEDULE_UNIFIED
(
  mm_leg_id   NUMBER(13) not null,
  flight_date DATE not null,
  remark      NVARCHAR2(200),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_SCHEDULE_UNIFIED
  is '航班统一运行标识中间表';
comment on column T_FLT_SCHEDULE_UNIFIED.mm_leg_id
  is 'MM系统的leg_id';
comment on column T_FLT_SCHEDULE_UNIFIED.flight_date
  is 'MM系统的航班号';
comment on column T_FLT_SCHEDULE_UNIFIED.remark
  is '如果该航班是统一运行的航班，该值为：统一运行航线验证';
comment on column T_FLT_SCHEDULE_UNIFIED.op_time
  is '操作时间';
create index IDX_FLIGHT_DATE on T_FLT_SCHEDULE_UNIFIED (FLIGHT_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_SCHEDULE_UNIFIED
  add constraint PK_FLT_UNIFIED primary key (MM_LEG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_UNIFIED_HIS
prompt =========================================
prompt
create table T_FLT_SCHEDULE_UNIFIED_HIS
(
  row_auto_id NUMBER(13) not null,
  mm_leg_id   NUMBER(13) not null,
  flight_date DATE not null,
  remark      NVARCHAR2(200),
  iu          VARCHAR2(1),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_SCHEDULE_UNIFIED_HIS
  is '航班统一运行标识中间表的历史痕迹表';
comment on column T_FLT_SCHEDULE_UNIFIED_HIS.row_auto_id
  is '该表的自增字段，sequence:SEQ_FLT_UNIFIED';
comment on column T_FLT_SCHEDULE_UNIFIED_HIS.mm_leg_id
  is 'MM系统的leg_id';
comment on column T_FLT_SCHEDULE_UNIFIED_HIS.flight_date
  is 'MM系统的航班号';
comment on column T_FLT_SCHEDULE_UNIFIED_HIS.remark
  is '如果该航班是统一运行的航班，该值为：统一运行航线验证';
comment on column T_FLT_SCHEDULE_UNIFIED_HIS.iu
  is 'I增,U改';
comment on column T_FLT_SCHEDULE_UNIFIED_HIS.op_time
  is '操作时间';
create index IDX_MM_LEG_ID on T_FLT_SCHEDULE_UNIFIED_HIS (MM_LEG_ID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_SCHEDULE_UNIFIED_HIS
  add constraint PK_FLT_UNIFIED_HIS primary key (ROW_AUTO_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SCHEDULE_ZXL20151016
prompt =========================================
prompt
create table T_FLT_SCHEDULE_ZXL20151016
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4) not null,
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4) not null,
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1),
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1),
  sch_com_flag        VARCHAR2(1),
  sch_ver_flag        VARCHAR2(1),
  sch_pub_flag        VARCHAR2(1),
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1),
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1),
  ftb_rec_flag        VARCHAR2(1),
  cust_app_flag       VARCHAR2(1),
  fly_hours           NUMBER(6),
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4),
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1),
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1),
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SEASON
prompt ===========================
prompt
create table T_FLT_SEASON
(
  sn_code    VARCHAR2(10) not null,
  sn_name    VARCHAR2(50) not null,
  start_date DATE not null,
  end_date   DATE not null,
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FLT_SEASON
  is '航季表';
comment on column T_FLT_SEASON.sn_code
  is '航季代码';
comment on column T_FLT_SEASON.sn_name
  is '航季名称';
comment on column T_FLT_SEASON.start_date
  is '开始日期';
comment on column T_FLT_SEASON.end_date
  is '结束日期';
comment on column T_FLT_SEASON.oper
  is '操作人';
comment on column T_FLT_SEASON.op_time
  is '操作时间';
comment on column T_FLT_SEASON.remarks
  is '备注';
comment on column T_FLT_SEASON.oper_ip
  is 'IP地址';
comment on column T_FLT_SEASON.oper_host
  is '主机名';
alter table T_FLT_SEASON
  add constraint PK_FLT_SEASON primary key (SN_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_SSIM
prompt =========================
prompt
create table T_FLT_SSIM
(
  ssim_seq_id     NUMBER(9) not null,
  airline_2code   VARCHAR2(3),
  schedule_start  DATE,
  schedule_end    DATE,
  time_mode       CHAR(1),
  create_date     DATE,
  schedule_status CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_SSIM
  is 'SSIM主表';
comment on column T_FLT_SSIM.ssim_seq_id
  is 'SSIM序列号';
comment on column T_FLT_SSIM.airline_2code
  is '承运人';
comment on column T_FLT_SSIM.schedule_start
  is '计划开始日期';
comment on column T_FLT_SSIM.schedule_end
  is '计划结束日期';
comment on column T_FLT_SSIM.time_mode
  is '时间类型';
comment on column T_FLT_SSIM.create_date
  is '创建日期';
comment on column T_FLT_SSIM.schedule_status
  is '计划状态';
alter table T_FLT_SSIM
  add constraint PK_SSIM primary key (SSIM_SEQ_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_20170510
prompt ==================================
prompt
create table T_FLT_SSIM_20170510
(
  ssim_seq_id     NUMBER(9) not null,
  airline_2code   VARCHAR2(3),
  schedule_start  DATE,
  schedule_end    DATE,
  time_mode       CHAR(1),
  create_date     DATE,
  schedule_status CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_LEGS
prompt ==============================
prompt
create table T_FLT_SSIM_LEGS
(
  ssim_seq_id       NUMBER(9) not null,
  flight_no         VARCHAR2(10) not null,
  itinerary_idx     NUMBER(2) not null,
  leg_idx           NUMBER(2) not null,
  oper_start        DATE not null,
  oper_end          DATE,
  weeks             VARCHAR2(7),
  flight_type       VARCHAR2(1),
  departure_airport VARCHAR2(3),
  std               DATE,
  arrival_airport   VARCHAR2(3),
  sta               DATE,
  std_date_var      VARCHAR2(1),
  sta_date_var      VARCHAR2(1),
  ac_type           VARCHAR2(10),
  layout            VARCHAR2(20),
  d_or_i            VARCHAR2(1),
  onward_flight     VARCHAR2(10),
  ac_layover        VARCHAR2(1),
  line_no           NUMBER(6),
  std_var           VARCHAR2(5),
  sta_var           VARCHAR2(5),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_SSIM_LEGS
  is 'SSIM航段信息';
comment on column T_FLT_SSIM_LEGS.ssim_seq_id
  is 'SSIM序列号';
comment on column T_FLT_SSIM_LEGS.flight_no
  is '航班号';
comment on column T_FLT_SSIM_LEGS.itinerary_idx
  is '航程编号';
comment on column T_FLT_SSIM_LEGS.leg_idx
  is '航段编号';
comment on column T_FLT_SSIM_LEGS.oper_start
  is '起始日期';
comment on column T_FLT_SSIM_LEGS.oper_end
  is '结束日期';
comment on column T_FLT_SSIM_LEGS.weeks
  is '班期';
comment on column T_FLT_SSIM_LEGS.flight_type
  is '航班性质';
comment on column T_FLT_SSIM_LEGS.departure_airport
  is '起飞站';
comment on column T_FLT_SSIM_LEGS.std
  is '起飞时间';
comment on column T_FLT_SSIM_LEGS.arrival_airport
  is '到达站';
comment on column T_FLT_SSIM_LEGS.sta
  is '到达时间';
comment on column T_FLT_SSIM_LEGS.std_date_var
  is '起飞跨天';
comment on column T_FLT_SSIM_LEGS.sta_date_var
  is '落地跨天';
comment on column T_FLT_SSIM_LEGS.ac_type
  is '机型';
comment on column T_FLT_SSIM_LEGS.layout
  is '布局';
comment on column T_FLT_SSIM_LEGS.d_or_i
  is '国际/国内';
comment on column T_FLT_SSIM_LEGS.onward_flight
  is '后续航班';
comment on column T_FLT_SSIM_LEGS.ac_layover
  is '是否过夜';
comment on column T_FLT_SSIM_LEGS.line_no
  is '行号';
comment on column T_FLT_SSIM_LEGS.std_var
  is '起飞时差';
comment on column T_FLT_SSIM_LEGS.sta_var
  is '到达时差';
comment on column T_FLT_SSIM_LEGS.ac_owner
  is '飞机执管单位';
comment on column T_FLT_SSIM_LEGS.crew_owner
  is '飞行执飞单位';
comment on column T_FLT_SSIM_LEGS.stew_owner
  is '乘务执飞单位';
comment on column T_FLT_SSIM_LEGS.plce_owner
  is '空警执飞单位';
alter table T_FLT_SSIM_LEGS
  add constraint PK_SSIM_LEGS primary key (SSIM_SEQ_ID, FLIGHT_NO, ITINERARY_IDX, LEG_IDX, OPER_START)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_LEGS_20170510
prompt =======================================
prompt
create table T_FLT_SSIM_LEGS_20170510
(
  ssim_seq_id       NUMBER(9) not null,
  flight_no         VARCHAR2(10) not null,
  itinerary_idx     NUMBER(2) not null,
  leg_idx           NUMBER(2) not null,
  oper_start        DATE not null,
  oper_end          DATE,
  weeks             VARCHAR2(7),
  flight_type       VARCHAR2(1),
  departure_airport VARCHAR2(3),
  std               DATE,
  arrival_airport   VARCHAR2(3),
  sta               DATE,
  std_date_var      VARCHAR2(1),
  sta_date_var      VARCHAR2(1),
  ac_type           VARCHAR2(10),
  layout            VARCHAR2(20),
  d_or_i            VARCHAR2(1),
  onward_flight     VARCHAR2(10),
  ac_layover        VARCHAR2(1),
  line_no           NUMBER(6),
  std_var           VARCHAR2(5),
  sta_var           VARCHAR2(5),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_SCH
prompt =============================
prompt
create table T_FLT_SSIM_SCH
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport CHAR(3) not null,
  arrival_airport   CHAR(3) not null,
  std               DATE not null,
  sta               DATE,
  carrier           CHAR(2),
  flight_type       CHAR(1),
  leg_idx           NUMBER(2),
  d_or_i            CHAR(1),
  ac_type           CHAR(3),
  layout            VARCHAR2(20),
  onward_flight     VARCHAR2(10),
  ac_layover        CHAR(1),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3),
  ac_link_line      NUMBER(5),
  fltdate           DATE,
  fltno             VARCHAR2(10),
  poption           VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 35M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FLT_SSIM_SCH
  is 'SSIM日计划表';
comment on column T_FLT_SSIM_SCH.flight_date
  is '航班日期';
comment on column T_FLT_SSIM_SCH.flight_no
  is '航班号';
comment on column T_FLT_SSIM_SCH.departure_airport
  is '起飞站';
comment on column T_FLT_SSIM_SCH.arrival_airport
  is '到达站';
comment on column T_FLT_SSIM_SCH.std
  is '起飞时间';
comment on column T_FLT_SSIM_SCH.sta
  is '到达时间';
comment on column T_FLT_SSIM_SCH.carrier
  is '承运人';
comment on column T_FLT_SSIM_SCH.flight_type
  is '航班性质';
comment on column T_FLT_SSIM_SCH.leg_idx
  is '航段序号';
comment on column T_FLT_SSIM_SCH.d_or_i
  is '国际/国内';
comment on column T_FLT_SSIM_SCH.ac_type
  is '机型';
comment on column T_FLT_SSIM_SCH.layout
  is '布局';
comment on column T_FLT_SSIM_SCH.onward_flight
  is '后续航班';
comment on column T_FLT_SSIM_SCH.ac_layover
  is '后续航班过夜天数';
comment on column T_FLT_SSIM_SCH.ac_owner
  is '飞机执管单位';
comment on column T_FLT_SSIM_SCH.crew_owner
  is '飞行执飞单位';
comment on column T_FLT_SSIM_SCH.stew_owner
  is '乘务执飞单位';
comment on column T_FLT_SSIM_SCH.plce_owner
  is '空警执飞单位';
comment on column T_FLT_SSIM_SCH.ac_link_line
  is '飞机联线号';
comment on column T_FLT_SSIM_SCH.fltdate
  is '航班日期(北京时)';
comment on column T_FLT_SSIM_SCH.fltno
  is '航班号(承运人)';
comment on column T_FLT_SSIM_SCH.poption
  is '版本';
create index IDX_SSIM_SCH_ROUTE on T_FLT_SSIM_SCH (DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 11M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_FLT_SSIM_SCH
  add constraint PK_SSIM_T1006 primary key (FLIGHT_DATE, FLIGHT_NO, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, STD)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 45M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_SCH20141014
prompt =====================================
prompt
create table T_FLT_SSIM_SCH20141014
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport CHAR(3) not null,
  arrival_airport   CHAR(3) not null,
  std               DATE not null,
  sta               DATE,
  carrier           CHAR(2),
  flight_type       CHAR(1),
  leg_idx           NUMBER(2),
  d_or_i            CHAR(1),
  ac_type           CHAR(3),
  layout            VARCHAR2(20),
  onward_flight     VARCHAR2(10),
  ac_layover        CHAR(1),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3),
  ac_link_line      NUMBER(5),
  fltdate           DATE,
  fltno             VARCHAR2(10),
  poption           VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 26M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_SCH20151013
prompt =====================================
prompt
create table T_FLT_SSIM_SCH20151013
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport CHAR(3) not null,
  arrival_airport   CHAR(3) not null,
  std               DATE not null,
  sta               DATE,
  carrier           CHAR(2),
  flight_type       CHAR(1),
  leg_idx           NUMBER(2),
  d_or_i            CHAR(1),
  ac_type           CHAR(3),
  layout            VARCHAR2(20),
  onward_flight     VARCHAR2(10),
  ac_layover        CHAR(1),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3),
  ac_link_line      NUMBER(5),
  fltdate           DATE,
  fltno             VARCHAR2(10),
  poption           VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 31M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_SCH20160222
prompt =====================================
prompt
create table T_FLT_SSIM_SCH20160222
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport CHAR(3) not null,
  arrival_airport   CHAR(3) not null,
  std               DATE not null,
  sta               DATE,
  carrier           CHAR(2),
  flight_type       CHAR(1),
  leg_idx           NUMBER(2),
  d_or_i            CHAR(1),
  ac_type           CHAR(3),
  layout            VARCHAR2(20),
  onward_flight     VARCHAR2(10),
  ac_layover        CHAR(1),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3),
  ac_link_line      NUMBER(5),
  fltdate           DATE,
  fltno             VARCHAR2(10),
  poption           VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSIM_SCH_20170510
prompt ======================================
prompt
create table T_FLT_SSIM_SCH_20170510
(
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport CHAR(3) not null,
  arrival_airport   CHAR(3) not null,
  std               DATE not null,
  sta               DATE,
  carrier           CHAR(2),
  flight_type       CHAR(1),
  leg_idx           NUMBER(2),
  d_or_i            CHAR(1),
  ac_type           CHAR(3),
  layout            VARCHAR2(20),
  onward_flight     VARCHAR2(10),
  ac_layover        CHAR(1),
  ac_owner          VARCHAR2(3),
  crew_owner        VARCHAR2(3),
  stew_owner        VARCHAR2(3),
  plce_owner        VARCHAR2(3),
  ac_link_line      NUMBER(5),
  fltdate           DATE,
  fltno             VARCHAR2(10),
  poption           VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 37M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FLT_SSM
prompt ========================
prompt
create table T_FLT_SSM
(
  schedule    VARCHAR2(50) not null,
  version     VARCHAR2(5) not null,
  create_time DATE,
  filename    VARCHAR2(100),
  flg_proc    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FLT_SSM
  is 'SSM主表';
comment on column T_FLT_SSM.schedule
  is '计划名称';
comment on column T_FLT_SSM.version
  is '计划版本';
comment on column T_FLT_SSM.create_time
  is '发布日期';
comment on column T_FLT_SSM.filename
  is '文件名';
comment on column T_FLT_SSM.flg_proc
  is '更新状态';
alter table T_FLT_SSM
  add constraint PK_SSM primary key (SCHEDULE, VERSION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FLT_SSM_MSG
prompt ============================
prompt
create table T_FLT_SSM_MSG
(
  ssm_seq_id  NUMBER(9) not null,
  content     VARCHAR2(1000),
  adjust_type CHAR(3),
  time_mode   VARCHAR2(3),
  message_ref VARCHAR2(15),
  flg_parse   CHAR(1),
  flg_proc    CHAR(1),
  schedule    VARCHAR2(50),
  version     VARCHAR2(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FLT_SSM_MSG
  is 'SSM变更信息表';
comment on column T_FLT_SSM_MSG.ssm_seq_id
  is 'SSM序列号';
comment on column T_FLT_SSM_MSG.content
  is '原文';
comment on column T_FLT_SSM_MSG.adjust_type
  is '调整类型';
comment on column T_FLT_SSM_MSG.time_mode
  is '时间类型';
comment on column T_FLT_SSM_MSG.message_ref
  is '消息序号';
comment on column T_FLT_SSM_MSG.flg_parse
  is '分解状态';
comment on column T_FLT_SSM_MSG.flg_proc
  is '更新状态';
comment on column T_FLT_SSM_MSG.schedule
  is '计划名称';
comment on column T_FLT_SSM_MSG.version
  is '计划版本';
alter table T_FLT_SSM_MSG
  add constraint PK_SSM_MESSAGE primary key (SSM_SEQ_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_FLT_SSM_MSG
  add constraint FK_SSMLEG_SSM foreign key (SCHEDULE, VERSION)
  references T_FLT_SSM (SCHEDULE, VERSION);

prompt
prompt Creating table T_FLT_SSM_LEGS
prompt =============================
prompt
create table T_FLT_SSM_LEGS
(
  ssm_seq_id        NUMBER(9) not null,
  idx               NUMBER(2) not null,
  flight_no         VARCHAR2(10),
  oper_start        DATE,
  oper_end          DATE,
  weeks             VARCHAR2(7),
  flight_type       VARCHAR2(1),
  ac_type           VARCHAR2(3),
  layout            VARCHAR2(20),
  dept_airport      VARCHAR2(3),
  std               DATE,
  std_var           NUMBER(1),
  arr_airport       VARCHAR2(3),
  sta               DATE,
  sta_var           NUMBER(1),
  onward_flight     VARCHAR2(10),
  ac_layover        VARCHAR2(2),
  origin_flight_no  VARCHAR2(10),
  origin_start_date DATE,
  origin_end_date   DATE,
  origin_weeks      VARCHAR2(7),
  flg_proc          CHAR(1),
  proc_err_txt      VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FLT_SSM_LEGS
  is 'SSM变更航段表';
comment on column T_FLT_SSM_LEGS.ssm_seq_id
  is 'SSM序列号';
comment on column T_FLT_SSM_LEGS.idx
  is '序号';
comment on column T_FLT_SSM_LEGS.flight_no
  is '航班号';
comment on column T_FLT_SSM_LEGS.oper_start
  is '起始日期';
comment on column T_FLT_SSM_LEGS.oper_end
  is '结束日期';
comment on column T_FLT_SSM_LEGS.weeks
  is '班期';
comment on column T_FLT_SSM_LEGS.flight_type
  is '航班性质';
comment on column T_FLT_SSM_LEGS.ac_type
  is '机型';
comment on column T_FLT_SSM_LEGS.layout
  is '布局';
comment on column T_FLT_SSM_LEGS.dept_airport
  is '起飞站';
comment on column T_FLT_SSM_LEGS.std
  is '起飞时间';
comment on column T_FLT_SSM_LEGS.std_var
  is '起飞跨天';
comment on column T_FLT_SSM_LEGS.arr_airport
  is '到达站';
comment on column T_FLT_SSM_LEGS.sta
  is '到达时间';
comment on column T_FLT_SSM_LEGS.sta_var
  is '到达跨天';
comment on column T_FLT_SSM_LEGS.onward_flight
  is '后续航班';
comment on column T_FLT_SSM_LEGS.ac_layover
  is '飞机过夜';
comment on column T_FLT_SSM_LEGS.origin_flight_no
  is '原航班号';
comment on column T_FLT_SSM_LEGS.origin_start_date
  is '原开始日期';
comment on column T_FLT_SSM_LEGS.origin_end_date
  is '原结束日期';
comment on column T_FLT_SSM_LEGS.origin_weeks
  is '原班期';
comment on column T_FLT_SSM_LEGS.flg_proc
  is '更新状态';
comment on column T_FLT_SSM_LEGS.proc_err_txt
  is '错误信息';
alter table T_FLT_SSM_LEGS
  add constraint PK_SSM_LEGS primary key (SSM_SEQ_ID, IDX)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_FLT_SSM_LEGS
  add constraint FK_SSMLEG_SSMMSG foreign key (SSM_SEQ_ID)
  references T_FLT_SSM_MSG (SSM_SEQ_ID);

prompt
prompt Creating table T_FXW_CREW
prompt =========================
prompt
create table T_FXW_CREW
(
  basic_info_id       VARCHAR2(20) not null,
  clerk_code          VARCHAR2(20),
  pilot_name          VARCHAR2(60),
  short_name          VARCHAR2(60),
  eng_surname         VARCHAR2(60),
  eng_name            VARCHAR2(60),
  native_place        VARCHAR2(100),
  birthday            DATE,
  sex                 VARCHAR2(20),
  id_code             VARCHAR2(20),
  org_code            VARCHAR2(10),
  aero_unit_code      VARCHAR2(10),
  execute_duty        VARCHAR2(30),
  execute_level       VARCHAR2(30),
  civil_aviation_date DATE,
  work_date           DATE,
  graduate_academy    VARCHAR2(50),
  enter_date          DATE,
  graduate_date       DATE,
  culture_degree      VARCHAR2(10),
  speciality          VARCHAR2(10),
  work_type           VARCHAR2(10),
  family_address      VARCHAR2(100),
  family_tel          VARCHAR2(20),
  office_tel          VARCHAR2(20),
  mobile_tel          VARCHAR2(20),
  stature             NUMBER(3),
  marriage_status     VARCHAR2(10),
  enter_party_date    DATE,
  board_card_no       VARCHAR2(20),
  nationality         VARCHAR2(10),
  remarks             VARCHAR2(100),
  polity              VARCHAR2(10),
  temp_unit_code      VARCHAR2(10),
  creator             VARCHAR2(10),
  create_date         DATE,
  weight              NUMBER(3),
  ce_aviation_date    DATE,
  eng_nationality     VARCHAR2(10),
  eng_nat_code3       VARCHAR2(10),
  icao_eng            VARCHAR2(10),
  route_eng           VARCHAR2(100),
  health_level        VARCHAR2(60),
  last_modifier       VARCHAR2(10),
  last_modify_time    DATE,
  validity            VARCHAR2(1),
  status              VARCHAR2(10),
  icao_valid_date     DATE,
  icao_invalid_date   DATE,
  eng_native_place    VARCHAR2(50),
  eng_family_address  VARCHAR2(100),
  exec_dept_code      VARCHAR2(10),
  trans_id            NUMBER(11) not null,
  oper                VARCHAR2(20),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  from_unit           VARCHAR2(20),
  to_unit             VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_CREW
  is '人员基本信息(借调中间表)';
comment on column T_FXW_CREW.basic_info_id
  is '人员ID';
comment on column T_FXW_CREW.clerk_code
  is '工号';
comment on column T_FXW_CREW.pilot_name
  is '人员姓名';
comment on column T_FXW_CREW.short_name
  is '简称';
comment on column T_FXW_CREW.eng_surname
  is '英文姓';
comment on column T_FXW_CREW.eng_name
  is '英文名';
comment on column T_FXW_CREW.native_place
  is '籍贯';
comment on column T_FXW_CREW.birthday
  is '生日';
comment on column T_FXW_CREW.sex
  is '性别';
comment on column T_FXW_CREW.id_code
  is '身份证号';
comment on column T_FXW_CREW.org_code
  is '单位编号';
comment on column T_FXW_CREW.aero_unit_code
  is '飞行单位';
comment on column T_FXW_CREW.execute_duty
  is '行政职务';
comment on column T_FXW_CREW.execute_level
  is '行政级别';
comment on column T_FXW_CREW.civil_aviation_date
  is '民航日期';
comment on column T_FXW_CREW.work_date
  is '工作日期';
comment on column T_FXW_CREW.graduate_academy
  is '毕业院校';
comment on column T_FXW_CREW.enter_date
  is '入校时间';
comment on column T_FXW_CREW.graduate_date
  is '毕业时间';
comment on column T_FXW_CREW.culture_degree
  is '文化程序';
comment on column T_FXW_CREW.speciality
  is '学习专业';
comment on column T_FXW_CREW.work_type
  is '工种';
comment on column T_FXW_CREW.family_address
  is '家庭地址';
comment on column T_FXW_CREW.family_tel
  is '家庭电话';
comment on column T_FXW_CREW.office_tel
  is '办公室电话';
comment on column T_FXW_CREW.mobile_tel
  is '手机';
comment on column T_FXW_CREW.stature
  is '身高';
comment on column T_FXW_CREW.marriage_status
  is '婚姻状况';
comment on column T_FXW_CREW.enter_party_date
  is '入党时间';
comment on column T_FXW_CREW.board_card_no
  is '登机证号';
comment on column T_FXW_CREW.nationality
  is '国籍';
comment on column T_FXW_CREW.remarks
  is '备注';
comment on column T_FXW_CREW.polity
  is '政治面貌';
comment on column T_FXW_CREW.temp_unit_code
  is '临时单位';
comment on column T_FXW_CREW.creator
  is '创建人';
comment on column T_FXW_CREW.create_date
  is '创建日期';
comment on column T_FXW_CREW.weight
  is '体重';
comment on column T_FXW_CREW.ce_aviation_date
  is '进入公司日期';
comment on column T_FXW_CREW.eng_nationality
  is '英文国籍';
comment on column T_FXW_CREW.eng_nat_code3
  is '英文国籍三字码';
comment on column T_FXW_CREW.icao_eng
  is 'ICAO英语';
comment on column T_FXW_CREW.route_eng
  is '航线英语';
comment on column T_FXW_CREW.health_level
  is '健康级别';
comment on column T_FXW_CREW.last_modifier
  is '修改者';
comment on column T_FXW_CREW.last_modify_time
  is '修改日期';
comment on column T_FXW_CREW.validity
  is '是否有效';
comment on column T_FXW_CREW.status
  is '飞行员状态';
comment on column T_FXW_CREW.icao_valid_date
  is 'ICAO英语生效日期';
comment on column T_FXW_CREW.icao_invalid_date
  is 'ICAO英语失效日期';
comment on column T_FXW_CREW.eng_native_place
  is '英文出生地(护照用)';
comment on column T_FXW_CREW.eng_family_address
  is '英文家庭住址(护照用)';
comment on column T_FXW_CREW.exec_dept_code
  is '行政单位';
comment on column T_FXW_CREW.trans_id
  is '飞行员借调ID';
comment on column T_FXW_CREW.oper
  is '操作人';
comment on column T_FXW_CREW.op_time
  is '操作时间';
comment on column T_FXW_CREW.oper_ip
  is 'IP地址';
comment on column T_FXW_CREW.oper_host
  is '主机名';
comment on column T_FXW_CREW.from_unit
  is '原分公司';
comment on column T_FXW_CREW.to_unit
  is '借调分公司';
alter table T_FXW_CREW
  add constraint PK_T_FXW_CREW primary key (BASIC_INFO_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_CREWROSTER
prompt ===============================
prompt
create table T_FXW_CREWROSTER
(
  flight_plan_id   VARCHAR2(20) not null,
  crew_assign_id   VARCHAR2(20),
  crew_id          VARCHAR2(20) not null,
  post             VARCHAR2(100) not null,
  flight_task_id   VARCHAR2(20),
  is_chief         VARCHAR2(3),
  is_lift          VARCHAR2(3),
  mark             VARCHAR2(20),
  last_modify_time DATE,
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  oper             VARCHAR2(10),
  trans_id         NUMBER(11) not null,
  if_part_time     VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_CREWROSTER
  is '排班结果(借调中间表)';
comment on column T_FXW_CREWROSTER.flight_plan_id
  is '航班计划ID';
comment on column T_FXW_CREWROSTER.crew_assign_id
  is '排班ID';
comment on column T_FXW_CREWROSTER.crew_id
  is '人员ID';
comment on column T_FXW_CREWROSTER.post
  is '岗位';
comment on column T_FXW_CREWROSTER.flight_task_id
  is '任务ID';
comment on column T_FXW_CREWROSTER.is_chief
  is '是否责任机长';
comment on column T_FXW_CREWROSTER.is_lift
  is '是否搭机';
comment on column T_FXW_CREWROSTER.mark
  is '兼职码';
comment on column T_FXW_CREWROSTER.last_modify_time
  is '最后修改时间';
comment on column T_FXW_CREWROSTER.op_time
  is '操作时间';
comment on column T_FXW_CREWROSTER.oper_ip
  is 'IP地址';
comment on column T_FXW_CREWROSTER.oper_host
  is '主机名';
comment on column T_FXW_CREWROSTER.oper
  is '操作人';
comment on column T_FXW_CREWROSTER.trans_id
  is '飞行员借调ID';
comment on column T_FXW_CREWROSTER.if_part_time
  is '是否兼职';
alter table T_FXW_CREWROSTER
  add constraint PK_T_FXW_CREWROSTER primary key (FLIGHT_PLAN_ID, CREW_ID, POST, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_CREWROSTER_HIS
prompt ===================================
prompt
create table T_FXW_CREWROSTER_HIS
(
  trans_id         NUMBER(11) not null,
  crew_assign_id   VARCHAR2(20) not null,
  flight_task_id   VARCHAR2(20),
  flight_plan_id   VARCHAR2(20) not null,
  crew_id          VARCHAR2(20) not null,
  post             VARCHAR2(100) not null,
  is_chief         VARCHAR2(3),
  is_lift          VARCHAR2(3),
  if_part_time     VARCHAR2(15),
  mark             VARCHAR2(20),
  last_modify_time DATE,
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  oper             VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_FXW_CREWROSTER_HIS
  is '排班结果(借调历史表)';
comment on column T_FXW_CREWROSTER_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_CREWROSTER_HIS.crew_assign_id
  is '排班ID';
comment on column T_FXW_CREWROSTER_HIS.flight_task_id
  is '任务ID';
comment on column T_FXW_CREWROSTER_HIS.flight_plan_id
  is '航班计划ID';
comment on column T_FXW_CREWROSTER_HIS.crew_id
  is '人员ID';
comment on column T_FXW_CREWROSTER_HIS.post
  is '岗位';
comment on column T_FXW_CREWROSTER_HIS.is_chief
  is '是否责任机长';
comment on column T_FXW_CREWROSTER_HIS.is_lift
  is '是否搭机';
comment on column T_FXW_CREWROSTER_HIS.if_part_time
  is '是否兼职';
comment on column T_FXW_CREWROSTER_HIS.mark
  is '兼职码';
comment on column T_FXW_CREWROSTER_HIS.last_modify_time
  is '最后修改时间';
comment on column T_FXW_CREWROSTER_HIS.op_time
  is '操作时间';
comment on column T_FXW_CREWROSTER_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_CREWROSTER_HIS.oper_host
  is '主机名';
comment on column T_FXW_CREWROSTER_HIS.oper
  is '操作人';
alter table T_FXW_CREWROSTER_HIS
  add constraint PK_FXW_CREWROSTER_HIS primary key (TRANS_ID, CREW_ASSIGN_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_CREW_HIS
prompt =============================
prompt
create table T_FXW_CREW_HIS
(
  trans_id            NUMBER(11) not null,
  basic_info_id       VARCHAR2(20) not null,
  clerk_code          VARCHAR2(20),
  pilot_name          VARCHAR2(60),
  short_name          VARCHAR2(60),
  eng_surname         VARCHAR2(60),
  eng_name            VARCHAR2(60),
  native_place        VARCHAR2(100),
  birthday            DATE,
  sex                 VARCHAR2(20),
  id_code             VARCHAR2(20),
  org_code            VARCHAR2(10),
  aero_unit_code      VARCHAR2(10),
  execute_duty        VARCHAR2(30),
  execute_level       VARCHAR2(30),
  civil_aviation_date DATE,
  work_date           DATE,
  graduate_academy    VARCHAR2(50),
  enter_date          DATE,
  graduate_date       DATE,
  culture_degree      VARCHAR2(10),
  speciality          VARCHAR2(10),
  work_type           VARCHAR2(10),
  family_address      VARCHAR2(100),
  family_tel          VARCHAR2(20),
  office_tel          VARCHAR2(20),
  mobile_tel          VARCHAR2(20),
  stature             NUMBER(3),
  marriage_status     VARCHAR2(10),
  enter_party_date    DATE,
  board_card_no       VARCHAR2(20),
  nationality         VARCHAR2(10),
  remarks             VARCHAR2(100),
  polity              VARCHAR2(10),
  temp_unit_code      VARCHAR2(10),
  creator             VARCHAR2(10),
  create_date         DATE,
  weight              NUMBER(3),
  ce_aviation_date    DATE,
  eng_nationality     VARCHAR2(10),
  eng_nat_code3       VARCHAR2(10),
  icao_eng            VARCHAR2(10),
  route_eng           VARCHAR2(100),
  health_level        VARCHAR2(60),
  last_modifier       VARCHAR2(10),
  last_modify_time    DATE,
  validity            VARCHAR2(1),
  status              VARCHAR2(10),
  icao_valid_date     DATE,
  icao_invalid_date   DATE,
  eng_native_place    VARCHAR2(50),
  eng_family_address  VARCHAR2(100),
  exec_dept_code      VARCHAR2(10),
  oper                VARCHAR2(20),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  from_unit           VARCHAR2(20),
  to_unit             VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_CREW_HIS
  is '人员基本信息(借调历史表)';
comment on column T_FXW_CREW_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_CREW_HIS.basic_info_id
  is '人员ID';
comment on column T_FXW_CREW_HIS.clerk_code
  is '工号';
comment on column T_FXW_CREW_HIS.pilot_name
  is '人员姓名';
comment on column T_FXW_CREW_HIS.short_name
  is '简称';
comment on column T_FXW_CREW_HIS.eng_surname
  is '英文姓';
comment on column T_FXW_CREW_HIS.eng_name
  is '英文名';
comment on column T_FXW_CREW_HIS.native_place
  is '籍贯';
comment on column T_FXW_CREW_HIS.birthday
  is '生日';
comment on column T_FXW_CREW_HIS.sex
  is '性别';
comment on column T_FXW_CREW_HIS.id_code
  is '身份证号';
comment on column T_FXW_CREW_HIS.org_code
  is '单位编号';
comment on column T_FXW_CREW_HIS.aero_unit_code
  is '飞行单位';
comment on column T_FXW_CREW_HIS.execute_duty
  is '行政职务';
comment on column T_FXW_CREW_HIS.execute_level
  is '行政级别';
comment on column T_FXW_CREW_HIS.civil_aviation_date
  is '民航日期';
comment on column T_FXW_CREW_HIS.work_date
  is '工作日期';
comment on column T_FXW_CREW_HIS.graduate_academy
  is '毕业院校';
comment on column T_FXW_CREW_HIS.enter_date
  is '入校时间';
comment on column T_FXW_CREW_HIS.graduate_date
  is '毕业时间';
comment on column T_FXW_CREW_HIS.culture_degree
  is '文化程序';
comment on column T_FXW_CREW_HIS.speciality
  is '学习专业';
comment on column T_FXW_CREW_HIS.work_type
  is '工种';
comment on column T_FXW_CREW_HIS.family_address
  is '家庭地址';
comment on column T_FXW_CREW_HIS.family_tel
  is '家庭电话';
comment on column T_FXW_CREW_HIS.office_tel
  is '办公室电话';
comment on column T_FXW_CREW_HIS.mobile_tel
  is '手机';
comment on column T_FXW_CREW_HIS.stature
  is '身高';
comment on column T_FXW_CREW_HIS.marriage_status
  is '婚姻状况';
comment on column T_FXW_CREW_HIS.enter_party_date
  is '入党时间';
comment on column T_FXW_CREW_HIS.board_card_no
  is '登机证号';
comment on column T_FXW_CREW_HIS.nationality
  is '国籍';
comment on column T_FXW_CREW_HIS.remarks
  is '备注';
comment on column T_FXW_CREW_HIS.polity
  is '政治面貌';
comment on column T_FXW_CREW_HIS.temp_unit_code
  is '临时单位';
comment on column T_FXW_CREW_HIS.creator
  is '创建人';
comment on column T_FXW_CREW_HIS.create_date
  is '创建日期';
comment on column T_FXW_CREW_HIS.weight
  is '体重';
comment on column T_FXW_CREW_HIS.ce_aviation_date
  is '进入公司日期';
comment on column T_FXW_CREW_HIS.eng_nationality
  is '英文国籍';
comment on column T_FXW_CREW_HIS.eng_nat_code3
  is '英文国籍三字码';
comment on column T_FXW_CREW_HIS.icao_eng
  is 'ICAO英语';
comment on column T_FXW_CREW_HIS.route_eng
  is '航线英语';
comment on column T_FXW_CREW_HIS.health_level
  is '健康级别';
comment on column T_FXW_CREW_HIS.last_modifier
  is '修改者';
comment on column T_FXW_CREW_HIS.last_modify_time
  is '修改日期';
comment on column T_FXW_CREW_HIS.validity
  is '是否有效';
comment on column T_FXW_CREW_HIS.status
  is '飞行员状态';
comment on column T_FXW_CREW_HIS.icao_valid_date
  is 'ICAO英语生效日期';
comment on column T_FXW_CREW_HIS.icao_invalid_date
  is 'ICAO英语失效日期';
comment on column T_FXW_CREW_HIS.eng_native_place
  is '英文出生地(护照用)';
comment on column T_FXW_CREW_HIS.eng_family_address
  is '英文家庭住址(护照用)';
comment on column T_FXW_CREW_HIS.exec_dept_code
  is '行政单位';
comment on column T_FXW_CREW_HIS.oper
  is '操作人';
comment on column T_FXW_CREW_HIS.op_time
  is '操作时间';
comment on column T_FXW_CREW_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_CREW_HIS.oper_host
  is '主机名';
comment on column T_FXW_CREW_HIS.from_unit
  is '原分公司';
comment on column T_FXW_CREW_HIS.to_unit
  is '借调分公司';
alter table T_FXW_CREW_HIS
  add constraint PK_FXW_CREW_HIS primary key (BASIC_INFO_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_DEL_SCH_ROSTER
prompt ===================================
prompt
create table T_FXW_DEL_SCH_ROSTER
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(50),
  adjust_yn       VARCHAR2(1) default 'N',
  backup_yn       VARCHAR2(1) default 'N',
  carry_yn        VARCHAR2(1) default 'N',
  carry_after_yn  VARCHAR2(1) default 'N',
  check_yn        VARCHAR2(1) default 'N',
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1) default 'Y',
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1) default 'Y',
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1) default 'N',
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6) default 0,
  night_days      NUMBER(2) default 0,
  modify_time     DATE,
  fly_hours1      NUMBER(6) default 0,
  fly_hours2      NUMBER(6) default 0,
  pub_time        DATE,
  add_oper        VARCHAR2(10),
  add_op_time     DATE,
  add_remarks     VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_DEL_SCH_ROSTER
  is '借调实时同步删除(机组排班计划表)';
comment on column T_FXW_DEL_SCH_ROSTER.flight_id
  is '航班ID';
comment on column T_FXW_DEL_SCH_ROSTER.flight_date
  is '航班日期';
comment on column T_FXW_DEL_SCH_ROSTER.p_code
  is '人员代码';
comment on column T_FXW_DEL_SCH_ROSTER.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_FXW_DEL_SCH_ROSTER.auto_flag
  is '自动排班标志,
H-手动
A-自动';
comment on column T_FXW_DEL_SCH_ROSTER.fjs_order
  is '机上位置';
comment on column T_FXW_DEL_SCH_ROSTER.rank_no
  is '机上岗位';
comment on column T_FXW_DEL_SCH_ROSTER.ts_flag
  is '兼职码(字典)';
comment on column T_FXW_DEL_SCH_ROSTER.check_type
  is '检查类型(字典)';
comment on column T_FXW_DEL_SCH_ROSTER.tech_no_i
  is '公司授权';
comment on column T_FXW_DEL_SCH_ROSTER.tech_no_z
  is '排班授权';
comment on column T_FXW_DEL_SCH_ROSTER.warning_content
  is '违反排班规则';
comment on column T_FXW_DEL_SCH_ROSTER.modify_reason
  is '修改原因';
comment on column T_FXW_DEL_SCH_ROSTER.adjust_yn
  is '调整标志(Y/N)';
comment on column T_FXW_DEL_SCH_ROSTER.backup_yn
  is '备上标记(Y/N)';
comment on column T_FXW_DEL_SCH_ROSTER.carry_yn
  is '航前接车(Y/N)';
comment on column T_FXW_DEL_SCH_ROSTER.carry_after_yn
  is '航后接车(Y/N)';
comment on column T_FXW_DEL_SCH_ROSTER.check_yn
  is '签注结果(Y/N)';
comment on column T_FXW_DEL_SCH_ROSTER.old_p_code
  is '调整人员代码';
comment on column T_FXW_DEL_SCH_ROSTER.ver_yn
  is '审批标记';
comment on column T_FXW_DEL_SCH_ROSTER.ver_code
  is '审批类别(字典)';
comment on column T_FXW_DEL_SCH_ROSTER.ver_desc
  is '审批备注';
comment on column T_FXW_DEL_SCH_ROSTER.heath_yn
  is '体检结果(Y/N)';
comment on column T_FXW_DEL_SCH_ROSTER.heathy
  is '体检备注';
comment on column T_FXW_DEL_SCH_ROSTER.hotel_yn
  is '宾馆(N不需要X需要没有安排Y已经安排)';
comment on column T_FXW_DEL_SCH_ROSTER.oper
  is '操作人';
comment on column T_FXW_DEL_SCH_ROSTER.op_time
  is '操作时间';
comment on column T_FXW_DEL_SCH_ROSTER.remarks
  is '备注';
comment on column T_FXW_DEL_SCH_ROSTER.oper_ip
  is 'IP地址';
comment on column T_FXW_DEL_SCH_ROSTER.oper_host
  is '主机名';
comment on column T_FXW_DEL_SCH_ROSTER.fxw_id
  is '对应飞行网ID(导入飞行网历史数据用)';
comment on column T_FXW_DEL_SCH_ROSTER.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_FXW_DEL_SCH_ROSTER.hotel_id
  is '酒店ID';
comment on column T_FXW_DEL_SCH_ROSTER.fly_hours
  is '飞行时间(计划DOC,回收取FTB)';
comment on column T_FXW_DEL_SCH_ROSTER.night_days
  is '过夜天数(发布计算)';
comment on column T_FXW_DEL_SCH_ROSTER.modify_time
  is '修改人员时间戳';
comment on column T_FXW_DEL_SCH_ROSTER.fly_hours1
  is '计算到当月飞行时间';
comment on column T_FXW_DEL_SCH_ROSTER.fly_hours2
  is '计算到下月飞行时间';
comment on column T_FXW_DEL_SCH_ROSTER.add_oper
  is '删除人姓名';
comment on column T_FXW_DEL_SCH_ROSTER.add_op_time
  is '删除人时间';
comment on column T_FXW_DEL_SCH_ROSTER.add_remarks
  is '删除人备注';

prompt
prompt Creating table T_FXW_DEL_SVC_FTB_DETAIL
prompt =======================================
prompt
create table T_FXW_DEL_SVC_FTB_DETAIL
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6) default 0,
  exp_hours     NUMBER(6) default 0,
  left_hours    NUMBER(6) default 0,
  left_updowns  NUMBER(3) default 0,
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6) default 0,
  right_updowns NUMBER(3) default 0,
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6) default 0,
  left_teach    NUMBER(6) default 0,
  right_night   NUMBER(6) default 0,
  right_teach   NUMBER(6) default 0,
  left_downs    NUMBER(3) default 0,
  right_downs   NUMBER(3) default 0,
  add_oper      VARCHAR2(10),
  add_op_time   DATE,
  add_remarks   VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 768K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_DEL_SVC_FTB_DETAIL
  is '借调实时同步删除(任务书回收明细表)';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.ftb_no
  is '任务书编号';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.flight_id
  is '航班ID';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.p_code
  is '人员代码';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.fly_hours
  is '飞行时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.exp_hours
  is '经历时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.left_hours
  is '左座时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.left_updowns
  is '左座着陆次数';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.left_op_manu
  is '主操作/辅助操作，可选PF/PNFPM';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.right_hours
  is '右座时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.right_updowns
  is '右座着陆次数';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.right_op_manu
  is '主操作/辅助操作(右)';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.oper
  is '操作人';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.op_time
  is '操作时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.remarks
  is '备注';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.oper_ip
  is 'IP地址';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.oper_host
  is '主机名';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.flight_date
  is '航班日期，冗余字段，用于建分区表';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.left_night
  is '左座夜航时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.left_teach
  is '左座教员时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.right_night
  is '右座夜航时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.right_teach
  is '右座教员时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.left_downs
  is '左座起飞次数';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.right_downs
  is '右座起飞次数';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.add_oper
  is '删除人姓名';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.add_op_time
  is '删除人时间';
comment on column T_FXW_DEL_SVC_FTB_DETAIL.add_remarks
  is '删除人备注';

prompt
prompt Creating table T_FXW_DICT
prompt =========================
prompt
create table T_FXW_DICT
(
  id           NUMBER(11) not null,
  dict_code_id NUMBER(11),
  code         VARCHAR2(50),
  value        VARCHAR2(50),
  dict_type_id NUMBER(11),
  sort         NUMBER(4),
  remark       VARCHAR2(800),
  validity     VARCHAR2(20),
  code_name    VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_DICT
  is '飞行网字典表(借调中间表)';
comment on column T_FXW_DICT.id
  is '编号';
comment on column T_FXW_DICT.dict_code_id
  is '字典ID';
comment on column T_FXW_DICT.code
  is '字典编码';
comment on column T_FXW_DICT.value
  is '字典值';
comment on column T_FXW_DICT.dict_type_id
  is '字典类型ID';
comment on column T_FXW_DICT.sort
  is '排序';
comment on column T_FXW_DICT.remark
  is '备注';
comment on column T_FXW_DICT.validity
  is '有效标志';
comment on column T_FXW_DICT.code_name
  is '字典名称';
alter table T_FXW_DICT
  add constraint PK_T_FXW_DICT primary key (ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_FLTEXP
prompt ===========================
prompt
create table T_FXW_FLTEXP
(
  crew_id            VARCHAR2(20) not null,
  user_name          VARCHAR2(20),
  idcode             VARCHAR2(20),
  company_name       VARCHAR2(20),
  company_code       VARCHAR2(20),
  flight_id          VARCHAR2(20),
  flight_date        DATE,
  flight_no          VARCHAR2(20),
  depart_port_code3  VARCHAR2(5),
  arrival_port_code3 VARCHAR2(5),
  sum_time           NUMBER(3),
  fly_time           NUMBER(3),
  seat_type          VARCHAR2(6),
  fly_sortie         NUMBER(3),
  is_land_operator   VARCHAR2(5),
  operate_type       VARCHAR2(5),
  op_time            DATE,
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  oper               VARCHAR2(10),
  trans_id           NUMBER(11) not null,
  seat_rec_id        VARCHAR2(20) not null,
  flight_plan_id     VARCHAR2(20),
  night_time         NUMBER(9),
  teacher_time       NUMBER(9),
  up_sortie          NUMBER(9),
  down_sortie        NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 832K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_FLTEXP
  is '飞行经历(借调中间表)';
comment on column T_FXW_FLTEXP.crew_id
  is '人员ID';
comment on column T_FXW_FLTEXP.user_name
  is '人员姓名';
comment on column T_FXW_FLTEXP.idcode
  is '人员身份证号';
comment on column T_FXW_FLTEXP.company_name
  is '分子公司名称';
comment on column T_FXW_FLTEXP.company_code
  is '分子公司二码';
comment on column T_FXW_FLTEXP.flight_id
  is '航班ID';
comment on column T_FXW_FLTEXP.flight_date
  is '航班日期';
comment on column T_FXW_FLTEXP.flight_no
  is '航班号';
comment on column T_FXW_FLTEXP.depart_port_code3
  is '起飞机场三码';
comment on column T_FXW_FLTEXP.arrival_port_code3
  is '目的机场三码';
comment on column T_FXW_FLTEXP.sum_time
  is '总时间,分钟';
comment on column T_FXW_FLTEXP.fly_time
  is '经历时间';
comment on column T_FXW_FLTEXP.seat_type
  is '座位:左座、右座';
comment on column T_FXW_FLTEXP.fly_sortie
  is '起降次数';
comment on column T_FXW_FLTEXP.is_land_operator
  is '是否起降操作者:是否起降操作者:YES,NO';
comment on column T_FXW_FLTEXP.operate_type
  is '操作角色:PF、PNFPM';
comment on column T_FXW_FLTEXP.op_time
  is '操作时间';
comment on column T_FXW_FLTEXP.oper_ip
  is 'IP地址';
comment on column T_FXW_FLTEXP.oper_host
  is '主机名';
comment on column T_FXW_FLTEXP.oper
  is '操作人';
comment on column T_FXW_FLTEXP.trans_id
  is '飞行员借调ID';
comment on column T_FXW_FLTEXP.seat_rec_id
  is '飞行经历ID';
comment on column T_FXW_FLTEXP.flight_plan_id
  is '航班计划ID';
comment on column T_FXW_FLTEXP.night_time
  is '夜航时间';
comment on column T_FXW_FLTEXP.teacher_time
  is '教员时间';
comment on column T_FXW_FLTEXP.up_sortie
  is '起飞次数';
comment on column T_FXW_FLTEXP.down_sortie
  is '着陆次数';
alter table T_FXW_FLTEXP
  add constraint PK_T_FXW_FLTEXP primary key (CREW_ID, TRANS_ID, SEAT_REC_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_FLTEXP_HIS
prompt ===============================
prompt
create table T_FXW_FLTEXP_HIS
(
  trans_id           NUMBER(11) not null,
  seat_rec_id        VARCHAR2(20) not null,
  flight_plan_id     VARCHAR2(20),
  crew_id            VARCHAR2(20) not null,
  user_name          VARCHAR2(20),
  idcode             VARCHAR2(20),
  company_name       VARCHAR2(20),
  company_code       VARCHAR2(20),
  flight_id          VARCHAR2(20),
  flight_date        DATE,
  flight_no          VARCHAR2(20),
  depart_port_code3  VARCHAR2(5),
  arrival_port_code3 VARCHAR2(5),
  sum_time           NUMBER(3),
  fly_time           NUMBER(3),
  seat_type          VARCHAR2(6),
  fly_sortie         NUMBER(3),
  is_land_operator   VARCHAR2(5),
  operate_type       VARCHAR2(5),
  op_time            DATE,
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  oper               VARCHAR2(10),
  night_time         NUMBER(9),
  teacher_time       NUMBER(9),
  up_sortie          NUMBER(9),
  down_sortie        NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_FLTEXP_HIS
  is '飞行经历(借调历史表)';
comment on column T_FXW_FLTEXP_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_FLTEXP_HIS.seat_rec_id
  is '飞行经历ID';
comment on column T_FXW_FLTEXP_HIS.flight_plan_id
  is '航班计划ID';
comment on column T_FXW_FLTEXP_HIS.crew_id
  is '人员ID';
comment on column T_FXW_FLTEXP_HIS.user_name
  is '人员姓名';
comment on column T_FXW_FLTEXP_HIS.idcode
  is '人员身份证号';
comment on column T_FXW_FLTEXP_HIS.company_name
  is '分子公司名称';
comment on column T_FXW_FLTEXP_HIS.company_code
  is '分子公司二码';
comment on column T_FXW_FLTEXP_HIS.flight_id
  is '航班ID';
comment on column T_FXW_FLTEXP_HIS.flight_date
  is '航班日期';
comment on column T_FXW_FLTEXP_HIS.flight_no
  is '航班号';
comment on column T_FXW_FLTEXP_HIS.depart_port_code3
  is '起飞机场三码';
comment on column T_FXW_FLTEXP_HIS.arrival_port_code3
  is '目的机场三码';
comment on column T_FXW_FLTEXP_HIS.sum_time
  is '总时间,分钟';
comment on column T_FXW_FLTEXP_HIS.fly_time
  is '经历时间';
comment on column T_FXW_FLTEXP_HIS.seat_type
  is '座位:左座、右座';
comment on column T_FXW_FLTEXP_HIS.fly_sortie
  is '起降次数';
comment on column T_FXW_FLTEXP_HIS.is_land_operator
  is '是否起降操作者:是否起降操作者:YES,NO';
comment on column T_FXW_FLTEXP_HIS.operate_type
  is '操作角色:PF、PNFPM';
comment on column T_FXW_FLTEXP_HIS.op_time
  is '操作时间';
comment on column T_FXW_FLTEXP_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_FLTEXP_HIS.oper_host
  is '主机名';
comment on column T_FXW_FLTEXP_HIS.oper
  is '操作人';
comment on column T_FXW_FLTEXP_HIS.night_time
  is '夜航时间';
comment on column T_FXW_FLTEXP_HIS.teacher_time
  is '教员时间';
comment on column T_FXW_FLTEXP_HIS.up_sortie
  is '起飞次数';
comment on column T_FXW_FLTEXP_HIS.down_sortie
  is '着陆次数';
alter table T_FXW_FLTEXP_HIS
  add constraint PK_FXW_FLTEXP_HIS primary key (TRANS_ID, SEAT_REC_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_FLTPLAN
prompt ============================
prompt
create table T_FXW_FLTPLAN
(
  flight_plan_id        VARCHAR2(20) not null,
  flight_date           DATE,
  flight_no             VARCHAR2(20),
  depart_port_code3     VARCHAR2(5),
  arrival_port_code3    VARCHAR2(5),
  org_code              VARCHAR2(10),
  ac_type_code          VARCHAR2(10),
  ac_no                 VARCHAR2(10),
  flight_attr           VARCHAR2(20),
  canceled              VARCHAR2(3),
  schedule_depart_time  DATE,
  schedule_arrival_time DATE,
  carrier               VARCHAR2(10),
  last_modify_time      DATE,
  op_time               DATE,
  oper_ip               VARCHAR2(15),
  oper_host             VARCHAR2(50),
  oper                  VARCHAR2(10),
  trans_id              NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_FLTPLAN
  is '航班计划(借调中间表)';
comment on column T_FXW_FLTPLAN.flight_plan_id
  is '航班ID';
comment on column T_FXW_FLTPLAN.flight_date
  is '航班日期';
comment on column T_FXW_FLTPLAN.flight_no
  is '航班号';
comment on column T_FXW_FLTPLAN.depart_port_code3
  is '起飞机场三码';
comment on column T_FXW_FLTPLAN.arrival_port_code3
  is '落地机场三码';
comment on column T_FXW_FLTPLAN.org_code
  is '分子公司';
comment on column T_FXW_FLTPLAN.ac_type_code
  is '机型';
comment on column T_FXW_FLTPLAN.ac_no
  is '机号';
comment on column T_FXW_FLTPLAN.flight_attr
  is '航班性质';
comment on column T_FXW_FLTPLAN.canceled
  is '是否取消';
comment on column T_FXW_FLTPLAN.schedule_depart_time
  is '计划起飞时间';
comment on column T_FXW_FLTPLAN.schedule_arrival_time
  is '计划到达时间';
comment on column T_FXW_FLTPLAN.carrier
  is '承运人';
comment on column T_FXW_FLTPLAN.last_modify_time
  is '修改时间';
comment on column T_FXW_FLTPLAN.op_time
  is '操作时间';
comment on column T_FXW_FLTPLAN.oper_ip
  is 'IP地址';
comment on column T_FXW_FLTPLAN.oper_host
  is '主机名';
comment on column T_FXW_FLTPLAN.oper
  is '操作人';
comment on column T_FXW_FLTPLAN.trans_id
  is '飞行员借调ID';
alter table T_FXW_FLTPLAN
  add constraint PK_T_FXW_FLTPLAN primary key (FLIGHT_PLAN_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_FLTPLAN_HIS
prompt ================================
prompt
create table T_FXW_FLTPLAN_HIS
(
  flight_plan_id        VARCHAR2(20) not null,
  flight_date           DATE,
  flight_no             VARCHAR2(20),
  depart_port_code3     VARCHAR2(5),
  arrival_port_code3    VARCHAR2(5),
  org_code              VARCHAR2(10),
  ac_type_code          VARCHAR2(10),
  ac_no                 VARCHAR2(10),
  flight_attr           VARCHAR2(20),
  canceled              VARCHAR2(3),
  schedule_depart_time  DATE,
  schedule_arrival_time DATE,
  carrier               VARCHAR2(10),
  last_modify_time      DATE,
  op_time               DATE,
  oper_ip               VARCHAR2(15),
  oper_host             VARCHAR2(50),
  oper                  VARCHAR2(10),
  trans_id              NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_FXW_FLTPLAN_HIS
  is '航班计划(借调历史表)';
comment on column T_FXW_FLTPLAN_HIS.flight_plan_id
  is '航班ID';
comment on column T_FXW_FLTPLAN_HIS.flight_date
  is '航班日期';
comment on column T_FXW_FLTPLAN_HIS.flight_no
  is '航班号';
comment on column T_FXW_FLTPLAN_HIS.depart_port_code3
  is '起飞机场三码';
comment on column T_FXW_FLTPLAN_HIS.arrival_port_code3
  is '落地机场三码';
comment on column T_FXW_FLTPLAN_HIS.org_code
  is '分子公司';
comment on column T_FXW_FLTPLAN_HIS.ac_type_code
  is '机型';
comment on column T_FXW_FLTPLAN_HIS.ac_no
  is '机号';
comment on column T_FXW_FLTPLAN_HIS.flight_attr
  is '航班性质';
comment on column T_FXW_FLTPLAN_HIS.canceled
  is '是否取消';
comment on column T_FXW_FLTPLAN_HIS.schedule_depart_time
  is '计划起飞时间';
comment on column T_FXW_FLTPLAN_HIS.schedule_arrival_time
  is '计划到达时间';
comment on column T_FXW_FLTPLAN_HIS.carrier
  is '承运人';
comment on column T_FXW_FLTPLAN_HIS.last_modify_time
  is '修改时间';
comment on column T_FXW_FLTPLAN_HIS.op_time
  is '操作时间';
comment on column T_FXW_FLTPLAN_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_FLTPLAN_HIS.oper_host
  is '主机名';
comment on column T_FXW_FLTPLAN_HIS.oper
  is '操作人';
comment on column T_FXW_FLTPLAN_HIS.trans_id
  is '飞行员借调ID';
alter table T_FXW_FLTPLAN_HIS
  add constraint PK_FXW_FLTPLAN_HIS primary key (TRANS_ID, FLIGHT_PLAN_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_FTB_DETAIL
prompt ===============================
prompt
create table T_FXW_FTB_DETAIL
(
  seat_rec_id      NUMBER(11) not null,
  flight_plan_id   NUMBER(11),
  pilot_id         NUMBER(11),
  flight_id        NUMBER(11),
  p_code           NUMBER(11),
  fly_time         NUMBER(4),
  seat_type        VARCHAR2(5),
  operate_type     VARCHAR2(5),
  is_land_operator VARCHAR2(3),
  fly_sortie       NUMBER(3),
  oper             VARCHAR2(10),
  op_time          DATE not null,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  ftb_no           VARCHAR2(12),
  flight_date      DATE,
  night_time       NUMBER(9),
  teacher_time     NUMBER(9),
  up_sortie        NUMBER(9),
  down_sortie      NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_FTB_DETAIL
  is '飞行经历从表(借调实时同步使用)';
comment on column T_FXW_FTB_DETAIL.seat_rec_id
  is '飞行经历ID';
comment on column T_FXW_FTB_DETAIL.flight_plan_id
  is '飞行网中对应的飞行计划ID';
comment on column T_FXW_FTB_DETAIL.pilot_id
  is '飞行网中对应的人员ID';
comment on column T_FXW_FTB_DETAIL.flight_id
  is '机组排班对应的飞行计划ID';
comment on column T_FXW_FTB_DETAIL.p_code
  is '机组排班对应的人员ID';
comment on column T_FXW_FTB_DETAIL.fly_time
  is '飞行时间';
comment on column T_FXW_FTB_DETAIL.seat_type
  is '座位类型 LEFT/RIGHT ';
comment on column T_FXW_FTB_DETAIL.operate_type
  is '主操作/辅助操作，可选PF/PNFPM';
comment on column T_FXW_FTB_DETAIL.fly_sortie
  is '起落架次';
comment on column T_FXW_FTB_DETAIL.oper
  is '操作人';
comment on column T_FXW_FTB_DETAIL.op_time
  is '操作时间';
comment on column T_FXW_FTB_DETAIL.oper_ip
  is '主机IP';
comment on column T_FXW_FTB_DETAIL.oper_host
  is '主机名';
comment on column T_FXW_FTB_DETAIL.ftb_no
  is '任务号';
comment on column T_FXW_FTB_DETAIL.flight_date
  is '航班日期';
comment on column T_FXW_FTB_DETAIL.night_time
  is '夜航时间';
comment on column T_FXW_FTB_DETAIL.teacher_time
  is '教员时间';
comment on column T_FXW_FTB_DETAIL.up_sortie
  is '起飞次数';
comment on column T_FXW_FTB_DETAIL.down_sortie
  is '着陆次数';

prompt
prompt Creating table T_FXW_LICENSE
prompt ============================
prompt
create table T_FXW_LICENSE
(
  technical_standard_id        VARCHAR2(20) not null,
  pilot_info_id                VARCHAR2(20),
  licence_no                   VARCHAR2(30),
  valid_begin_date             DATE,
  valid_end_date               DATE,
  month1                       NUMBER(2),
  month2                       NUMBER(2),
  main_ac_type_code            VARCHAR2(20),
  main_ac_type_date            DATE,
  technical_standard           VARCHAR2(20),
  technical_stand_date         DATE,
  appoint_standard             VARCHAR2(20),
  appoint_stand_date           DATE,
  weather_standard             VARCHAR2(20),
  weather_stand_date           DATE,
  radio_standard               VARCHAR2(20),
  radio_stand_date             DATE,
  machine_standard             VARCHAR2(20),
  machine_stand_date           DATE,
  teacher_standard             VARCHAR2(20),
  teacher_stand_date           DATE,
  office_inspector_stand_date  VARCHAR2(20),
  company_inspector_stand_date DATE,
  next_sciamachy               VARCHAR2(20),
  licence_beg_date             DATE,
  licence_end_date             DATE,
  teacher_stand_end_date       DATE,
  office_insp_stand_end_date   DATE,
  skilled_inspector_stand_date DATE,
  company_insp_stand_end_date  DATE,
  plateau_standard             VARCHAR2(20),
  plateau_stand_date           DATE,
  next_sciamachy_teacher       VARCHAR2(20),
  next_teacher_num             NUMBER(2),
  teacher_theory_pre_grade     NUMBER(2),
  creator                      VARCHAR2(20),
  create_date                  DATE,
  last_modifier                VARCHAR2(20),
  last_modify_time             DATE,
  skilled_insp_stand_end_date  DATE,
  retraining_place             VARCHAR2(20),
  emergency_sur_start_date     DATE,
  emergency_sur_end_date       DATE,
  dangerous_start_date         DATE,
  dangerous_end_date           DATE,
  airline_check_start_date     DATE,
  airline_check_end_date       DATE,
  office_inspector_standard    VARCHAR2(20),
  oper                         VARCHAR2(10),
  op_time                      DATE,
  oper_ip                      VARCHAR2(15),
  oper_host                    VARCHAR2(50),
  trans_id                     NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_LICENSE
  is '执照，技术授权及资质信息(借调中间表)';
comment on column T_FXW_LICENSE.technical_standard_id
  is '流水号';
comment on column T_FXW_LICENSE.pilot_info_id
  is '飞行员信息ID';
comment on column T_FXW_LICENSE.licence_no
  is '执照号';
comment on column T_FXW_LICENSE.valid_begin_date
  is '有效期开始日期';
comment on column T_FXW_LICENSE.valid_end_date
  is '有效期结束日期';
comment on column T_FXW_LICENSE.month1
  is '准月1';
comment on column T_FXW_LICENSE.month2
  is '准月2';
comment on column T_FXW_LICENSE.main_ac_type_code
  is '机型';
comment on column T_FXW_LICENSE.main_ac_type_date
  is '机型日期';
comment on column T_FXW_LICENSE.technical_standard
  is '技术标准';
comment on column T_FXW_LICENSE.technical_stand_date
  is '技术标准日期';
comment on column T_FXW_LICENSE.appoint_standard
  is '聘用标准';
comment on column T_FXW_LICENSE.appoint_stand_date
  is '聘用标准日期';
comment on column T_FXW_LICENSE.weather_standard
  is '天气标准';
comment on column T_FXW_LICENSE.weather_stand_date
  is '天气标准日期';
comment on column T_FXW_LICENSE.radio_standard
  is '通讯标准';
comment on column T_FXW_LICENSE.radio_stand_date
  is '通讯标准日期';
comment on column T_FXW_LICENSE.machine_standard
  is '机械标准';
comment on column T_FXW_LICENSE.machine_stand_date
  is '机械标准日期';
comment on column T_FXW_LICENSE.teacher_standard
  is '教员标准';
comment on column T_FXW_LICENSE.teacher_stand_date
  is '教员标准日期(废弃)';
comment on column T_FXW_LICENSE.office_inspector_stand_date
  is '局方委任代表获得日期';
comment on column T_FXW_LICENSE.company_inspector_stand_date
  is '公司检查员获得日期';
comment on column T_FXW_LICENSE.licence_beg_date
  is '执照开始日期';
comment on column T_FXW_LICENSE.licence_end_date
  is '执照结束日期';
comment on column T_FXW_LICENSE.teacher_stand_end_date
  is '教员标准结束日期';
comment on column T_FXW_LICENSE.office_insp_stand_end_date
  is '局方委任代表结束日期';
comment on column T_FXW_LICENSE.skilled_inspector_stand_date
  is '熟练检查员获得日期';
comment on column T_FXW_LICENSE.company_insp_stand_end_date
  is '公司检查员结束日期';
comment on column T_FXW_LICENSE.plateau_standard
  is '高原标准';
comment on column T_FXW_LICENSE.plateau_stand_date
  is '高原标准日期';
comment on column T_FXW_LICENSE.next_sciamachy_teacher
  is '下次是否飞模拟机(教员)';
comment on column T_FXW_LICENSE.next_teacher_num
  is '限飞场次';
comment on column T_FXW_LICENSE.teacher_theory_pre_grade
  is '教员地面理论考试分数';
comment on column T_FXW_LICENSE.creator
  is '创建人';
comment on column T_FXW_LICENSE.create_date
  is '创建日期';
comment on column T_FXW_LICENSE.last_modifier
  is '修改者';
comment on column T_FXW_LICENSE.last_modify_time
  is '修改日期';
comment on column T_FXW_LICENSE.skilled_insp_stand_end_date
  is '熟练检查员结束日期';
comment on column T_FXW_LICENSE.retraining_place
  is '复训地点';
comment on column T_FXW_LICENSE.emergency_sur_start_date
  is '应急生存训练生效日期';
comment on column T_FXW_LICENSE.emergency_sur_end_date
  is '应急生存训练失效日期';
comment on column T_FXW_LICENSE.dangerous_start_date
  is '危险品培训开始日期';
comment on column T_FXW_LICENSE.dangerous_end_date
  is '危险品培训结束日期';
comment on column T_FXW_LICENSE.airline_check_start_date
  is '机长航线检查开始日期';
comment on column T_FXW_LICENSE.airline_check_end_date
  is '机长航线检查结束日期';
comment on column T_FXW_LICENSE.office_inspector_standard
  is '局方委任代表标准';
comment on column T_FXW_LICENSE.oper
  is '操作人';
comment on column T_FXW_LICENSE.op_time
  is '操作时间';
comment on column T_FXW_LICENSE.oper_ip
  is 'IP地址';
comment on column T_FXW_LICENSE.oper_host
  is '主机名';
comment on column T_FXW_LICENSE.trans_id
  is '飞行员借调ID
';
alter table T_FXW_LICENSE
  add constraint PK_T_FXW_LICENSE primary key (TECHNICAL_STANDARD_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_LICENSE_HIS
prompt ================================
prompt
create table T_FXW_LICENSE_HIS
(
  trans_id                     NUMBER(11) not null,
  technical_standard_id        VARCHAR2(20) not null,
  pilot_info_id                VARCHAR2(20),
  licence_no                   VARCHAR2(30),
  valid_begin_date             DATE,
  valid_end_date               DATE,
  month1                       NUMBER(2),
  month2                       NUMBER(2),
  main_ac_type_code            VARCHAR2(20),
  main_ac_type_date            DATE,
  technical_standard           VARCHAR2(20),
  technical_stand_date         DATE,
  appoint_standard             VARCHAR2(20),
  appoint_stand_date           DATE,
  weather_standard             VARCHAR2(20),
  weather_stand_date           DATE,
  radio_standard               VARCHAR2(20),
  radio_stand_date             DATE,
  machine_standard             VARCHAR2(20),
  machine_stand_date           DATE,
  teacher_standard             VARCHAR2(20),
  teacher_stand_date           DATE,
  office_inspector_stand_date  VARCHAR2(20),
  company_inspector_stand_date DATE,
  next_sciamachy               VARCHAR2(20),
  licence_beg_date             DATE,
  licence_end_date             DATE,
  teacher_stand_end_date       DATE,
  office_insp_stand_end_date   DATE,
  skilled_inspector_stand_date DATE,
  company_insp_stand_end_date  DATE,
  plateau_standard             VARCHAR2(20),
  plateau_stand_date           DATE,
  next_sciamachy_teacher       VARCHAR2(20),
  next_teacher_num             NUMBER(2),
  teacher_theory_pre_grade     NUMBER(2),
  creator                      VARCHAR2(20),
  create_date                  DATE,
  last_modifier                VARCHAR2(20),
  last_modify_time             DATE,
  skilled_insp_stand_end_date  DATE,
  retraining_place             VARCHAR2(20),
  emergency_sur_start_date     DATE,
  emergency_sur_end_date       DATE,
  dangerous_start_date         DATE,
  dangerous_end_date           DATE,
  airline_check_start_date     DATE,
  airline_check_end_date       DATE,
  office_inspector_standard    VARCHAR2(20),
  oper                         VARCHAR2(10),
  op_time                      DATE,
  oper_ip                      VARCHAR2(15),
  oper_host                    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_LICENSE_HIS
  is '执照，技术授权及资质信息(借调历史表)';
comment on column T_FXW_LICENSE_HIS.trans_id
  is '飞行员借调ID
';
comment on column T_FXW_LICENSE_HIS.technical_standard_id
  is '流水号';
comment on column T_FXW_LICENSE_HIS.pilot_info_id
  is '飞行员信息ID';
comment on column T_FXW_LICENSE_HIS.licence_no
  is '执照号';
comment on column T_FXW_LICENSE_HIS.valid_begin_date
  is '有效期开始日期';
comment on column T_FXW_LICENSE_HIS.valid_end_date
  is '有效期结束日期';
comment on column T_FXW_LICENSE_HIS.month1
  is '准月1';
comment on column T_FXW_LICENSE_HIS.month2
  is '准月2';
comment on column T_FXW_LICENSE_HIS.main_ac_type_code
  is '机型';
comment on column T_FXW_LICENSE_HIS.main_ac_type_date
  is '机型日期';
comment on column T_FXW_LICENSE_HIS.technical_standard
  is '技术标准';
comment on column T_FXW_LICENSE_HIS.technical_stand_date
  is '技术标准日期';
comment on column T_FXW_LICENSE_HIS.appoint_standard
  is '聘用标准';
comment on column T_FXW_LICENSE_HIS.appoint_stand_date
  is '聘用标准日期';
comment on column T_FXW_LICENSE_HIS.weather_standard
  is '天气标准';
comment on column T_FXW_LICENSE_HIS.weather_stand_date
  is '天气标准日期';
comment on column T_FXW_LICENSE_HIS.radio_standard
  is '通讯标准';
comment on column T_FXW_LICENSE_HIS.radio_stand_date
  is '通讯标准日期';
comment on column T_FXW_LICENSE_HIS.machine_standard
  is '机械标准';
comment on column T_FXW_LICENSE_HIS.machine_stand_date
  is '机械标准日期';
comment on column T_FXW_LICENSE_HIS.teacher_standard
  is '教员标准';
comment on column T_FXW_LICENSE_HIS.teacher_stand_date
  is '教员标准日期(废弃)';
comment on column T_FXW_LICENSE_HIS.office_inspector_stand_date
  is '局方委任代表获得日期';
comment on column T_FXW_LICENSE_HIS.company_inspector_stand_date
  is '公司检查员获得日期';
comment on column T_FXW_LICENSE_HIS.licence_beg_date
  is '执照开始日期';
comment on column T_FXW_LICENSE_HIS.licence_end_date
  is '执照结束日期';
comment on column T_FXW_LICENSE_HIS.teacher_stand_end_date
  is '教员标准结束日期';
comment on column T_FXW_LICENSE_HIS.office_insp_stand_end_date
  is '局方委任代表结束日期';
comment on column T_FXW_LICENSE_HIS.skilled_inspector_stand_date
  is '熟练检查员获得日期';
comment on column T_FXW_LICENSE_HIS.company_insp_stand_end_date
  is '公司检查员结束日期';
comment on column T_FXW_LICENSE_HIS.plateau_standard
  is '高原标准';
comment on column T_FXW_LICENSE_HIS.plateau_stand_date
  is '高原标准日期';
comment on column T_FXW_LICENSE_HIS.next_sciamachy_teacher
  is '下次是否飞模拟机(教员)';
comment on column T_FXW_LICENSE_HIS.next_teacher_num
  is '限飞场次';
comment on column T_FXW_LICENSE_HIS.teacher_theory_pre_grade
  is '教员地面理论考试分数';
comment on column T_FXW_LICENSE_HIS.creator
  is '创建人';
comment on column T_FXW_LICENSE_HIS.create_date
  is '创建日期';
comment on column T_FXW_LICENSE_HIS.last_modifier
  is '修改者';
comment on column T_FXW_LICENSE_HIS.last_modify_time
  is '修改日期';
comment on column T_FXW_LICENSE_HIS.skilled_insp_stand_end_date
  is '熟练检查员结束日期';
comment on column T_FXW_LICENSE_HIS.retraining_place
  is '复训地点';
comment on column T_FXW_LICENSE_HIS.emergency_sur_start_date
  is '应急生存训练生效日期';
comment on column T_FXW_LICENSE_HIS.emergency_sur_end_date
  is '应急生存训练失效日期';
comment on column T_FXW_LICENSE_HIS.dangerous_start_date
  is '危险品培训开始日期';
comment on column T_FXW_LICENSE_HIS.dangerous_end_date
  is '危险品培训结束日期';
comment on column T_FXW_LICENSE_HIS.airline_check_start_date
  is '机长航线检查开始日期';
comment on column T_FXW_LICENSE_HIS.airline_check_end_date
  is '机长航线检查结束日期';
comment on column T_FXW_LICENSE_HIS.office_inspector_standard
  is '局方委任代表标准';
comment on column T_FXW_LICENSE_HIS.oper
  is '操作人';
comment on column T_FXW_LICENSE_HIS.op_time
  is '操作时间';
comment on column T_FXW_LICENSE_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_LICENSE_HIS.oper_host
  is '主机名';
alter table T_FXW_LICENSE_HIS
  add constraint PK_FXW_LICENSE_HIS primary key (TRANS_ID, TECHNICAL_STANDARD_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_MAIN_FLTEXP
prompt ================================
prompt
create table T_FXW_MAIN_FLTEXP
(
  sum_time         NUMBER(5),
  flight_plan_id   VARCHAR2(20),
  slide_start_time DATE,
  take_off_time    DATE,
  land_time        DATE,
  slide_end_time   DATE,
  time_on_ground   NUMBER(4),
  time_in_sky      NUMBER(4),
  reserved_fuel    NUMBER(11),
  refuel           NUMBER(11),
  total_fuel       NUMBER(11),
  flight_rec_id    NUMBER(11) not null,
  time_in_night    NUMBER(4),
  aero_paper_id    NUMBER(11),
  aero_paper_no    VARCHAR2(50),
  pilot_checkbox   VARCHAR2(150),
  icao             VARCHAR2(50),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  oper             VARCHAR2(10),
  trans_id         NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_MAIN_FLTEXP
  is '飞行经历主表(借调中间表)';
comment on column T_FXW_MAIN_FLTEXP.sum_time
  is '总飞行时间(分钟)';
comment on column T_FXW_MAIN_FLTEXP.flight_plan_id
  is '飞行计划ID';
comment on column T_FXW_MAIN_FLTEXP.slide_start_time
  is '滑出时间';
comment on column T_FXW_MAIN_FLTEXP.take_off_time
  is '起飞时刻';
comment on column T_FXW_MAIN_FLTEXP.land_time
  is '降落时刻';
comment on column T_FXW_MAIN_FLTEXP.slide_end_time
  is '滑入时间';
comment on column T_FXW_MAIN_FLTEXP.time_on_ground
  is '地面时间';
comment on column T_FXW_MAIN_FLTEXP.time_in_sky
  is '空中时间';
comment on column T_FXW_MAIN_FLTEXP.reserved_fuel
  is '原存燃油';
comment on column T_FXW_MAIN_FLTEXP.refuel
  is '新加燃油';
comment on column T_FXW_MAIN_FLTEXP.total_fuel
  is '总计燃油';
comment on column T_FXW_MAIN_FLTEXP.flight_rec_id
  is '任务回收ID';
comment on column T_FXW_MAIN_FLTEXP.time_in_night
  is '夜航时间';
comment on column T_FXW_MAIN_FLTEXP.aero_paper_id
  is 'AERO_PAPER_ID';
comment on column T_FXW_MAIN_FLTEXP.aero_paper_no
  is 'AERO_PAPER_NO';
comment on column T_FXW_MAIN_FLTEXP.pilot_checkbox
  is 'PILOT_CHECKBOX';
comment on column T_FXW_MAIN_FLTEXP.icao
  is '是否执行英语通信';
comment on column T_FXW_MAIN_FLTEXP.op_time
  is '操作时间';
comment on column T_FXW_MAIN_FLTEXP.oper_ip
  is 'IP地址';
comment on column T_FXW_MAIN_FLTEXP.oper_host
  is '主机名';
comment on column T_FXW_MAIN_FLTEXP.oper
  is '操作人';
comment on column T_FXW_MAIN_FLTEXP.trans_id
  is '飞行员借调ID';
alter table T_FXW_MAIN_FLTEXP
  add constraint PK_T_FXW_MAIN_FLTEXP primary key (FLIGHT_REC_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_MAIN_FLTEXP_HIS
prompt ====================================
prompt
create table T_FXW_MAIN_FLTEXP_HIS
(
  trans_id         NUMBER(11) not null,
  flight_plan_id   VARCHAR2(20),
  slide_start_time DATE,
  take_off_time    DATE,
  land_time        DATE,
  slide_end_time   DATE,
  time_on_ground   NUMBER(4),
  time_in_sky      NUMBER(4),
  sum_time         NUMBER(5),
  reserved_fuel    NUMBER(11),
  refuel           NUMBER(11),
  total_fuel       NUMBER(11),
  flight_rec_id    NUMBER(11) not null,
  time_in_night    NUMBER(4),
  aero_paper_id    NUMBER(11),
  aero_paper_no    VARCHAR2(50),
  pilot_checkbox   VARCHAR2(150),
  icao             VARCHAR2(50),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  oper             VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_FXW_MAIN_FLTEXP_HIS
  is '飞行经历主表(借调历史表)';
comment on column T_FXW_MAIN_FLTEXP_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_MAIN_FLTEXP_HIS.flight_plan_id
  is '飞行计划ID';
comment on column T_FXW_MAIN_FLTEXP_HIS.slide_start_time
  is '滑出时间';
comment on column T_FXW_MAIN_FLTEXP_HIS.take_off_time
  is '起飞时刻';
comment on column T_FXW_MAIN_FLTEXP_HIS.land_time
  is '降落时刻';
comment on column T_FXW_MAIN_FLTEXP_HIS.slide_end_time
  is '滑入时间';
comment on column T_FXW_MAIN_FLTEXP_HIS.time_on_ground
  is '地面时间';
comment on column T_FXW_MAIN_FLTEXP_HIS.time_in_sky
  is '空中时间';
comment on column T_FXW_MAIN_FLTEXP_HIS.sum_time
  is '总飞行时间(分钟)';
comment on column T_FXW_MAIN_FLTEXP_HIS.reserved_fuel
  is '原存燃油';
comment on column T_FXW_MAIN_FLTEXP_HIS.refuel
  is '新加燃油';
comment on column T_FXW_MAIN_FLTEXP_HIS.total_fuel
  is '总计燃油';
comment on column T_FXW_MAIN_FLTEXP_HIS.flight_rec_id
  is '任务回收ID';
comment on column T_FXW_MAIN_FLTEXP_HIS.time_in_night
  is '夜航时间';
comment on column T_FXW_MAIN_FLTEXP_HIS.aero_paper_id
  is 'AERO_PAPER_ID';
comment on column T_FXW_MAIN_FLTEXP_HIS.aero_paper_no
  is 'AERO_PAPER_NO';
comment on column T_FXW_MAIN_FLTEXP_HIS.pilot_checkbox
  is 'PILOT_CHECKBOX';
comment on column T_FXW_MAIN_FLTEXP_HIS.icao
  is '是否执行英语通信';
comment on column T_FXW_MAIN_FLTEXP_HIS.op_time
  is '操作时间';
comment on column T_FXW_MAIN_FLTEXP_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_MAIN_FLTEXP_HIS.oper_host
  is '主机名';
comment on column T_FXW_MAIN_FLTEXP_HIS.oper
  is '操作人';
alter table T_FXW_MAIN_FLTEXP_HIS
  add constraint PK_FXW_MAIN_FLTEXP_HIS primary key (TRANS_ID, FLIGHT_REC_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_MONFLTEXP
prompt ==============================
prompt
create table T_FXW_MONFLTEXP
(
  flight_hour_id VARCHAR2(20) not null,
  pilot_info_id  VARCHAR2(20),
  user_name      VARCHAR2(20),
  idcode         VARCHAR2(20),
  company_name   VARCHAR2(20),
  company_code   VARCHAR2(20),
  year_month     VARCHAR2(20),
  ac_type        VARCHAR2(20),
  fly_hour       VARCHAR2(20),
  fly_sortie     NUMBER(5),
  live_time      NUMBER(5),
  live_sortie    NUMBER(5),
  left_time      NUMBER(5),
  right_time     NUMBER(5),
  night_time     NUMBER(5),
  meter_fly_time NUMBER(5),
  ii_sortie      NUMBER(5),
  teacher_time   NUMBER(5),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  oper           VARCHAR2(10),
  trans_id       NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_MONFLTEXP
  is '月度飞行经历(借调中间表)';
comment on column T_FXW_MONFLTEXP.flight_hour_id
  is '流水号';
comment on column T_FXW_MONFLTEXP.pilot_info_id
  is '飞行员id';
comment on column T_FXW_MONFLTEXP.user_name
  is '人员姓名';
comment on column T_FXW_MONFLTEXP.idcode
  is '人员身份证号';
comment on column T_FXW_MONFLTEXP.company_name
  is '分子公司名称';
comment on column T_FXW_MONFLTEXP.company_code
  is '分子公司二码';
comment on column T_FXW_MONFLTEXP.year_month
  is '年';
comment on column T_FXW_MONFLTEXP.ac_type
  is '机型';
comment on column T_FXW_MONFLTEXP.fly_hour
  is '飞行小时';
comment on column T_FXW_MONFLTEXP.fly_sortie
  is '起落架次';
comment on column T_FXW_MONFLTEXP.live_time
  is '经历小时';
comment on column T_FXW_MONFLTEXP.live_sortie
  is '经历架次';
comment on column T_FXW_MONFLTEXP.left_time
  is '左坐时间';
comment on column T_FXW_MONFLTEXP.right_time
  is '右坐时间';
comment on column T_FXW_MONFLTEXP.night_time
  is '夜航时间';
comment on column T_FXW_MONFLTEXP.meter_fly_time
  is '仪表飞行时间';
comment on column T_FXW_MONFLTEXP.ii_sortie
  is 'ⅡILS架次';
comment on column T_FXW_MONFLTEXP.teacher_time
  is '教员时间';
comment on column T_FXW_MONFLTEXP.op_time
  is '操作时间';
comment on column T_FXW_MONFLTEXP.oper_ip
  is 'IP地址';
comment on column T_FXW_MONFLTEXP.oper_host
  is '主机名';
comment on column T_FXW_MONFLTEXP.oper
  is '操作人';
comment on column T_FXW_MONFLTEXP.trans_id
  is '飞行员借调ID';
alter table T_FXW_MONFLTEXP
  add constraint PK_T_FXW_MONFLTEXP primary key (TRANS_ID, FLIGHT_HOUR_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_MONFLTEXP_HIS
prompt ==================================
prompt
create table T_FXW_MONFLTEXP_HIS
(
  trans_id       NUMBER(11) not null,
  flight_hour_id VARCHAR2(20) not null,
  pilot_info_id  VARCHAR2(20),
  user_name      VARCHAR2(20),
  idcode         VARCHAR2(20),
  company_name   VARCHAR2(20),
  company_code   VARCHAR2(20),
  year_month     VARCHAR2(20),
  ac_type        VARCHAR2(20),
  fly_hour       VARCHAR2(20),
  fly_sortie     NUMBER(5),
  live_time      NUMBER(5),
  live_sortie    NUMBER(5),
  left_time      NUMBER(5),
  right_time     NUMBER(5),
  night_time     NUMBER(5),
  meter_fly_time NUMBER(5),
  ii_sortie      NUMBER(5),
  teacher_time   NUMBER(5),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  oper           VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_MONFLTEXP_HIS
  is '月度飞行经历(借调历史表)';
comment on column T_FXW_MONFLTEXP_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_MONFLTEXP_HIS.flight_hour_id
  is '流水号';
comment on column T_FXW_MONFLTEXP_HIS.pilot_info_id
  is '飞行员id';
comment on column T_FXW_MONFLTEXP_HIS.user_name
  is '人员姓名';
comment on column T_FXW_MONFLTEXP_HIS.idcode
  is '人员身份证号';
comment on column T_FXW_MONFLTEXP_HIS.company_name
  is '分子公司名称';
comment on column T_FXW_MONFLTEXP_HIS.company_code
  is '分子公司二码';
comment on column T_FXW_MONFLTEXP_HIS.year_month
  is '年';
comment on column T_FXW_MONFLTEXP_HIS.ac_type
  is '机型';
comment on column T_FXW_MONFLTEXP_HIS.fly_hour
  is '飞行小时';
comment on column T_FXW_MONFLTEXP_HIS.fly_sortie
  is '起落架次';
comment on column T_FXW_MONFLTEXP_HIS.live_time
  is '经历小时';
comment on column T_FXW_MONFLTEXP_HIS.live_sortie
  is '经历架次';
comment on column T_FXW_MONFLTEXP_HIS.left_time
  is '左坐时间';
comment on column T_FXW_MONFLTEXP_HIS.right_time
  is '右坐时间';
comment on column T_FXW_MONFLTEXP_HIS.night_time
  is '夜航时间';
comment on column T_FXW_MONFLTEXP_HIS.meter_fly_time
  is '仪表飞行时间';
comment on column T_FXW_MONFLTEXP_HIS.ii_sortie
  is 'ⅡILS架次';
comment on column T_FXW_MONFLTEXP_HIS.teacher_time
  is '教员时间';
comment on column T_FXW_MONFLTEXP_HIS.op_time
  is '操作时间';
comment on column T_FXW_MONFLTEXP_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_MONFLTEXP_HIS.oper_host
  is '主机名';
comment on column T_FXW_MONFLTEXP_HIS.oper
  is '操作人';
alter table T_FXW_MONFLTEXP_HIS
  add constraint PK_FXW_MONFLTEXP_HIS primary key (TRANS_ID, FLIGHT_HOUR_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_PASSPORT
prompt =============================
prompt
create table T_FXW_PASSPORT
(
  passport_id      VARCHAR2(20) not null,
  pilot_info_id    VARCHAR2(20),
  passport_code    VARCHAR2(20),
  passport_type    VARCHAR2(20),
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(60),
  remark           VARCHAR2(100),
  creator          VARCHAR2(10),
  create_date      DATE,
  last_modifier    VARCHAR2(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  trans_id         NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_PASSPORT
  is '护照表(借调中间表)';
comment on column T_FXW_PASSPORT.passport_id
  is '流水号';
comment on column T_FXW_PASSPORT.pilot_info_id
  is '人员信息ID';
comment on column T_FXW_PASSPORT.passport_code
  is '护照号';
comment on column T_FXW_PASSPORT.passport_type
  is '护照类型';
comment on column T_FXW_PASSPORT.grant_date
  is '发放日期';
comment on column T_FXW_PASSPORT.use_date
  is '启用日期';
comment on column T_FXW_PASSPORT.valid_date
  is '有效日期';
comment on column T_FXW_PASSPORT.grant_place
  is '发放地点';
comment on column T_FXW_PASSPORT.remark
  is '备注';
comment on column T_FXW_PASSPORT.creator
  is '创建人';
comment on column T_FXW_PASSPORT.create_date
  is '创建日期';
comment on column T_FXW_PASSPORT.last_modifier
  is '修改者';
comment on column T_FXW_PASSPORT.last_modify_time
  is '修改日期';
comment on column T_FXW_PASSPORT.enter_airport
  is '机场列表';
comment on column T_FXW_PASSPORT.oper
  is '操作人';
comment on column T_FXW_PASSPORT.op_time
  is '操作时间';
comment on column T_FXW_PASSPORT.oper_ip
  is 'IP地址';
comment on column T_FXW_PASSPORT.oper_host
  is '主机名';
comment on column T_FXW_PASSPORT.trans_id
  is '飞行员借调ID';
alter table T_FXW_PASSPORT
  add constraint PK_T_FXW_PASSPORT primary key (PASSPORT_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_PASSPORT_HIS
prompt =================================
prompt
create table T_FXW_PASSPORT_HIS
(
  trans_id         NUMBER(11) not null,
  passport_id      VARCHAR2(20) not null,
  pilot_info_id    VARCHAR2(20),
  passport_code    VARCHAR2(20),
  passport_type    VARCHAR2(20),
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(60),
  remark           VARCHAR2(100),
  creator          VARCHAR2(10),
  create_date      DATE,
  last_modifier    VARCHAR2(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_PASSPORT_HIS
  is '护照表(借调历史表)';
comment on column T_FXW_PASSPORT_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_PASSPORT_HIS.passport_id
  is '流水号';
comment on column T_FXW_PASSPORT_HIS.pilot_info_id
  is '人员信息ID';
comment on column T_FXW_PASSPORT_HIS.passport_code
  is '护照号';
comment on column T_FXW_PASSPORT_HIS.passport_type
  is '护照类型';
comment on column T_FXW_PASSPORT_HIS.grant_date
  is '发放日期';
comment on column T_FXW_PASSPORT_HIS.use_date
  is '启用日期';
comment on column T_FXW_PASSPORT_HIS.valid_date
  is '有效日期';
comment on column T_FXW_PASSPORT_HIS.grant_place
  is '发放地点';
comment on column T_FXW_PASSPORT_HIS.remark
  is '备注';
comment on column T_FXW_PASSPORT_HIS.creator
  is '创建人';
comment on column T_FXW_PASSPORT_HIS.create_date
  is '创建日期';
comment on column T_FXW_PASSPORT_HIS.last_modifier
  is '修改者';
comment on column T_FXW_PASSPORT_HIS.last_modify_time
  is '修改日期';
comment on column T_FXW_PASSPORT_HIS.enter_airport
  is '机场列表';
comment on column T_FXW_PASSPORT_HIS.oper
  is '操作人';
comment on column T_FXW_PASSPORT_HIS.op_time
  is '操作时间';
comment on column T_FXW_PASSPORT_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_PASSPORT_HIS.oper_host
  is '主机名';
alter table T_FXW_PASSPORT_HIS
  add constraint PK_FXW_PASSPORT_HIS primary key (TRANS_ID, PASSPORT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_SPE_AIRPORT
prompt ================================
prompt
create table T_FXW_SPE_AIRPORT
(
  pilot_info_id         VARCHAR2(20) not null,
  bd_special_airport_id VARCHAR2(20) not null,
  port_code3            VARCHAR2(3),
  port_code4            VARCHAR2(4),
  port_name             VARCHAR2(20),
  op_time               DATE,
  oper_ip               VARCHAR2(15),
  oper_host             VARCHAR2(50),
  oper                  VARCHAR2(10) not null,
  trans_id              NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FXW_SPE_AIRPORT
  is '特殊机场放飞信息(借调中间表)';
comment on column T_FXW_SPE_AIRPORT.pilot_info_id
  is '飞行员ID';
comment on column T_FXW_SPE_AIRPORT.bd_special_airport_id
  is '特殊机场ID';
comment on column T_FXW_SPE_AIRPORT.port_code3
  is '机场三码';
comment on column T_FXW_SPE_AIRPORT.port_code4
  is '机场四码';
comment on column T_FXW_SPE_AIRPORT.port_name
  is '机场名称';
comment on column T_FXW_SPE_AIRPORT.op_time
  is '操作时间';
comment on column T_FXW_SPE_AIRPORT.oper_ip
  is 'IP地址';
comment on column T_FXW_SPE_AIRPORT.oper_host
  is '主机名';
comment on column T_FXW_SPE_AIRPORT.oper
  is '操作人';
comment on column T_FXW_SPE_AIRPORT.trans_id
  is '飞行员借调ID';
alter table T_FXW_SPE_AIRPORT
  add constraint PK_T_FXW_SPE_AIRPORT primary key (TRANS_ID, PILOT_INFO_ID, BD_SPECIAL_AIRPORT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_SPE_RADIO
prompt ==============================
prompt
create table T_FXW_SPE_RADIO
(
  pilot_info_id       VARCHAR2(20) not null,
  bd_special_radio_id VARCHAR2(20) not null,
  special_radio_type  VARCHAR2(20),
  special_radio_code  VARCHAR2(20),
  creator             VARCHAR2(20),
  create_date         DATE,
  last_modifier       VARCHAR2(20),
  last_modify_time    DATE,
  oper                VARCHAR2(10),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  trans_id            NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FXW_SPE_RADIO
  is '报务放飞区域信息(借调中间表)';
comment on column T_FXW_SPE_RADIO.pilot_info_id
  is '飞行员ID';
comment on column T_FXW_SPE_RADIO.bd_special_radio_id
  is '报务区域代码ID';
comment on column T_FXW_SPE_RADIO.special_radio_type
  is '报务区域描述';
comment on column T_FXW_SPE_RADIO.special_radio_code
  is '报务区域代码';
comment on column T_FXW_SPE_RADIO.creator
  is '创建人';
comment on column T_FXW_SPE_RADIO.create_date
  is '创建日期';
comment on column T_FXW_SPE_RADIO.last_modifier
  is '修改者';
comment on column T_FXW_SPE_RADIO.last_modify_time
  is '修改日期';
comment on column T_FXW_SPE_RADIO.oper
  is '操作人 ';
comment on column T_FXW_SPE_RADIO.op_time
  is '操作时间';
comment on column T_FXW_SPE_RADIO.oper_ip
  is 'IP地址';
comment on column T_FXW_SPE_RADIO.oper_host
  is '主机名';
comment on column T_FXW_SPE_RADIO.trans_id
  is '飞行员借调ID';
alter table T_FXW_SPE_RADIO
  add constraint PK_T_FXW_SPE_RADIO primary key (PILOT_INFO_ID, TRANS_ID, BD_SPECIAL_RADIO_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_SPE_ROUTE
prompt ==============================
prompt
create table T_FXW_SPE_ROUTE
(
  pilot_info_id       VARCHAR2(20) not null,
  bd_special_route_id VARCHAR2(20) not null,
  special_route       VARCHAR2(20),
  special_route_code  VARCHAR2(20),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  oper                VARCHAR2(10),
  trans_id            NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_FXW_SPE_ROUTE
  is '机长单飞区域信息(借调中间表)';
comment on column T_FXW_SPE_ROUTE.pilot_info_id
  is '飞行员ID';
comment on column T_FXW_SPE_ROUTE.bd_special_route_id
  is '机长单飞区域代码ID';
comment on column T_FXW_SPE_ROUTE.special_route
  is '机长单飞区域描述';
comment on column T_FXW_SPE_ROUTE.special_route_code
  is '机长单飞区域代码';
comment on column T_FXW_SPE_ROUTE.op_time
  is '操作时间';
comment on column T_FXW_SPE_ROUTE.oper_ip
  is 'IP地址';
comment on column T_FXW_SPE_ROUTE.oper_host
  is '主机名';
comment on column T_FXW_SPE_ROUTE.oper
  is '操作人';
comment on column T_FXW_SPE_ROUTE.trans_id
  is '飞行员借调ID';
alter table T_FXW_SPE_ROUTE
  add constraint PK_T_FXW_SPE_ROUTE primary key (TRANS_ID, PILOT_INFO_ID, BD_SPECIAL_ROUTE_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_TASK
prompt =========================
prompt
create table T_FXW_TASK
(
  flight_task_id        VARCHAR2(20) not null,
  org_code              VARCHAR2(20),
  task_date             DATE,
  apply_flight_no       VARCHAR2(100),
  ac_type               VARCHAR2(20),
  sign_time             DATE,
  drive_time            DATE,
  flight_hour           NUMBER(5),
  depart_flight_no      VARCHAR2(20),
  depart_port_code3     VARCHAR2(5),
  depart_time           DATE,
  destination           VARCHAR2(5),
  arrive_time           DATE,
  task_type             VARCHAR2(5),
  flight_unit_code      VARCHAR2(20),
  assign_status         VARCHAR2(20),
  is_full               VARCHAR2(3),
  route                 VARCHAR2(200),
  flight_status         VARCHAR2(20),
  is_modified           VARCHAR2(3),
  modifiy_time          DATE,
  duty_lock             VARCHAR2(20),
  general_dispatch_lock VARCHAR2(20),
  publish_status        VARCHAR2(20),
  last_modify_time      DATE,
  remarks               VARCHAR2(500),
  op_time               DATE,
  oper_ip               VARCHAR2(15),
  oper_host             VARCHAR2(50),
  oper                  VARCHAR2(10),
  trans_id              NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_TASK
  is '飞行任务(借调中间表)';
comment on column T_FXW_TASK.flight_task_id
  is '任务号';
comment on column T_FXW_TASK.org_code
  is '分子公司';
comment on column T_FXW_TASK.task_date
  is '任务日期';
comment on column T_FXW_TASK.apply_flight_no
  is '航班串';
comment on column T_FXW_TASK.ac_type
  is '机型';
comment on column T_FXW_TASK.sign_time
  is '签到时间';
comment on column T_FXW_TASK.drive_time
  is '发车时间';
comment on column T_FXW_TASK.flight_hour
  is '飞行时间';
comment on column T_FXW_TASK.depart_flight_no
  is '起飞航班号';
comment on column T_FXW_TASK.depart_port_code3
  is '起飞航站';
comment on column T_FXW_TASK.depart_time
  is '起飞时间';
comment on column T_FXW_TASK.destination
  is '目的地';
comment on column T_FXW_TASK.arrive_time
  is '到达时间';
comment on column T_FXW_TASK.task_type
  is '任务类型';
comment on column T_FXW_TASK.flight_unit_code
  is '飞行单位代码';
comment on column T_FXW_TASK.assign_status
  is '任务排班状态';
comment on column T_FXW_TASK.is_full
  is '排班是否满员';
comment on column T_FXW_TASK.route
  is '航线名称';
comment on column T_FXW_TASK.flight_status
  is '航班状态';
comment on column T_FXW_TASK.is_modified
  is '任务是否变更';
comment on column T_FXW_TASK.modifiy_time
  is '任务变更时间';
comment on column T_FXW_TASK.duty_lock
  is '值班锁';
comment on column T_FXW_TASK.general_dispatch_lock
  is '总调锁';
comment on column T_FXW_TASK.publish_status
  is '发布状态';
comment on column T_FXW_TASK.last_modify_time
  is '最后修改时间';
comment on column T_FXW_TASK.remarks
  is '备注';
comment on column T_FXW_TASK.op_time
  is '操作时间';
comment on column T_FXW_TASK.oper_ip
  is 'IP地址';
comment on column T_FXW_TASK.oper_host
  is '主机名';
comment on column T_FXW_TASK.oper
  is '操作人';
comment on column T_FXW_TASK.trans_id
  is '飞行员借调ID';
alter table T_FXW_TASK
  add constraint PK_T_FXW_TASK primary key (TRANS_ID, FLIGHT_TASK_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_TASKFLIGHT
prompt ===============================
prompt
create table T_FXW_TASKFLIGHT
(
  task_plan_id     VARCHAR2(20),
  flight_task_id   VARCHAR2(20) not null,
  task_type        VARCHAR2(20),
  plan_idx         NUMBER(3),
  flight_plan_id   VARCHAR2(20) not null,
  if_lift          VARCHAR2(3),
  if_page          VARCHAR2(3),
  flight_date      DATE,
  last_modify_time DATE,
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  oper             VARCHAR2(10),
  trans_id         NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_TASKFLIGHT
  is '任务，航班关联(借调中间表)';
comment on column T_FXW_TASKFLIGHT.task_plan_id
  is '流水号';
comment on column T_FXW_TASKFLIGHT.flight_task_id
  is '任务ID';
comment on column T_FXW_TASKFLIGHT.task_type
  is '任务类型';
comment on column T_FXW_TASKFLIGHT.plan_idx
  is '航班顺序号';
comment on column T_FXW_TASKFLIGHT.flight_plan_id
  is '航班计划ID';
comment on column T_FXW_TASKFLIGHT.if_lift
  is '是否搭机';
comment on column T_FXW_TASKFLIGHT.if_page
  is '是否分页';
comment on column T_FXW_TASKFLIGHT.flight_date
  is '航班日期';
comment on column T_FXW_TASKFLIGHT.last_modify_time
  is '最后修改日期';
comment on column T_FXW_TASKFLIGHT.op_time
  is '操作时间';
comment on column T_FXW_TASKFLIGHT.oper_ip
  is 'IP地址';
comment on column T_FXW_TASKFLIGHT.oper_host
  is '主机名
';
comment on column T_FXW_TASKFLIGHT.oper
  is '操作人';
comment on column T_FXW_TASKFLIGHT.trans_id
  is '飞行员借调ID';
alter table T_FXW_TASKFLIGHT
  add constraint PK_T_FXW_TASKFLIGHT primary key (TRANS_ID, FLIGHT_TASK_ID, FLIGHT_PLAN_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_TASKFLIGHT_HIS
prompt ===================================
prompt
create table T_FXW_TASKFLIGHT_HIS
(
  trans_id         NUMBER(11) not null,
  task_plan_id     VARCHAR2(20),
  flight_task_id   VARCHAR2(20) not null,
  flight_plan_id   VARCHAR2(20) not null,
  task_type        VARCHAR2(20),
  plan_idx         NUMBER(3),
  if_lift          VARCHAR2(3),
  if_page          VARCHAR2(3),
  flight_date      DATE,
  last_modify_time DATE,
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  oper             VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_FXW_TASKFLIGHT_HIS
  is '任务，航班关联(借调历史表)';
comment on column T_FXW_TASKFLIGHT_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_TASKFLIGHT_HIS.task_plan_id
  is '流水号';
comment on column T_FXW_TASKFLIGHT_HIS.flight_task_id
  is '任务ID';
comment on column T_FXW_TASKFLIGHT_HIS.flight_plan_id
  is '航班计划ID';
comment on column T_FXW_TASKFLIGHT_HIS.task_type
  is '任务类型';
comment on column T_FXW_TASKFLIGHT_HIS.plan_idx
  is '航班顺序号';
comment on column T_FXW_TASKFLIGHT_HIS.if_lift
  is '是否搭机';
comment on column T_FXW_TASKFLIGHT_HIS.if_page
  is '是否分页';
comment on column T_FXW_TASKFLIGHT_HIS.flight_date
  is '航班日期';
comment on column T_FXW_TASKFLIGHT_HIS.last_modify_time
  is '最后修改日期';
comment on column T_FXW_TASKFLIGHT_HIS.op_time
  is '操作时间';
comment on column T_FXW_TASKFLIGHT_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_TASKFLIGHT_HIS.oper_host
  is '主机名
';
comment on column T_FXW_TASKFLIGHT_HIS.oper
  is '操作人';
alter table T_FXW_TASKFLIGHT_HIS
  add constraint PK_FXW_TASKFLIGHT_HIS primary key (TRANS_ID, FLIGHT_TASK_ID, FLIGHT_PLAN_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_TASK_HIS
prompt =============================
prompt
create table T_FXW_TASK_HIS
(
  trans_id              NUMBER(11) not null,
  flight_task_id        VARCHAR2(20) not null,
  org_code              VARCHAR2(20),
  task_date             DATE,
  apply_flight_no       VARCHAR2(100),
  ac_type               VARCHAR2(20),
  sign_time             DATE,
  drive_time            DATE,
  flight_hour           NUMBER(5),
  depart_flight_no      VARCHAR2(20),
  depart_port_code3     VARCHAR2(5),
  depart_time           DATE,
  destination           VARCHAR2(5),
  arrive_time           DATE,
  task_type             VARCHAR2(5),
  flight_unit_code      VARCHAR2(20),
  assign_status         VARCHAR2(20),
  is_full               VARCHAR2(3),
  route                 VARCHAR2(200),
  flight_status         VARCHAR2(20),
  is_modified           VARCHAR2(3),
  modifiy_time          DATE,
  duty_lock             VARCHAR2(20),
  general_dispatch_lock VARCHAR2(20),
  publish_status        VARCHAR2(20),
  last_modify_time      DATE,
  remarks               VARCHAR2(500),
  op_time               DATE,
  oper_ip               VARCHAR2(15),
  oper_host             VARCHAR2(50),
  oper                  VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_FXW_TASK_HIS
  is '飞行任务(借调历史表)';
comment on column T_FXW_TASK_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_TASK_HIS.flight_task_id
  is '任务号';
comment on column T_FXW_TASK_HIS.org_code
  is '分子公司';
comment on column T_FXW_TASK_HIS.task_date
  is '任务日期';
comment on column T_FXW_TASK_HIS.apply_flight_no
  is '航班串';
comment on column T_FXW_TASK_HIS.ac_type
  is '机型';
comment on column T_FXW_TASK_HIS.sign_time
  is '签到时间';
comment on column T_FXW_TASK_HIS.drive_time
  is '发车时间';
comment on column T_FXW_TASK_HIS.flight_hour
  is '飞行时间';
comment on column T_FXW_TASK_HIS.depart_flight_no
  is '起飞航班号';
comment on column T_FXW_TASK_HIS.depart_port_code3
  is '起飞航站';
comment on column T_FXW_TASK_HIS.depart_time
  is '起飞时间';
comment on column T_FXW_TASK_HIS.destination
  is '目的地';
comment on column T_FXW_TASK_HIS.arrive_time
  is '到达时间';
comment on column T_FXW_TASK_HIS.task_type
  is '任务类型';
comment on column T_FXW_TASK_HIS.flight_unit_code
  is '飞行单位代码';
comment on column T_FXW_TASK_HIS.assign_status
  is '任务排班状态';
comment on column T_FXW_TASK_HIS.is_full
  is '排班是否满员';
comment on column T_FXW_TASK_HIS.route
  is '航线名称';
comment on column T_FXW_TASK_HIS.flight_status
  is '航班状态';
comment on column T_FXW_TASK_HIS.is_modified
  is '任务是否变更';
comment on column T_FXW_TASK_HIS.modifiy_time
  is '任务变更时间';
comment on column T_FXW_TASK_HIS.duty_lock
  is '值班锁';
comment on column T_FXW_TASK_HIS.general_dispatch_lock
  is '总调锁';
comment on column T_FXW_TASK_HIS.publish_status
  is '发布状态';
comment on column T_FXW_TASK_HIS.last_modify_time
  is '最后修改时间';
comment on column T_FXW_TASK_HIS.remarks
  is '备注';
comment on column T_FXW_TASK_HIS.op_time
  is '操作时间';
comment on column T_FXW_TASK_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_TASK_HIS.oper_host
  is '主机名';
comment on column T_FXW_TASK_HIS.oper
  is '操作人';
alter table T_FXW_TASK_HIS
  add constraint PK_FXW_TASK_HIS primary key (TRANS_ID, FLIGHT_TASK_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_FXW_VISA
prompt =========================
prompt
create table T_FXW_VISA
(
  pilot_visa_id    VARCHAR2(20) not null,
  pilot_info_id    VARCHAR2(20),
  passport_id      VARCHAR2(20),
  visa_code        VARCHAR2(20),
  visa_type        VARCHAR2(20),
  nation           VARCHAR2(20),
  valid_date       DATE,
  begin_date       DATE,
  grant_date       DATE,
  creator          VARCHAR2(10),
  create_date      DATE,
  last_modifier    VARCHAR2(20),
  last_modify_time DATE,
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  trans_id         NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_VISA
  is '签证信息(借调中间表)';
comment on column T_FXW_VISA.pilot_visa_id
  is '流水号';
comment on column T_FXW_VISA.pilot_info_id
  is '飞行员id';
comment on column T_FXW_VISA.passport_id
  is '护照id';
comment on column T_FXW_VISA.visa_code
  is '签证编号';
comment on column T_FXW_VISA.visa_type
  is '签证类型';
comment on column T_FXW_VISA.nation
  is '国籍';
comment on column T_FXW_VISA.valid_date
  is '有效日期';
comment on column T_FXW_VISA.begin_date
  is '开始日期';
comment on column T_FXW_VISA.grant_date
  is '获取日期';
comment on column T_FXW_VISA.creator
  is '创建人';
comment on column T_FXW_VISA.create_date
  is '创建日期';
comment on column T_FXW_VISA.last_modifier
  is '修改者';
comment on column T_FXW_VISA.last_modify_time
  is '修改日期';
comment on column T_FXW_VISA.oper
  is '操作人';
comment on column T_FXW_VISA.op_time
  is '操作时间';
comment on column T_FXW_VISA.oper_ip
  is 'IP地址';
comment on column T_FXW_VISA.oper_host
  is '主机名';
comment on column T_FXW_VISA.trans_id
  is '飞行员借调ID';
alter table T_FXW_VISA
  add constraint PK_T_FXW_VISA primary key (PILOT_VISA_ID, TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_FXW_VISA_HIS
prompt =============================
prompt
create table T_FXW_VISA_HIS
(
  trans_id         NUMBER(11) not null,
  pilot_visa_id    VARCHAR2(20) not null,
  pilot_info_id    VARCHAR2(20),
  passport_id      VARCHAR2(20),
  visa_code        VARCHAR2(20),
  visa_type        VARCHAR2(20),
  nation           VARCHAR2(20),
  valid_date       DATE,
  begin_date       DATE,
  grant_date       DATE,
  creator          VARCHAR2(10),
  create_date      DATE,
  last_modifier    VARCHAR2(20),
  last_modify_time DATE,
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_FXW_VISA_HIS
  is '签证信息(借调历史表)';
comment on column T_FXW_VISA_HIS.trans_id
  is '飞行员借调ID';
comment on column T_FXW_VISA_HIS.pilot_visa_id
  is '流水号';
comment on column T_FXW_VISA_HIS.pilot_info_id
  is '飞行员id';
comment on column T_FXW_VISA_HIS.passport_id
  is '护照id';
comment on column T_FXW_VISA_HIS.visa_code
  is '签证编号';
comment on column T_FXW_VISA_HIS.visa_type
  is '签证类型';
comment on column T_FXW_VISA_HIS.nation
  is '国籍';
comment on column T_FXW_VISA_HIS.valid_date
  is '有效日期';
comment on column T_FXW_VISA_HIS.begin_date
  is '开始日期';
comment on column T_FXW_VISA_HIS.grant_date
  is '获取日期';
comment on column T_FXW_VISA_HIS.creator
  is '创建人';
comment on column T_FXW_VISA_HIS.create_date
  is '创建日期';
comment on column T_FXW_VISA_HIS.last_modifier
  is '修改者';
comment on column T_FXW_VISA_HIS.last_modify_time
  is '修改日期';
comment on column T_FXW_VISA_HIS.oper
  is '操作人';
comment on column T_FXW_VISA_HIS.op_time
  is '操作时间';
comment on column T_FXW_VISA_HIS.oper_ip
  is 'IP地址';
comment on column T_FXW_VISA_HIS.oper_host
  is '主机名';
alter table T_FXW_VISA_HIS
  add constraint PK_FXW_VISA_HIS primary key (TRANS_ID, PILOT_VISA_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_GB_FLT_SCHEDULE
prompt ================================
prompt
create table T_GB_FLT_SCHEDULE
(
  filiale           VARCHAR2(5) not null,
  flt_sn            VARCHAR2(1),
  start_date        DATE not null,
  end_date          DATE not null,
  departure_airport VARCHAR2(3) not null,
  arrival_airport   VARCHAR2(3) not null,
  flight_com        VARCHAR2(2000) not null,
  g_or_b            VARCHAR2(2) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_GB_FLT_SCHEDULE
  is '好坏航班表';
comment on column T_GB_FLT_SCHEDULE.filiale
  is '分子公司';
comment on column T_GB_FLT_SCHEDULE.flt_sn
  is '航季 (S 夏秋季
 W 冬春季
) ';
comment on column T_GB_FLT_SCHEDULE.start_date
  is '开始日期';
comment on column T_GB_FLT_SCHEDULE.end_date
  is '结束日期';
comment on column T_GB_FLT_SCHEDULE.departure_airport
  is '起飞机场';
comment on column T_GB_FLT_SCHEDULE.arrival_airport
  is '落地机场';
comment on column T_GB_FLT_SCHEDULE.flight_com
  is '航班串';
comment on column T_GB_FLT_SCHEDULE.g_or_b
  is '好坏机场标识';
comment on column T_GB_FLT_SCHEDULE.oper
  is '操作人';
comment on column T_GB_FLT_SCHEDULE.op_time
  is '操作时间';
comment on column T_GB_FLT_SCHEDULE.remarks
  is '备注';
comment on column T_GB_FLT_SCHEDULE.oper_ip
  is '操作IP';
comment on column T_GB_FLT_SCHEDULE.oper_host
  is '操作主机名';
alter table T_GB_FLT_SCHEDULE
  add constraint PK_GB_FLT_SCHEDULE primary key (FILIALE, START_DATE, END_DATE, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT, FLIGHT_COM, G_OR_B)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_BRANCH
prompt ==========================
prompt
create table T_HR_BRANCH
(
  branch_code  VARCHAR2(10) not null,
  branch_name  VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10) default 'A320'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_BRANCH
  is '行政部门表';
comment on column T_HR_BRANCH.branch_code
  is '部门代码';
comment on column T_HR_BRANCH.branch_name
  is '部门名称';
comment on column T_HR_BRANCH.leader
  is '负责人';
comment on column T_HR_BRANCH.tel
  is '联系电话';
comment on column T_HR_BRANCH.filiale
  is '分公司';
comment on column T_HR_BRANCH.base
  is '基地';
comment on column T_HR_BRANCH.valid_flag
  is '有效标志';
comment on column T_HR_BRANCH.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_HR_BRANCH.idx
  is '显示顺序';
comment on column T_HR_BRANCH.oper
  is '操作人';
comment on column T_HR_BRANCH.op_time
  is '操作时间';
comment on column T_HR_BRANCH.remarks
  is '备注';
comment on column T_HR_BRANCH.oper_ip
  is 'IP地址';
comment on column T_HR_BRANCH.oper_host
  is '主机名';
comment on column T_HR_BRANCH.ac_type_crew
  is '机型系列(字典)';
alter table T_HR_BRANCH
  add constraint PK_BRANCH primary key (BRANCH_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_BRANCH20150203
prompt ==================================
prompt
create table T_HR_BRANCH20150203
(
  branch_code  VARCHAR2(10) not null,
  branch_name  VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT
prompt ========================
prompt
create table T_HR_CERT
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) default '-' not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_CERT
  is '机组证照表,如：登机证';
comment on column T_HR_CERT.cert_id
  is '证照ID';
comment on column T_HR_CERT.p_code
  is '人员代码';
comment on column T_HR_CERT.cert_type
  is '证照类型(BORD)';
comment on column T_HR_CERT.cert_no
  is '证照号';
comment on column T_HR_CERT.country_code
  is '发证国家(默认CN)';
comment on column T_HR_CERT.issue_agency
  is '办证地址';
comment on column T_HR_CERT.issue_date
  is '签发日期';
comment on column T_HR_CERT.check_date
  is '签注日期';
comment on column T_HR_CERT.over_date
  is '到期日期(为空长期有效)';
comment on column T_HR_CERT.ac_types
  is '适用机型';
comment on column T_HR_CERT.valid_flag
  is '有效标志';
comment on column T_HR_CERT.oper
  is '操作人';
comment on column T_HR_CERT.op_time
  is '操作时间';
comment on column T_HR_CERT.remarks
  is '备注';
comment on column T_HR_CERT.oper_ip
  is 'IP地址';
comment on column T_HR_CERT.oper_host
  is '主机名';
alter table T_HR_CERT
  add constraint PK_CERTIFICATE primary key (CERT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20140615
prompt ================================
prompt
create table T_HR_CERT20140615
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20140901
prompt ================================
prompt
create table T_HR_CERT20140901
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141014
prompt ================================
prompt
create table T_HR_CERT20141014
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141028
prompt ================================
prompt
create table T_HR_CERT20141028
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141104
prompt ================================
prompt
create table T_HR_CERT20141104
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141113
prompt ================================
prompt
create table T_HR_CERT20141113
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141120
prompt ================================
prompt
create table T_HR_CERT20141120
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141127
prompt ================================
prompt
create table T_HR_CERT20141127
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141202
prompt ================================
prompt
create table T_HR_CERT20141202
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141212
prompt ================================
prompt
create table T_HR_CERT20141212
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20141218
prompt ================================
prompt
create table T_HR_CERT20141218
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT20150507
prompt ================================
prompt
create table T_HR_CERT20150507
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_BAK
prompt ============================
prompt
create table T_HR_CERT_BAK
(
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  ac_types     VARCHAR2(200),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_LIMIT
prompt ==============================
prompt
create table T_HR_CERT_LIMIT
(
  special_airport_id NUMBER(12) not null,
  cert_type          VARCHAR2(4) not null,
  airport_code       VARCHAR2(4) not null,
  cert_days          NUMBER(3) default 0 not null,
  filiale            VARCHAR2(4) not null,
  module_flag        VARCHAR2(1) not null,
  oper               VARCHAR2(10),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_HR_CERT_LIMIT.special_airport_id
  is '机场ID';
comment on column T_HR_CERT_LIMIT.cert_type
  is '签证类型(欧签/美签/澳签/台签/港澳)';
comment on column T_HR_CERT_LIMIT.airport_code
  is '机场四码';
comment on column T_HR_CERT_LIMIT.cert_days
  is '证件失效天数';
comment on column T_HR_CERT_LIMIT.filiale
  is '分公司';
comment on column T_HR_CERT_LIMIT.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_HR_CERT_LIMIT.oper
  is '操作人';
comment on column T_HR_CERT_LIMIT.op_time
  is '操作时间';
comment on column T_HR_CERT_LIMIT.remarks
  is '备注';
comment on column T_HR_CERT_LIMIT.oper_ip
  is 'IP地址';
comment on column T_HR_CERT_LIMIT.oper_host
  is '主机名';
alter table T_HR_CERT_LIMIT
  add constraint PK_SPECI_PASSPORT primary key (SPECIAL_AIRPORT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_LOG
prompt ============================
prompt
create table T_HR_CERT_LOG
(
  log_id          NUMBER(11) not null,
  cert_id         NUMBER(11),
  p_code          VARCHAR2(10) not null,
  cert_type       VARCHAR2(4) not null,
  cert_no         VARCHAR2(20),
  country_code    VARCHAR2(10),
  issue_agency    VARCHAR2(100),
  issue_date      DATE,
  last_check_date DATE not null,
  due_date        DATE,
  ac_types        VARCHAR2(100),
  valid_flag      VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_HR_CERT_LOG
  is '机组证照日志表,如：登机证';
comment on column T_HR_CERT_LOG.log_id
  is '日志ID';
comment on column T_HR_CERT_LOG.cert_id
  is '证照ID';
comment on column T_HR_CERT_LOG.p_code
  is '人员代码';
comment on column T_HR_CERT_LOG.cert_type
  is '证照类型，关联CM2002';
comment on column T_HR_CERT_LOG.cert_no
  is '证照号';
comment on column T_HR_CERT_LOG.country_code
  is '发证国家';
comment on column T_HR_CERT_LOG.issue_agency
  is '发证机构';
comment on column T_HR_CERT_LOG.issue_date
  is '签发日期';
comment on column T_HR_CERT_LOG.last_check_date
  is '签注日期';
comment on column T_HR_CERT_LOG.due_date
  is '到期日期';
comment on column T_HR_CERT_LOG.ac_types
  is '适用机型';
comment on column T_HR_CERT_LOG.valid_flag
  is '有效标志';
alter table T_HR_CERT_LOG
  add constraint PK_CERT_LOG primary key (LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_HR_CERT_LOG
  add constraint FK_CERTLOG_CERT foreign key (CERT_ID)
  references T_HR_CERT (CERT_ID);

prompt
prompt Creating table T_HR_CERT_SPECAIL
prompt ================================
prompt
create table T_HR_CERT_SPECAIL
(
  cert_type    VARCHAR2(4) default 'PASS' not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_CERT_SPECAIL
  is '人员报备护照表';
comment on column T_HR_CERT_SPECAIL.cert_type
  is '证照类型(PASS)';
comment on column T_HR_CERT_SPECAIL.cert_id
  is '证照ID';
comment on column T_HR_CERT_SPECAIL.p_code
  is '人员代码';
comment on column T_HR_CERT_SPECAIL.country_code
  is '国家编码';
comment on column T_HR_CERT_SPECAIL.valid_flag
  is '有效标志';
comment on column T_HR_CERT_SPECAIL.remarks
  is '备注';
comment on column T_HR_CERT_SPECAIL.oper
  is '操作人';
comment on column T_HR_CERT_SPECAIL.op_time
  is '操作时间';
comment on column T_HR_CERT_SPECAIL.oper_ip
  is 'IP地址';
comment on column T_HR_CERT_SPECAIL.oper_host
  is '主机名';
create index HR_CERT_SPECAIL on T_HR_CERT_SPECAIL (P_CODE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_CERT_SPECAIL
  add constraint PK_HR_CERT_SPECAIL primary key (CERT_ID, COUNTRY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20140615
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20140615
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20140901
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20140901
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141014
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141014
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141028
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141028
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141104
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141104
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141113
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141113
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141120
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141120
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141127
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141127
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141202
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141202
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141212
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141212
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20141218
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20141218
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_SPECAIL20150507
prompt ========================================
prompt
create table T_HR_CERT_SPECAIL20150507
(
  cert_type    VARCHAR2(4) not null,
  cert_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  country_code VARCHAR2(10) not null,
  valid_flag   VARCHAR2(1) not null,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CERT_TYPE
prompt =============================
prompt
create table T_HR_CERT_TYPE
(
  cert_type    VARCHAR2(4) not null,
  cert_name    VARCHAR2(60) not null,
  cert_falg    VARCHAR2(1) not null,
  cert_cycle   NUMBER(3) default 365,
  remind_days  NUMBER(3) default 30,
  forward_days NUMBER(3) default 0,
  module_flags VARCHAR2(6),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_CERT_TYPE
  is '证照代码表';
comment on column T_HR_CERT_TYPE.cert_type
  is '证照类型';
comment on column T_HR_CERT_TYPE.cert_name
  is '证照类型名称';
comment on column T_HR_CERT_TYPE.cert_falg
  is '证件标志(A基础B执照C护照D签证E体检)';
comment on column T_HR_CERT_TYPE.cert_cycle
  is '检查周期(天)';
comment on column T_HR_CERT_TYPE.remind_days
  is '提前提醒天数';
comment on column T_HR_CERT_TYPE.forward_days
  is '提前失效天数';
comment on column T_HR_CERT_TYPE.module_flags
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_HR_CERT_TYPE.oper
  is '操作人';
comment on column T_HR_CERT_TYPE.op_time
  is '操作时间';
comment on column T_HR_CERT_TYPE.remarks
  is '备注';
comment on column T_HR_CERT_TYPE.oper_ip
  is 'IP地址';
comment on column T_HR_CERT_TYPE.oper_host
  is '主机名';
alter table T_HR_CERT_TYPE
  add constraint PK_CERT_TYPE primary key (CERT_TYPE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW
prompt ========================
prompt
create table T_HR_CREW
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4) default '0',
  sex                VARCHAR2(1) default 'M',
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(60),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(25),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1) default 'N',
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1) default 'N',
  auto_yn            VARCHAR2(1) default 'Y',
  back_yn            VARCHAR2(1) default 'Y',
  duty_yn            VARCHAR2(1) default 'N',
  with_yn            VARCHAR2(1) default 'N',
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) default 'Y' not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1) default 'N',
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(15),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_CREW
  is '人员表';
comment on column T_HR_CREW.p_code
  is '人员代码';
comment on column T_HR_CREW.c_name
  is '姓名';
comment on column T_HR_CREW.e_name
  is '英文名';
comment on column T_HR_CREW.work_no
  is '工号';
comment on column T_HR_CREW.dep_code
  is '排班部门代码';
comment on column T_HR_CREW.py_abbr
  is '人员四码';
comment on column T_HR_CREW.hr_type
  is '人员来源(0学员1军转民2外航3外籍)';
comment on column T_HR_CREW.sex
  is '性别(F女M男)';
comment on column T_HR_CREW.native
  is '国籍(字典)';
comment on column T_HR_CREW.nation
  is '民族(字典)';
comment on column T_HR_CREW.id_type
  is '证件类型(字典)';
comment on column T_HR_CREW.id_no
  is '身份证号,外籍护照号(必须唯一)';
comment on column T_HR_CREW.photo
  is '本人照片';
comment on column T_HR_CREW.birth_date
  is '出生日期';
comment on column T_HR_CREW.born_in
  is '出生地';
comment on column T_HR_CREW.e_born_in
  is '出生地(英)';
comment on column T_HR_CREW.family
  is '户口所在地';
comment on column T_HR_CREW.address
  is '家庭住址';
comment on column T_HR_CREW.carry_code
  is '乘车地址(字典)';
comment on column T_HR_CREW.zip_no
  is '邮政编码';
comment on column T_HR_CREW.fax
  is '传真';
comment on column T_HR_CREW.e_mail
  is 'Email地址';
comment on column T_HR_CREW.phone
  is '家庭电话';
comment on column T_HR_CREW.mobil_no
  is '手机号码';
comment on column T_HR_CREW.mobil_no2
  is '手机号码';
comment on column T_HR_CREW.mobil_no3
  is '公司电话';
comment on column T_HR_CREW.party
  is '政治面貌(字典)';
comment on column T_HR_CREW.party_date
  is '入党团日期';
comment on column T_HR_CREW.party_duty
  is '党团内职务(字典)';
comment on column T_HR_CREW.culture
  is '文化程度(字典)';
comment on column T_HR_CREW.college
  is '毕业学校及专业';
comment on column T_HR_CREW.en_date
  is '进校时间';
comment on column T_HR_CREW.grad_date
  is '毕业时间';
comment on column T_HR_CREW.work_date
  is '参加工作日期';
comment on column T_HR_CREW.enter_date
  is '进入公司日期';
comment on column T_HR_CREW.fly_date
  is '开始飞行日期';
comment on column T_HR_CREW.abroad_date
  is '离职日期';
comment on column T_HR_CREW.filiale
  is '分公司';
comment on column T_HR_CREW.home_base
  is '主基地';
comment on column T_HR_CREW.branch_code
  is '行政部门';
comment on column T_HR_CREW.post_duty
  is '行政职务(字典)';
comment on column T_HR_CREW.post_rank
  is '职务岗级(字典)';
comment on column T_HR_CREW.record_no
  is '档案代码';
comment on column T_HR_CREW.tall
  is '身高';
comment on column T_HR_CREW.blood_type
  is '血型';
comment on column T_HR_CREW.mate_yn
  is '婚姻状态(N未婚Y已婚S独身)';
comment on column T_HR_CREW.mate_name
  is '爱人姓名';
comment on column T_HR_CREW.mate_phone
  is '爱人电话';
comment on column T_HR_CREW.smoke_yn
  is '是否抽烟';
comment on column T_HR_CREW.auto_yn
  is '是否参与自动排班';
comment on column T_HR_CREW.back_yn
  is '是否安排备份';
comment on column T_HR_CREW.duty_yn
  is '是否值班领导';
comment on column T_HR_CREW.with_yn
  is '是否可与外籍同飞';
comment on column T_HR_CREW.year_plantime
  is '年限制飞行小时';
comment on column T_HR_CREW.month3_plantime
  is '3月限制飞行小时';
comment on column T_HR_CREW.month_plantime
  is '月限制飞行小时';
comment on column T_HR_CREW.month_plantime_min
  is '航医月飞行小时限制';
comment on column T_HR_CREW.week_plantime
  is '周限制飞行小时';
comment on column T_HR_CREW.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_HR_CREW.valid_flag
  is '有效标志(Y/N)';
comment on column T_HR_CREW.oper
  is '操作人';
comment on column T_HR_CREW.op_time
  is '操作时间';
comment on column T_HR_CREW.remarks
  is '备注';
comment on column T_HR_CREW.oper_ip
  is 'IP地址';
comment on column T_HR_CREW.oper_host
  is '主机名';
comment on column T_HR_CREW.e_first_name
  is '英文姓';
comment on column T_HR_CREW.rvr
  is '最低运行标准';
comment on column T_HR_CREW.fxw_id
  is '飞行网人员ID(导入历史数据用)';
comment on column T_HR_CREW.speciality
  is '毕业院校所学专业';
comment on column T_HR_CREW.en_address
  is '英文家庭住址(护照用)';
comment on column T_HR_CREW.office_tel
  is '办公室电话';
comment on column T_HR_CREW.weight
  is '体重';
comment on column T_HR_CREW.en_native
  is '英文国籍';
comment on column T_HR_CREW.home_filiale
  is '临时飞行单位(到分子公司),对应飞行网的temp_unit_code';
comment on column T_HR_CREW.home_dep_code
  is '临时飞行部门';
comment on column T_HR_CREW.newfly_yn
  is '是否可参与试飞(N不X一般Y高性能)';
comment on column T_HR_CREW.hr_status
  is '在职情况(字典)';
comment on column T_HR_CREW.icao_cls
  is 'ICAO等级';
comment on column T_HR_CREW.icao_start_date
  is 'ICAO通过日期';
comment on column T_HR_CREW.icao_chk_date
  is 'ICAO生效日期';
comment on column T_HR_CREW.icao_valid_date
  is 'ICAO失效日期';
comment on column T_HR_CREW.kind
  is '用户自定义类型(  1:机关干部/改装 ;2:机关干部;3:一线干部;4:局方;5:商飞;6:改装;)';
comment on column T_HR_CREW.deptment
  is '用户自定义部门';
comment on column T_HR_CREW.commentary
  is '机组管理部备注';
comment on column T_HR_CREW.healthlevel
  is '健康等级';
comment on column T_HR_CREW.sal_pcode
  is '上航p_code';
comment on column T_HR_CREW.carry_code2
  is '乘车地址2(字典)';
comment on column T_HR_CREW.from_filiale
  is '带飞原单位';
create index IDX_CC on T_HR_CREW (HR_TYPE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_CREW_FXWID on T_HR_CREW (FXW_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_CREW_IDNO on T_HR_CREW (ID_NO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_CREW_OPTIME on T_HR_CREW (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_DEP_CODE on T_HR_CREW (DEP_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_CREW
  add constraint PK_CREW primary key (P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_CREW
  add constraint UK_CREW_WORKNO unique (WORK_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20140610
prompt ================================
prompt
create table T_HR_CREW20140610
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20140901
prompt ================================
prompt
create table T_HR_CREW20140901
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141014
prompt ================================
prompt
create table T_HR_CREW20141014
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141028
prompt ================================
prompt
create table T_HR_CREW20141028
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141104
prompt ================================
prompt
create table T_HR_CREW20141104
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141113
prompt ================================
prompt
create table T_HR_CREW20141113
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141120
prompt ================================
prompt
create table T_HR_CREW20141120
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141127
prompt ================================
prompt
create table T_HR_CREW20141127
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141202
prompt ================================
prompt
create table T_HR_CREW20141202
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141212
prompt ================================
prompt
create table T_HR_CREW20141212
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20141218
prompt ================================
prompt
create table T_HR_CREW20141218
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20150122
prompt ================================
prompt
create table T_HR_CREW20150122
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20150316
prompt ================================
prompt
create table T_HR_CREW20150316
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_CREW20150316
  is '个人信息表同步执照表的icao信息以保持一致';

prompt
prompt Creating table T_HR_CREW20150507
prompt ================================
prompt
create table T_HR_CREW20150507
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20150604
prompt ================================
prompt
create table T_HR_CREW20150604
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20150703
prompt ================================
prompt
create table T_HR_CREW20150703
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(60),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20160315
prompt ================================
prompt
create table T_HR_CREW20160315
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(60),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(25),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20160531
prompt ================================
prompt
create table T_HR_CREW20160531
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(60),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(25),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(15),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20161212
prompt ================================
prompt
create table T_HR_CREW20161212
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(60),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(25),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(15),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW20171113
prompt ================================
prompt
create table T_HR_CREW20171113
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(60),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(25),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(15),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW_FAMILY
prompt ===============================
prompt
create table T_HR_CREW_FAMILY
(
  p_code        VARCHAR2(10) not null,
  relation_code VARCHAR2(10) not null,
  mate_name     VARCHAR2(100) not null,
  e_name        VARCHAR2(100),
  sex           VARCHAR2(1) default 'F',
  birth_date    DATE,
  native        VARCHAR2(10) not null,
  address       VARCHAR2(100),
  company       VARCHAR2(100),
  phone         VARCHAR2(20),
  mobil_no      VARCHAR2(20),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  e_first_name  VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_CREW_FAMILY
  is '家庭成员表';
comment on column T_HR_CREW_FAMILY.p_code
  is '人员代码';
comment on column T_HR_CREW_FAMILY.relation_code
  is '与员工关系(字典)';
comment on column T_HR_CREW_FAMILY.mate_name
  is '家庭成员姓名';
comment on column T_HR_CREW_FAMILY.e_name
  is '英文名';
comment on column T_HR_CREW_FAMILY.sex
  is '性别(F女M男)';
comment on column T_HR_CREW_FAMILY.birth_date
  is '出生日期';
comment on column T_HR_CREW_FAMILY.native
  is '国籍(字典)';
comment on column T_HR_CREW_FAMILY.address
  is '家庭住址';
comment on column T_HR_CREW_FAMILY.company
  is '工作单位';
comment on column T_HR_CREW_FAMILY.phone
  is '家庭电话';
comment on column T_HR_CREW_FAMILY.mobil_no
  is '手机号码';
comment on column T_HR_CREW_FAMILY.oper
  is '操作人';
comment on column T_HR_CREW_FAMILY.op_time
  is '操作时间';
comment on column T_HR_CREW_FAMILY.remarks
  is '备注';
comment on column T_HR_CREW_FAMILY.oper_ip
  is 'IP地址';
comment on column T_HR_CREW_FAMILY.oper_host
  is '主机名';
comment on column T_HR_CREW_FAMILY.e_first_name
  is '英文姓';
alter table T_HR_CREW_FAMILY
  add constraint PK_CREW_FAMILY primary key (P_CODE, MATE_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW_FXW_ID_NULL
prompt ====================================
prompt
create table T_HR_CREW_FXW_ID_NULL
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW_HISTORY
prompt ================================
prompt
create table T_HR_CREW_HISTORY
(
  p_code        VARCHAR2(10) not null,
  ac_type       VARCHAR2(10) not null,
  fly_hours     NUMBER(9) default 0,
  night_hours   NUMBER(9) default 0,
  left_hours    NUMBER(9) default 0,
  right_hours   NUMBER(9) default 0,
  teacher_hours NUMBER(9) default 0,
  updowns       NUMBER(9) default 0,
  simu_hours    NUMBER(9) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_HR_CREW_HISTORY
  is '进公司前飞行经历';
comment on column T_HR_CREW_HISTORY.p_code
  is '人员代码';
comment on column T_HR_CREW_HISTORY.ac_type
  is '机型';
comment on column T_HR_CREW_HISTORY.fly_hours
  is '飞行小时';
comment on column T_HR_CREW_HISTORY.night_hours
  is '夜航时间';
comment on column T_HR_CREW_HISTORY.left_hours
  is '左座时间';
comment on column T_HR_CREW_HISTORY.right_hours
  is '右座时间';
comment on column T_HR_CREW_HISTORY.teacher_hours
  is '教员时间';
comment on column T_HR_CREW_HISTORY.updowns
  is '起落次数';
comment on column T_HR_CREW_HISTORY.simu_hours
  is '模拟机时间';
comment on column T_HR_CREW_HISTORY.oper
  is '操作人';
comment on column T_HR_CREW_HISTORY.op_time
  is '操作时间';
comment on column T_HR_CREW_HISTORY.remarks
  is '备注';
comment on column T_HR_CREW_HISTORY.oper_ip
  is 'IP地址';
comment on column T_HR_CREW_HISTORY.oper_host
  is '主机名';
alter table T_HR_CREW_HISTORY
  add constraint PK_CREW_HISTORY primary key (P_CODE, AC_TYPE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_HR_CREW_ID_NO
prompt ==============================
prompt
create table T_HR_CREW_ID_NO
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(30),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8),
  carry_code2        VARCHAR2(10),
  from_filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW_SAL
prompt ============================
prompt
create table T_HR_CREW_SAL
(
  p_code             VARCHAR2(10) not null,
  c_name             VARCHAR2(60) not null,
  e_name             VARCHAR2(100),
  work_no            VARCHAR2(10),
  dep_code           VARCHAR2(10),
  py_abbr            VARCHAR2(20),
  hr_type            VARCHAR2(4),
  sex                VARCHAR2(1),
  native             VARCHAR2(10),
  nation             VARCHAR2(10),
  id_type            VARCHAR2(10),
  id_no              VARCHAR2(20),
  photo              VARCHAR2(50),
  birth_date         DATE,
  born_in            VARCHAR2(100),
  e_born_in          VARCHAR2(100),
  family             VARCHAR2(100),
  address            VARCHAR2(100),
  carry_code         VARCHAR2(10),
  zip_no             VARCHAR2(10),
  fax                VARCHAR2(20),
  e_mail             VARCHAR2(30),
  phone              VARCHAR2(20),
  mobil_no           VARCHAR2(20),
  mobil_no2          VARCHAR2(20),
  mobil_no3          VARCHAR2(20),
  party              VARCHAR2(10),
  party_date         DATE,
  party_duty         VARCHAR2(20),
  culture            VARCHAR2(10),
  college            VARCHAR2(100),
  en_date            DATE,
  grad_date          DATE,
  work_date          DATE,
  enter_date         DATE,
  fly_date           DATE,
  abroad_date        DATE,
  filiale            VARCHAR2(4),
  home_base          VARCHAR2(4),
  branch_code        VARCHAR2(10),
  post_duty          VARCHAR2(10),
  post_rank          VARCHAR2(30),
  record_no          VARCHAR2(50),
  tall               NUMBER(3),
  blood_type         VARCHAR2(2),
  mate_yn            VARCHAR2(1),
  mate_name          VARCHAR2(10),
  mate_phone         VARCHAR2(20),
  smoke_yn           VARCHAR2(1),
  auto_yn            VARCHAR2(1),
  back_yn            VARCHAR2(1),
  duty_yn            VARCHAR2(1),
  with_yn            VARCHAR2(1),
  year_plantime      NUMBER(9),
  month3_plantime    NUMBER(9),
  month_plantime     NUMBER(9),
  month_plantime_min NUMBER(9),
  week_plantime      NUMBER(9),
  module_flag        VARCHAR2(1),
  valid_flag         VARCHAR2(1) not null,
  oper               VARCHAR2(20),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  e_first_name       VARCHAR2(60),
  rvr                VARCHAR2(20),
  fxw_id             VARCHAR2(10),
  speciality         VARCHAR2(50),
  en_address         VARCHAR2(150),
  office_tel         VARCHAR2(20),
  weight             NUMBER(3),
  en_native          VARCHAR2(20),
  home_filiale       VARCHAR2(4),
  home_dep_code      VARCHAR2(10),
  newfly_yn          VARCHAR2(1),
  hr_status          VARCHAR2(4),
  icao_cls           NUMBER(2),
  icao_start_date    DATE,
  icao_chk_date      DATE,
  icao_valid_date    DATE,
  kind               VARCHAR2(20),
  deptment           VARCHAR2(150),
  commentary         VARCHAR2(200),
  healthlevel        VARCHAR2(4),
  sal_pcode          VARCHAR2(8)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_CREW_TYN
prompt ============================
prompt
create table T_HR_CREW_TYN
(
  机组排班编码   VARCHAR2(10) not null,
  机组排班姓名   VARCHAR2(60) not null,
  机组排班身份证  VARCHAR2(20),
  机组排班排班部门 VARCHAR2(50),
  机组排班工号   VARCHAR2(10),
  机组排班简称   VARCHAR2(20),
  机组排班是否有效 CHAR(4),
  备注       VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_DEPT
prompt ========================
prompt
create table T_HR_DEPT
(
  dep_code     VARCHAR2(10) not null,
  dep_name     VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10) default 'A320',
  is_ground    VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_DEPT
  is '排班部门表';
comment on column T_HR_DEPT.dep_code
  is '排班部门代码';
comment on column T_HR_DEPT.dep_name
  is '排班部门名称';
comment on column T_HR_DEPT.leader
  is '负责人';
comment on column T_HR_DEPT.tel
  is '联系电话';
comment on column T_HR_DEPT.filiale
  is '分公司';
comment on column T_HR_DEPT.base
  is '基地';
comment on column T_HR_DEPT.valid_flag
  is '有效标志';
comment on column T_HR_DEPT.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_HR_DEPT.idx
  is '显示顺序';
comment on column T_HR_DEPT.oper
  is '操作人';
comment on column T_HR_DEPT.op_time
  is '操作时间';
comment on column T_HR_DEPT.remarks
  is '备注';
comment on column T_HR_DEPT.oper_ip
  is 'IP地址';
comment on column T_HR_DEPT.oper_host
  is '主机名';
comment on column T_HR_DEPT.ac_type_crew
  is '机型系列(字典)';
comment on column T_HR_DEPT.is_ground
  is 'Y地面随机C中队D大队F部门级';
alter table T_HR_DEPT
  add constraint PK_CREW_DEPT primary key (DEP_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_DEPT20150203
prompt ================================
prompt
create table T_HR_DEPT20150203
(
  dep_code     VARCHAR2(10) not null,
  dep_name     VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10),
  is_ground    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_DEPT201510
prompt ==============================
prompt
create table T_HR_DEPT201510
(
  dep_code     VARCHAR2(10) not null,
  dep_name     VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10),
  is_ground    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_DEPT20151103
prompt ================================
prompt
create table T_HR_DEPT20151103
(
  dep_code     VARCHAR2(10) not null,
  dep_name     VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10),
  is_ground    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_DEPT201512
prompt ==============================
prompt
create table T_HR_DEPT201512
(
  dep_code     VARCHAR2(10) not null,
  dep_name     VARCHAR2(50) not null,
  leader       VARCHAR2(30),
  tel          VARCHAR2(30),
  filiale      VARCHAR2(4) not null,
  base         VARCHAR2(4) not null,
  valid_flag   VARCHAR2(1) not null,
  module_flag  VARCHAR2(1) not null,
  idx          NUMBER(3),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type_crew VARCHAR2(10),
  is_ground    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_HEALTH
prompt ==========================
prompt
create table T_HR_HEALTH
(
  health_id    NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) default '-' not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  over_date    DATE,
  health_info  VARCHAR2(300),
  health_limit VARCHAR2(300),
  health_level VARCHAR2(5),
  duty_rank    VARCHAR2(10),
  d_person     VARCHAR2(10),
  s_person     VARCHAR2(10),
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_HEALTH
  is '体检合格证记录表';
comment on column T_HR_HEALTH.health_id
  is '合格证ID';
comment on column T_HR_HEALTH.p_code
  is '人员代码';
comment on column T_HR_HEALTH.cert_type
  is '证照类型(默认HEAL)';
comment on column T_HR_HEALTH.cert_no
  is '合格证编码';
comment on column T_HR_HEALTH.country_code
  is '发证国家(默认CN)';
comment on column T_HR_HEALTH.issue_agency
  is '办证地址';
comment on column T_HR_HEALTH.issue_date
  is '签发日期';
comment on column T_HR_HEALTH.over_date
  is '到期日期(为空长期有效)';
comment on column T_HR_HEALTH.health_info
  is '关注事项';
comment on column T_HR_HEALTH.health_limit
  is '健康限制';
comment on column T_HR_HEALTH.health_level
  is '等级为I,II,III,IV,IVa等';
comment on column T_HR_HEALTH.duty_rank
  is '工种';
comment on column T_HR_HEALTH.d_person
  is '主检医师';
comment on column T_HR_HEALTH.s_person
  is '审批人';
comment on column T_HR_HEALTH.valid_flag
  is '有效标志';
comment on column T_HR_HEALTH.oper
  is '操作人';
comment on column T_HR_HEALTH.op_time
  is '操作时间';
comment on column T_HR_HEALTH.remarks
  is '备注';
comment on column T_HR_HEALTH.oper_ip
  is 'IP地址';
comment on column T_HR_HEALTH.oper_host
  is '主机名';
create index IDX_P_CODE on T_HR_HEALTH (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_HEALTH
  add constraint PK_HEALTH_CERT primary key (HEALTH_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_HEALTH_20141210
prompt ===================================
prompt
create table T_HR_HEALTH_20141210
(
  health_id    NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  cert_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  over_date    DATE,
  health_info  VARCHAR2(300),
  health_limit VARCHAR2(300),
  health_level VARCHAR2(5),
  duty_rank    VARCHAR2(10),
  d_person     VARCHAR2(10),
  s_person     VARCHAR2(10),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE
prompt ===========================
prompt
create table T_HR_LICENSE
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4),
  license_no              VARCHAR2(100) default '-' not null,
  country_code            VARCHAR2(14),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) default 'Y' not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1) default '1',
  end_date                DATE,
  teacher_yn              VARCHAR2(1) default 'N',
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_LICENSE
  is '飞行员执照信息';
comment on column T_HR_LICENSE.license_id
  is '执照ID';
comment on column T_HR_LICENSE.p_code
  is '人员代码';
comment on column T_HR_LICENSE.cert_type
  is '证照类型(AP/CP等)';
comment on column T_HR_LICENSE.license_no
  is '执照号';
comment on column T_HR_LICENSE.country_code
  is '发证国家(默认CN)';
comment on column T_HR_LICENSE.issue_agency
  is '办证地址';
comment on column T_HR_LICENSE.issue_date
  is '执照签发日期';
comment on column T_HR_LICENSE.check_date
  is '复训开始日期';
comment on column T_HR_LICENSE.over_date
  is '复训结束日期';
comment on column T_HR_LICENSE.ac_types
  is '机型';
comment on column T_HR_LICENSE.basic_month
  is '训练基准月';
comment on column T_HR_LICENSE.icao_class
  is 'ICAO等级';
comment on column T_HR_LICENSE.icao_issue_date
  is 'ICAO通过日期';
comment on column T_HR_LICENSE.icao_check_date
  is 'ICAO生效日期';
comment on column T_HR_LICENSE.icao_over_date
  is 'ICAO失效日期';
comment on column T_HR_LICENSE.valid_flag
  is '有效标志';
comment on column T_HR_LICENSE.oper
  is '操作人';
comment on column T_HR_LICENSE.op_time
  is '操作时间';
comment on column T_HR_LICENSE.remarks
  is '备注';
comment on column T_HR_LICENSE.oper_ip
  is 'IP地址';
comment on column T_HR_LICENSE.oper_host
  is '主机名';
comment on column T_HR_LICENSE.last_monitor_date
  is '上次模拟机日期';
comment on column T_HR_LICENSE.next_monitor_date
  is '下次模拟机期限';
comment on column T_HR_LICENSE.basic_month2
  is '训练基准月2';
comment on column T_HR_LICENSE.next_monitor_yn
  is '下次是否飞模拟机（学员）';
comment on column T_HR_LICENSE.next_monitor_teacher_yn
  is '下次是否飞模拟机（教员）';
comment on column T_HR_LICENSE.next_teacher_limit
  is '限飞场次（教员）';
comment on column T_HR_LICENSE.license_flag
  is '执照标志1正式0临时';
comment on column T_HR_LICENSE.end_date
  is '执照结束日期';
comment on column T_HR_LICENSE.teacher_yn
  is '是否教员(Y/N)';
comment on column T_HR_LICENSE.teacher_start_date
  is '教员开始日期';
comment on column T_HR_LICENSE.teacher_end_date
  is '教员结束日期';
comment on column T_HR_LICENSE.simu_code
  is '模拟机复训地点';
comment on column T_HR_LICENSE.ac_type_yn
  is '是否主飞机型';
comment on column T_HR_LICENSE.fgw_id
  is '飞管网ID';
create index IDX_P_CODE_AC_TYPES on T_HR_LICENSE (P_CODE, AC_TYPES)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_LICENSE
  add constraint PK_LICENSE primary key (LICENSE_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20140615
prompt ===================================
prompt
create table T_HR_LICENSE20140615
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20140901
prompt ===================================
prompt
create table T_HR_LICENSE20140901
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141014
prompt ===================================
prompt
create table T_HR_LICENSE20141014
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141028
prompt ===================================
prompt
create table T_HR_LICENSE20141028
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141104
prompt ===================================
prompt
create table T_HR_LICENSE20141104
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141113
prompt ===================================
prompt
create table T_HR_LICENSE20141113
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141120
prompt ===================================
prompt
create table T_HR_LICENSE20141120
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141127
prompt ===================================
prompt
create table T_HR_LICENSE20141127
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141202
prompt ===================================
prompt
create table T_HR_LICENSE20141202
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141212
prompt ===================================
prompt
create table T_HR_LICENSE20141212
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20141218
prompt ===================================
prompt
create table T_HR_LICENSE20141218
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20150108
prompt ===================================
prompt
create table T_HR_LICENSE20150108
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4),
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20150507
prompt ===================================
prompt
create table T_HR_LICENSE20150507
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4),
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(14),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20160318
prompt ===================================
prompt
create table T_HR_LICENSE20160318
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4),
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(14),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE20160629
prompt ===================================
prompt
create table T_HR_LICENSE20160629
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4),
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(14),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(4) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_LICENSE_DEL_CK
prompt ==================================
prompt
create table T_HR_LICENSE_DEL_CK
(
  license_id              NUMBER(11) not null,
  p_code                  VARCHAR2(10) not null,
  cert_type               VARCHAR2(4) not null,
  license_no              VARCHAR2(100) not null,
  country_code            VARCHAR2(10),
  issue_agency            VARCHAR2(100),
  issue_date              DATE,
  check_date              DATE,
  over_date               DATE,
  ac_types                VARCHAR2(200) not null,
  basic_month             VARCHAR2(2) not null,
  icao_class              NUMBER(2),
  icao_issue_date         DATE,
  icao_check_date         DATE,
  icao_over_date          DATE,
  valid_flag              VARCHAR2(1) not null,
  oper                    VARCHAR2(10),
  op_time                 DATE,
  remarks                 VARCHAR2(200),
  oper_ip                 VARCHAR2(15),
  oper_host               VARCHAR2(50),
  last_monitor_date       DATE,
  next_monitor_date       DATE,
  basic_month2            VARCHAR2(2),
  next_monitor_yn         VARCHAR2(1),
  next_monitor_teacher_yn VARCHAR2(1),
  next_teacher_limit      NUMBER(3),
  fxw_id                  NUMBER(11),
  license_flag            VARCHAR2(1),
  end_date                DATE,
  teacher_yn              VARCHAR2(1),
  teacher_start_date      DATE,
  teacher_end_date        DATE,
  simu_code               VARCHAR2(10),
  ac_type_yn              VARCHAR2(1),
  fgw_id                  NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT
prompt ============================
prompt
create table T_HR_PASSPORT
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) default '1' not null,
  pass_no      VARCHAR2(20) default '-' not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(300),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_PASSPORT
  is '保存飞行员、跟班机务的护照信息';
comment on column T_HR_PASSPORT.pass_id
  is '护照ID';
comment on column T_HR_PASSPORT.p_code
  is '人员代码';
comment on column T_HR_PASSPORT.cert_type
  is '证照类型(护照/台湾/港澳通行证)';
comment on column T_HR_PASSPORT.pass_flag
  is '护照标志(0私人护照1公务护照)';
comment on column T_HR_PASSPORT.pass_no
  is '护照号码';
comment on column T_HR_PASSPORT.country_code
  is '发证国家(默认CN)';
comment on column T_HR_PASSPORT.issue_agency
  is '办证地址';
comment on column T_HR_PASSPORT.issue_date
  is '签发日期';
comment on column T_HR_PASSPORT.check_date
  is '启用日期';
comment on column T_HR_PASSPORT.over_date
  is '到期日期';
comment on column T_HR_PASSPORT.en_addr
  is '英文地址(出入境以此为准)';
comment on column T_HR_PASSPORT.en_born_in
  is '英文出生地(出入境以此为准)';
comment on column T_HR_PASSPORT.ch_born_in
  is '中文出生地(出入境以此为准)';
comment on column T_HR_PASSPORT.valid_flag
  is '有效标志';
comment on column T_HR_PASSPORT.oper
  is '操作人';
comment on column T_HR_PASSPORT.op_time
  is '操作时间';
comment on column T_HR_PASSPORT.remarks
  is '备注';
comment on column T_HR_PASSPORT.oper_ip
  is 'IP地址';
comment on column T_HR_PASSPORT.oper_host
  is '主机名';
comment on column T_HR_PASSPORT.fxw_id
  is '飞行网ID（导入历史数据用）';
comment on column T_HR_PASSPORT.fgw_id
  is '飞管网ID';
create index IDX_PASS_FXWID on T_HR_PASSPORT (FXW_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_PASS_PCODE on T_HR_PASSPORT (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 704K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_PASSPORT
  add constraint PK_PASSPORT primary key (PASS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20140615
prompt ====================================
prompt
create table T_HR_PASSPORT20140615
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20140901
prompt ====================================
prompt
create table T_HR_PASSPORT20140901
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141014
prompt ====================================
prompt
create table T_HR_PASSPORT20141014
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141028
prompt ====================================
prompt
create table T_HR_PASSPORT20141028
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141104
prompt ====================================
prompt
create table T_HR_PASSPORT20141104
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141113
prompt ====================================
prompt
create table T_HR_PASSPORT20141113
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141120
prompt ====================================
prompt
create table T_HR_PASSPORT20141120
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141127
prompt ====================================
prompt
create table T_HR_PASSPORT20141127
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141202
prompt ====================================
prompt
create table T_HR_PASSPORT20141202
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141212
prompt ====================================
prompt
create table T_HR_PASSPORT20141212
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20141218
prompt ====================================
prompt
create table T_HR_PASSPORT20141218
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20150111
prompt ====================================
prompt
create table T_HR_PASSPORT20150111
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT2015011109
prompt ======================================
prompt
create table T_HR_PASSPORT2015011109
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20150112
prompt ====================================
prompt
create table T_HR_PASSPORT20150112
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20150115
prompt ====================================
prompt
create table T_HR_PASSPORT20150115
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20150115_B
prompt ======================================
prompt
create table T_HR_PASSPORT20150115_B
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20150507
prompt ====================================
prompt
create table T_HR_PASSPORT20150507
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT20160530
prompt ====================================
prompt
create table T_HR_PASSPORT20160530
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT_123
prompt ================================
prompt
create table T_HR_PASSPORT_123
(
  pass_id NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT_20140619
prompt =====================================
prompt
create table T_HR_PASSPORT_20140619
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT_456
prompt ================================
prompt
create table T_HR_PASSPORT_456
(
  pass_id NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT_6481
prompt =================================
prompt
create table T_HR_PASSPORT_6481
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_PASSPORT_DEL
prompt ================================
prompt
create table T_HR_PASSPORT_DEL
(
  pass_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  pass_flag    VARCHAR2(1) not null,
  pass_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  en_addr      VARCHAR2(150),
  en_born_in   VARCHAR2(100),
  ch_born_in   VARCHAR2(100),
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_SHARE
prompt =========================
prompt
create table T_HR_SHARE
(
  p_code     VARCHAR2(10) not null,
  to_filiale VARCHAR2(4) not null,
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
  );
comment on table T_HR_SHARE
  is '模拟机教员共享';
comment on column T_HR_SHARE.p_code
  is '人员编码';
comment on column T_HR_SHARE.to_filiale
  is '共享分公司';
comment on column T_HR_SHARE.oper
  is '操作人';
comment on column T_HR_SHARE.op_time
  is '操作时间';
comment on column T_HR_SHARE.remarks
  is '备注';
comment on column T_HR_SHARE.oper_ip
  is '操作IP';
comment on column T_HR_SHARE.oper_host
  is '操作主机';
create unique index PK_SHARE on T_HR_SHARE (P_CODE, TO_FILIALE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_HR_SHARE
  add constraint PK_SHARE foreign key (P_CODE)
  references T_HR_CREW (P_CODE);

prompt
prompt Creating table T_HR_TEMP
prompt ========================
prompt
create table T_HR_TEMP
(
  pilotid VARCHAR2(100),
  work_no VARCHAR2(100),
  c_name  VARCHAR2(60) not null,
  p_code  VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER
prompt ============================
prompt
create table T_HR_TRANSFER
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1) default 'Y'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_TRANSFER
  is '人员借调表';
comment on column T_HR_TRANSFER.trans_id
  is '借调记录ID';
comment on column T_HR_TRANSFER.p_code
  is '人员代码';
comment on column T_HR_TRANSFER.from_filiale
  is '原来分公司';
comment on column T_HR_TRANSFER.from_dep_code
  is '原来排班部门';
comment on column T_HR_TRANSFER.to_filiale
  is '借调分公司';
comment on column T_HR_TRANSFER.to_dep_code
  is '借调排班部门';
comment on column T_HR_TRANSFER.state
  is '借调状态(取字典表 TR) TR01:机组排班临时借调到飞行网,TR02:飞行网临时借调到机组排班,TR03:机组排班行政调动到飞行网,TR04:飞行网行政调动到机组排班';
comment on column T_HR_TRANSFER.start_date
  is '开始日期';
comment on column T_HR_TRANSFER.plan_end_date
  is '计划结束日期(对于机组排班行政调出到飞行网,为后台修改filiale,dep_code,branch_code的时间,后台job修改)';
comment on column T_HR_TRANSFER.oper
  is '借调开始操作人';
comment on column T_HR_TRANSFER.op_time
  is '借调开始操作时间';
comment on column T_HR_TRANSFER.oper_ip
  is '借调开始操作IP地址';
comment on column T_HR_TRANSFER.oper_host
  is '借调开始操作主机名';
comment on column T_HR_TRANSFER.end_date
  is '结束日期(对于机组排班行政调出到飞行网,为飞行网已经接收到此人的时间,同步接口修改)';
comment on column T_HR_TRANSFER.e_oper
  is '借调结束操作人';
comment on column T_HR_TRANSFER.e_op_time
  is '借调结束操作时间';
comment on column T_HR_TRANSFER.e_op_ip
  is '借调结束操作IP地址';
comment on column T_HR_TRANSFER.e_op_host
  is '借调结束操作主机名';
comment on column T_HR_TRANSFER.remarks
  is '备注';
comment on column T_HR_TRANSFER.valid_flag
  is '是否有效（Y/N)';
create index IDX_HR_TRANSFER_PCODE on T_HR_TRANSFER (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_TRANSFER
  add constraint PK_HR_TRANSFER primary key (TRANS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20140901
prompt ====================================
prompt
create table T_HR_TRANSFER20140901
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141014
prompt ====================================
prompt
create table T_HR_TRANSFER20141014
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141028
prompt ====================================
prompt
create table T_HR_TRANSFER20141028
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141104
prompt ====================================
prompt
create table T_HR_TRANSFER20141104
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141113
prompt ====================================
prompt
create table T_HR_TRANSFER20141113
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141120
prompt ====================================
prompt
create table T_HR_TRANSFER20141120
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141127
prompt ====================================
prompt
create table T_HR_TRANSFER20141127
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141202
prompt ====================================
prompt
create table T_HR_TRANSFER20141202
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141212
prompt ====================================
prompt
create table T_HR_TRANSFER20141212
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20141218
prompt ====================================
prompt
create table T_HR_TRANSFER20141218
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_TRANSFER20150507
prompt ====================================
prompt
create table T_HR_TRANSFER20150507
(
  trans_id      NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  from_filiale  VARCHAR2(4) not null,
  from_dep_code VARCHAR2(10),
  to_filiale    VARCHAR2(4) not null,
  to_dep_code   VARCHAR2(10),
  state         VARCHAR2(4),
  start_date    DATE,
  plan_end_date DATE,
  oper          VARCHAR2(10),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  end_date      DATE,
  e_oper        VARCHAR2(10),
  e_op_time     DATE,
  e_op_ip       VARCHAR2(15),
  e_op_host     VARCHAR2(50),
  remarks       VARCHAR2(200),
  fgw_id        NUMBER(12),
  valid_flag    VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA
prompt ========================
prompt
create table T_HR_VISA
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) default '-' not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_VISA
  is '保存飞行员、跟班机务的签证信息';
comment on column T_HR_VISA.passport_id
  is '护照ID';
comment on column T_HR_VISA.visa_id
  is '签证ID';
comment on column T_HR_VISA.p_code
  is '人员代码';
comment on column T_HR_VISA.cert_type
  is '证照类型(欧签/美签/澳签/台签/港澳/新加坡)';
comment on column T_HR_VISA.visa_no
  is '签证号码';
comment on column T_HR_VISA.country_code
  is '发证国家(默认CN)';
comment on column T_HR_VISA.issue_agency
  is '办证地址';
comment on column T_HR_VISA.issue_date
  is '签发日期';
comment on column T_HR_VISA.check_date
  is '启用日期';
comment on column T_HR_VISA.over_date
  is '到期日期';
comment on column T_HR_VISA.valid_flag
  is '有效标志';
comment on column T_HR_VISA.oper
  is '操作人';
comment on column T_HR_VISA.op_time
  is '操作时间';
comment on column T_HR_VISA.remarks
  is '备注';
comment on column T_HR_VISA.oper_ip
  is 'IP地址';
comment on column T_HR_VISA.oper_host
  is '主机名';
comment on column T_HR_VISA.fxw_id
  is '飞行网ID（导入历史数据用';
comment on column T_HR_VISA.fgw_id
  is '飞管网ID';
create index IDX_VISA_PASSPERSON on T_HR_VISA (PASSPORT_ID, P_CODE, VISA_NO)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_HR_VISA
  add constraint PK_VISA primary key (VISA_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20140615
prompt ================================
prompt
create table T_HR_VISA20140615
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20140901
prompt ================================
prompt
create table T_HR_VISA20140901
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141014
prompt ================================
prompt
create table T_HR_VISA20141014
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141028
prompt ================================
prompt
create table T_HR_VISA20141028
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141104
prompt ================================
prompt
create table T_HR_VISA20141104
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141113
prompt ================================
prompt
create table T_HR_VISA20141113
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141120
prompt ================================
prompt
create table T_HR_VISA20141120
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141127
prompt ================================
prompt
create table T_HR_VISA20141127
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141202
prompt ================================
prompt
create table T_HR_VISA20141202
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141212
prompt ================================
prompt
create table T_HR_VISA20141212
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20141218
prompt ================================
prompt
create table T_HR_VISA20141218
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA2015011109
prompt ==================================
prompt
create table T_HR_VISA2015011109
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20150112
prompt ================================
prompt
create table T_HR_VISA20150112
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20150115
prompt ================================
prompt
create table T_HR_VISA20150115
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20150115_B
prompt ==================================
prompt
create table T_HR_VISA20150115_B
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA20150507
prompt ================================
prompt
create table T_HR_VISA20150507
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA_20140619
prompt =================================
prompt
create table T_HR_VISA_20140619
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_VISA_6481
prompt =============================
prompt
create table T_HR_VISA_6481
(
  passport_id  NUMBER(11) not null,
  visa_id      NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  cert_type    VARCHAR2(4) not null,
  visa_no      VARCHAR2(20) not null,
  country_code VARCHAR2(10),
  issue_agency VARCHAR2(100),
  issue_date   DATE,
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       VARCHAR2(20),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HR_WRECK
prompt =========================
prompt
create table T_HR_WRECK
(
  p_code     VARCHAR2(10) not null,
  wreck_type VARCHAR2(10),
  remark     VARCHAR2(200),
  wreck      NUMBER(2,2),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  wreck_date DATE not null,
  dep_code   VARCHAR2(10),
  zt_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_HR_WRECK
  is '人员折损率';
comment on column T_HR_WRECK.p_code
  is '人员代码';
comment on column T_HR_WRECK.wreck_type
  is '折损类型';
comment on column T_HR_WRECK.remark
  is '备注';
comment on column T_HR_WRECK.wreck
  is '折损率';
comment on column T_HR_WRECK.oper
  is '操作人';
comment on column T_HR_WRECK.op_time
  is '操作时间';
comment on column T_HR_WRECK.oper_ip
  is 'IP地址';
comment on column T_HR_WRECK.oper_host
  is '主机名';
comment on column T_HR_WRECK.wreck_date
  is '日期';
comment on column T_HR_WRECK.dep_code
  is '部门';
comment on column T_HR_WRECK.zt_type
  is '零时机长分类';
alter table T_HR_WRECK
  add constraint PK_WRECK_P_CODE primary key (P_CODE, WRECK_DATE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HUG
prompt ====================
prompt
create table T_HUG
(
  leg_id                   NUMBER(9) not null,
  fltdate                  DATE,
  fltno                    VARCHAR2(10),
  carrier                  VARCHAR2(3),
  dept_airport             VARCHAR2(4),
  arr_airport              VARCHAR2(4),
  plan_dept_airport        VARCHAR2(4),
  plan_arr_airport         VARCHAR2(4),
  real_dept_time           DATE,
  real_arr_time            DATE,
  status_code              VARCHAR2(1),
  plan_dept_time           DATE,
  plan_arr_time            DATE,
  est_dept_time            DATE,
  est_arr_time             DATE,
  remark                   VARCHAR2(1000),
  tail_number              VARCHAR2(10),
  block_off_date_time      DATE,
  block_on_date_time       DATE,
  take_off_date_time       DATE,
  landing_date_time        DATE,
  leg_sequence_number      NUMBER(9),
  flight_service_type_code VARCHAR2(1),
  carrier_code             VARCHAR2(10),
  fleet_code               VARCHAR2(10),
  publish_carrier_code     VARCHAR2(10),
  d_or_i                   CHAR(1),
  p_or_c                   CHAR(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_HX_NUM
prompt =======================
prompt
create table T_HX_NUM
(
  filiale VARCHAR2(4),
  ac_type VARCHAR2(10),
  hxdate  DATE,
  hxnum   VARCHAR2(4),
  op_time DATE default Sysdate
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_HX_NUM
  is '航休人数';
comment on column T_HX_NUM.filiale
  is '分公司';
comment on column T_HX_NUM.ac_type
  is '机型';
comment on column T_HX_NUM.hxdate
  is '日期';
comment on column T_HX_NUM.hxnum
  is '航休人数';
comment on column T_HX_NUM.op_time
  is '操作时间';

prompt
prompt Creating table T_IMP_CREW_ASSIGN
prompt ================================
prompt
create table T_IMP_CREW_ASSIGN
(
  crew_assign_id       NUMBER(10) not null,
  flight_plan_id       NUMBER(10) not null,
  crew_id              NUMBER(10) not null,
  post                 VARCHAR2(50) not null,
  if_part_time         VARCHAR2(20),
  passport_code        VARCHAR2(50),
  passport_expiry      DATE,
  creator              NUMBER(10),
  create_time          DATE,
  last_modifier        NUMBER(10),
  last_modify_time     DATE,
  flight_task_id       NUMBER(10) not null,
  assign_type          VARCHAR2(50) not null,
  visa                 VARCHAR2(100),
  source               VARCHAR2(20) not null,
  is_chief             VARCHAR2(20),
  is_lift              VARCHAR2(20),
  crew_type            VARCHAR2(50),
  mark                 VARCHAR2(100),
  id_bak               VARCHAR2(50),
  id_bak_num           NUMBER(10),
  sub_crew_assign_type VARCHAR2(100),
  assign_time_stamp    NUMBER(20),
  rec_id               NUMBER(10),
  flight_plan_id_sh    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_IMP_FLIGHTREC
prompt ==============================
prompt
create table T_IMP_FLIGHTREC
(
  sum_time         NUMBER(4) not null,
  flight_plan_id   NUMBER(10) not null,
  slide_start_time DATE not null,
  take_off_time    DATE not null,
  land_time        DATE not null,
  slide_end_time   DATE not null,
  time_on_ground   NUMBER(4) not null,
  time_in_sky      NUMBER(4) not null,
  creator          NUMBER(10),
  create_time      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  reserved_fuel    NUMBER(10),
  refuel           NUMBER(10),
  total_fuel       NUMBER(10),
  flight_rec_id    NUMBER(10) not null,
  time_in_night    NUMBER(4),
  aero_paper_id    NUMBER(10),
  aero_paper_no    NUMBER(10),
  pilot_checkbox   VARCHAR2(1000),
  icao             VARCHAR2(100),
  rec_id           NUMBER(10),
  ftb_no           NUMBER(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_IMP_FLIGHT_PLAN
prompt ================================
prompt
create table T_IMP_FLIGHT_PLAN
(
  flight_plan_id          NUMBER(10) not null,
  flight_date             DATE,
  flight_no               VARCHAR2(50),
  depart_port_code3       CHAR(3),
  arrival_port_code3      CHAR(3),
  org_code                VARCHAR2(50),
  ac_type_code            VARCHAR2(50),
  flight_attr             VARCHAR2(20),
  canceled                VARCHAR2(50),
  schedule_depart_time    DATE,
  schedule_arrival_time   DATE,
  season_id               NUMBER(10),
  ac_idx                  INTEGER,
  carrier                 VARCHAR2(50),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  create_type             VARCHAR2(50),
  modify_type             VARCHAR2(50),
  ac_no                   VARCHAR2(50),
  callback_status         VARCHAR2(50) not null,
  cabin_task_no           NUMBER(10),
  is_mixing_fly           VARCHAR2(10),
  amend_no                NUMBER(10),
  year2                   NUMBER(4),
  flight_season           VARCHAR2(10),
  aero_paper_no           NUMBER(10),
  is_modified             VARCHAR2(10),
  other_company_running   VARCHAR2(10),
  dept_ac_loc             VARCHAR2(50),
  ac_owner                VARCHAR2(6),
  crew_owner              VARCHAR2(6),
  stew_owner              VARCHAR2(6),
  plce_owner              VARCHAR2(6),
  mant_owner              VARCHAR2(6),
  crew_link_line_zlh      NUMBER(11),
  flight_plan_id_zlh      NUMBER(10),
  crew_link_line          NUMBER(11),
  flight_id               NUMBER(11),
  flight_plan_id_sh_cabin VARCHAR2(50),
  est_dept_time           DATE,
  est_arr_time            DATE,
  real_dept_time          DATE,
  real_arr_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_IMP_FLIGHT_TASK
prompt ================================
prompt
create table T_IMP_FLIGHT_TASK
(
  flight_task_id          NUMBER(10) not null,
  sign_time               DATE,
  org_code                VARCHAR2(10) not null,
  task_date               DATE,
  apply_flight_no         VARCHAR2(200),
  task_attr               VARCHAR2(20),
  ac_type                 VARCHAR2(60),
  drive_time              DATE,
  flight_hour             NUMBER(5),
  depart_flight_no        VARCHAR2(50),
  depart_time             DATE,
  task_type               VARCHAR2(10) not null,
  remarks                 VARCHAR2(500),
  flight_unit_code        VARCHAR2(20),
  creator                 NUMBER(10),
  create_time             DATE,
  last_modifier           NUMBER(10),
  last_modify_time        DATE,
  after_plan              NUMBER(10),
  create_type             VARCHAR2(50),
  if_sensitive            VARCHAR2(10),
  overnight_days          NUMBER(10),
  arrive_time             DATE,
  assign_status           VARCHAR2(20),
  is_full                 VARCHAR2(20),
  destination             VARCHAR2(20),
  dest_para               VARCHAR2(10),
  route                   VARCHAR2(500),
  flight_status           VARCHAR2(20),
  is_modified             VARCHAR2(20),
  modifiy_time            DATE,
  duty_lock               VARCHAR2(50),
  general_dispatch_lock   VARCHAR2(50),
  publish_status          VARCHAR2(50),
  flight_attr             VARCHAR2(50),
  is_callback             VARCHAR2(50),
  cabin_task_no           NUMBER(10),
  depart_port_code3       CHAR(3),
  aero_task_no            NUMBER(10),
  exchange_in_branch      VARCHAR2(10),
  full_flight_no          VARCHAR2(1000),
  secu_task_no            NUMBER(10),
  crew_link_line_zlh      NUMBER(11),
  rec_id                  NUMBER(11),
  crew_link_line          NUMBER(11),
  flight_task_id_sh_cabin VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_IMP_FLIGHT_TASK_PLAN
prompt =====================================
prompt
create table T_IMP_FLIGHT_TASK_PLAN
(
  flight_task_id   NUMBER(10) not null,
  plan_idx         NUMBER(2) not null,
  flight_plan_id   NUMBER(10) not null,
  if_lift          VARCHAR2(10) not null,
  if_page          VARCHAR2(10) not null,
  flight_date      DATE not null,
  task_type        VARCHAR2(10) not null,
  task_plan_id     NUMBER(10) not null,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  flight_if_cancel VARCHAR2(50),
  flight_if_modify VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_IMP_FTB_DETAIL
prompt ===============================
prompt
create table T_IMP_FTB_DETAIL
(
  seat_rec_id      NUMBER(11) not null,
  flight_plan_id   NUMBER(11),
  pilot_id         NUMBER(11),
  flight_id        NUMBER(11),
  p_code           NUMBER(11),
  fly_time         NUMBER(4),
  seat_type        VARCHAR2(5),
  operate_type     VARCHAR2(5),
  is_land_operator VARCHAR2(3),
  fly_sortie       NUMBER(3),
  oper             VARCHAR2(10),
  op_time          DATE not null,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  ftb_no           VARCHAR2(12),
  flight_date      DATE,
  night_time       NUMBER(9),
  teacher_time     NUMBER(9),
  up_sortie        NUMBER(9),
  down_sortie      NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_IMP_FTB_DETAIL
  is '飞行经历从表(历史数据导入使用)';
comment on column T_IMP_FTB_DETAIL.seat_rec_id
  is '飞行经历ID';
comment on column T_IMP_FTB_DETAIL.flight_plan_id
  is '飞行网中对应的飞行计划ID';
comment on column T_IMP_FTB_DETAIL.pilot_id
  is '飞行网中对应的人员ID';
comment on column T_IMP_FTB_DETAIL.flight_id
  is '机组排班对应的飞行计划ID';
comment on column T_IMP_FTB_DETAIL.p_code
  is '机组排班对应的人员ID';
comment on column T_IMP_FTB_DETAIL.fly_time
  is '飞行时间';
comment on column T_IMP_FTB_DETAIL.seat_type
  is '座位类型 LEFT/RIGHT ';
comment on column T_IMP_FTB_DETAIL.operate_type
  is '主操作/辅助操作，可选PF/PNFPM';
comment on column T_IMP_FTB_DETAIL.fly_sortie
  is '起落架次';
comment on column T_IMP_FTB_DETAIL.oper
  is '操作人';
comment on column T_IMP_FTB_DETAIL.op_time
  is '操作时间';
comment on column T_IMP_FTB_DETAIL.oper_ip
  is '主机IP';
comment on column T_IMP_FTB_DETAIL.oper_host
  is '主机名';
comment on column T_IMP_FTB_DETAIL.ftb_no
  is '任务号';
comment on column T_IMP_FTB_DETAIL.flight_date
  is '航班日期';
comment on column T_IMP_FTB_DETAIL.night_time
  is '夜航时间';
comment on column T_IMP_FTB_DETAIL.teacher_time
  is '教员时间';
comment on column T_IMP_FTB_DETAIL.up_sortie
  is '起飞次数';
comment on column T_IMP_FTB_DETAIL.down_sortie
  is '着陆次数';
alter table T_IMP_FTB_DETAIL
  add constraint PK_FXW_FLIGHT_REC primary key (SEAT_REC_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_IMP_SEATREC
prompt ============================
prompt
create table T_IMP_SEATREC
(
  seat_rec_id      NUMBER(10) not null,
  flight_plan_id   NUMBER(10) not null,
  pilot_id         NUMBER(10),
  fly_time         NUMBER(4),
  seat_type        VARCHAR2(30),
  creator          NUMBER(10),
  create_time      DATE,
  last_modifier    NUMBER(10),
  last_modify_time DATE,
  operate_type     VARCHAR2(30),
  is_land_operator VARCHAR2(30),
  p_remark         VARCHAR2(20),
  fly_sortie       NUMBER(4),
  rec_id           NUMBER(10),
  flying_hour      NUMBER(10),
  night_time       NUMBER(4),
  teacher_time     NUMBER(4),
  up_sortie        NUMBER(4),
  down_sortie      NUMBER(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_AIRCRAFT_HIS
prompt ==================================
prompt
create table T_INTF_AIRCRAFT_HIS
(
  log_id              NUMBER(11) not null,
  ac_reg              VARCHAR2(10) not null,
  ac_type             VARCHAR2(10),
  filiale             VARCHAR2(4),
  rest_yn             VARCHAR2(1) default 'N',
  dow                 NUMBER(8),
  doi                 NUMBER(5,2),
  start_date          DATE,
  end_date            DATE,
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  fly_device          VARCHAR2(8),
  valid_flag          VARCHAR2(1) default 'Y',
  dow_l               NUMBER(8),
  doi_l               NUMBER(5,2),
  type                VARCHAR2(20),
  time_stamp          DATE default sysdate,
  oper                VARCHAR2(10),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  i_dow_l             VARCHAR2(200),
  i_dow_s             VARCHAR2(200),
  i_crew_l            VARCHAR2(200),
  i_crew_s            VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 121M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_AIRCRAFT_HIS
  is '飞机接口详细日志表';
comment on column T_INTF_AIRCRAFT_HIS.log_id
  is '日志ID';
comment on column T_INTF_AIRCRAFT_HIS.ac_reg
  is '机号';
comment on column T_INTF_AIRCRAFT_HIS.ac_type
  is '机型';
comment on column T_INTF_AIRCRAFT_HIS.filiale
  is '分公司';
comment on column T_INTF_AIRCRAFT_HIS.rest_yn
  is '是否有休息区(Y/N)';
comment on column T_INTF_AIRCRAFT_HIS.dow
  is '基本重量-近程';
comment on column T_INTF_AIRCRAFT_HIS.doi
  is '空重指数-近程';
comment on column T_INTF_AIRCRAFT_HIS.start_date
  is '服役日期';
comment on column T_INTF_AIRCRAFT_HIS.end_date
  is '退役日期';
comment on column T_INTF_AIRCRAFT_HIS.max_depart_weight
  is '最大起飞重量';
comment on column T_INTF_AIRCRAFT_HIS.max_landfall_weight
  is '最大着陆重量';
comment on column T_INTF_AIRCRAFT_HIS.max_no_oil_weight
  is '最大无油重量';
comment on column T_INTF_AIRCRAFT_HIS.fly_device
  is '飞机飞行设备';
comment on column T_INTF_AIRCRAFT_HIS.valid_flag
  is '有效标志';
comment on column T_INTF_AIRCRAFT_HIS.dow_l
  is '基本重量-远程';
comment on column T_INTF_AIRCRAFT_HIS.doi_l
  is '空重指数-远程';
comment on column T_INTF_AIRCRAFT_HIS.type
  is '操作类型';
comment on column T_INTF_AIRCRAFT_HIS.time_stamp
  is '时间戳';
comment on column T_INTF_AIRCRAFT_HIS.oper
  is '操作人';
comment on column T_INTF_AIRCRAFT_HIS.op_time
  is '操作时间';
comment on column T_INTF_AIRCRAFT_HIS.oper_ip
  is 'IP地址';
comment on column T_INTF_AIRCRAFT_HIS.oper_host
  is '主机名';
comment on column T_INTF_AIRCRAFT_HIS.i_dow_l
  is '接口基本重量-远程';
comment on column T_INTF_AIRCRAFT_HIS.i_dow_s
  is '接口基本重量-近程';
comment on column T_INTF_AIRCRAFT_HIS.i_crew_l
  is '接口机组人数-远程';
comment on column T_INTF_AIRCRAFT_HIS.i_crew_s
  is '接口机组人数-近程';
create index IDX_INTF_AIRCRAFT_TIMESTAMP on T_INTF_AIRCRAFT_HIS (TIME_STAMP)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_INTF_AIRCRAFT_HIS
  add constraint PK_T_AIRCRAFT_HIS primary key (LOG_ID, AC_REG)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 60M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_AIRCRAFT_HIS_TEST
prompt =======================================
prompt
create table T_INTF_AIRCRAFT_HIS_TEST
(
  log_id              NUMBER(11) not null,
  ac_reg              VARCHAR2(10) not null,
  ac_type             VARCHAR2(10),
  filiale             VARCHAR2(4),
  rest_yn             VARCHAR2(1) default 'N',
  dow                 NUMBER(8),
  doi                 NUMBER(5,2),
  start_date          DATE,
  end_date            DATE,
  max_depart_weight   NUMBER(8),
  max_landfall_weight NUMBER(8),
  max_no_oil_weight   NUMBER(8),
  fly_device          VARCHAR2(8),
  valid_flag          VARCHAR2(1) default 'Y',
  dow_l               NUMBER(8),
  doi_l               NUMBER(5,2),
  type                VARCHAR2(20),
  time_stamp          DATE default sysdate,
  oper                VARCHAR2(10),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  i_dow_l             VARCHAR2(200),
  i_dow_s             VARCHAR2(200),
  i_crew_l            VARCHAR2(200),
  i_crew_s            VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_AIRCRAFT_LOG
prompt ==================================
prompt
create table T_INTF_AIRCRAFT_LOG
(
  log_id      NUMBER,
  start_date  DATE,
  end_date    DATE,
  data_count  NUMBER,
  data_result VARCHAR2(500),
  log_type    VARCHAR2(10),
  time_stamp  DATE,
  op_time     DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_AIRCRAFT_LOG
  is '飞机接口日志表';
comment on column T_INTF_AIRCRAFT_LOG.log_id
  is '日志ID';
comment on column T_INTF_AIRCRAFT_LOG.start_date
  is '开始时间';
comment on column T_INTF_AIRCRAFT_LOG.end_date
  is '结束时间';
comment on column T_INTF_AIRCRAFT_LOG.data_count
  is '同步数据条数';
comment on column T_INTF_AIRCRAFT_LOG.data_result
  is '同步数据结果';
comment on column T_INTF_AIRCRAFT_LOG.log_type
  is '日志类型';
comment on column T_INTF_AIRCRAFT_LOG.time_stamp
  is '时间戳';

prompt
prompt Creating table T_INTF_AIRCRAFT_LOG_TEST
prompt =======================================
prompt
create table T_INTF_AIRCRAFT_LOG_TEST
(
  log_id      NUMBER,
  start_date  DATE,
  end_date    DATE,
  data_count  NUMBER,
  data_result VARCHAR2(500),
  log_type    VARCHAR2(10),
  time_stamp  DATE,
  op_time     DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_AOC_AIRPORT
prompt =================================
prompt
create table T_INTF_AOC_AIRPORT
(
  icaocode    VARCHAR2(4) not null,
  iatacode    VARCHAR2(3),
  shortname   VARCHAR2(20),
  infoarea    VARCHAR2(5),
  country     VARCHAR2(10),
  elevation   VARCHAR2(50),
  eleunit     VARCHAR2(10),
  isused      NUMBER(10),
  countryname VARCHAR2(50),
  airporttype NUMBER(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_INTF_AOC_AIRPORT
  add primary key (ICAOCODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_AOC_FOREIGN
prompt =================================
prompt
create table T_INTF_AOC_FOREIGN
(
  id               VARCHAR2(50) not null,
  carrier          VARCHAR2(10) not null,
  validbegdate     DATE,
  validenddate     DATE,
  icaocodedept     VARCHAR2(10) not null,
  icaocodearr      VARCHAR2(10) not null,
  planroutenum     VARCHAR2(15),
  planroutenumback VARCHAR2(15),
  iatacodedept     VARCHAR2(10) not null,
  iatacodearr      VARCHAR2(10) not null,
  lastmodifytime   DATE not null,
  op_time          DATE,
  oper             VARCHAR2(15),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_INTF_AOC_FOREIGN
  add constraint PK_T_INTF_AOC_FOREIGN primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_DELLOG_HIS
prompt ================================
prompt
create table T_INTF_DELLOG_HIS
(
  log_id   NUMBER(11),
  tab_code VARCHAR2(20),
  rec_id   NUMBER(11),
  del_time DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_DELLOG_HIS
  is '需要同步给飞行网的表的删除日志历史表';
comment on column T_INTF_DELLOG_HIS.log_id
  is '日志ID';
comment on column T_INTF_DELLOG_HIS.tab_code
  is '表标识';
comment on column T_INTF_DELLOG_HIS.rec_id
  is '记录ID';
comment on column T_INTF_DELLOG_HIS.del_time
  is '删除时间';

prompt
prompt Creating table T_INTF_DEL_LOG
prompt =============================
prompt
create table T_INTF_DEL_LOG
(
  log_id   NUMBER(11),
  tab_code VARCHAR2(20),
  rec_id   NUMBER(11),
  del_time DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 60M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_DEL_LOG
  is '需要同步给飞行网的表的删除日志';
comment on column T_INTF_DEL_LOG.log_id
  is '日志ID';
comment on column T_INTF_DEL_LOG.tab_code
  is '表标识';
comment on column T_INTF_DEL_LOG.rec_id
  is '记录ID';
comment on column T_INTF_DEL_LOG.del_time
  is '删除时间';
create index IDX_INTF_DELLOG_DELTIME on T_INTF_DEL_LOG (TAB_CODE, DEL_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 112M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_INTF_DELLOG_RECID on T_INTF_DEL_LOG (TAB_CODE, REC_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 96M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_EFB_CAT
prompt =============================
prompt
create global temporary table T_INTF_EFB_CAT
(
  p_code   VARCHAR2(10),
  rank_no  VARCHAR2(10),
  qlf_code VARCHAR2(10),
  qlf_name VARCHAR2(20),
  idx      NUMBER(5)
)
on commit delete rows;

prompt
prompt Creating table T_INTF_EFB_CAT1
prompt ==============================
prompt
create global temporary table T_INTF_EFB_CAT1
(
  p_code   VARCHAR2(10),
  rank_no  VARCHAR2(10),
  qlf_code VARCHAR2(10),
  qlf_name VARCHAR2(20),
  idx      NUMBER(5)
)
on commit delete rows;

prompt
prompt Creating table T_INTF_EFB_FLIGHTASSIGNMENT
prompt ==========================================
prompt
create global temporary table T_INTF_EFB_FLIGHTASSIGNMENT
(
  filiale_name     VARCHAR2(20),
  ac_type          VARCHAR2(200),
  init_std         VARCHAR2(30),
  flight_nos       VARCHAR2(200),
  takeoff_landings VARCHAR2(200),
  cat              VARCHAR2(50),
  captain          VARCHAR2(200),
  cruise           VARCHAR2(200),
  fo               VARCHAR2(200),
  so               VARCHAR2(200),
  other            VARCHAR2(300),
  dow              VARCHAR2(50),
  doi              VARCHAR2(15),
  icao             VARCHAR2(200),
  dispacher        VARCHAR2(20)
)
on commit preserve rows;

prompt
prompt Creating table T_INTF_EFB_FLIGHTASSIGNMENT1
prompt ===========================================
prompt
create global temporary table T_INTF_EFB_FLIGHTASSIGNMENT1
(
  filiale_name     VARCHAR2(20),
  ac_type          VARCHAR2(100),
  init_std         VARCHAR2(20),
  flight_nos       VARCHAR2(100),
  takeoff_landings VARCHAR2(150),
  cat              VARCHAR2(10),
  captain          VARCHAR2(20),
  cruise           VARCHAR2(15),
  fo               VARCHAR2(30),
  so               VARCHAR2(30),
  other            VARCHAR2(100),
  dow              VARCHAR2(50),
  doi              VARCHAR2(15),
  icao             VARCHAR2(10),
  dispacher        VARCHAR2(20)
)
on commit preserve rows;

prompt
prompt Creating table T_INTF_EFB_FLIGHTASSIGNMENT2
prompt ===========================================
prompt
create global temporary table T_INTF_EFB_FLIGHTASSIGNMENT2
(
  filiale_name     VARCHAR2(20),
  ac_type          VARCHAR2(20),
  init_std         VARCHAR2(20),
  flight_nos       VARCHAR2(100),
  takeoff_landings VARCHAR2(150),
  cat              VARCHAR2(10),
  captain          VARCHAR2(80),
  cruise           VARCHAR2(85),
  fo               VARCHAR2(100),
  so               VARCHAR2(100),
  other            VARCHAR2(100),
  dow              VARCHAR2(50),
  doi              VARCHAR2(15),
  icao             VARCHAR2(10),
  dispacher        VARCHAR2(20)
)
on commit preserve rows;

prompt
prompt Creating table T_INTF_EFB_FTB
prompt =============================
prompt
create table T_INTF_EFB_FTB
(
  flight_id     NUMBER(11) not null,
  is_icao       VARCHAR2(1),
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  totl_hours    NUMBER(6),
  air_hours     NUMBER(6),
  night_hours   NUMBER(6),
  old_fuel      NUMBER(10),
  new_fuel      NUMBER(10),
  left_fuel     NUMBER(10),
  retvtime      VARCHAR2(30),
  op_time       DATE,
  oper          VARCHAR2(30),
  oper_ip       VARCHAR2(30),
  oper_host     VARCHAR2(30),
  grnd_hours    NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_EFB_FTB
  is 'FTB航班时间';
comment on column T_INTF_EFB_FTB.flight_id
  is '航班ID';
comment on column T_INTF_EFB_FTB.is_icao
  is '是否执行英语通信';
comment on column T_INTF_EFB_FTB.taxi_out_time
  is '滑出时间';
comment on column T_INTF_EFB_FTB.takeoff_time
  is '起飞时刻';
comment on column T_INTF_EFB_FTB.landing_time
  is '降落时刻';
comment on column T_INTF_EFB_FTB.taxi_in_time
  is '滑入时间';
comment on column T_INTF_EFB_FTB.totl_hours
  is '总时间';
comment on column T_INTF_EFB_FTB.air_hours
  is '空中时间';
comment on column T_INTF_EFB_FTB.night_hours
  is '夜航时间';
comment on column T_INTF_EFB_FTB.old_fuel
  is '原存油';
comment on column T_INTF_EFB_FTB.new_fuel
  is '新加油';
comment on column T_INTF_EFB_FTB.left_fuel
  is '剩余油';
comment on column T_INTF_EFB_FTB.retvtime
  is 'EFB时间戳';
comment on column T_INTF_EFB_FTB.op_time
  is '操作时间';
comment on column T_INTF_EFB_FTB.oper
  is '操作人';
comment on column T_INTF_EFB_FTB.oper_ip
  is '操作IP';
comment on column T_INTF_EFB_FTB.oper_host
  is '操作主机';
comment on column T_INTF_EFB_FTB.grnd_hours
  is '地面时间';
alter table T_INTF_EFB_FTB
  add constraint PK_EFB_FTB primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_EFB_FTB_DETAIL
prompt ====================================
prompt
create table T_INTF_EFB_FTB_DETAIL
(
  flight_id     NUMBER(11) not null,
  pilotid       VARCHAR2(20) not null,
  pilotno       VARCHAR2(10),
  pilotname     VARCHAR2(50),
  p_code        VARCHAR2(10),
  flight_date   DATE,
  left_downs    NUMBER(3),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  left_hours    NUMBER(6),
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_downs   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  right_hours   NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  exp_hours     NUMBER(6),
  retvtime      VARCHAR2(30),
  op_time       DATE,
  oper          VARCHAR2(30),
  oper_ip       VARCHAR2(30),
  oper_host     VARCHAR2(30),
  rightupmanu   VARCHAR2(30),
  leftupmanu    VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 241M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_EFB_FTB_DETAIL
  is 'FTB人员时间';
comment on column T_INTF_EFB_FTB_DETAIL.flight_id
  is '航班ID';
comment on column T_INTF_EFB_FTB_DETAIL.pilotid
  is 'EFB人员ID';
comment on column T_INTF_EFB_FTB_DETAIL.pilotno
  is 'EFB人员工号';
comment on column T_INTF_EFB_FTB_DETAIL.pilotname
  is 'EFB人员名称';
comment on column T_INTF_EFB_FTB_DETAIL.p_code
  is '人员代码';
comment on column T_INTF_EFB_FTB_DETAIL.flight_date
  is '航班日期，冗余字段，用于建分区表';
comment on column T_INTF_EFB_FTB_DETAIL.left_downs
  is '左座起飞次数';
comment on column T_INTF_EFB_FTB_DETAIL.left_updowns
  is '左座着陆次数';
comment on column T_INTF_EFB_FTB_DETAIL.left_op_manu
  is '主操作/辅助操作，可选PF/PNFPM(左座降落角色)';
comment on column T_INTF_EFB_FTB_DETAIL.left_hours
  is '左座时间';
comment on column T_INTF_EFB_FTB_DETAIL.left_night
  is '左座夜航时间';
comment on column T_INTF_EFB_FTB_DETAIL.left_teach
  is '左座教员时间';
comment on column T_INTF_EFB_FTB_DETAIL.right_downs
  is '右座起飞次数';
comment on column T_INTF_EFB_FTB_DETAIL.right_updowns
  is '右座着陆次数';
comment on column T_INTF_EFB_FTB_DETAIL.right_op_manu
  is '主操作/辅助操作，可选PF/PNFPM(右座降落角色)';
comment on column T_INTF_EFB_FTB_DETAIL.right_hours
  is '右座时间';
comment on column T_INTF_EFB_FTB_DETAIL.right_night
  is '右座夜航时间';
comment on column T_INTF_EFB_FTB_DETAIL.right_teach
  is '右座教员时间';
comment on column T_INTF_EFB_FTB_DETAIL.exp_hours
  is '经历时间';
comment on column T_INTF_EFB_FTB_DETAIL.retvtime
  is 'EFB修改时间';
comment on column T_INTF_EFB_FTB_DETAIL.op_time
  is '操作时间';
comment on column T_INTF_EFB_FTB_DETAIL.oper
  is '操作人';
comment on column T_INTF_EFB_FTB_DETAIL.oper_ip
  is '操作IP';
comment on column T_INTF_EFB_FTB_DETAIL.oper_host
  is '操作主机';
comment on column T_INTF_EFB_FTB_DETAIL.rightupmanu
  is '主操作/辅助操作，可选PF/PNFPM(右座起飞角色)';
comment on column T_INTF_EFB_FTB_DETAIL.leftupmanu
  is '主操作/辅助操作，可选PF/PNFPM(左座起飞角色)';
alter table T_INTF_EFB_FTB_DETAIL
  add constraint PK_EFB_FTB_DETAIL primary key (FLIGHT_ID, PILOTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 44M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_BOARDING
prompt ==================================
prompt
create table T_INTF_FGW_BOARDING
(
  cardid         VARCHAR2(50) not null,
  pilotid        VARCHAR2(10),
  cardtype       VARCHAR2(20),
  cardno         VARCHAR2(20),
  grantdate      DATE,
  checkdate      DATE,
  validdate      DATE,
  cardrank       VARCHAR2(20),
  remark         VARCHAR2(100),
  creator        VARCHAR2(20),
  createtime     DATE,
  lastmodifier   VARCHAR2(20),
  lastmodifytime DATE,
  validity       VARCHAR2(10),
  oper           VARCHAR2(20),
  op_time        DATE,
  oper_ip        VARCHAR2(20),
  oper_host      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 768K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_BOARDING
  is '飞管网登机证中间表';
comment on column T_INTF_FGW_BOARDING.cardid
  is '证件ID';
comment on column T_INTF_FGW_BOARDING.pilotid
  is '人员ID';
comment on column T_INTF_FGW_BOARDING.cardtype
  is '证件类型';
comment on column T_INTF_FGW_BOARDING.cardno
  is '证件号';
comment on column T_INTF_FGW_BOARDING.grantdate
  is '签发日期';
comment on column T_INTF_FGW_BOARDING.checkdate
  is '启用日期';
comment on column T_INTF_FGW_BOARDING.validdate
  is '到期日期';
comment on column T_INTF_FGW_BOARDING.cardrank
  is '证件等级';
comment on column T_INTF_FGW_BOARDING.remark
  is '备注';
comment on column T_INTF_FGW_BOARDING.creator
  is '创建人';
comment on column T_INTF_FGW_BOARDING.createtime
  is '创建时间';
comment on column T_INTF_FGW_BOARDING.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_BOARDING.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_BOARDING.validity
  is '有效性';
comment on column T_INTF_FGW_BOARDING.oper
  is '操作人';
comment on column T_INTF_FGW_BOARDING.op_time
  is '操作时间';
comment on column T_INTF_FGW_BOARDING.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_BOARDING.oper_host
  is '操作主机';
alter table T_INTF_FGW_BOARDING
  add constraint PK_HEALTH primary key (CARDID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_BOARDING_DELTA
prompt ========================================
prompt
create table T_INTF_FGW_BOARDING_DELTA
(
  delta_id       NUMBER(12),
  cardid         VARCHAR2(50),
  pilotid        VARCHAR2(10),
  cardtype       VARCHAR2(20),
  cardno         VARCHAR2(20),
  grantdate      DATE,
  checkdate      DATE,
  validdate      DATE,
  cardrank       VARCHAR2(20),
  remark         VARCHAR2(100),
  creator        VARCHAR2(20),
  createtime     DATE,
  lastmodifier   VARCHAR2(20),
  lastmodifytime DATE,
  validity       VARCHAR2(10),
  oper           VARCHAR2(20),
  op_time        DATE,
  oper_ip        VARCHAR2(20),
  oper_host      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 832K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_BOARDING_DELTA
  is '飞管网登机证日志表';
comment on column T_INTF_FGW_BOARDING_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_BOARDING_DELTA.cardid
  is '证件ID';
comment on column T_INTF_FGW_BOARDING_DELTA.pilotid
  is '人员ID';
comment on column T_INTF_FGW_BOARDING_DELTA.cardtype
  is '证件类型';
comment on column T_INTF_FGW_BOARDING_DELTA.cardno
  is '证件号';
comment on column T_INTF_FGW_BOARDING_DELTA.grantdate
  is '签发日期';
comment on column T_INTF_FGW_BOARDING_DELTA.checkdate
  is '启用日期';
comment on column T_INTF_FGW_BOARDING_DELTA.validdate
  is '到期日期';
comment on column T_INTF_FGW_BOARDING_DELTA.cardrank
  is '证件等级';
comment on column T_INTF_FGW_BOARDING_DELTA.remark
  is '备注';
comment on column T_INTF_FGW_BOARDING_DELTA.creator
  is '创建人';
comment on column T_INTF_FGW_BOARDING_DELTA.createtime
  is '创建时间';
comment on column T_INTF_FGW_BOARDING_DELTA.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_BOARDING_DELTA.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_BOARDING_DELTA.validity
  is '有效性';
comment on column T_INTF_FGW_BOARDING_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_BOARDING_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_BOARDING_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_BOARDING_DELTA.oper_host
  is '操作主机';

prompt
prompt Creating table T_INTF_FGW_CARRY
prompt ===============================
prompt
create table T_INTF_FGW_CARRY
(
  pickupid          NUMBER(10) not null,
  pickupaddress     VARCHAR2(10) not null,
  pickupaddressname VARCHAR2(30),
  orgcode           VARCHAR2(10),
  validity          VARCHAR2(10),
  creator           VARCHAR2(20),
  createtime        DATE,
  lastmodifier      VARCHAR2(20),
  lastmodifytime    DATE,
  oper              VARCHAR2(20),
  oper_host         VARCHAR2(20),
  oper_ip           VARCHAR2(20),
  op_time           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
  );
comment on table T_INTF_FGW_CARRY
  is '接车地点';
comment on column T_INTF_FGW_CARRY.pickupid
  is '接车ID';
comment on column T_INTF_FGW_CARRY.pickupaddress
  is '接车地址';
comment on column T_INTF_FGW_CARRY.pickupaddressname
  is '接车名称';
comment on column T_INTF_FGW_CARRY.orgcode
  is '分公司';
comment on column T_INTF_FGW_CARRY.validity
  is '有效性';
comment on column T_INTF_FGW_CARRY.creator
  is '创建者';
comment on column T_INTF_FGW_CARRY.createtime
  is '创建时间';
comment on column T_INTF_FGW_CARRY.lastmodifier
  is '创建人';
comment on column T_INTF_FGW_CARRY.lastmodifytime
  is 'FRMS修改时间';
comment on column T_INTF_FGW_CARRY.oper
  is '操作人';
comment on column T_INTF_FGW_CARRY.oper_host
  is '操作主机';
comment on column T_INTF_FGW_CARRY.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_CARRY.op_time
  is '操作时间';
alter table T_INTF_FGW_CARRY
  add constraint PK_T_INTF_FGW_CARRY primary key (PICKUPADDRESS)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_INTF_FGW_CREW
prompt ==============================
prompt
create table T_INTF_FGW_CREW
(
  pilotid          NUMBER(12) not null,
  licno            VARCHAR2(50),
  idtype           VARCHAR2(50),
  idcode           VARCHAR2(50),
  staffcode        VARCHAR2(50),
  staffname        VARCHAR2(50),
  staffcate        VARCHAR2(50),
  staffsource      VARCHAR2(50),
  staffstatus      VARCHAR2(50),
  isonpost         VARCHAR2(50),
  shortname        VARCHAR2(50),
  engsurname       VARCHAR2(50),
  engname          VARCHAR2(50),
  nativeplace      VARCHAR2(50),
  engnativeplace   VARCHAR2(50),
  birthday         DATE,
  birthplace       VARCHAR2(50),
  sex              VARCHAR2(50),
  engsex           VARCHAR2(50),
  stature          VARCHAR2(50),
  weight           VARCHAR2(50),
  bloodtype        VARCHAR2(50),
  marriagestatus   VARCHAR2(50),
  graduateacademy  VARCHAR2(50),
  enterdate        DATE,
  graduatedate     DATE,
  workdate         DATE,
  civildate        DATE,
  flydate          DATE,
  cesenterdate     DATE,
  cesexitdate      DATE,
  culturedegree    VARCHAR2(50),
  speciality       VARCHAR2(50),
  worktype         VARCHAR2(50),
  familyaddress    VARCHAR2(80),
  engfamilyaddress VARCHAR2(120),
  regpolicestation VARCHAR2(50),
  familytel        VARCHAR2(50),
  officetel        VARCHAR2(50),
  mobiletel        VARCHAR2(50),
  mobiletelbak     VARCHAR2(50),
  groupcornet      VARCHAR2(50),
  fax              VARCHAR2(50),
  zipcode          VARCHAR2(50),
  email            VARCHAR2(50),
  polity           VARCHAR2(50),
  enterpartydate   DATE,
  nation           VARCHAR2(50),
  nationality      VARCHAR2(50),
  engnatcode2      VARCHAR2(50),
  engnatcode3      VARCHAR2(50),
  remark           VARCHAR2(500),
  orgcode          VARCHAR2(50),
  pickupaddress    VARCHAR2(100),
  istryfly         VARCHAR2(50),
  execdeptcode     VARCHAR2(50),
  assideptcode     VARCHAR2(50),
  tempdeptcode     VARCHAR2(50),
  stuallodate      DATE,
  postrate         VARCHAR2(50),
  execduty         VARCHAR2(50),
  execlevel        VARCHAR2(50),
  starlevel        VARCHAR2(50),
  rehireenddate    DATE,
  healthlevel      VARCHAR2(50),
  lastmodifier     VARCHAR2(50),
  lastmodifytime   DATE,
  oper             VARCHAR2(50),
  oper_ip          VARCHAR2(50),
  op_time          DATE,
  oper_host        VARCHAR2(50),
  pickupaddress2   VARCHAR2(100),
  homebase         VARCHAR2(10),
  smokeyn          VARCHAR2(10),
  pcode            VARCHAR2(12),
  arrangedeptcode  VARCHAR2(20),
  branchdeptcode   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 4M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_CREW
  is '飞管网人员信息中间表';
comment on column T_INTF_FGW_CREW.pilotid
  is '飞管风人员ID';
comment on column T_INTF_FGW_CREW.licno
  is '身份证号';
comment on column T_INTF_FGW_CREW.idtype
  is '证件类型';
comment on column T_INTF_FGW_CREW.idcode
  is '身份证号,外籍护照号';
comment on column T_INTF_FGW_CREW.staffcode
  is '工号';
comment on column T_INTF_FGW_CREW.staffname
  is '姓名';
comment on column T_INTF_FGW_CREW.staffcate
  is '人员类别';
comment on column T_INTF_FGW_CREW.staffsource
  is '人员来源';
comment on column T_INTF_FGW_CREW.staffstatus
  is '人员状态';
comment on column T_INTF_FGW_CREW.isonpost
  is '是否停飞';
comment on column T_INTF_FGW_CREW.shortname
  is '人员简称';
comment on column T_INTF_FGW_CREW.engsurname
  is '英文姓';
comment on column T_INTF_FGW_CREW.engname
  is '英文名';
comment on column T_INTF_FGW_CREW.nativeplace
  is '出生地/籍贯';
comment on column T_INTF_FGW_CREW.engnativeplace
  is '英文出生地';
comment on column T_INTF_FGW_CREW.birthday
  is '出生日期';
comment on column T_INTF_FGW_CREW.birthplace
  is '出生地';
comment on column T_INTF_FGW_CREW.sex
  is '性别';
comment on column T_INTF_FGW_CREW.engsex
  is '英文性别';
comment on column T_INTF_FGW_CREW.stature
  is '身高';
comment on column T_INTF_FGW_CREW.weight
  is '体重';
comment on column T_INTF_FGW_CREW.bloodtype
  is '血型';
comment on column T_INTF_FGW_CREW.marriagestatus
  is '婚姻状况';
comment on column T_INTF_FGW_CREW.graduateacademy
  is '毕业院校';
comment on column T_INTF_FGW_CREW.enterdate
  is '入校时间';
comment on column T_INTF_FGW_CREW.graduatedate
  is '毕业时间';
comment on column T_INTF_FGW_CREW.workdate
  is '工作时间';
comment on column T_INTF_FGW_CREW.civildate
  is '进民航日期';
comment on column T_INTF_FGW_CREW.flydate
  is '开始飞行日期';
comment on column T_INTF_FGW_CREW.cesenterdate
  is '进入东航日期';
comment on column T_INTF_FGW_CREW.cesexitdate
  is '离开东航日期';
comment on column T_INTF_FGW_CREW.culturedegree
  is '文化程度';
comment on column T_INTF_FGW_CREW.speciality
  is '专业';
comment on column T_INTF_FGW_CREW.worktype
  is '工种';
comment on column T_INTF_FGW_CREW.familyaddress
  is '家庭地址';
comment on column T_INTF_FGW_CREW.engfamilyaddress
  is '英文家庭地址';
comment on column T_INTF_FGW_CREW.regpolicestation
  is '派出所';
comment on column T_INTF_FGW_CREW.familytel
  is '家庭电话';
comment on column T_INTF_FGW_CREW.officetel
  is '办公室电话';
comment on column T_INTF_FGW_CREW.mobiletel
  is '手机号';
comment on column T_INTF_FGW_CREW.mobiletelbak
  is '备用手机号';
comment on column T_INTF_FGW_CREW.groupcornet
  is '集团短号';
comment on column T_INTF_FGW_CREW.fax
  is '传真';
comment on column T_INTF_FGW_CREW.zipcode
  is '邮编';
comment on column T_INTF_FGW_CREW.email
  is '邮件地址';
comment on column T_INTF_FGW_CREW.polity
  is '政治面貌';
comment on column T_INTF_FGW_CREW.enterpartydate
  is '入党日期';
comment on column T_INTF_FGW_CREW.nation
  is '民族';
comment on column T_INTF_FGW_CREW.nationality
  is '国籍';
comment on column T_INTF_FGW_CREW.engnatcode2
  is '国家二字码';
comment on column T_INTF_FGW_CREW.engnatcode3
  is '国家三字码';
comment on column T_INTF_FGW_CREW.remark
  is '评论';
comment on column T_INTF_FGW_CREW.orgcode
  is '分公司代码';
comment on column T_INTF_FGW_CREW.pickupaddress
  is '接车地点';
comment on column T_INTF_FGW_CREW.istryfly
  is '接车地点';
comment on column T_INTF_FGW_CREW.execdeptcode
  is '人事单位';
comment on column T_INTF_FGW_CREW.assideptcode
  is '飞行单位';
comment on column T_INTF_FGW_CREW.tempdeptcode
  is '临时单位';
comment on column T_INTF_FGW_CREW.stuallodate
  is '下中队日期';
comment on column T_INTF_FGW_CREW.postrate
  is '任职岗级';
comment on column T_INTF_FGW_CREW.execduty
  is '行政职务';
comment on column T_INTF_FGW_CREW.execlevel
  is '行政级别';
comment on column T_INTF_FGW_CREW.starlevel
  is '飞行员星级';
comment on column T_INTF_FGW_CREW.rehireenddate
  is '返聘结束日期';
comment on column T_INTF_FGW_CREW.healthlevel
  is '健康等级';
comment on column T_INTF_FGW_CREW.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_CREW.lastmodifytime
  is '飞管网修改时间';
comment on column T_INTF_FGW_CREW.oper
  is '操作人';
comment on column T_INTF_FGW_CREW.oper_ip
  is 'IP';
comment on column T_INTF_FGW_CREW.op_time
  is '机组排班修改时间';
comment on column T_INTF_FGW_CREW.oper_host
  is '主机';
comment on column T_INTF_FGW_CREW.pickupaddress2
  is '接车地址';
comment on column T_INTF_FGW_CREW.homebase
  is '主基地';
comment on column T_INTF_FGW_CREW.smokeyn
  is '是否抽烟';
comment on column T_INTF_FGW_CREW.pcode
  is '人员p_code';
comment on column T_INTF_FGW_CREW.arrangedeptcode
  is '排班部门';
comment on column T_INTF_FGW_CREW.branchdeptcode
  is '行政部门';
alter table T_INTF_FGW_CREW
  add constraint PK_FGW_PILOTID primary key (PILOTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_CREW_CK
prompt =================================
prompt
create table T_INTF_FGW_CREW_CK
(
  pilotid          NUMBER(12) not null,
  licno            VARCHAR2(50),
  idtype           VARCHAR2(50),
  idcode           VARCHAR2(50),
  staffcode        VARCHAR2(50),
  staffname        VARCHAR2(50),
  staffcate        VARCHAR2(50),
  staffsource      VARCHAR2(50),
  staffstatus      VARCHAR2(50),
  isonpost         VARCHAR2(50),
  shortname        VARCHAR2(50),
  engsurname       VARCHAR2(50),
  engname          VARCHAR2(50),
  nativeplace      VARCHAR2(50),
  engnativeplace   VARCHAR2(50),
  birthday         DATE,
  birthplace       VARCHAR2(50),
  sex              VARCHAR2(50),
  engsex           VARCHAR2(50),
  stature          VARCHAR2(50),
  weight           VARCHAR2(50),
  bloodtype        VARCHAR2(50),
  marriagestatus   VARCHAR2(50),
  graduateacademy  VARCHAR2(50),
  enterdate        DATE,
  graduatedate     DATE,
  workdate         DATE,
  civildate        DATE,
  flydate          DATE,
  cesenterdate     DATE,
  cesexitdate      DATE,
  culturedegree    VARCHAR2(50),
  speciality       VARCHAR2(50),
  worktype         VARCHAR2(50),
  familyaddress    VARCHAR2(80),
  engfamilyaddress VARCHAR2(120),
  regpolicestation VARCHAR2(50),
  familytel        VARCHAR2(50),
  officetel        VARCHAR2(50),
  mobiletel        VARCHAR2(50),
  mobiletelbak     VARCHAR2(50),
  groupcornet      VARCHAR2(50),
  fax              VARCHAR2(50),
  zipcode          VARCHAR2(50),
  email            VARCHAR2(50),
  polity           VARCHAR2(50),
  enterpartydate   DATE,
  nation           VARCHAR2(50),
  nationality      VARCHAR2(50),
  engnatcode2      VARCHAR2(50),
  engnatcode3      VARCHAR2(50),
  remark           VARCHAR2(500),
  orgcode          VARCHAR2(50),
  pickupaddress    VARCHAR2(100),
  istryfly         VARCHAR2(50),
  execdeptcode     VARCHAR2(50),
  assideptcode     VARCHAR2(50),
  tempdeptcode     VARCHAR2(50),
  stuallodate      DATE,
  postrateid       VARCHAR2(50),
  execduty         VARCHAR2(50),
  execlevel        VARCHAR2(50),
  starlevel        VARCHAR2(50),
  rehireenddate    DATE,
  healthlevel      VARCHAR2(50),
  lastmodifier     VARCHAR2(50),
  lastmodifytime   DATE,
  oper             VARCHAR2(50),
  oper_ip          VARCHAR2(50),
  op_time          DATE,
  oper_host        VARCHAR2(50),
  pickupaddress2   VARCHAR2(100),
  homebase         VARCHAR2(10),
  smokeyn          VARCHAR2(10),
  p_code           VARCHAR2(12),
  arrangedeptcode  VARCHAR2(20),
  branchdeptcode   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_CREW_DELTA
prompt ====================================
prompt
create table T_INTF_FGW_CREW_DELTA
(
  delta_id         NUMBER(12) not null,
  pilotid          NUMBER(12),
  licno            VARCHAR2(50),
  idtype           VARCHAR2(50),
  idcode           VARCHAR2(50),
  staffcode        VARCHAR2(50),
  staffname        VARCHAR2(50),
  staffcate        VARCHAR2(50),
  staffsource      VARCHAR2(50),
  staffstatus      VARCHAR2(50),
  isonpost         VARCHAR2(50),
  shortname        VARCHAR2(50),
  engsurname       VARCHAR2(50),
  engname          VARCHAR2(50),
  nativeplace      VARCHAR2(50),
  engnativeplace   VARCHAR2(50),
  birthday         DATE,
  birthplace       VARCHAR2(50),
  sex              VARCHAR2(50),
  engsex           VARCHAR2(50),
  stature          VARCHAR2(50),
  weight           VARCHAR2(50),
  bloodtype        VARCHAR2(50),
  marriagestatus   VARCHAR2(50),
  graduateacademy  VARCHAR2(50),
  enterdate        DATE,
  graduatedate     DATE,
  workdate         DATE,
  civildate        DATE,
  flydate          DATE,
  cesenterdate     DATE,
  cesexitdate      DATE,
  culturedegree    VARCHAR2(50),
  speciality       VARCHAR2(50),
  worktype         VARCHAR2(50),
  familyaddress    VARCHAR2(80),
  engfamilyaddress VARCHAR2(120),
  regpolicestation VARCHAR2(50),
  familytel        VARCHAR2(50),
  officetel        VARCHAR2(50),
  mobiletel        VARCHAR2(50),
  mobiletelbak     VARCHAR2(50),
  groupcornet      VARCHAR2(50),
  fax              VARCHAR2(50),
  zipcode          VARCHAR2(50),
  email            VARCHAR2(50),
  polity           VARCHAR2(50),
  enterpartydate   DATE,
  nation           VARCHAR2(50),
  nationality      VARCHAR2(50),
  engnatcode2      VARCHAR2(50),
  engnatcode3      VARCHAR2(50),
  remark           VARCHAR2(500),
  orgcode          VARCHAR2(50),
  pickupaddress    VARCHAR2(50),
  istryfly         VARCHAR2(50),
  execdeptcode     VARCHAR2(50),
  assideptcode     VARCHAR2(50),
  tempdeptcode     VARCHAR2(50),
  stuallodate      DATE,
  postrate         VARCHAR2(50),
  execduty         VARCHAR2(50),
  execlevel        VARCHAR2(50),
  starlevel        VARCHAR2(50),
  rehireenddate    DATE,
  healthlevel      VARCHAR2(50),
  lastmodifier     VARCHAR2(50),
  lastmodifytime   DATE,
  oper             VARCHAR2(50),
  oper_ip          VARCHAR2(50),
  op_time          DATE,
  oper_host        VARCHAR2(50),
  pickupaddress2   VARCHAR2(100),
  homebase         VARCHAR2(10),
  smokeyn          VARCHAR2(10),
  pcode            VARCHAR2(12),
  arrangedeptcode  VARCHAR2(20),
  branchdeptcode   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_CREW_DELTA
  is '飞管网人员信息日志表';
comment on column T_INTF_FGW_CREW_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_CREW_DELTA.pilotid
  is '飞管风人员id';
comment on column T_INTF_FGW_CREW_DELTA.licno
  is '身份证号';
comment on column T_INTF_FGW_CREW_DELTA.idtype
  is '证件类型';
comment on column T_INTF_FGW_CREW_DELTA.idcode
  is '身份证号,外籍护照号';
comment on column T_INTF_FGW_CREW_DELTA.staffcode
  is '工号';
comment on column T_INTF_FGW_CREW_DELTA.staffname
  is '姓名';
comment on column T_INTF_FGW_CREW_DELTA.staffcate
  is '人员类别';
comment on column T_INTF_FGW_CREW_DELTA.staffsource
  is '人员来源';
comment on column T_INTF_FGW_CREW_DELTA.staffstatus
  is '人员状态';
comment on column T_INTF_FGW_CREW_DELTA.isonpost
  is '是否停飞';
comment on column T_INTF_FGW_CREW_DELTA.shortname
  is '人员简称';
comment on column T_INTF_FGW_CREW_DELTA.engsurname
  is '英文姓';
comment on column T_INTF_FGW_CREW_DELTA.engname
  is '英文名';
comment on column T_INTF_FGW_CREW_DELTA.nativeplace
  is '出生地/籍贯';
comment on column T_INTF_FGW_CREW_DELTA.engnativeplace
  is '英文出生地';
comment on column T_INTF_FGW_CREW_DELTA.birthday
  is '出生日期';
comment on column T_INTF_FGW_CREW_DELTA.birthplace
  is '出生地';
comment on column T_INTF_FGW_CREW_DELTA.sex
  is '性别';
comment on column T_INTF_FGW_CREW_DELTA.engsex
  is '英文性别';
comment on column T_INTF_FGW_CREW_DELTA.stature
  is '身高';
comment on column T_INTF_FGW_CREW_DELTA.weight
  is '体重';
comment on column T_INTF_FGW_CREW_DELTA.bloodtype
  is '血型';
comment on column T_INTF_FGW_CREW_DELTA.marriagestatus
  is '婚姻状况';
comment on column T_INTF_FGW_CREW_DELTA.graduateacademy
  is '毕业院校';
comment on column T_INTF_FGW_CREW_DELTA.enterdate
  is '入校时间';
comment on column T_INTF_FGW_CREW_DELTA.graduatedate
  is '毕业时间';
comment on column T_INTF_FGW_CREW_DELTA.workdate
  is '工作时间';
comment on column T_INTF_FGW_CREW_DELTA.civildate
  is '进民航日期';
comment on column T_INTF_FGW_CREW_DELTA.flydate
  is '开始飞行日期';
comment on column T_INTF_FGW_CREW_DELTA.cesenterdate
  is '进入东航日期';
comment on column T_INTF_FGW_CREW_DELTA.cesexitdate
  is '离开东航日期';
comment on column T_INTF_FGW_CREW_DELTA.culturedegree
  is '文化程度';
comment on column T_INTF_FGW_CREW_DELTA.speciality
  is '专业';
comment on column T_INTF_FGW_CREW_DELTA.worktype
  is '工种';
comment on column T_INTF_FGW_CREW_DELTA.familyaddress
  is '家庭地址';
comment on column T_INTF_FGW_CREW_DELTA.engfamilyaddress
  is '英文家庭地址';
comment on column T_INTF_FGW_CREW_DELTA.regpolicestation
  is '派出所';
comment on column T_INTF_FGW_CREW_DELTA.familytel
  is '家庭电话';
comment on column T_INTF_FGW_CREW_DELTA.officetel
  is '办公室电话';
comment on column T_INTF_FGW_CREW_DELTA.mobiletel
  is '手机号';
comment on column T_INTF_FGW_CREW_DELTA.mobiletelbak
  is '备用手机号';
comment on column T_INTF_FGW_CREW_DELTA.groupcornet
  is '集团短号';
comment on column T_INTF_FGW_CREW_DELTA.fax
  is '传真';
comment on column T_INTF_FGW_CREW_DELTA.zipcode
  is '邮编';
comment on column T_INTF_FGW_CREW_DELTA.email
  is '邮件地址';
comment on column T_INTF_FGW_CREW_DELTA.polity
  is '政治面貌';
comment on column T_INTF_FGW_CREW_DELTA.enterpartydate
  is '入党日期';
comment on column T_INTF_FGW_CREW_DELTA.nation
  is '民族';
comment on column T_INTF_FGW_CREW_DELTA.nationality
  is '国籍';
comment on column T_INTF_FGW_CREW_DELTA.engnatcode2
  is '国家二字码';
comment on column T_INTF_FGW_CREW_DELTA.engnatcode3
  is '国家三字码';
comment on column T_INTF_FGW_CREW_DELTA.remark
  is '评论';
comment on column T_INTF_FGW_CREW_DELTA.orgcode
  is '分公司代码';
comment on column T_INTF_FGW_CREW_DELTA.pickupaddress
  is '接车地点';
comment on column T_INTF_FGW_CREW_DELTA.istryfly
  is '接车地点';
comment on column T_INTF_FGW_CREW_DELTA.execdeptcode
  is '人事单位';
comment on column T_INTF_FGW_CREW_DELTA.assideptcode
  is '飞行单位';
comment on column T_INTF_FGW_CREW_DELTA.tempdeptcode
  is '临时单位';
comment on column T_INTF_FGW_CREW_DELTA.stuallodate
  is '下中队日期';
comment on column T_INTF_FGW_CREW_DELTA.postrate
  is '任职岗级';
comment on column T_INTF_FGW_CREW_DELTA.execduty
  is '行政职务';
comment on column T_INTF_FGW_CREW_DELTA.execlevel
  is '行政级别';
comment on column T_INTF_FGW_CREW_DELTA.starlevel
  is '飞行员星级';
comment on column T_INTF_FGW_CREW_DELTA.rehireenddate
  is '返聘结束日期';
comment on column T_INTF_FGW_CREW_DELTA.healthlevel
  is '健康等级';
comment on column T_INTF_FGW_CREW_DELTA.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_CREW_DELTA.lastmodifytime
  is '飞管网修改时间';
comment on column T_INTF_FGW_CREW_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_CREW_DELTA.oper_ip
  is 'ip';
comment on column T_INTF_FGW_CREW_DELTA.op_time
  is '机组排班修改时间';
comment on column T_INTF_FGW_CREW_DELTA.oper_host
  is '主机';
comment on column T_INTF_FGW_CREW_DELTA.pickupaddress2
  is '接车地址';
comment on column T_INTF_FGW_CREW_DELTA.homebase
  is '主基地';
comment on column T_INTF_FGW_CREW_DELTA.smokeyn
  is '是否抽烟';
comment on column T_INTF_FGW_CREW_DELTA.pcode
  is '人员p_code';
comment on column T_INTF_FGW_CREW_DELTA.arrangedeptcode
  is '排班部门';
comment on column T_INTF_FGW_CREW_DELTA.branchdeptcode
  is '行政部门';
alter table T_INTF_FGW_CREW_DELTA
  add constraint PK_FGW_CREW_DELTA_ID primary key (DELTA_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_DEPTCODE
prompt ==================================
prompt
create table T_INTF_FGW_DEPTCODE
(
  unitcode       VARCHAR2(20),
  unitid         VARCHAR2(20),
  unitname       VARCHAR2(20),
  shortname      VARCHAR2(20),
  validity       VARCHAR2(10),
  creator        VARCHAR2(50),
  isstudept      VARCHAR2(10),
  lastmodifytime DATE,
  location       VARCHAR2(100),
  oper           VARCHAR2(10),
  oper_ip        VARCHAR2(20),
  oper_host      VARCHAR2(20),
  op_time        DATE,
  remarks        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_DEPTCODE
  is 'FRMS飞行单位中间表';
comment on column T_INTF_FGW_DEPTCODE.unitcode
  is '部门代码';
comment on column T_INTF_FGW_DEPTCODE.unitid
  is '部门ID';
comment on column T_INTF_FGW_DEPTCODE.unitname
  is '部门名称';
comment on column T_INTF_FGW_DEPTCODE.shortname
  is '部门简称';
comment on column T_INTF_FGW_DEPTCODE.validity
  is '有效性';
comment on column T_INTF_FGW_DEPTCODE.creator
  is '创建者';
comment on column T_INTF_FGW_DEPTCODE.isstudept
  is '是否学员部门';
comment on column T_INTF_FGW_DEPTCODE.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_DEPTCODE.location
  is '地点';
comment on column T_INTF_FGW_DEPTCODE.oper
  is '操作人';
comment on column T_INTF_FGW_DEPTCODE.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_DEPTCODE.oper_host
  is '操作主机';
comment on column T_INTF_FGW_DEPTCODE.op_time
  is '操作时间';
comment on column T_INTF_FGW_DEPTCODE.remarks
  is '备注';

prompt
prompt Creating table T_INTF_FGW_KAOQIN
prompt ================================
prompt
create table T_INTF_FGW_KAOQIN
(
  ddo_id           NUMBER,
  p_code           VARCHAR2(10),
  work_no          VARCHAR2(10),
  c_name           VARCHAR2(60),
  fxw_id           VARCHAR2(10),
  filiale          VARCHAR2(4),
  filiale_name     VARCHAR2(50),
  org_code         VARCHAR2(20),
  td               DATE,
  ta               DATE,
  cate             VARCHAR2(3),
  cate_name        VARCHAR2(9),
  ddo_code         VARCHAR2(16),
  ddo_name         VARCHAR2(101),
  flight_no        VARCHAR2(15),
  remarks          VARCHAR2(4000),
  last_modify_time DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 232M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_INTF_FGW_LICENSE
prompt =================================
prompt
create table T_INTF_FGW_LICENSE
(
  pilotid         NUMBER(12) not null,
  icao            VARCHAR2(50),
  icaobegdate     DATE,
  icaoenddate     DATE,
  issuecountry    VARCHAR2(50),
  issuedept       VARCHAR2(50),
  issuemanager    VARCHAR2(50),
  issuerule       VARCHAR2(50),
  lastmodifier    VARCHAR2(50),
  lastmodifytime  DATE,
  licno           VARCHAR2(50),
  licvalidity     VARCHAR2(50),
  remark          VARCHAR2(500),
  supauth         VARCHAR2(50),
  supoffe         VARCHAR2(50),
  issuedate       DATE,
  validitybegdate DATE,
  validityenddate DATE,
  endorsecateid   NUMBER(12) not null,
  catecode        VARCHAR2(50),
  actypecode      VARCHAR2(50),
  endorsebegdate  DATE,
  endorseenddate  DATE,
  status          VARCHAR2(50),
  remark1         VARCHAR2(500),
  stdmonth1       NUMBER(5),
  stdmonth2       NUMBER(5),
  isnexttea       VARCHAR2(50),
  isnextstu       VARCHAR2(50),
  limitnum        NUMBER(10),
  isteacher       VARCHAR2(50),
  teabegdate      DATE,
  teaenddate      DATE,
  trainingaddr    VARCHAR2(100),
  lastmodifier1   VARCHAR2(50),
  lastmodifytime2 VARCHAR2(20),
  oper            VARCHAR2(50),
  oper_ip         VARCHAR2(50),
  oper_host       VARCHAR2(50),
  op_time         DATE,
  idcode          NVARCHAR2(20),
  lictype         VARCHAR2(20),
  mainactype      VARCHAR2(20),
  validity        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_LICENSE
  is '飞管网执照中间表';
comment on column T_INTF_FGW_LICENSE.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_LICENSE.icao
  is 'ICAO等级';
comment on column T_INTF_FGW_LICENSE.icaobegdate
  is 'ICAO有效开始日';
comment on column T_INTF_FGW_LICENSE.icaoenddate
  is 'ICAO有效截止日';
comment on column T_INTF_FGW_LICENSE.issuecountry
  is '签发国家';
comment on column T_INTF_FGW_LICENSE.issuedept
  is '签发单位';
comment on column T_INTF_FGW_LICENSE.issuemanager
  is '签发人';
comment on column T_INTF_FGW_LICENSE.issuerule
  is '签发依据';
comment on column T_INTF_FGW_LICENSE.lastmodifier
  is '最后修改者';
comment on column T_INTF_FGW_LICENSE.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_LICENSE.licno
  is '执照号';
comment on column T_INTF_FGW_LICENSE.licvalidity
  is '执照有效期';
comment on column T_INTF_FGW_LICENSE.remark
  is '备注';
comment on column T_INTF_FGW_LICENSE.supauth
  is '是否局方监察员';
comment on column T_INTF_FGW_LICENSE.supoffe
  is '监察员所属管理局';
comment on column T_INTF_FGW_LICENSE.issuedate
  is '签发日期';
comment on column T_INTF_FGW_LICENSE.validitybegdate
  is '有效开始日期';
comment on column T_INTF_FGW_LICENSE.validityenddate
  is '有效截止日期';
comment on column T_INTF_FGW_LICENSE.endorsecateid
  is '流水号';
comment on column T_INTF_FGW_LICENSE.catecode
  is '执照型别';
comment on column T_INTF_FGW_LICENSE.actypecode
  is '签注机型';
comment on column T_INTF_FGW_LICENSE.endorsebegdate
  is '签注生效日期';
comment on column T_INTF_FGW_LICENSE.endorseenddate
  is '签注失效日期';
comment on column T_INTF_FGW_LICENSE.status
  is '状态';
comment on column T_INTF_FGW_LICENSE.remark1
  is '备注';
comment on column T_INTF_FGW_LICENSE.stdmonth1
  is '基准月1';
comment on column T_INTF_FGW_LICENSE.stdmonth2
  is '基准月2';
comment on column T_INTF_FGW_LICENSE.isnexttea
  is '是否下次模拟机教员';
comment on column T_INTF_FGW_LICENSE.isnextstu
  is '是否下次模拟机学员';
comment on column T_INTF_FGW_LICENSE.limitnum
  is '限飞场次';
comment on column T_INTF_FGW_LICENSE.isteacher
  is '是否教员';
comment on column T_INTF_FGW_LICENSE.teabegdate
  is '教员开始日期';
comment on column T_INTF_FGW_LICENSE.teaenddate
  is '教员结束日期';
comment on column T_INTF_FGW_LICENSE.trainingaddr
  is '复训地点';
comment on column T_INTF_FGW_LICENSE.lastmodifier1
  is '最后修改者';
comment on column T_INTF_FGW_LICENSE.lastmodifytime2
  is '最后修改时间';
comment on column T_INTF_FGW_LICENSE.oper
  is '操作人';
comment on column T_INTF_FGW_LICENSE.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_LICENSE.oper_host
  is '操作主机';
comment on column T_INTF_FGW_LICENSE.op_time
  is '操作时间';
comment on column T_INTF_FGW_LICENSE.idcode
  is '证件号';
comment on column T_INTF_FGW_LICENSE.lictype
  is '证件类型';
comment on column T_INTF_FGW_LICENSE.mainactype
  is '主飞机型';
comment on column T_INTF_FGW_LICENSE.validity
  is '有效性';
alter table T_INTF_FGW_LICENSE
  add constraint PK_FGW_ENDORSECATEID primary key (ENDORSECATEID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LICENSE_CK
prompt ====================================
prompt
create table T_INTF_FGW_LICENSE_CK
(
  pilotid         NUMBER(12) not null,
  icao            VARCHAR2(50),
  icaobegdate     DATE,
  icaoenddate     DATE,
  issuecountry    VARCHAR2(50),
  issuedept       VARCHAR2(50),
  issuemanager    VARCHAR2(50),
  issuerule       VARCHAR2(50),
  lastmodifier    VARCHAR2(50),
  lastmodifytime  DATE,
  licno           VARCHAR2(50),
  licvalidity     VARCHAR2(50),
  remark          VARCHAR2(500),
  supauth         VARCHAR2(50),
  supoffe         VARCHAR2(50),
  issuedate       DATE,
  validitybegdate DATE,
  validityenddate DATE,
  endorsecateid   NUMBER(12) not null,
  catecode        VARCHAR2(50),
  endorseactype   VARCHAR2(50),
  endorsebegdate  DATE,
  endorseenddate  DATE,
  status          VARCHAR2(50),
  remark1         VARCHAR2(500),
  stdmonth1       NUMBER(5),
  stdmonth2       NUMBER(5),
  isnexttea       VARCHAR2(50),
  isnextstu       VARCHAR2(50),
  limitnum        NUMBER(10),
  isteacher       VARCHAR2(50),
  teabegdate      DATE,
  teaenddate      DATE,
  training_addr   VARCHAR2(100),
  lastmodifier1   VARCHAR2(50),
  lastmodifytime2 VARCHAR2(20),
  oper            VARCHAR2(50),
  oper_ip         VARCHAR2(50),
  oper_host       VARCHAR2(50),
  op_time         DATE,
  idcode          NVARCHAR2(20),
  lictype         VARCHAR2(20),
  mainactype      VARCHAR2(20),
  validity        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LICENSE_DELTA
prompt =======================================
prompt
create table T_INTF_FGW_LICENSE_DELTA
(
  delta_id        NUMBER(12) not null,
  pilotid         NUMBER(12),
  icao            VARCHAR2(50),
  icaobegdate     DATE,
  icaoenddate     DATE,
  issuecountry    VARCHAR2(50),
  issuedept       VARCHAR2(50),
  issuemanager    VARCHAR2(50),
  issuerule       VARCHAR2(50),
  lastmodifier    VARCHAR2(50),
  lastmodifytime  DATE,
  licno           VARCHAR2(50),
  licvalidity     VARCHAR2(50),
  remark          VARCHAR2(500),
  supauth         VARCHAR2(50),
  supoffe         VARCHAR2(50),
  issuedate       DATE,
  validitybegdate DATE,
  validityenddate DATE,
  endorsecateid   NUMBER(12) not null,
  catecode        VARCHAR2(50),
  actypecode      VARCHAR2(50),
  endorsebegdate  DATE,
  endorseenddate  DATE,
  status          VARCHAR2(50),
  remark1         VARCHAR2(500),
  stdmonth1       NUMBER(5),
  stdmonth2       NUMBER(5),
  isnexttea       VARCHAR2(50),
  isnextstu       VARCHAR2(50),
  limitnum        NUMBER(10),
  isteacher       VARCHAR2(50),
  teabegdate      DATE,
  teaenddate      DATE,
  trainingaddr    VARCHAR2(100),
  lastmodifier1   VARCHAR2(50),
  lastmodifytime2 VARCHAR2(20),
  oper            VARCHAR2(50),
  oper_ip         VARCHAR2(50),
  oper_host       VARCHAR2(50),
  op_time         DATE,
  idcode          VARCHAR2(20),
  lictype         VARCHAR2(20),
  mainactype      VARCHAR2(20),
  validity        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_LICENSE_DELTA
  is '飞管网执照日志表';
comment on column T_INTF_FGW_LICENSE_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_LICENSE_DELTA.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_LICENSE_DELTA.icao
  is 'ICAO等级';
comment on column T_INTF_FGW_LICENSE_DELTA.icaobegdate
  is 'ICAO有效开始日';
comment on column T_INTF_FGW_LICENSE_DELTA.icaoenddate
  is 'ICAO有效截止日';
comment on column T_INTF_FGW_LICENSE_DELTA.issuecountry
  is '签发国家';
comment on column T_INTF_FGW_LICENSE_DELTA.issuedept
  is '签发单位';
comment on column T_INTF_FGW_LICENSE_DELTA.issuemanager
  is '签发人';
comment on column T_INTF_FGW_LICENSE_DELTA.issuerule
  is '签发依据';
comment on column T_INTF_FGW_LICENSE_DELTA.lastmodifier
  is '最后修改者';
comment on column T_INTF_FGW_LICENSE_DELTA.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_LICENSE_DELTA.licno
  is '执照号';
comment on column T_INTF_FGW_LICENSE_DELTA.licvalidity
  is '执照有效期';
comment on column T_INTF_FGW_LICENSE_DELTA.remark
  is '备注';
comment on column T_INTF_FGW_LICENSE_DELTA.supauth
  is '是否局方监察员';
comment on column T_INTF_FGW_LICENSE_DELTA.supoffe
  is '监察员所属管理局';
comment on column T_INTF_FGW_LICENSE_DELTA.issuedate
  is '签发日期';
comment on column T_INTF_FGW_LICENSE_DELTA.validitybegdate
  is '有效开始日期';
comment on column T_INTF_FGW_LICENSE_DELTA.validityenddate
  is '有效截止日期';
comment on column T_INTF_FGW_LICENSE_DELTA.endorsecateid
  is '流水号';
comment on column T_INTF_FGW_LICENSE_DELTA.catecode
  is '执照型别';
comment on column T_INTF_FGW_LICENSE_DELTA.actypecode
  is '签注机型';
comment on column T_INTF_FGW_LICENSE_DELTA.endorsebegdate
  is '签注生效日期';
comment on column T_INTF_FGW_LICENSE_DELTA.endorseenddate
  is '签注失效日期';
comment on column T_INTF_FGW_LICENSE_DELTA.status
  is '状态（历史，当前）';
comment on column T_INTF_FGW_LICENSE_DELTA.remark1
  is '备注';
comment on column T_INTF_FGW_LICENSE_DELTA.stdmonth1
  is '基准月1';
comment on column T_INTF_FGW_LICENSE_DELTA.stdmonth2
  is '基准月2';
comment on column T_INTF_FGW_LICENSE_DELTA.isnexttea
  is '是否下次模拟机教员';
comment on column T_INTF_FGW_LICENSE_DELTA.isnextstu
  is '是否下次模拟机学员';
comment on column T_INTF_FGW_LICENSE_DELTA.limitnum
  is '限飞场次';
comment on column T_INTF_FGW_LICENSE_DELTA.isteacher
  is '是否教员';
comment on column T_INTF_FGW_LICENSE_DELTA.teabegdate
  is '教员开始日期';
comment on column T_INTF_FGW_LICENSE_DELTA.teaenddate
  is '教员结束日期';
comment on column T_INTF_FGW_LICENSE_DELTA.trainingaddr
  is '复训地点';
comment on column T_INTF_FGW_LICENSE_DELTA.lastmodifier1
  is '最后修改者';
comment on column T_INTF_FGW_LICENSE_DELTA.lastmodifytime2
  is '最后修改时间';
comment on column T_INTF_FGW_LICENSE_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_LICENSE_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_LICENSE_DELTA.oper_host
  is '操作主机';
comment on column T_INTF_FGW_LICENSE_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_LICENSE_DELTA.idcode
  is '证件号码';
comment on column T_INTF_FGW_LICENSE_DELTA.lictype
  is '执照类别';
comment on column T_INTF_FGW_LICENSE_DELTA.mainactype
  is '主飞机型';
comment on column T_INTF_FGW_LICENSE_DELTA.validity
  is '有效性';
alter table T_INTF_FGW_LICENSE_DELTA
  add constraint PK_FGW_LICENSE_ID primary key (DELTA_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE
prompt ==============================
prompt
create table T_INTF_FGW_LINE
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1) default 'N',
  crew_link_line    VARCHAR2(120),
  flight_com        VARCHAR2(1000),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(200),
  flight_date       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_LINE
  is '飞管网航线检查中间表';
comment on column T_INTF_FGW_LINE.phaseinsp_id
  is '流水号';
comment on column T_INTF_FGW_LINE.pilot_id
  is '被检查人pilotid';
comment on column T_INTF_FGW_LINE.pilot_cname
  is '被检查人姓名';
comment on column T_INTF_FGW_LINE.pilot_pcode
  is '被检查人p_code';
comment on column T_INTF_FGW_LINE.inspector_id
  is '检查员pilotid';
comment on column T_INTF_FGW_LINE.inspector_cname
  is '检查员姓名';
comment on column T_INTF_FGW_LINE.inspector_pcode
  is '检查员p_code';
comment on column T_INTF_FGW_LINE.trichkid
  is '检查类型(编码)';
comment on column T_INTF_FGW_LINE.actypecode
  is '检查机型(转换)';
comment on column T_INTF_FGW_LINE.reqbegdate
  is '开始日期';
comment on column T_INTF_FGW_LINE.reqenddate
  is '结束日期';
comment on column T_INTF_FGW_LINE.oper
  is '操作人';
comment on column T_INTF_FGW_LINE.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_LINE.oper_host
  is '主机名';
comment on column T_INTF_FGW_LINE.op_time
  is '操作时间';
comment on column T_INTF_FGW_LINE.check_yn
  is '是否安排';
comment on column T_INTF_FGW_LINE.crew_link_line
  is '第一个联班LINE';
comment on column T_INTF_FGW_LINE.flight_com
  is '航程';
comment on column T_INTF_FGW_LINE.last_modify_time
  is 'FRS修改时间';
comment on column T_INTF_FGW_LINE.portcode3
  is '关联机场';
comment on column T_INTF_FGW_LINE.routecode
  is '关联航线';
comment on column T_INTF_FGW_LINE.insp_pcode_frms
  is 'FRMS检查员Pcode';
comment on column T_INTF_FGW_LINE.insp_cname_frms
  is 'FRMS检查员姓名';
comment on column T_INTF_FGW_LINE.insp_pilotid_frms
  is 'FRMS检查员pilotid';
comment on column T_INTF_FGW_LINE.stage
  is '授权阶段';
comment on column T_INTF_FGW_LINE.validity
  is 'FRMS有效性';
comment on column T_INTF_FGW_LINE.routecode_frms
  is 'FRMS推送关联航线';
comment on column T_INTF_FGW_LINE.portcode3_frms
  is 'FRMS推送关联机场';
comment on column T_INTF_FGW_LINE.inspdesc
  is '检查备注';
comment on column T_INTF_FGW_LINE.flight_date
  is '所有被安排任务的最大航班日期';
alter table T_INTF_FGW_LINE
  add constraint PK_T_INTF_FGW_LINE primary key (PHASEINSP_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20140105
prompt ======================================
prompt
create table T_INTF_FGW_LINE20140105
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20140106
prompt ======================================
prompt
create table T_INTF_FGW_LINE20140106
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20141211
prompt ======================================
prompt
create table T_INTF_FGW_LINE20141211
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150108
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150108
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150109
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150109
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150114
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150114
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150305
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150305
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    NUMBER(11),
  flight_com        VARCHAR2(100),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150319
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150319
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    VARCHAR2(120),
  flight_com        VARCHAR2(1000),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(100),
  flight_date       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150414
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150414
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    VARCHAR2(120),
  flight_com        VARCHAR2(1000),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(100),
  flight_date       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE20150513
prompt ======================================
prompt
create table T_INTF_FGW_LINE20150513
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    VARCHAR2(120),
  flight_com        VARCHAR2(1000),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(100),
  flight_date       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE_20150731
prompt =======================================
prompt
create table T_INTF_FGW_LINE_20150731
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    VARCHAR2(120),
  flight_com        VARCHAR2(1000),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(100),
  flight_date       DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE_3
prompt ================================
prompt
create table T_INTF_FGW_LINE_3
(
  phaseinsp_id      NUMBER(15) not null,
  pilot_id          VARCHAR2(50),
  pilot_cname       VARCHAR2(60),
  pilot_pcode       VARCHAR2(50) not null,
  inspector_id      VARCHAR2(50),
  inspector_cname   VARCHAR2(60),
  inspector_pcode   VARCHAR2(50),
  trichkid          VARCHAR2(50) not null,
  actypecode        VARCHAR2(50),
  reqbegdate        DATE,
  reqenddate        DATE,
  oper              VARCHAR2(50),
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  op_time           DATE,
  check_yn          VARCHAR2(1),
  crew_link_line    VARCHAR2(120),
  flight_com        VARCHAR2(1000),
  last_modify_time  DATE,
  portcode3         VARCHAR2(20),
  routecode         VARCHAR2(20),
  insp_pcode_frms   VARCHAR2(10),
  insp_cname_frms   VARCHAR2(30),
  insp_pilotid_frms VARCHAR2(20),
  stage             VARCHAR2(10),
  validity          VARCHAR2(10),
  routecode_frms    VARCHAR2(20),
  portcode3_frms    VARCHAR2(20),
  inspdesc          VARCHAR2(100),
  flight_date       DATE,
  a                 DATE,
  b                 DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_LINE_DELTA
prompt ====================================
prompt
create table T_INTF_FGW_LINE_DELTA
(
  delta_id         NUMBER(12) not null,
  phaseinsp_id     NUMBER(10) not null,
  pilot_id         NUMBER(10),
  pilot_licno      VARCHAR2(50),
  inspector_id     VARCHAR2(50),
  inspector_licno  VARCHAR2(50),
  trichkid         VARCHAR2(50),
  actypecode       VARCHAR2(50),
  reqbegdate       DATE,
  reqenddate       DATE,
  oper             VARCHAR2(50),
  oper_ip          VARCHAR2(50),
  oper_host        VARCHAR2(50),
  op_time          DATE,
  check_yn         VARCHAR2(1) default 'N',
  crew_link_line   NUMBER(11),
  last_modify_time DATE,
  portcode3        VARCHAR2(20),
  routecode        VARCHAR2(20),
  tarsubtechauthid VARCHAR2(10),
  validity         VARCHAR2(10),
  inspdesc         VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_LINE_DELTA
  is '飞管网航线检查日志表';
comment on column T_INTF_FGW_LINE_DELTA.delta_id
  is '增量标识';
comment on column T_INTF_FGW_LINE_DELTA.phaseinsp_id
  is '流水号';
comment on column T_INTF_FGW_LINE_DELTA.pilot_id
  is 'FGW被检查人ID';
comment on column T_INTF_FGW_LINE_DELTA.pilot_licno
  is '被检查人身份证号';
comment on column T_INTF_FGW_LINE_DELTA.inspector_id
  is 'FGW检查员ID';
comment on column T_INTF_FGW_LINE_DELTA.inspector_licno
  is '检查员身份证号';
comment on column T_INTF_FGW_LINE_DELTA.trichkid
  is '检查类型(编码)';
comment on column T_INTF_FGW_LINE_DELTA.actypecode
  is '检查机型(转换)';
comment on column T_INTF_FGW_LINE_DELTA.reqbegdate
  is '开始日期';
comment on column T_INTF_FGW_LINE_DELTA.reqenddate
  is '结束日期';
comment on column T_INTF_FGW_LINE_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_LINE_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_LINE_DELTA.oper_host
  is '主机名';
comment on column T_INTF_FGW_LINE_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_LINE_DELTA.check_yn
  is '是否安排';
comment on column T_INTF_FGW_LINE_DELTA.crew_link_line
  is '第一个联班LINE';
comment on column T_INTF_FGW_LINE_DELTA.last_modify_time
  is 'FRS更新时间';
comment on column T_INTF_FGW_LINE_DELTA.portcode3
  is '关联机场';
comment on column T_INTF_FGW_LINE_DELTA.routecode
  is '关联航线';
comment on column T_INTF_FGW_LINE_DELTA.tarsubtechauthid
  is '授权阶段';
comment on column T_INTF_FGW_LINE_DELTA.validity
  is 'FRMS有效性';
comment on column T_INTF_FGW_LINE_DELTA.inspdesc
  is '检查备注';

prompt
prompt Creating table T_INTF_FGW_LINE_TEMP
prompt ===================================
prompt
create table T_INTF_FGW_LINE_TEMP
(
  phaseinsp_id     NUMBER(10) not null,
  pilot_id         VARCHAR2(50),
  pilot_cname      VARCHAR2(60),
  pilot_pcode      VARCHAR2(50) not null,
  inspector_id     VARCHAR2(50),
  inspector_cname  VARCHAR2(60),
  inspector_pcode  VARCHAR2(50),
  trichkid         VARCHAR2(50) not null,
  actypecode       VARCHAR2(50),
  reqbegdate       DATE,
  reqenddate       DATE,
  oper             VARCHAR2(50),
  oper_ip          VARCHAR2(50),
  oper_host        VARCHAR2(50),
  op_time          DATE,
  check_yn         VARCHAR2(1),
  crew_link_line   NUMBER(11),
  flight_com       VARCHAR2(100),
  last_modify_time DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_PARAMS
prompt ================================
prompt
create table T_INTF_FGW_PARAMS
(
  param_code      VARCHAR2(30),
  param_value     VARCHAR2(30),
  param_desc      VARCHAR2(50),
  param_frequence NUMBER,
  remarks         VARCHAR2(50),
  oper            VARCHAR2(15),
  op_time         DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_INTF_FGW_PARAMS.param_code
  is '参数名称';
comment on column T_INTF_FGW_PARAMS.param_value
  is '参数值';
comment on column T_INTF_FGW_PARAMS.param_desc
  is '参数描述';
comment on column T_INTF_FGW_PARAMS.param_frequence
  is '参数频率';
comment on column T_INTF_FGW_PARAMS.remarks
  is '备注';
comment on column T_INTF_FGW_PARAMS.oper
  is '操作人';
comment on column T_INTF_FGW_PARAMS.op_time
  is '操作时间';

prompt
prompt Creating table T_INTF_FGW_PASSPORT
prompt ==================================
prompt
create table T_INTF_FGW_PASSPORT
(
  passportid     NUMBER(12) not null,
  pilotid        NUMBER(12) not null,
  idcode         VARCHAR2(50),
  passporttype   VARCHAR2(50),
  passportno     VARCHAR2(50),
  passportstatus VARCHAR2(50),
  grantdate      DATE,
  usedate        DATE,
  validdate      DATE,
  grantplace     VARCHAR2(50),
  remark         VARCHAR2(500),
  lastmodifier   VARCHAR2(50),
  lastmodifytime DATE,
  op_time        DATE,
  enaddr         VARCHAR2(100),
  enbornin       VARCHAR2(20),
  chbornin       VARCHAR2(20),
  oper           VARCHAR2(20),
  oper_ip        VARCHAR2(20),
  oper_host      VARCHAR2(20),
  validity       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 4M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_PASSPORT
  is '飞管网护照中间表';
comment on column T_INTF_FGW_PASSPORT.passportid
  is '护照ID';
comment on column T_INTF_FGW_PASSPORT.pilotid
  is '人员ID';
comment on column T_INTF_FGW_PASSPORT.idcode
  is '证件号码';
comment on column T_INTF_FGW_PASSPORT.passporttype
  is '护照类型';
comment on column T_INTF_FGW_PASSPORT.passportno
  is '护照号码';
comment on column T_INTF_FGW_PASSPORT.passportstatus
  is '护照状态';
comment on column T_INTF_FGW_PASSPORT.grantdate
  is '签发日期';
comment on column T_INTF_FGW_PASSPORT.usedate
  is '启用日期';
comment on column T_INTF_FGW_PASSPORT.validdate
  is '到期日期';
comment on column T_INTF_FGW_PASSPORT.grantplace
  is '签发地';
comment on column T_INTF_FGW_PASSPORT.remark
  is '备注';
comment on column T_INTF_FGW_PASSPORT.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_PASSPORT.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_PASSPORT.op_time
  is '操作时间';
comment on column T_INTF_FGW_PASSPORT.enaddr
  is '英文地址';
comment on column T_INTF_FGW_PASSPORT.enbornin
  is '英文出生地';
comment on column T_INTF_FGW_PASSPORT.chbornin
  is '中文出生地';
comment on column T_INTF_FGW_PASSPORT.oper
  is '操作人';
comment on column T_INTF_FGW_PASSPORT.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_PASSPORT.oper_host
  is '操作主机';
comment on column T_INTF_FGW_PASSPORT.validity
  is '有效性';
alter table T_INTF_FGW_PASSPORT
  add constraint PK_FGW_PASSPORTID primary key (PASSPORTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_PASSPORT20150115
prompt ==========================================
prompt
create table T_INTF_FGW_PASSPORT20150115
(
  pass_id     VARCHAR2(50),
  pilotid     VARCHAR2(10),
  valid_flag  VARCHAR2(10),
  create_time DATE,
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_PASSPORT_DELTA
prompt ========================================
prompt
create table T_INTF_FGW_PASSPORT_DELTA
(
  delta_id       NUMBER(12) not null,
  passportid     NUMBER(12) not null,
  pilotid        NUMBER(12),
  idcode         VARCHAR2(50),
  passporttype   VARCHAR2(50),
  passportno     VARCHAR2(50),
  passportstatus VARCHAR2(50),
  grantdate      DATE,
  usedate        DATE,
  validdate      DATE,
  grantplace     VARCHAR2(50),
  remark         VARCHAR2(500),
  lastmodifier   VARCHAR2(50),
  lastmodifytime DATE,
  op_time        DATE,
  enaddr         VARCHAR2(100),
  enbornin       VARCHAR2(20),
  chbornin       VARCHAR2(20),
  oper           VARCHAR2(20),
  oper_ip        VARCHAR2(20),
  oper_host      VARCHAR2(20),
  validity       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_PASSPORT_DELTA
  is '飞管网护照日志表';
comment on column T_INTF_FGW_PASSPORT_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_PASSPORT_DELTA.passportid
  is '护照ID';
comment on column T_INTF_FGW_PASSPORT_DELTA.pilotid
  is '人员ID';
comment on column T_INTF_FGW_PASSPORT_DELTA.idcode
  is '证件号码';
comment on column T_INTF_FGW_PASSPORT_DELTA.passporttype
  is '护照类型';
comment on column T_INTF_FGW_PASSPORT_DELTA.passportno
  is '护照号码';
comment on column T_INTF_FGW_PASSPORT_DELTA.passportstatus
  is '护照状态';
comment on column T_INTF_FGW_PASSPORT_DELTA.grantdate
  is '签发日期';
comment on column T_INTF_FGW_PASSPORT_DELTA.usedate
  is '启用日期';
comment on column T_INTF_FGW_PASSPORT_DELTA.validdate
  is '到期日期';
comment on column T_INTF_FGW_PASSPORT_DELTA.grantplace
  is '签发地';
comment on column T_INTF_FGW_PASSPORT_DELTA.remark
  is '备注';
comment on column T_INTF_FGW_PASSPORT_DELTA.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_PASSPORT_DELTA.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_PASSPORT_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_PASSPORT_DELTA.enaddr
  is '英文地址';
comment on column T_INTF_FGW_PASSPORT_DELTA.enbornin
  is '英文出生地';
comment on column T_INTF_FGW_PASSPORT_DELTA.chbornin
  is '中文出生地';
comment on column T_INTF_FGW_PASSPORT_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_PASSPORT_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_PASSPORT_DELTA.oper_host
  is '操作主机';
comment on column T_INTF_FGW_PASSPORT_DELTA.validity
  is '有效性';
alter table T_INTF_FGW_PASSPORT_DELTA
  add constraint PK_FGW_PASSPORT_DELTA_ID primary key (DELTA_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_PASSREPORT
prompt ====================================
prompt
create table T_INTF_FGW_PASSREPORT
(
  passportreportid VARCHAR2(20) not null,
  passporttype     VARCHAR2(10),
  passportid       VARCHAR2(20),
  pilotid          VARCHAR2(20),
  countrycode      VARCHAR2(20),
  validflag        VARCHAR2(20),
  remarks          VARCHAR2(200),
  creator          VARCHAR2(20),
  createtime       VARCHAR2(30),
  lastmodifier     VARCHAR2(30),
  lastmodifytime   DATE not null,
  ipaddress        VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_PASSREPORT
  is '飞管网护照报备中间表';
comment on column T_INTF_FGW_PASSREPORT.passportreportid
  is '护照报备ID';
comment on column T_INTF_FGW_PASSREPORT.passporttype
  is '证件类型';
comment on column T_INTF_FGW_PASSREPORT.passportid
  is '护照ID';
comment on column T_INTF_FGW_PASSREPORT.pilotid
  is '人员ID';
comment on column T_INTF_FGW_PASSREPORT.countrycode
  is '国家代码';
comment on column T_INTF_FGW_PASSREPORT.validflag
  is '有效性';
comment on column T_INTF_FGW_PASSREPORT.remarks
  is '备注';
comment on column T_INTF_FGW_PASSREPORT.creator
  is '创建人';
comment on column T_INTF_FGW_PASSREPORT.createtime
  is '创建时间';
comment on column T_INTF_FGW_PASSREPORT.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_PASSREPORT.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_PASSREPORT.ipaddress
  is 'IP';
comment on column T_INTF_FGW_PASSREPORT.oper
  is '操作人';
comment on column T_INTF_FGW_PASSREPORT.op_time
  is '操作时间';
comment on column T_INTF_FGW_PASSREPORT.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_PASSREPORT.oper_host
  is '操作主机';
alter table T_INTF_FGW_PASSREPORT
  add constraint PK_PASSPORTREPORTID primary key (PASSPORTREPORTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_PASSREPORT_DELTA
prompt ==========================================
prompt
create table T_INTF_FGW_PASSREPORT_DELTA
(
  delta_id         NUMBER(12),
  passportreportid VARCHAR2(20),
  passporttype     VARCHAR2(10),
  passportid       VARCHAR2(20),
  pilotid          VARCHAR2(20),
  countrycode      VARCHAR2(20),
  validflag        VARCHAR2(20),
  remarks          VARCHAR2(200),
  creator          VARCHAR2(20),
  createtime       VARCHAR2(30),
  lastmodifier     VARCHAR2(30),
  lastmodifytime   DATE not null,
  ipaddress        VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_PASSREPORT_DELTA
  is '飞管网护照报备日志表';
comment on column T_INTF_FGW_PASSREPORT_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_PASSREPORT_DELTA.passportreportid
  is '护照报备ID';
comment on column T_INTF_FGW_PASSREPORT_DELTA.passporttype
  is '证件类型';
comment on column T_INTF_FGW_PASSREPORT_DELTA.passportid
  is '护照ID';
comment on column T_INTF_FGW_PASSREPORT_DELTA.pilotid
  is '人员ID';
comment on column T_INTF_FGW_PASSREPORT_DELTA.countrycode
  is '国家代码';
comment on column T_INTF_FGW_PASSREPORT_DELTA.validflag
  is '有效性';
comment on column T_INTF_FGW_PASSREPORT_DELTA.remarks
  is '备注';
comment on column T_INTF_FGW_PASSREPORT_DELTA.creator
  is '创建人';
comment on column T_INTF_FGW_PASSREPORT_DELTA.createtime
  is '创建时间';
comment on column T_INTF_FGW_PASSREPORT_DELTA.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_PASSREPORT_DELTA.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_PASSREPORT_DELTA.ipaddress
  is 'IP';
comment on column T_INTF_FGW_PASSREPORT_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_PASSREPORT_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_PASSREPORT_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_PASSREPORT_DELTA.oper_host
  is '操作主机';

prompt
prompt Creating table T_INTF_FGW_QLF
prompt =============================
prompt
create table T_INTF_FGW_QLF
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10),
  portcode3list  VARCHAR2(300)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_QLF
  is '飞管网运行资质中间表';
comment on column T_INTF_FGW_QLF.crewopauthid
  is '技术授权ID';
comment on column T_INTF_FGW_QLF.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_QLF.idcode
  is '身份证号码';
comment on column T_INTF_FGW_QLF.opauthid
  is '运行资质ID';
comment on column T_INTF_FGW_QLF.opauthcode
  is '资质代码';
comment on column T_INTF_FGW_QLF.opauthvalue
  is '资质内容';
comment on column T_INTF_FGW_QLF.crewtechauthid
  is '关联技术聘任ID';
comment on column T_INTF_FGW_QLF.actypecode
  is '关联机型';
comment on column T_INTF_FGW_QLF.portcode3
  is '关联机场';
comment on column T_INTF_FGW_QLF.routecode
  is '关联航线';
comment on column T_INTF_FGW_QLF.acqdate
  is '获取日期';
comment on column T_INTF_FGW_QLF.validbegdate
  is '有效开始日';
comment on column T_INTF_FGW_QLF.validenddate
  is '有效截止日';
comment on column T_INTF_FGW_QLF.status
  is '状态';
comment on column T_INTF_FGW_QLF.lastmodifier
  is '最后修改者';
comment on column T_INTF_FGW_QLF.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_QLF.oper
  is '操作人';
comment on column T_INTF_FGW_QLF.op_time
  is '操作时间';
comment on column T_INTF_FGW_QLF.op_ip
  is '操作IP';
comment on column T_INTF_FGW_QLF.op_host
  is '操作主机';
comment on column T_INTF_FGW_QLF.ischief
  is '是否带飞资质';
comment on column T_INTF_FGW_QLF.chiefgrade
  is '带飞等级';
comment on column T_INTF_FGW_QLF.allowpost
  is '放飞岗位';
comment on column T_INTF_FGW_QLF.portcode3list
  is '二类机场集';
alter table T_INTF_FGW_QLF
  add constraint PK_T_INTF_FGW_QLF primary key (CREWOPAUTHID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF20141118
prompt =====================================
prompt
create table T_INTF_FGW_QLF20141118
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF20141119
prompt =====================================
prompt
create table T_INTF_FGW_QLF20141119
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF20141120
prompt =====================================
prompt
create table T_INTF_FGW_QLF20141120
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10),
  create_time    DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF20170605
prompt =====================================
prompt
create table T_INTF_FGW_QLF20170605
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF_CK
prompt ================================
prompt
create table T_INTF_FGW_QLF_CK
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF_CK_NEW
prompt ====================================
prompt
create table T_INTF_FGW_QLF_CK_NEW
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_QLF_DELTA
prompt ===================================
prompt
create table T_INTF_FGW_QLF_DELTA
(
  delta_id       NVARCHAR2(50) not null,
  crewopauthid   NVARCHAR2(50),
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10),
  portcode3list  VARCHAR2(300)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_QLF_DELTA
  is '飞管网运行资质日志表';
comment on column T_INTF_FGW_QLF_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_QLF_DELTA.crewopauthid
  is '技术授权id';
comment on column T_INTF_FGW_QLF_DELTA.pilotid
  is '飞行员id';
comment on column T_INTF_FGW_QLF_DELTA.idcode
  is '身份证号码';
comment on column T_INTF_FGW_QLF_DELTA.opauthid
  is '运行资质id';
comment on column T_INTF_FGW_QLF_DELTA.opauthcode
  is '资质代码';
comment on column T_INTF_FGW_QLF_DELTA.opauthvalue
  is '资质内容';
comment on column T_INTF_FGW_QLF_DELTA.crewtechauthid
  is '关联技术聘任id';
comment on column T_INTF_FGW_QLF_DELTA.actypecode
  is '关联机型';
comment on column T_INTF_FGW_QLF_DELTA.portcode3
  is '关联机场';
comment on column T_INTF_FGW_QLF_DELTA.routecode
  is '关联航线';
comment on column T_INTF_FGW_QLF_DELTA.acqdate
  is '获取日期';
comment on column T_INTF_FGW_QLF_DELTA.validbegdate
  is '有效开始日';
comment on column T_INTF_FGW_QLF_DELTA.validenddate
  is '有效截止日';
comment on column T_INTF_FGW_QLF_DELTA.status
  is '状态';
comment on column T_INTF_FGW_QLF_DELTA.lastmodifier
  is '最后修改者';
comment on column T_INTF_FGW_QLF_DELTA.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_QLF_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_QLF_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_QLF_DELTA.op_ip
  is '操作IP';
comment on column T_INTF_FGW_QLF_DELTA.op_host
  is '操作主机';
comment on column T_INTF_FGW_QLF_DELTA.ischief
  is '是否带飞资质';
comment on column T_INTF_FGW_QLF_DELTA.chiefgrade
  is '带飞等级';
comment on column T_INTF_FGW_QLF_DELTA.allowpost
  is '放飞岗位';
comment on column T_INTF_FGW_QLF_DELTA.portcode3list
  is '二类机场集';

prompt
prompt Creating table T_INTF_FGW_QLF_RNP
prompt =================================
prompt
create table T_INTF_FGW_QLF_RNP
(
  crewopauthid   NVARCHAR2(50) not null,
  pilotid        NVARCHAR2(50),
  idcode         NVARCHAR2(50),
  opauthid       NVARCHAR2(50),
  opauthcode     NVARCHAR2(50),
  opauthvalue    NVARCHAR2(50),
  crewtechauthid NVARCHAR2(50),
  actypecode     NVARCHAR2(50),
  portcode3      NVARCHAR2(50),
  routecode      NVARCHAR2(50),
  acqdate        DATE,
  validbegdate   DATE,
  validenddate   DATE,
  status         NVARCHAR2(50),
  lastmodifier   NVARCHAR2(50),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  op_time        DATE,
  op_ip          VARCHAR2(50),
  op_host        VARCHAR2(50),
  ischief        VARCHAR2(10),
  chiefgrade     VARCHAR2(10),
  allowpost      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_TECH
prompt ==============================
prompt
create table T_INTF_FGW_TECH
(
  crewtechauthid   NVARCHAR2(50),
  pilotid          NVARCHAR2(50),
  idcode           NVARCHAR2(50),
  techauthid       NVARCHAR2(50),
  subtechauthid    NVARCHAR2(50),
  actypecode       NVARCHAR2(50),
  validbegdate     DATE,
  validenddate     DATE,
  compinspauthid   NVARCHAR2(50),
  compinspbegdate  DATE,
  compinspenddate  DATE,
  radioauthid      NVARCHAR2(50),
  radiobegdate     DATE,
  radioenddate     DATE,
  status           NVARCHAR2(10),
  remark           NVARCHAR2(50),
  isseniorteacher  NVARCHAR2(50),
  lastmodifier     NVARCHAR2(50),
  lastmodifytime   DATE,
  skillinspauthid  NVARCHAR2(50),
  skillinspbegdate DATE,
  skillinspenddate DATE,
  offeinspauthid   NVARCHAR2(50),
  offeinspbegdate  DATE,
  offeinspenddate  DATE,
  assiauthid       VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  assiauthdate     DATE,
  techauthstatus   VARCHAR2(20),
  mixactypes       VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_TECH
  is '飞管网技术授权中间表';
comment on column T_INTF_FGW_TECH.crewtechauthid
  is '流水号';
comment on column T_INTF_FGW_TECH.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_TECH.idcode
  is '身份证号码';
comment on column T_INTF_FGW_TECH.techauthid
  is '技术聘任授权ID';
comment on column T_INTF_FGW_TECH.subtechauthid
  is '细分授权ID';
comment on column T_INTF_FGW_TECH.actypecode
  is '授权机型';
comment on column T_INTF_FGW_TECH.validbegdate
  is '有效开始日';
comment on column T_INTF_FGW_TECH.validenddate
  is '有效截止日';
comment on column T_INTF_FGW_TECH.compinspauthid
  is '公司检查授权ID';
comment on column T_INTF_FGW_TECH.compinspbegdate
  is '公司检查员有效开始日';
comment on column T_INTF_FGW_TECH.compinspenddate
  is '公司检查员有效截止日';
comment on column T_INTF_FGW_TECH.radioauthid
  is '报务通讯授权ID';
comment on column T_INTF_FGW_TECH.radiobegdate
  is '报务通讯授权有效开始日';
comment on column T_INTF_FGW_TECH.radioenddate
  is '报务通讯授权有效截止日';
comment on column T_INTF_FGW_TECH.status
  is '技术聘任授权状态';
comment on column T_INTF_FGW_TECH.remark
  is '备注';
comment on column T_INTF_FGW_TECH.isseniorteacher
  is '是否高级教员';
comment on column T_INTF_FGW_TECH.lastmodifier
  is '最后修改者';
comment on column T_INTF_FGW_TECH.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_TECH.skillinspauthid
  is '熟练检查授权ID';
comment on column T_INTF_FGW_TECH.skillinspbegdate
  is '熟练检查员有效开始日';
comment on column T_INTF_FGW_TECH.skillinspenddate
  is '熟练检查员有效截止日';
comment on column T_INTF_FGW_TECH.offeinspauthid
  is '局方委任代表检查授权ID';
comment on column T_INTF_FGW_TECH.offeinspbegdate
  is '局方委任代表检查员有效开始日';
comment on column T_INTF_FGW_TECH.offeinspenddate
  is '局方委任代表检查员有效截止日';
comment on column T_INTF_FGW_TECH.assiauthid
  is '技术授权ID';
comment on column T_INTF_FGW_TECH.oper
  is '操作人';
comment on column T_INTF_FGW_TECH.op_time
  is '操作时间';
comment on column T_INTF_FGW_TECH.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_TECH.oper_host
  is '操作主机';
comment on column T_INTF_FGW_TECH.assiauthdate
  is '排班授权日期';
comment on column T_INTF_FGW_TECH.techauthstatus
  is '有效性';
comment on column T_INTF_FGW_TECH.mixactypes
  is '小机型';

prompt
prompt Creating table T_INTF_FGW_TECH20141121
prompt ======================================
prompt
create table T_INTF_FGW_TECH20141121
(
  crewtechauthid   NVARCHAR2(50),
  pilotid          NVARCHAR2(50),
  idcode           NVARCHAR2(50),
  techauthid       NVARCHAR2(50),
  subtechauthid    NVARCHAR2(50),
  actypecode       NVARCHAR2(50),
  validbegdate     DATE,
  validenddate     DATE,
  compinspauthid   NVARCHAR2(50),
  compinspbegdate  DATE,
  compinspenddate  DATE,
  radioauthid      NVARCHAR2(50),
  radiobegdate     DATE,
  radioenddate     DATE,
  status           NVARCHAR2(10),
  remark           NVARCHAR2(50),
  isseniorteacher  NVARCHAR2(50),
  lastmodifier     NVARCHAR2(50),
  lastmodifytime   DATE,
  skillinspauthid  NVARCHAR2(50),
  skillinspbegdate DATE,
  skillinspenddate DATE,
  offeinspauthid   NVARCHAR2(50),
  offeinspbegdate  DATE,
  offeinspenddate  DATE,
  assiauthid       VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  assiauthdate     DATE,
  techauthstatus   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_TECH20170519
prompt ======================================
prompt
create table T_INTF_FGW_TECH20170519
(
  crewtechauthid   NVARCHAR2(50),
  pilotid          NVARCHAR2(50),
  idcode           NVARCHAR2(50),
  techauthid       NVARCHAR2(50),
  subtechauthid    NVARCHAR2(50),
  actypecode       NVARCHAR2(50),
  validbegdate     DATE,
  validenddate     DATE,
  compinspauthid   NVARCHAR2(50),
  compinspbegdate  DATE,
  compinspenddate  DATE,
  radioauthid      NVARCHAR2(50),
  radiobegdate     DATE,
  radioenddate     DATE,
  status           NVARCHAR2(10),
  remark           NVARCHAR2(50),
  isseniorteacher  NVARCHAR2(50),
  lastmodifier     NVARCHAR2(50),
  lastmodifytime   DATE,
  skillinspauthid  NVARCHAR2(50),
  skillinspbegdate DATE,
  skillinspenddate DATE,
  offeinspauthid   NVARCHAR2(50),
  offeinspbegdate  DATE,
  offeinspenddate  DATE,
  assiauthid       VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  assiauthdate     DATE,
  techauthstatus   VARCHAR2(20),
  mixactypes       VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_TECH_CK
prompt =================================
prompt
create table T_INTF_FGW_TECH_CK
(
  crewtechauthid   NVARCHAR2(50),
  pilotid          NVARCHAR2(50),
  idcode           NVARCHAR2(50),
  techauthid       NVARCHAR2(50),
  subtechauthid    NVARCHAR2(50),
  actypecode       NVARCHAR2(50),
  validbegdate     DATE,
  validenddate     DATE,
  compinspauthid   NVARCHAR2(50),
  compinspbegdate  DATE,
  compinspenddate  DATE,
  radioauthid      NVARCHAR2(50),
  radiobegdate     DATE,
  radioenddate     DATE,
  status           NVARCHAR2(10),
  remark           NVARCHAR2(50),
  isseniorteacher  NVARCHAR2(50),
  lastmodifier     NVARCHAR2(50),
  lastmodifytime   DATE,
  skillinspauthid  NVARCHAR2(50),
  skillinspbegdate DATE,
  skillinspenddate DATE,
  offeinspauthid   NVARCHAR2(50),
  offeinspbegdate  DATE,
  offeinspenddate  DATE,
  assiauthid       VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  assiauthdate     DATE,
  techauthstatus   VARCHAR2(20),
  mixactypes       VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_TECH_DELTA
prompt ====================================
prompt
create table T_INTF_FGW_TECH_DELTA
(
  delta_id         NVARCHAR2(50),
  crewtechauthid   NVARCHAR2(50),
  pilotid          NVARCHAR2(50),
  idcode           NVARCHAR2(50),
  techauthid       NVARCHAR2(50),
  subtechauthid    NVARCHAR2(50),
  actypecode       NVARCHAR2(50),
  validbegdate     DATE,
  validenddate     DATE,
  compinspauthid   NVARCHAR2(50),
  compinspbegdate  DATE,
  compinspenddate  DATE,
  radioauthid      NVARCHAR2(50),
  radiobegdate     DATE,
  radioenddate     DATE,
  status           NVARCHAR2(10),
  remark           NVARCHAR2(50),
  isseniorteacher  NVARCHAR2(50),
  lastmodifier     NVARCHAR2(50),
  lastmodifytime   DATE,
  skillinspauthid  NVARCHAR2(50),
  skillinspbegdate DATE,
  skillinspenddate DATE,
  offeinspauthid   NVARCHAR2(50),
  offeinspbegdate  DATE,
  offeinspenddate  DATE,
  assiauthid       VARCHAR2(20),
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  assiauthdate     DATE,
  techauthstatus   VARCHAR2(20),
  mixactypes       VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_TECH_DELTA
  is '飞管网技术授权日志表';
comment on column T_INTF_FGW_TECH_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_TECH_DELTA.crewtechauthid
  is '流水号';
comment on column T_INTF_FGW_TECH_DELTA.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_TECH_DELTA.idcode
  is '身份证号码';
comment on column T_INTF_FGW_TECH_DELTA.techauthid
  is '技术聘任授权ID';
comment on column T_INTF_FGW_TECH_DELTA.subtechauthid
  is '细分授权ID';
comment on column T_INTF_FGW_TECH_DELTA.actypecode
  is '授权机型';
comment on column T_INTF_FGW_TECH_DELTA.validbegdate
  is '有效开始日';
comment on column T_INTF_FGW_TECH_DELTA.validenddate
  is '有效截止日';
comment on column T_INTF_FGW_TECH_DELTA.compinspauthid
  is '公司检查授权ID';
comment on column T_INTF_FGW_TECH_DELTA.compinspbegdate
  is '公司检查员有效开始日';
comment on column T_INTF_FGW_TECH_DELTA.compinspenddate
  is '公司检查员有效截止日';
comment on column T_INTF_FGW_TECH_DELTA.radioauthid
  is '报务通讯授权ID';
comment on column T_INTF_FGW_TECH_DELTA.radiobegdate
  is '报务通讯授权有效开始日';
comment on column T_INTF_FGW_TECH_DELTA.radioenddate
  is '报务通讯授权有效截止日';
comment on column T_INTF_FGW_TECH_DELTA.status
  is '技术聘任授权状态';
comment on column T_INTF_FGW_TECH_DELTA.remark
  is '备注';
comment on column T_INTF_FGW_TECH_DELTA.isseniorteacher
  is '是否高级教员';
comment on column T_INTF_FGW_TECH_DELTA.lastmodifier
  is '最后修改者';
comment on column T_INTF_FGW_TECH_DELTA.lastmodifytime
  is '最后修改时间';
comment on column T_INTF_FGW_TECH_DELTA.skillinspauthid
  is '熟练检查授权ID';
comment on column T_INTF_FGW_TECH_DELTA.skillinspbegdate
  is '熟练检查员有效开始日';
comment on column T_INTF_FGW_TECH_DELTA.skillinspenddate
  is '熟练检查员有效截止日';
comment on column T_INTF_FGW_TECH_DELTA.offeinspauthid
  is '局方委任代表检查授权ID';
comment on column T_INTF_FGW_TECH_DELTA.offeinspbegdate
  is '局方委任代表检查员有效开始日';
comment on column T_INTF_FGW_TECH_DELTA.offeinspenddate
  is '局方委任代表检查员有效截止日';
comment on column T_INTF_FGW_TECH_DELTA.assiauthid
  is '排班授权ID';
comment on column T_INTF_FGW_TECH_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_TECH_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_TECH_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_TECH_DELTA.oper_host
  is '操作主机';
comment on column T_INTF_FGW_TECH_DELTA.assiauthdate
  is '排班授权日期';
comment on column T_INTF_FGW_TECH_DELTA.techauthstatus
  is '有效性';
comment on column T_INTF_FGW_TECH_DELTA.mixactypes
  is '小机型';

prompt
prompt Creating table T_INTF_FGW_TRANSFER
prompt ==================================
prompt
create table T_INTF_FGW_TRANSFER
(
  deptlogid        NVARCHAR2(50) not null,
  pilotid          NVARCHAR2(50),
  deptlogtype      NVARCHAR2(50),
  fromdeptcode     NVARCHAR2(50),
  todeptcode       NVARCHAR2(50),
  logbegdate       DATE,
  logenddate       DATE,
  idcode           NVARCHAR2(50),
  lastmodifytime   DATE,
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  fromassideptcode VARCHAR2(50),
  toassideptcode   VARCHAR2(50),
  validity         VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_TRANSFER
  is '飞管网人员借调中间表';
comment on column T_INTF_FGW_TRANSFER.deptlogid
  is '人员调动ID';
comment on column T_INTF_FGW_TRANSFER.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_TRANSFER.deptlogtype
  is '人员调动类型';
comment on column T_INTF_FGW_TRANSFER.fromdeptcode
  is '调动前单位';
comment on column T_INTF_FGW_TRANSFER.todeptcode
  is '调动后单位';
comment on column T_INTF_FGW_TRANSFER.logbegdate
  is '调动起始日';
comment on column T_INTF_FGW_TRANSFER.logenddate
  is '调动截至日';
comment on column T_INTF_FGW_TRANSFER.idcode
  is '身份证号码';
comment on column T_INTF_FGW_TRANSFER.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_TRANSFER.oper
  is '操作人';
comment on column T_INTF_FGW_TRANSFER.op_time
  is '操作时间';
comment on column T_INTF_FGW_TRANSFER.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_TRANSFER.oper_host
  is '操作主机';
comment on column T_INTF_FGW_TRANSFER.fromassideptcode
  is '调动前排班部门';
comment on column T_INTF_FGW_TRANSFER.toassideptcode
  is '调动后排班部门';
alter table T_INTF_FGW_TRANSFER
  add constraint PK_T_INTF_FGW_TRANSFER primary key (DEPTLOGID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_TRANSFER_DELTA
prompt ========================================
prompt
create table T_INTF_FGW_TRANSFER_DELTA
(
  delta_id         NVARCHAR2(50) not null,
  deptlogid        NVARCHAR2(50),
  pilotid          NVARCHAR2(50),
  deptlogtype      NVARCHAR2(50),
  fromdeptcode     NVARCHAR2(50),
  todeptcode       NVARCHAR2(50),
  logbegdate       DATE,
  logenddate       DATE,
  idcode           NVARCHAR2(50),
  lastmodifytime   DATE,
  oper             VARCHAR2(20),
  op_time          DATE,
  oper_ip          VARCHAR2(20),
  oper_host        VARCHAR2(20),
  fromassideptcode VARCHAR2(50),
  toassideptcode   VARCHAR2(50),
  validity         VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_TRANSFER_DELTA
  is '飞管网人员借调日志表';
comment on column T_INTF_FGW_TRANSFER_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_TRANSFER_DELTA.deptlogid
  is '人员调动ID';
comment on column T_INTF_FGW_TRANSFER_DELTA.pilotid
  is '飞行员ID';
comment on column T_INTF_FGW_TRANSFER_DELTA.deptlogtype
  is '人员调动类型';
comment on column T_INTF_FGW_TRANSFER_DELTA.fromdeptcode
  is '调动前单位';
comment on column T_INTF_FGW_TRANSFER_DELTA.todeptcode
  is '调动后单位';
comment on column T_INTF_FGW_TRANSFER_DELTA.logbegdate
  is '调动起始日';
comment on column T_INTF_FGW_TRANSFER_DELTA.logenddate
  is '调动截至日';
comment on column T_INTF_FGW_TRANSFER_DELTA.idcode
  is '身份证号码';
comment on column T_INTF_FGW_TRANSFER_DELTA.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_TRANSFER_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_TRANSFER_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_TRANSFER_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_TRANSFER_DELTA.oper_host
  is '操作主机';
comment on column T_INTF_FGW_TRANSFER_DELTA.fromassideptcode
  is '调动前排班部门';
comment on column T_INTF_FGW_TRANSFER_DELTA.toassideptcode
  is '调动后操作部门';
alter table T_INTF_FGW_TRANSFER_DELTA
  add constraint PK_T_INTF_FGW_TRANSFER_DELTA primary key (DELTA_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FGW_VISA
prompt ==============================
prompt
create table T_INTF_FGW_VISA
(
  visaid         NUMBER(12) not null,
  pilotid        NUMBER(12) not null,
  passportid     NUMBER(12) not null,
  visatype       VARCHAR2(50),
  visano         VARCHAR2(50),
  visastatus     VARCHAR2(50),
  nation         VARCHAR2(50),
  grantdate      DATE,
  usedate        DATE,
  remark         VARCHAR2(200),
  validdate      DATE,
  creator        VARCHAR2(50),
  createtime     DATE,
  lastmodifier   VARCHAR2(20),
  ipaddress      VARCHAR2(20),
  validity       VARCHAR2(50),
  idcode         VARCHAR2(20),
  lastmodifytime DATE,
  oper           VARCHAR2(50),
  oper_ip        VARCHAR2(50),
  oper_host      VARCHAR2(50),
  op_time        DATE,
  issue_agency   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_VISA
  is '飞管网签证中间表';
comment on column T_INTF_FGW_VISA.visaid
  is '签证ID';
comment on column T_INTF_FGW_VISA.pilotid
  is '人员ID';
comment on column T_INTF_FGW_VISA.passportid
  is '护照ID';
comment on column T_INTF_FGW_VISA.visatype
  is '签证类型';
comment on column T_INTF_FGW_VISA.visano
  is '签证号';
comment on column T_INTF_FGW_VISA.visastatus
  is '签证状态';
comment on column T_INTF_FGW_VISA.nation
  is '国家';
comment on column T_INTF_FGW_VISA.grantdate
  is '签发日期';
comment on column T_INTF_FGW_VISA.usedate
  is '启用日期';
comment on column T_INTF_FGW_VISA.remark
  is '备注';
comment on column T_INTF_FGW_VISA.validdate
  is '到期日期';
comment on column T_INTF_FGW_VISA.creator
  is '创建人';
comment on column T_INTF_FGW_VISA.createtime
  is '创建时间';
comment on column T_INTF_FGW_VISA.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_VISA.ipaddress
  is 'IP';
comment on column T_INTF_FGW_VISA.validity
  is '有效性';
comment on column T_INTF_FGW_VISA.idcode
  is '证件号码';
comment on column T_INTF_FGW_VISA.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_VISA.oper
  is '操作人';
comment on column T_INTF_FGW_VISA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_VISA.oper_host
  is '操作主机';
comment on column T_INTF_FGW_VISA.op_time
  is '操作时间';
comment on column T_INTF_FGW_VISA.issue_agency
  is '发证机关';

prompt
prompt Creating table T_INTF_FGW_VISA_DELTA
prompt ====================================
prompt
create table T_INTF_FGW_VISA_DELTA
(
  delta_id       NUMBER(12) not null,
  visaid         NUMBER(12) not null,
  pilotid        VARCHAR2(50) not null,
  passportid     NUMBER(12) not null,
  visatype       VARCHAR2(50),
  visano         VARCHAR2(50),
  visastatus     VARCHAR2(50),
  nation         VARCHAR2(50),
  grantdate      DATE,
  usedate        DATE,
  remark         VARCHAR2(500),
  validdate      DATE,
  creator        VARCHAR2(50),
  createtime     DATE,
  lastmodifier   VARCHAR2(50),
  lastmodifytime DATE,
  ipaddress      VARCHAR2(50),
  validity       VARCHAR2(50),
  idcode         VARCHAR2(50),
  oper           VARCHAR2(50),
  oper_ip        VARCHAR2(50),
  oper_host      VARCHAR2(50),
  op_time        DATE,
  issue_agency   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FGW_VISA_DELTA
  is '飞管网签证日志表';
comment on column T_INTF_FGW_VISA_DELTA.delta_id
  is '增量ID';
comment on column T_INTF_FGW_VISA_DELTA.visaid
  is '签证ID';
comment on column T_INTF_FGW_VISA_DELTA.pilotid
  is '人员ID';
comment on column T_INTF_FGW_VISA_DELTA.passportid
  is '护照ID';
comment on column T_INTF_FGW_VISA_DELTA.visatype
  is '签证类型';
comment on column T_INTF_FGW_VISA_DELTA.visano
  is '签证号';
comment on column T_INTF_FGW_VISA_DELTA.visastatus
  is '签证状态';
comment on column T_INTF_FGW_VISA_DELTA.nation
  is '国家';
comment on column T_INTF_FGW_VISA_DELTA.grantdate
  is '签发日期';
comment on column T_INTF_FGW_VISA_DELTA.usedate
  is '启用日期';
comment on column T_INTF_FGW_VISA_DELTA.remark
  is '备注';
comment on column T_INTF_FGW_VISA_DELTA.validdate
  is '到期日期';
comment on column T_INTF_FGW_VISA_DELTA.creator
  is '创建人';
comment on column T_INTF_FGW_VISA_DELTA.createtime
  is '创建时间';
comment on column T_INTF_FGW_VISA_DELTA.lastmodifier
  is '修改人';
comment on column T_INTF_FGW_VISA_DELTA.lastmodifytime
  is '修改时间';
comment on column T_INTF_FGW_VISA_DELTA.ipaddress
  is 'IP';
comment on column T_INTF_FGW_VISA_DELTA.validity
  is '有效性';
comment on column T_INTF_FGW_VISA_DELTA.idcode
  is '证件号码';
comment on column T_INTF_FGW_VISA_DELTA.oper
  is '操作人';
comment on column T_INTF_FGW_VISA_DELTA.oper_ip
  is '操作IP';
comment on column T_INTF_FGW_VISA_DELTA.oper_host
  is '操作主机';
comment on column T_INTF_FGW_VISA_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FGW_VISA_DELTA.issue_agency
  is '发证机关';

prompt
prompt Creating table T_INTF_FXW_CODE
prompt ==============================
prompt
create table T_INTF_FXW_CODE
(
  fxw_code_id NUMBER(5) not null,
  cls         VARCHAR2(20),
  fxw_code    VARCHAR2(100),
  cecs_code   VARCHAR2(100),
  remarks     VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_CODE
  is '字典对照表(机组排班与飞行网）';
comment on column T_INTF_FXW_CODE.fxw_code_id
  is '编号';
comment on column T_INTF_FXW_CODE.cls
  is '类型';
comment on column T_INTF_FXW_CODE.fxw_code
  is '飞行网编码';
comment on column T_INTF_FXW_CODE.cecs_code
  is '机组排班编码';
comment on column T_INTF_FXW_CODE.remarks
  is '备注';
alter table T_INTF_FXW_CODE
  add constraint PK_INTF_FXW_CODE primary key (FXW_CODE_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_CREW
prompt ==============================
prompt
create table T_INTF_FXW_CREW
(
  basic_info_id       VARCHAR2(20) not null,
  clerk_code          VARCHAR2(20),
  pilot_name          VARCHAR2(60),
  short_name          VARCHAR2(50),
  eng_surname         VARCHAR2(50),
  eng_name            VARCHAR2(50),
  native_place        VARCHAR2(100),
  birthday            DATE,
  sex                 VARCHAR2(10),
  id_code             VARCHAR2(20),
  org_code            VARCHAR2(10),
  aero_unit_code      VARCHAR2(10),
  execute_duty        VARCHAR2(10),
  execute_level       VARCHAR2(10),
  civil_aviation_date DATE,
  work_date           DATE,
  graduate_academy    VARCHAR2(50),
  enter_date          DATE,
  graduate_date       DATE,
  culture_degree      VARCHAR2(10),
  speciality          VARCHAR2(10),
  work_type           VARCHAR2(10),
  family_address      VARCHAR2(100),
  family_tel          VARCHAR2(20),
  office_tel          VARCHAR2(20),
  mobile_tel          VARCHAR2(30),
  stature             NUMBER(3),
  marriage_status     VARCHAR2(10),
  enter_party_date    DATE,
  board_card_no       VARCHAR2(20),
  nationality         VARCHAR2(10),
  remarks             VARCHAR2(100),
  polity              VARCHAR2(10),
  temp_unit_code      VARCHAR2(10),
  creator             VARCHAR2(10),
  create_date         DATE,
  weight              NUMBER(3),
  ce_aviation_date    DATE,
  eng_nationality     VARCHAR2(50),
  eng_nat_code3       VARCHAR2(10),
  icao_eng            VARCHAR2(10),
  route_eng           VARCHAR2(100),
  health_level        VARCHAR2(60),
  last_modifier       VARCHAR2(10),
  last_modify_time    DATE,
  validity            VARCHAR2(10),
  status              VARCHAR2(10),
  icao_valid_date     DATE,
  icao_invalid_date   DATE,
  eng_native_place    VARCHAR2(50),
  eng_family_address  VARCHAR2(300),
  exec_dept_code      VARCHAR2(10),
  oper                VARCHAR2(20),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  from_unit           VARCHAR2(20),
  to_unit             VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_CREW
  is '人员基本信息(本场训练中间表)';
comment on column T_INTF_FXW_CREW.basic_info_id
  is '人员ID';
comment on column T_INTF_FXW_CREW.clerk_code
  is '工号';
comment on column T_INTF_FXW_CREW.pilot_name
  is '人员姓名';
comment on column T_INTF_FXW_CREW.short_name
  is '简称';
comment on column T_INTF_FXW_CREW.eng_surname
  is '英文姓';
comment on column T_INTF_FXW_CREW.eng_name
  is '英文名';
comment on column T_INTF_FXW_CREW.native_place
  is '籍贯';
comment on column T_INTF_FXW_CREW.birthday
  is '生日';
comment on column T_INTF_FXW_CREW.sex
  is '性别';
comment on column T_INTF_FXW_CREW.id_code
  is '身份证号';
comment on column T_INTF_FXW_CREW.org_code
  is '单位编号';
comment on column T_INTF_FXW_CREW.aero_unit_code
  is '飞行单位';
comment on column T_INTF_FXW_CREW.execute_duty
  is '行政职务';
comment on column T_INTF_FXW_CREW.execute_level
  is '行政级别';
comment on column T_INTF_FXW_CREW.civil_aviation_date
  is '民航日期';
comment on column T_INTF_FXW_CREW.work_date
  is '工作日期';
comment on column T_INTF_FXW_CREW.graduate_academy
  is '毕业院校';
comment on column T_INTF_FXW_CREW.enter_date
  is '入校时间';
comment on column T_INTF_FXW_CREW.graduate_date
  is '毕业时间';
comment on column T_INTF_FXW_CREW.culture_degree
  is '文化程序';
comment on column T_INTF_FXW_CREW.speciality
  is '学习专业';
comment on column T_INTF_FXW_CREW.work_type
  is '工种';
comment on column T_INTF_FXW_CREW.family_address
  is '家庭地址';
comment on column T_INTF_FXW_CREW.family_tel
  is '家庭电话';
comment on column T_INTF_FXW_CREW.office_tel
  is '办公室电话';
comment on column T_INTF_FXW_CREW.mobile_tel
  is '手机';
comment on column T_INTF_FXW_CREW.stature
  is '身高';
comment on column T_INTF_FXW_CREW.marriage_status
  is '婚姻状况';
comment on column T_INTF_FXW_CREW.enter_party_date
  is '入党时间';
comment on column T_INTF_FXW_CREW.board_card_no
  is '登机证号';
comment on column T_INTF_FXW_CREW.nationality
  is '国籍';
comment on column T_INTF_FXW_CREW.remarks
  is '备注';
comment on column T_INTF_FXW_CREW.polity
  is '政治面貌';
comment on column T_INTF_FXW_CREW.temp_unit_code
  is '临时单位';
comment on column T_INTF_FXW_CREW.creator
  is '创建人';
comment on column T_INTF_FXW_CREW.create_date
  is '创建日期';
comment on column T_INTF_FXW_CREW.weight
  is '体重';
comment on column T_INTF_FXW_CREW.ce_aviation_date
  is '进入公司日期';
comment on column T_INTF_FXW_CREW.eng_nationality
  is '英文国籍';
comment on column T_INTF_FXW_CREW.eng_nat_code3
  is '英文国籍三字码';
comment on column T_INTF_FXW_CREW.icao_eng
  is 'ICAO英语';
comment on column T_INTF_FXW_CREW.route_eng
  is '航线英语';
comment on column T_INTF_FXW_CREW.health_level
  is '健康级别';
comment on column T_INTF_FXW_CREW.last_modifier
  is '修改者';
comment on column T_INTF_FXW_CREW.last_modify_time
  is '修改日期';
comment on column T_INTF_FXW_CREW.validity
  is '是否有效';
comment on column T_INTF_FXW_CREW.status
  is '飞行员状态';
comment on column T_INTF_FXW_CREW.icao_valid_date
  is 'ICAO英语生效日期';
comment on column T_INTF_FXW_CREW.icao_invalid_date
  is 'ICAO英语失效日期';
comment on column T_INTF_FXW_CREW.eng_native_place
  is '英文出生地(护照用)';
comment on column T_INTF_FXW_CREW.eng_family_address
  is '英文家庭住址(护照用)';
comment on column T_INTF_FXW_CREW.exec_dept_code
  is '行政单位';
comment on column T_INTF_FXW_CREW.oper
  is '操作人';
comment on column T_INTF_FXW_CREW.op_time
  is '操作时间';
comment on column T_INTF_FXW_CREW.oper_ip
  is 'IP地址';
comment on column T_INTF_FXW_CREW.oper_host
  is '主机名';
comment on column T_INTF_FXW_CREW.from_unit
  is '原分公司';
comment on column T_INTF_FXW_CREW.to_unit
  is '借调分公司';
alter table T_INTF_FXW_CREW
  add constraint PK_INTF_FXW_CREW primary key (BASIC_INFO_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_CREW_DELTA
prompt ====================================
prompt
create table T_INTF_FXW_CREW_DELTA
(
  delta_id            NUMBER(11) not null,
  basic_info_id       VARCHAR2(20) not null,
  clerk_code          VARCHAR2(20),
  pilot_name          VARCHAR2(60),
  short_name          VARCHAR2(50),
  eng_surname         VARCHAR2(50),
  eng_name            VARCHAR2(50),
  native_place        VARCHAR2(100),
  birthday            DATE,
  sex                 VARCHAR2(10),
  id_code             VARCHAR2(20),
  org_code            VARCHAR2(10),
  aero_unit_code      VARCHAR2(10),
  execute_duty        VARCHAR2(10),
  execute_level       VARCHAR2(10),
  civil_aviation_date DATE,
  work_date           DATE,
  graduate_academy    VARCHAR2(50),
  enter_date          DATE,
  graduate_date       DATE,
  culture_degree      VARCHAR2(10),
  speciality          VARCHAR2(10),
  work_type           VARCHAR2(10),
  family_address      VARCHAR2(100),
  family_tel          VARCHAR2(20),
  office_tel          VARCHAR2(20),
  mobile_tel          VARCHAR2(30),
  stature             NUMBER(3),
  marriage_status     VARCHAR2(10),
  enter_party_date    DATE,
  board_card_no       VARCHAR2(20),
  nationality         VARCHAR2(10),
  remarks             VARCHAR2(100),
  polity              VARCHAR2(10),
  temp_unit_code      VARCHAR2(10),
  creator             VARCHAR2(10),
  create_date         DATE,
  weight              NUMBER(3),
  ce_aviation_date    DATE,
  eng_nationality     VARCHAR2(50),
  eng_nat_code3       VARCHAR2(10),
  icao_eng            VARCHAR2(10),
  route_eng           VARCHAR2(100),
  health_level        VARCHAR2(60),
  last_modifier       VARCHAR2(10),
  last_modify_time    DATE,
  validity            VARCHAR2(10),
  status              VARCHAR2(10),
  icao_valid_date     DATE,
  icao_invalid_date   DATE,
  eng_native_place    VARCHAR2(50),
  eng_family_address  VARCHAR2(300),
  exec_dept_code      VARCHAR2(10),
  oper                VARCHAR2(20),
  op_time             DATE,
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  from_unit           VARCHAR2(20),
  to_unit             VARCHAR2(20),
  delta_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 364M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_CREW_DELTA
  is '人员基本信息(本场训练增量表)';
comment on column T_INTF_FXW_CREW_DELTA.delta_id
  is '变动ID';
comment on column T_INTF_FXW_CREW_DELTA.basic_info_id
  is '人员ID';
comment on column T_INTF_FXW_CREW_DELTA.clerk_code
  is '工号';
comment on column T_INTF_FXW_CREW_DELTA.pilot_name
  is '人员姓名';
comment on column T_INTF_FXW_CREW_DELTA.short_name
  is '简称';
comment on column T_INTF_FXW_CREW_DELTA.eng_surname
  is '英文姓';
comment on column T_INTF_FXW_CREW_DELTA.eng_name
  is '英文名';
comment on column T_INTF_FXW_CREW_DELTA.native_place
  is '籍贯';
comment on column T_INTF_FXW_CREW_DELTA.birthday
  is '生日';
comment on column T_INTF_FXW_CREW_DELTA.sex
  is '性别';
comment on column T_INTF_FXW_CREW_DELTA.id_code
  is '身份证号';
comment on column T_INTF_FXW_CREW_DELTA.org_code
  is '单位编号';
comment on column T_INTF_FXW_CREW_DELTA.aero_unit_code
  is '飞行单位';
comment on column T_INTF_FXW_CREW_DELTA.execute_duty
  is '行政职务';
comment on column T_INTF_FXW_CREW_DELTA.execute_level
  is '行政级别';
comment on column T_INTF_FXW_CREW_DELTA.civil_aviation_date
  is '民航日期';
comment on column T_INTF_FXW_CREW_DELTA.work_date
  is '工作日期';
comment on column T_INTF_FXW_CREW_DELTA.graduate_academy
  is '毕业院校';
comment on column T_INTF_FXW_CREW_DELTA.enter_date
  is '入校时间';
comment on column T_INTF_FXW_CREW_DELTA.graduate_date
  is '毕业时间';
comment on column T_INTF_FXW_CREW_DELTA.culture_degree
  is '文化程序';
comment on column T_INTF_FXW_CREW_DELTA.speciality
  is '学习专业';
comment on column T_INTF_FXW_CREW_DELTA.work_type
  is '工种';
comment on column T_INTF_FXW_CREW_DELTA.family_address
  is '家庭地址';
comment on column T_INTF_FXW_CREW_DELTA.family_tel
  is '家庭电话';
comment on column T_INTF_FXW_CREW_DELTA.office_tel
  is '办公室电话';
comment on column T_INTF_FXW_CREW_DELTA.mobile_tel
  is '手机';
comment on column T_INTF_FXW_CREW_DELTA.stature
  is '身高';
comment on column T_INTF_FXW_CREW_DELTA.marriage_status
  is '婚姻状况';
comment on column T_INTF_FXW_CREW_DELTA.enter_party_date
  is '入党时间';
comment on column T_INTF_FXW_CREW_DELTA.board_card_no
  is '登机证号';
comment on column T_INTF_FXW_CREW_DELTA.nationality
  is '国籍';
comment on column T_INTF_FXW_CREW_DELTA.remarks
  is '备注';
comment on column T_INTF_FXW_CREW_DELTA.polity
  is '政治面貌';
comment on column T_INTF_FXW_CREW_DELTA.temp_unit_code
  is '临时单位';
comment on column T_INTF_FXW_CREW_DELTA.creator
  is '创建人';
comment on column T_INTF_FXW_CREW_DELTA.create_date
  is '创建日期';
comment on column T_INTF_FXW_CREW_DELTA.weight
  is '体重';
comment on column T_INTF_FXW_CREW_DELTA.ce_aviation_date
  is '进入公司日期';
comment on column T_INTF_FXW_CREW_DELTA.eng_nationality
  is '英文国籍';
comment on column T_INTF_FXW_CREW_DELTA.eng_nat_code3
  is '英文国籍三字码';
comment on column T_INTF_FXW_CREW_DELTA.icao_eng
  is 'ICAO英语';
comment on column T_INTF_FXW_CREW_DELTA.route_eng
  is '航线英语';
comment on column T_INTF_FXW_CREW_DELTA.health_level
  is '健康级别';
comment on column T_INTF_FXW_CREW_DELTA.last_modifier
  is '修改者';
comment on column T_INTF_FXW_CREW_DELTA.last_modify_time
  is '修改日期';
comment on column T_INTF_FXW_CREW_DELTA.validity
  is '是否有效';
comment on column T_INTF_FXW_CREW_DELTA.status
  is '飞行员状态';
comment on column T_INTF_FXW_CREW_DELTA.icao_valid_date
  is 'ICAO英语生效日期';
comment on column T_INTF_FXW_CREW_DELTA.icao_invalid_date
  is 'ICAO英语失效日期';
comment on column T_INTF_FXW_CREW_DELTA.eng_native_place
  is '英文出生地(护照用)';
comment on column T_INTF_FXW_CREW_DELTA.eng_family_address
  is '英文家庭住址(护照用)';
comment on column T_INTF_FXW_CREW_DELTA.exec_dept_code
  is '行政单位';
comment on column T_INTF_FXW_CREW_DELTA.oper
  is '操作人';
comment on column T_INTF_FXW_CREW_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FXW_CREW_DELTA.oper_ip
  is 'IP地址';
comment on column T_INTF_FXW_CREW_DELTA.oper_host
  is '主机名';
comment on column T_INTF_FXW_CREW_DELTA.from_unit
  is '原分公司';
comment on column T_INTF_FXW_CREW_DELTA.to_unit
  is '借调分公司';
comment on column T_INTF_FXW_CREW_DELTA.delta_time
  is '变动时间';
alter table T_INTF_FXW_CREW_DELTA
  add constraint PK_INTF_FXW_CREW_DELTA primary key (DELTA_ID, BASIC_INFO_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 20M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_MAINT
prompt ===============================
prompt
create table T_INTF_FXW_MAINT
(
  staff_id           VARCHAR2(20) not null,
  staff_name         VARCHAR2(60),
  short_name         VARCHAR2(60),
  eng_surname        VARCHAR2(60),
  eng_name           VARCHAR2(60),
  birthday           DATE,
  sex                VARCHAR2(10),
  id_code            VARCHAR2(30),
  org_code           VARCHAR2(10),
  execute_level      VARCHAR2(20),
  staff_code         VARCHAR2(10),
  unit_code          VARCHAR2(10),
  eng_native_place   VARCHAR2(60),
  eng_family_address VARCHAR2(200),
  board_card_no      VARCHAR2(60),
  nationality        VARCHAR2(60),
  remarks            VARCHAR2(200),
  work_date          DATE,
  enter_date         DATE,
  culture_degree     VARCHAR2(60),
  polity             VARCHAR2(60),
  family_tel         VARCHAR2(60),
  mobile_tel         VARCHAR2(60),
  creator            VARCHAR2(60),
  create_time        DATE,
  last_modifier      VARCHAR2(60),
  last_modify_time   DATE,
  validity           VARCHAR2(10),
  native_place       VARCHAR2(160),
  p_code             VARCHAR2(20),
  poption            VARCHAR2(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_MAINT
  is '机务人员信息表(本场训练)';
comment on column T_INTF_FXW_MAINT.staff_id
  is '机务人员ID';
comment on column T_INTF_FXW_MAINT.staff_name
  is '姓名';
comment on column T_INTF_FXW_MAINT.short_name
  is '简称';
comment on column T_INTF_FXW_MAINT.eng_surname
  is '英文姓 ';
comment on column T_INTF_FXW_MAINT.eng_name
  is '英文名';
comment on column T_INTF_FXW_MAINT.birthday
  is '出生日期';
comment on column T_INTF_FXW_MAINT.sex
  is '性别';
comment on column T_INTF_FXW_MAINT.id_code
  is '身份证号码 ';
comment on column T_INTF_FXW_MAINT.org_code
  is '分子公司';
comment on column T_INTF_FXW_MAINT.execute_level
  is '行政级别 ';
comment on column T_INTF_FXW_MAINT.unit_code
  is '单位公司 ';
comment on column T_INTF_FXW_MAINT.eng_native_place
  is '出生地(英)';
comment on column T_INTF_FXW_MAINT.eng_family_address
  is '英文家庭住址';
comment on column T_INTF_FXW_MAINT.board_card_no
  is '登机证';
comment on column T_INTF_FXW_MAINT.nationality
  is '国籍';
comment on column T_INTF_FXW_MAINT.remarks
  is '备注';
comment on column T_INTF_FXW_MAINT.work_date
  is '工作日期 ';
comment on column T_INTF_FXW_MAINT.enter_date
  is '进校时间';
comment on column T_INTF_FXW_MAINT.culture_degree
  is '文化程度';
comment on column T_INTF_FXW_MAINT.polity
  is '政治面貌';
comment on column T_INTF_FXW_MAINT.family_tel
  is '家庭电话';
comment on column T_INTF_FXW_MAINT.mobile_tel
  is '手机号码';
comment on column T_INTF_FXW_MAINT.creator
  is '创建人 ';
comment on column T_INTF_FXW_MAINT.create_time
  is '创建时间';
comment on column T_INTF_FXW_MAINT.last_modifier
  is '修改人';
comment on column T_INTF_FXW_MAINT.last_modify_time
  is '最后修改时间';
comment on column T_INTF_FXW_MAINT.validity
  is '是否有效';
comment on column T_INTF_FXW_MAINT.native_place
  is '出生地';
comment on column T_INTF_FXW_MAINT.p_code
  is '机务人员P_CODE,机组排班系统唯一主键';
comment on column T_INTF_FXW_MAINT.poption
  is '版本NEW/OLD';
alter table T_INTF_FXW_MAINT
  add constraint PK_MAINT primary key (STAFF_ID, POPTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_MAINT_LOG
prompt ===================================
prompt
create table T_INTF_FXW_MAINT_LOG
(
  maint_log_id NUMBER(11) not null,
  start_time   DATE,
  end_time     DATE,
  proc_type    VARCHAR2(100) default 'MAINT',
  proc_cnt     NUMBER(9),
  proc_result  VARCHAR2(200),
  err_msg      VARCHAR2(4000),
  time_stamp   DATE,
  op_time      DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 40M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_MAINT_LOG
  is '机务日志表(本场训练)';
comment on column T_INTF_FXW_MAINT_LOG.maint_log_id
  is '日志Id';
comment on column T_INTF_FXW_MAINT_LOG.start_time
  is '开始时间';
comment on column T_INTF_FXW_MAINT_LOG.end_time
  is '结束时间';
comment on column T_INTF_FXW_MAINT_LOG.proc_type
  is '处理类型,MAINT-机务人员,PASSPORT-机务护照,VISA-机务签证';
comment on column T_INTF_FXW_MAINT_LOG.proc_cnt
  is '数据记录数';
comment on column T_INTF_FXW_MAINT_LOG.proc_result
  is '处理结果';
comment on column T_INTF_FXW_MAINT_LOG.err_msg
  is '错误信息';
comment on column T_INTF_FXW_MAINT_LOG.time_stamp
  is '最大时间戳';
alter table T_INTF_FXW_MAINT_LOG
  add constraint PK_MAINT_LOG primary key (MAINT_LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 11M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_MAINT_LOG_HIS
prompt =======================================
prompt
create table T_INTF_FXW_MAINT_LOG_HIS
(
  maint_log_id NUMBER(11) not null,
  table_name   VARCHAR2(60) not null,
  operate_type VARCHAR2(60) not null,
  id           VARCHAR2(20) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_INTF_FXW_MAINT_LOG_HIS
  is '机务日志历史表(本场训练)';
comment on column T_INTF_FXW_MAINT_LOG_HIS.maint_log_id
  is '日志ID';
comment on column T_INTF_FXW_MAINT_LOG_HIS.table_name
  is '表名称';
comment on column T_INTF_FXW_MAINT_LOG_HIS.operate_type
  is '操作类型';
comment on column T_INTF_FXW_MAINT_LOG_HIS.id
  is '主键ID';
comment on column T_INTF_FXW_MAINT_LOG_HIS.oper
  is '操作人';
comment on column T_INTF_FXW_MAINT_LOG_HIS.op_time
  is '操作时间';
comment on column T_INTF_FXW_MAINT_LOG_HIS.remarks
  is '备注';
comment on column T_INTF_FXW_MAINT_LOG_HIS.oper_ip
  is '操作IP';
comment on column T_INTF_FXW_MAINT_LOG_HIS.oper_host
  is '操作主机名';
alter table T_INTF_FXW_MAINT_LOG_HIS
  add constraint PK_MAINT_LOG_HIS primary key (MAINT_LOG_ID, TABLE_NAME, OPERATE_TYPE, ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_INTF_FXW_MAINT_PASSPORT
prompt ========================================
prompt
create table T_INTF_FXW_MAINT_PASSPORT
(
  person_passport_id VARCHAR2(30) not null,
  staff_id           VARCHAR2(30),
  passport_code      VARCHAR2(30),
  staff_name         VARCHAR2(30),
  birthday           DATE,
  passport_type      VARCHAR2(30),
  grant_date         DATE,
  use_date           DATE,
  valid_date         DATE,
  grant_place        VARCHAR2(30),
  native_place       VARCHAR2(30),
  creator            VARCHAR2(30),
  create_time        DATE,
  last_modifier      VARCHAR2(30),
  last_modify_time   DATE,
  poption            VARCHAR2(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_MAINT_PASSPORT
  is '机务人员护照表(本场训练)';
comment on column T_INTF_FXW_MAINT_PASSPORT.person_passport_id
  is '护照ID';
comment on column T_INTF_FXW_MAINT_PASSPORT.staff_id
  is '机务人员ID';
comment on column T_INTF_FXW_MAINT_PASSPORT.passport_code
  is '护照号码';
comment on column T_INTF_FXW_MAINT_PASSPORT.staff_name
  is '机务人员姓名';
comment on column T_INTF_FXW_MAINT_PASSPORT.birthday
  is '出生日期';
comment on column T_INTF_FXW_MAINT_PASSPORT.passport_type
  is '护照类型';
comment on column T_INTF_FXW_MAINT_PASSPORT.grant_date
  is '签发日期';
comment on column T_INTF_FXW_MAINT_PASSPORT.use_date
  is '启用日期';
comment on column T_INTF_FXW_MAINT_PASSPORT.valid_date
  is '到期日期';
comment on column T_INTF_FXW_MAINT_PASSPORT.grant_place
  is '办证地址';
comment on column T_INTF_FXW_MAINT_PASSPORT.native_place
  is '出生地';
comment on column T_INTF_FXW_MAINT_PASSPORT.creator
  is '创建人';
comment on column T_INTF_FXW_MAINT_PASSPORT.create_time
  is '创建时间';
comment on column T_INTF_FXW_MAINT_PASSPORT.last_modifier
  is '修改人';
comment on column T_INTF_FXW_MAINT_PASSPORT.last_modify_time
  is '最后修改时间';
comment on column T_INTF_FXW_MAINT_PASSPORT.poption
  is '版本NEW/OLD';
alter table T_INTF_FXW_MAINT_PASSPORT
  add constraint PK_MAINT_PASSPORT primary key (PERSON_PASSPORT_ID, POPTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_MAINT_VISA
prompt ====================================
prompt
create table T_INTF_FXW_MAINT_VISA
(
  person_visa_id     VARCHAR2(30) not null,
  staff_id           VARCHAR2(30),
  passport_code      VARCHAR2(30),
  visa_code          VARCHAR2(30),
  visa_type          VARCHAR2(30),
  nation             VARCHAR2(30),
  valid_date         DATE,
  begin_date         DATE,
  creator            VARCHAR2(30),
  create_time        DATE,
  last_modifier      VARCHAR2(30),
  last_modify_time   DATE,
  validity           VARCHAR2(30),
  person_passport_id VARCHAR2(30),
  grant_date         DATE,
  poption            VARCHAR2(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_MAINT_VISA
  is '机务人员签证表(本场训练)';
comment on column T_INTF_FXW_MAINT_VISA.person_visa_id
  is '签证ID';
comment on column T_INTF_FXW_MAINT_VISA.staff_id
  is '机务人员ID';
comment on column T_INTF_FXW_MAINT_VISA.passport_code
  is '护照号码';
comment on column T_INTF_FXW_MAINT_VISA.visa_code
  is '签证号码';
comment on column T_INTF_FXW_MAINT_VISA.visa_type
  is '签证类型';
comment on column T_INTF_FXW_MAINT_VISA.nation
  is '国籍';
comment on column T_INTF_FXW_MAINT_VISA.valid_date
  is '到期日期';
comment on column T_INTF_FXW_MAINT_VISA.begin_date
  is '启用日期';
comment on column T_INTF_FXW_MAINT_VISA.creator
  is '创建人';
comment on column T_INTF_FXW_MAINT_VISA.create_time
  is '创建时间';
comment on column T_INTF_FXW_MAINT_VISA.last_modifier
  is '最后修改人';
comment on column T_INTF_FXW_MAINT_VISA.last_modify_time
  is '最后修改时间';
comment on column T_INTF_FXW_MAINT_VISA.validity
  is '是否有效';
comment on column T_INTF_FXW_MAINT_VISA.person_passport_id
  is '护照ID';
comment on column T_INTF_FXW_MAINT_VISA.grant_date
  is '签发日期';
comment on column T_INTF_FXW_MAINT_VISA.poption
  is '版本NEW/OLD';
alter table T_INTF_FXW_MAINT_VISA
  add constraint PK_MAINT_VISA primary key (PERSON_VISA_ID, POPTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_PASSPORT
prompt ==================================
prompt
create table T_INTF_FXW_PASSPORT
(
  passport_id      VARCHAR2(20) not null,
  pilot_info_id    VARCHAR2(20),
  passport_code    VARCHAR2(50),
  passport_type    VARCHAR2(20),
  grant_date       DATE,
  use_date         DATE,
  valid_date       DATE,
  grant_place      VARCHAR2(60),
  remark           VARCHAR2(300),
  creator          VARCHAR2(10),
  create_date      DATE,
  last_modifier    VARCHAR2(10),
  last_modify_time DATE,
  enter_airport    VARCHAR2(100),
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  poption          VARCHAR2(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_PASSPORT
  is '护照表(本场训练)';
comment on column T_INTF_FXW_PASSPORT.passport_id
  is '流水号';
comment on column T_INTF_FXW_PASSPORT.pilot_info_id
  is '人员信息ID';
comment on column T_INTF_FXW_PASSPORT.passport_code
  is '护照号';
comment on column T_INTF_FXW_PASSPORT.passport_type
  is '护照类型';
comment on column T_INTF_FXW_PASSPORT.grant_date
  is '发放日期';
comment on column T_INTF_FXW_PASSPORT.use_date
  is '启用日期';
comment on column T_INTF_FXW_PASSPORT.valid_date
  is '有效日期';
comment on column T_INTF_FXW_PASSPORT.grant_place
  is '发放地点';
comment on column T_INTF_FXW_PASSPORT.remark
  is '备注';
comment on column T_INTF_FXW_PASSPORT.creator
  is '创建人';
comment on column T_INTF_FXW_PASSPORT.create_date
  is '创建日期';
comment on column T_INTF_FXW_PASSPORT.last_modifier
  is '修改者';
comment on column T_INTF_FXW_PASSPORT.last_modify_time
  is '修改日期';
comment on column T_INTF_FXW_PASSPORT.enter_airport
  is '机场列表';
comment on column T_INTF_FXW_PASSPORT.oper
  is '操作人';
comment on column T_INTF_FXW_PASSPORT.op_time
  is '操作时间';
comment on column T_INTF_FXW_PASSPORT.oper_ip
  is 'IP地址';
comment on column T_INTF_FXW_PASSPORT.oper_host
  is '主机名';
comment on column T_INTF_FXW_PASSPORT.poption
  is '版本NEW/OLD';
alter table T_INTF_FXW_PASSPORT
  add constraint PK_T_INTF_FXW_PASSPORT primary key (PASSPORT_ID, POPTION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_TECH
prompt ==============================
prompt
create table T_INTF_FXW_TECH
(
  technical_standard_id        VARCHAR2(20) not null,
  pilot_info_id                VARCHAR2(20),
  licence_no                   VARCHAR2(100),
  valid_begin_date             DATE,
  valid_end_date               DATE,
  month1                       NUMBER(2),
  month2                       NUMBER(2),
  main_ac_type_code            VARCHAR2(20),
  main_ac_type_date            DATE,
  technical_standard           VARCHAR2(20),
  technical_stand_date         DATE,
  appoint_standard             VARCHAR2(20),
  appoint_stand_date           DATE,
  weather_standard             VARCHAR2(20),
  weather_stand_date           DATE,
  radio_standard               VARCHAR2(20),
  radio_stand_date             DATE,
  machine_standard             VARCHAR2(20),
  machine_stand_date           DATE,
  teacher_standard             VARCHAR2(20),
  teacher_stand_date           DATE,
  office_inspector_stand_date  DATE,
  company_inspector_stand_date DATE,
  next_sciamachy               VARCHAR2(20),
  licence_beg_date             DATE,
  licence_end_date             DATE,
  teacher_stand_end_date       DATE,
  office_insp_stand_end_date   DATE,
  skilled_inspector_stand_date DATE,
  company_insp_stand_end_date  DATE,
  plateau_standard             VARCHAR2(20),
  plateau_stand_date           DATE,
  next_sciamachy_teacher       VARCHAR2(20),
  next_teacher_num             NUMBER(3),
  teacher_theory_pre_grade     NUMBER(2),
  creator                      VARCHAR2(20),
  create_date                  DATE,
  last_modifier                VARCHAR2(20),
  last_modify_time             DATE,
  skilled_insp_stand_end_date  DATE,
  retraining_place             VARCHAR2(20),
  emergency_sur_start_date     DATE,
  emergency_sur_end_date       DATE,
  dangerous_start_date         DATE,
  dangerous_end_date           DATE,
  airline_check_start_date     DATE,
  airline_check_end_date       DATE,
  office_inspector_standard    VARCHAR2(20),
  oper                         VARCHAR2(10),
  op_time                      DATE,
  oper_ip                      VARCHAR2(15),
  oper_host                    VARCHAR2(50),
  poption                      VARCHAR2(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_TECH
  is '执照，技术授权及资质信息(本场训练中间表)';
comment on column T_INTF_FXW_TECH.technical_standard_id
  is '流水号';
comment on column T_INTF_FXW_TECH.pilot_info_id
  is '飞行员信息ID';
comment on column T_INTF_FXW_TECH.licence_no
  is '执照号';
comment on column T_INTF_FXW_TECH.valid_begin_date
  is '有效期开始日期';
comment on column T_INTF_FXW_TECH.valid_end_date
  is '有效期结束日期';
comment on column T_INTF_FXW_TECH.month1
  is '准月1';
comment on column T_INTF_FXW_TECH.month2
  is '准月2';
comment on column T_INTF_FXW_TECH.main_ac_type_code
  is '机型';
comment on column T_INTF_FXW_TECH.main_ac_type_date
  is '机型日期';
comment on column T_INTF_FXW_TECH.technical_standard
  is '技术标准';
comment on column T_INTF_FXW_TECH.technical_stand_date
  is '技术标准日期';
comment on column T_INTF_FXW_TECH.appoint_standard
  is '聘用标准';
comment on column T_INTF_FXW_TECH.appoint_stand_date
  is '聘用标准日期';
comment on column T_INTF_FXW_TECH.weather_standard
  is '天气标准';
comment on column T_INTF_FXW_TECH.weather_stand_date
  is '天气标准日期';
comment on column T_INTF_FXW_TECH.radio_standard
  is '通讯标准';
comment on column T_INTF_FXW_TECH.radio_stand_date
  is '通讯标准日期';
comment on column T_INTF_FXW_TECH.machine_standard
  is '机械标准';
comment on column T_INTF_FXW_TECH.machine_stand_date
  is '机械标准日期';
comment on column T_INTF_FXW_TECH.teacher_standard
  is '教员标准';
comment on column T_INTF_FXW_TECH.teacher_stand_date
  is '教员标准日期(废弃)';
comment on column T_INTF_FXW_TECH.office_inspector_stand_date
  is '局方委任代表获得日期';
comment on column T_INTF_FXW_TECH.company_inspector_stand_date
  is '公司检查员获得日期';
comment on column T_INTF_FXW_TECH.licence_beg_date
  is '执照开始日期';
comment on column T_INTF_FXW_TECH.licence_end_date
  is '执照结束日期';
comment on column T_INTF_FXW_TECH.teacher_stand_end_date
  is '教员标准结束日期';
comment on column T_INTF_FXW_TECH.office_insp_stand_end_date
  is '局方委任代表结束日期';
comment on column T_INTF_FXW_TECH.skilled_inspector_stand_date
  is '熟练检查员获得日期';
comment on column T_INTF_FXW_TECH.company_insp_stand_end_date
  is '公司检查员结束日期';
comment on column T_INTF_FXW_TECH.plateau_standard
  is '高原标准';
comment on column T_INTF_FXW_TECH.plateau_stand_date
  is '高原标准日期';
comment on column T_INTF_FXW_TECH.next_sciamachy_teacher
  is '下次是否飞模拟机(教员)';
comment on column T_INTF_FXW_TECH.next_teacher_num
  is '限飞场次';
comment on column T_INTF_FXW_TECH.teacher_theory_pre_grade
  is '教员地面理论考试分数';
comment on column T_INTF_FXW_TECH.creator
  is '创建人';
comment on column T_INTF_FXW_TECH.create_date
  is '创建日期';
comment on column T_INTF_FXW_TECH.last_modifier
  is '修改者';
comment on column T_INTF_FXW_TECH.last_modify_time
  is '修改日期';
comment on column T_INTF_FXW_TECH.skilled_insp_stand_end_date
  is '熟练检查员结束日期';
comment on column T_INTF_FXW_TECH.retraining_place
  is '复训地点';
comment on column T_INTF_FXW_TECH.emergency_sur_start_date
  is '应急生存训练生效日期';
comment on column T_INTF_FXW_TECH.emergency_sur_end_date
  is '应急生存训练失效日期';
comment on column T_INTF_FXW_TECH.dangerous_start_date
  is '危险品培训开始日期';
comment on column T_INTF_FXW_TECH.dangerous_end_date
  is '危险品培训结束日期';
comment on column T_INTF_FXW_TECH.airline_check_start_date
  is '机长航线检查开始日期';
comment on column T_INTF_FXW_TECH.airline_check_end_date
  is '机长航线检查结束日期';
comment on column T_INTF_FXW_TECH.office_inspector_standard
  is '局方委任代表标准';
comment on column T_INTF_FXW_TECH.oper
  is '操作人';
comment on column T_INTF_FXW_TECH.op_time
  is '操作时间';
comment on column T_INTF_FXW_TECH.oper_ip
  is 'IP地址';
comment on column T_INTF_FXW_TECH.oper_host
  is '主机名';
comment on column T_INTF_FXW_TECH.poption
  is '版本NEW/OLD';
alter table T_INTF_FXW_TECH
  add constraint PK_FXW_TECH primary key (TECHNICAL_STANDARD_ID, POPTION)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 768K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_FXW_TECH_DELTA
prompt ====================================
prompt
create table T_INTF_FXW_TECH_DELTA
(
  technical_standard_id        VARCHAR2(20) not null,
  pilot_info_id                VARCHAR2(20),
  licence_no                   VARCHAR2(100),
  valid_begin_date             DATE,
  valid_end_date               DATE,
  month1                       NUMBER(2),
  month2                       NUMBER(2),
  main_ac_type_code            VARCHAR2(20),
  main_ac_type_date            DATE,
  technical_standard           VARCHAR2(20),
  technical_stand_date         DATE,
  appoint_standard             VARCHAR2(20),
  appoint_stand_date           DATE,
  weather_standard             VARCHAR2(20),
  weather_stand_date           DATE,
  radio_standard               VARCHAR2(20),
  radio_stand_date             DATE,
  machine_standard             VARCHAR2(20),
  machine_stand_date           DATE,
  teacher_standard             VARCHAR2(20),
  teacher_stand_date           DATE,
  office_inspector_stand_date  DATE,
  company_inspector_stand_date DATE,
  next_sciamachy               VARCHAR2(20),
  licence_beg_date             DATE,
  licence_end_date             DATE,
  teacher_stand_end_date       DATE,
  office_insp_stand_end_date   DATE,
  skilled_inspector_stand_date DATE,
  company_insp_stand_end_date  DATE,
  plateau_standard             VARCHAR2(20),
  plateau_stand_date           DATE,
  next_sciamachy_teacher       VARCHAR2(20),
  next_teacher_num             NUMBER(3),
  teacher_theory_pre_grade     NUMBER(2),
  creator                      VARCHAR2(20),
  create_date                  DATE,
  last_modifier                VARCHAR2(20),
  last_modify_time             DATE,
  skilled_insp_stand_end_date  DATE,
  retraining_place             VARCHAR2(20),
  emergency_sur_start_date     DATE,
  emergency_sur_end_date       DATE,
  dangerous_start_date         DATE,
  dangerous_end_date           DATE,
  airline_check_start_date     DATE,
  airline_check_end_date       DATE,
  office_inspector_standard    VARCHAR2(20),
  oper                         VARCHAR2(10),
  op_time                      DATE,
  oper_ip                      VARCHAR2(15),
  oper_host                    VARCHAR2(50),
  poption                      VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_INTF_FXW_TECH_DELTA
  is '执照，技术授权及资质信息(本场训练增量表)';
comment on column T_INTF_FXW_TECH_DELTA.technical_standard_id
  is '流水号';
comment on column T_INTF_FXW_TECH_DELTA.pilot_info_id
  is '飞行员信息ID';
comment on column T_INTF_FXW_TECH_DELTA.licence_no
  is '执照号';
comment on column T_INTF_FXW_TECH_DELTA.valid_begin_date
  is '有效期开始日期';
comment on column T_INTF_FXW_TECH_DELTA.valid_end_date
  is '有效期结束日期';
comment on column T_INTF_FXW_TECH_DELTA.month1
  is '准月1';
comment on column T_INTF_FXW_TECH_DELTA.month2
  is '准月2';
comment on column T_INTF_FXW_TECH_DELTA.main_ac_type_code
  is '机型';
comment on column T_INTF_FXW_TECH_DELTA.main_ac_type_date
  is '机型日期';
comment on column T_INTF_FXW_TECH_DELTA.technical_standard
  is '技术标准';
comment on column T_INTF_FXW_TECH_DELTA.technical_stand_date
  is '技术标准日期';
comment on column T_INTF_FXW_TECH_DELTA.appoint_standard
  is '聘用标准';
comment on column T_INTF_FXW_TECH_DELTA.appoint_stand_date
  is '聘用标准日期';
comment on column T_INTF_FXW_TECH_DELTA.weather_standard
  is '天气标准';
comment on column T_INTF_FXW_TECH_DELTA.weather_stand_date
  is '天气标准日期';
comment on column T_INTF_FXW_TECH_DELTA.radio_standard
  is '通讯标准';
comment on column T_INTF_FXW_TECH_DELTA.radio_stand_date
  is '通讯标准日期';
comment on column T_INTF_FXW_TECH_DELTA.machine_standard
  is '机械标准';
comment on column T_INTF_FXW_TECH_DELTA.machine_stand_date
  is '机械标准日期';
comment on column T_INTF_FXW_TECH_DELTA.teacher_standard
  is '教员标准';
comment on column T_INTF_FXW_TECH_DELTA.teacher_stand_date
  is '教员标准日期(废弃)';
comment on column T_INTF_FXW_TECH_DELTA.office_inspector_stand_date
  is '局方委任代表获得日期';
comment on column T_INTF_FXW_TECH_DELTA.company_inspector_stand_date
  is '公司检查员获得日期';
comment on column T_INTF_FXW_TECH_DELTA.next_sciamachy
  is '下次是否飞模拟机';
comment on column T_INTF_FXW_TECH_DELTA.licence_beg_date
  is '执照开始日期';
comment on column T_INTF_FXW_TECH_DELTA.licence_end_date
  is '执照结束日期';
comment on column T_INTF_FXW_TECH_DELTA.teacher_stand_end_date
  is '教员标准结束日期';
comment on column T_INTF_FXW_TECH_DELTA.office_insp_stand_end_date
  is '局方委任代表结束日期';
comment on column T_INTF_FXW_TECH_DELTA.skilled_inspector_stand_date
  is '熟练检查员获得日期';
comment on column T_INTF_FXW_TECH_DELTA.company_insp_stand_end_date
  is '公司检查员结束日期';
comment on column T_INTF_FXW_TECH_DELTA.plateau_standard
  is '高原标准';
comment on column T_INTF_FXW_TECH_DELTA.plateau_stand_date
  is '高原标准日期';
comment on column T_INTF_FXW_TECH_DELTA.next_sciamachy_teacher
  is '下次是否飞模拟机(教员)';
comment on column T_INTF_FXW_TECH_DELTA.next_teacher_num
  is '限飞场次';
comment on column T_INTF_FXW_TECH_DELTA.teacher_theory_pre_grade
  is '教员地面理论考试分数';
comment on column T_INTF_FXW_TECH_DELTA.creator
  is '创建人';
comment on column T_INTF_FXW_TECH_DELTA.create_date
  is '创建日期';
comment on column T_INTF_FXW_TECH_DELTA.last_modifier
  is '修改者';
comment on column T_INTF_FXW_TECH_DELTA.last_modify_time
  is '修改日期';
comment on column T_INTF_FXW_TECH_DELTA.skilled_insp_stand_end_date
  is '熟练检查员结束日期';
comment on column T_INTF_FXW_TECH_DELTA.retraining_place
  is '复训地点';
comment on column T_INTF_FXW_TECH_DELTA.emergency_sur_start_date
  is '应急生存训练生效日期';
comment on column T_INTF_FXW_TECH_DELTA.emergency_sur_end_date
  is '应急生存训练失效日期';
comment on column T_INTF_FXW_TECH_DELTA.dangerous_start_date
  is '危险品培训开始日期';
comment on column T_INTF_FXW_TECH_DELTA.dangerous_end_date
  is '危险品培训结束日期';
comment on column T_INTF_FXW_TECH_DELTA.airline_check_start_date
  is '机长航线检查开始日期';
comment on column T_INTF_FXW_TECH_DELTA.airline_check_end_date
  is '机长航线检查结束日期';
comment on column T_INTF_FXW_TECH_DELTA.office_inspector_standard
  is '局方委任代表标准';
comment on column T_INTF_FXW_TECH_DELTA.oper
  is '操作人';
comment on column T_INTF_FXW_TECH_DELTA.op_time
  is '操作时间';
comment on column T_INTF_FXW_TECH_DELTA.oper_ip
  is 'IP地址';
comment on column T_INTF_FXW_TECH_DELTA.oper_host
  is '主机名';
comment on column T_INTF_FXW_TECH_DELTA.poption
  is '变更类型';
alter table T_INTF_FXW_TECH_DELTA
  add constraint PK_INTF_FXW_TECH_DELTA primary key (TECHNICAL_STANDARD_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_INTF_FXW_VISA
prompt ==============================
prompt
create table T_INTF_FXW_VISA
(
  pilot_visa_id    VARCHAR2(20) not null,
  pilot_info_id    VARCHAR2(20),
  passport_id      VARCHAR2(20),
  visa_code        VARCHAR2(20),
  visa_type        VARCHAR2(20),
  nation           VARCHAR2(50),
  valid_date       DATE,
  begin_date       DATE,
  grant_date       DATE,
  creator          VARCHAR2(10),
  create_date      DATE,
  last_modifier    VARCHAR2(20),
  last_modify_time DATE,
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  poption          VARCHAR2(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_FXW_VISA
  is '签证信息(本场训练)';
comment on column T_INTF_FXW_VISA.pilot_visa_id
  is '流水号';
comment on column T_INTF_FXW_VISA.pilot_info_id
  is '飞行员id';
comment on column T_INTF_FXW_VISA.passport_id
  is '护照id';
comment on column T_INTF_FXW_VISA.visa_code
  is '签证编号';
comment on column T_INTF_FXW_VISA.visa_type
  is '签证类型';
comment on column T_INTF_FXW_VISA.nation
  is '国籍';
comment on column T_INTF_FXW_VISA.valid_date
  is '有效日期';
comment on column T_INTF_FXW_VISA.begin_date
  is '开始日期';
comment on column T_INTF_FXW_VISA.grant_date
  is '获取日期';
comment on column T_INTF_FXW_VISA.creator
  is '创建人';
comment on column T_INTF_FXW_VISA.create_date
  is '创建日期';
comment on column T_INTF_FXW_VISA.last_modifier
  is '修改者';
comment on column T_INTF_FXW_VISA.last_modify_time
  is '修改日期';
comment on column T_INTF_FXW_VISA.oper
  is '操作人';
comment on column T_INTF_FXW_VISA.op_time
  is '操作时间';
comment on column T_INTF_FXW_VISA.oper_ip
  is 'IP地址';
comment on column T_INTF_FXW_VISA.oper_host
  is '主机名';
comment on column T_INTF_FXW_VISA.poption
  is '版本NEW/OLD';
alter table T_INTF_FXW_VISA
  add constraint PK_T_INTF_FXW_VISA primary key (PILOT_VISA_ID, POPTION)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_KQ_CHECKIN
prompt ================================
prompt
create table T_INTF_KQ_CHECKIN
(
  clerkno   VARCHAR2(10) not null,
  p_code    VARCHAR2(10),
  c_name    VARCHAR2(20),
  signtime  VARCHAR2(20) not null,
  oper      VARCHAR2(20),
  op_time   VARCHAR2(20),
  oper_ip   VARCHAR2(20),
  oper_host VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
  );
alter table T_INTF_KQ_CHECKIN
  add constraint PK_CHECKIN_DELTAID primary key (CLERKNO, SIGNTIME)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_INTF_LOG
prompt =========================
prompt
create table T_INTF_LOG
(
  intf_log_id NUMBER(15) not null,
  start_date  DATE,
  end_date    DATE,
  proc_cnt    NUMBER(9),
  intf_name   VARCHAR2(50),
  proc_result VARCHAR2(4000),
  err_msg     VARCHAR2(4000),
  time_stamp  DATE,
  op_time     DATE default (sysdate)
)
tablespace CEACREW
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_LOG
  is '??DBLink???';
comment on column T_INTF_LOG.intf_log_id
  is '??ID';
comment on column T_INTF_LOG.start_date
  is '????';
comment on column T_INTF_LOG.end_date
  is '????';
comment on column T_INTF_LOG.proc_cnt
  is '????';
comment on column T_INTF_LOG.intf_name
  is '????';
comment on column T_INTF_LOG.proc_result
  is '????';
comment on column T_INTF_LOG.err_msg
  is '????';
comment on column T_INTF_LOG.time_stamp
  is '???';
comment on column T_INTF_LOG.op_time
  is '????';
alter table T_INTF_LOG
  add constraint PK_T_INTF_LOG primary key (INTF_LOG_ID)
  using index 
  tablespace CEACREW
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_MRC_STATISTIC
prompt ===================================
prompt
create table T_INTF_MRC_STATISTIC
(
  org_code             VARCHAR2(10) not null,
  org_name             VARCHAR2(128),
  ac_type              VARCHAR2(30) not null,
  year                 VARCHAR2(4) not null,
  month                VARCHAR2(2) not null,
  ac_count             NUMBER(8),
  crew_count           NUMBER(8),
  pc_count             NUMBER(8),
  cp_count             NUMBER(8),
  crew_amount          NUMBER(5,2),
  pc_amount            NUMBER(5,2),
  cp_amount            NUMBER(5,2),
  pc_balance           NUMBER(5,2),
  cp_balance           NUMBER(5,2),
  year_everage         NUMBER(8,2),
  year_peak            NUMBER(8,2),
  daily_everage        NUMBER(5,2),
  daily_peak           NUMBER(5,2),
  pc_flightable_hour   NUMBER(10,2),
  pc_flight_hour       NUMBER(10,2),
  cp_flightable_hour   NUMBER(10,2),
  cp_flight_hour       NUMBER(10,2),
  unit_flightable_hour NUMBER(10,2),
  ac_flight_hour       NUMBER(10,2),
  crew_flight_hour     NUMBER(10,2),
  ac_index_real        NUMBER(5,2),
  days                 NUMBER(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_INTF_MRC_STATISTIC
  is '管理即时频道机组资源统计信息';
comment on column T_INTF_MRC_STATISTIC.org_code
  is '分公司代码';
comment on column T_INTF_MRC_STATISTIC.org_name
  is '分公司名称';
comment on column T_INTF_MRC_STATISTIC.ac_type
  is '机型名称';
comment on column T_INTF_MRC_STATISTIC.year
  is '年份';
comment on column T_INTF_MRC_STATISTIC.month
  is '月份';
comment on column T_INTF_MRC_STATISTIC.ac_count
  is '飞机驾数';
comment on column T_INTF_MRC_STATISTIC.crew_count
  is '总飞行';
comment on column T_INTF_MRC_STATISTIC.pc_count
  is '机长总人数（机长+教员）';
comment on column T_INTF_MRC_STATISTIC.cp_count
  is '副驾总人数';
comment on column T_INTF_MRC_STATISTIC.crew_amount
  is '可编机组';
comment on column T_INTF_MRC_STATISTIC.pc_amount
  is '机长总折合';
comment on column T_INTF_MRC_STATISTIC.cp_amount
  is '副驾总折合';
comment on column T_INTF_MRC_STATISTIC.pc_balance
  is '机长盈亏';
comment on column T_INTF_MRC_STATISTIC.cp_balance
  is '副驾盈亏';
comment on column T_INTF_MRC_STATISTIC.year_everage
  is '年平均';
comment on column T_INTF_MRC_STATISTIC.year_peak
  is '年峰值';
comment on column T_INTF_MRC_STATISTIC.daily_everage
  is '日平均';
comment on column T_INTF_MRC_STATISTIC.daily_peak
  is '日峰值';
comment on column T_INTF_MRC_STATISTIC.pc_flightable_hour
  is '机长可飞时间';
comment on column T_INTF_MRC_STATISTIC.pc_flight_hour
  is '机长已飞时间';
comment on column T_INTF_MRC_STATISTIC.cp_flightable_hour
  is '副驾可飞时间';
comment on column T_INTF_MRC_STATISTIC.cp_flight_hour
  is '副驾已飞时间';
comment on column T_INTF_MRC_STATISTIC.unit_flightable_hour
  is '机队可飞';
comment on column T_INTF_MRC_STATISTIC.ac_flight_hour
  is '机型飞行时间';
comment on column T_INTF_MRC_STATISTIC.crew_flight_hour
  is '机队飞行时间';
comment on column T_INTF_MRC_STATISTIC.ac_index_real
  is '实际机型系数';
comment on column T_INTF_MRC_STATISTIC.days
  is '月天数';
alter table T_INTF_MRC_STATISTIC
  add constraint PK_INTF_MRC_STATISTIC primary key (ORG_CODE, AC_TYPE, YEAR, MONTH)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_INTF_OTH_PARAM
prompt ===============================
prompt
create table T_INTF_OTH_PARAM
(
  param_id    VARCHAR2(10) not null,
  param_code  VARCHAR2(200) not null,
  param_value VARCHAR2(200),
  param_desc  VARCHAR2(200),
  err_msg     VARCHAR2(1000),
  oper_time   DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_OTH_PARAM
  is '其它接口参数表';
comment on column T_INTF_OTH_PARAM.param_id
  is '编号';
comment on column T_INTF_OTH_PARAM.param_code
  is '参数名称';
comment on column T_INTF_OTH_PARAM.param_value
  is '参数值';
comment on column T_INTF_OTH_PARAM.param_desc
  is '参数描述';
comment on column T_INTF_OTH_PARAM.err_msg
  is '错误信息';
comment on column T_INTF_OTH_PARAM.oper_time
  is '操作时间';
alter table T_INTF_OTH_PARAM
  add constraint PK_INTF_OTH_PARAM primary key (PARAM_ID, PARAM_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_INTF_OTH_PARAM
  add constraint PK_UN_INTF_OTH_PARAM unique (PARAM_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_OTH_PARAM123
prompt ==================================
prompt
create table T_INTF_OTH_PARAM123
(
  param_id    VARCHAR2(10) not null,
  param_code  VARCHAR2(200) not null,
  param_value VARCHAR2(200),
  param_desc  VARCHAR2(200),
  err_msg     VARCHAR2(1000),
  oper_time   DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_OTH_PARAM20160523
prompt =======================================
prompt
create table T_INTF_OTH_PARAM20160523
(
  param_id    VARCHAR2(10) not null,
  param_code  VARCHAR2(200),
  param_value VARCHAR2(200),
  param_desc  VARCHAR2(200),
  err_msg     VARCHAR2(1000),
  oper_time   DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_OTH_PARAM20170718
prompt =======================================
prompt
create table T_INTF_OTH_PARAM20170718
(
  param_id    VARCHAR2(10) not null,
  param_code  VARCHAR2(200),
  param_value VARCHAR2(200),
  param_desc  VARCHAR2(200),
  err_msg     VARCHAR2(1000),
  oper_time   DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_PARAM
prompt ===========================
prompt
create table T_INTF_PARAM
(
  param_code  VARCHAR2(20) not null,
  param_value VARCHAR2(50),
  param_desc  VARCHAR2(100),
  err_msg     VARCHAR2(1000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_INTF_PARAM
  is '接口参数表';
comment on column T_INTF_PARAM.param_code
  is '参数名';
comment on column T_INTF_PARAM.param_value
  is '参数值';
comment on column T_INTF_PARAM.param_desc
  is '参数说明';
comment on column T_INTF_PARAM.err_msg
  is '错误信息';
alter table T_INTF_PARAM
  add primary key (PARAM_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_INTF_YDYX_KAOQINMINGXI
prompt =======================================
prompt
create global temporary table T_INTF_YDYX_KAOQINMINGXI
(
  p_code    VARCHAR2(10) not null,
  work_no   VARCHAR2(10),
  c_name    VARCHAR2(50) not null,
  filiale   VARCHAR2(30),
  startdate DATE,
  enddate   DATE,
  cate      VARCHAR2(200),
  ddo_id    VARCHAR2(15),
  remarks   VARCHAR2(2000)
)
on commit delete rows;
comment on table T_INTF_YDYX_KAOQINMINGXI
  is '移动飞行考勤占位';
comment on column T_INTF_YDYX_KAOQINMINGXI.p_code
  is '人员ID';
comment on column T_INTF_YDYX_KAOQINMINGXI.work_no
  is '工号';
comment on column T_INTF_YDYX_KAOQINMINGXI.c_name
  is '姓名';
comment on column T_INTF_YDYX_KAOQINMINGXI.filiale
  is '分公司';
comment on column T_INTF_YDYX_KAOQINMINGXI.startdate
  is '开始时间';
comment on column T_INTF_YDYX_KAOQINMINGXI.enddate
  is '结束时间';
comment on column T_INTF_YDYX_KAOQINMINGXI.cate
  is '分类';
comment on column T_INTF_YDYX_KAOQINMINGXI.ddo_id
  is '考勤ID';
comment on column T_INTF_YDYX_KAOQINMINGXI.remarks
  is '备注';

prompt
prompt Creating table T_INTF_YDYX_KAOQINMINGXI1
prompt ========================================
prompt
create global temporary table T_INTF_YDYX_KAOQINMINGXI1
(
  p_code    VARCHAR2(10) not null,
  work_no   VARCHAR2(10),
  c_name    VARCHAR2(50) not null,
  filiale   VARCHAR2(30),
  startdate DATE,
  enddate   DATE,
  cate      VARCHAR2(200),
  ddo_id    VARCHAR2(15),
  remarks   VARCHAR2(2000)
)
on commit delete rows;
comment on table T_INTF_YDYX_KAOQINMINGXI1
  is '移动飞行考勤占位';
comment on column T_INTF_YDYX_KAOQINMINGXI1.p_code
  is '人员ID';
comment on column T_INTF_YDYX_KAOQINMINGXI1.work_no
  is '工号';
comment on column T_INTF_YDYX_KAOQINMINGXI1.c_name
  is '姓名';
comment on column T_INTF_YDYX_KAOQINMINGXI1.filiale
  is '分公司';
comment on column T_INTF_YDYX_KAOQINMINGXI1.startdate
  is '开始时间';
comment on column T_INTF_YDYX_KAOQINMINGXI1.enddate
  is '结束时间';
comment on column T_INTF_YDYX_KAOQINMINGXI1.cate
  is '分类';
comment on column T_INTF_YDYX_KAOQINMINGXI1.ddo_id
  is '考勤ID';
comment on column T_INTF_YDYX_KAOQINMINGXI1.remarks
  is '备注';

prompt
prompt Creating table T_INTF_YDYX_KAOQINMINGXI_NEW
prompt ===========================================
prompt
create global temporary table T_INTF_YDYX_KAOQINMINGXI_NEW
(
  p_code    VARCHAR2(10) not null,
  work_no   VARCHAR2(10),
  c_name    VARCHAR2(50) not null,
  filiale   VARCHAR2(30),
  startdate DATE,
  enddate   DATE,
  cate      VARCHAR2(200),
  ddo_id    VARCHAR2(15),
  remarks   VARCHAR2(1200)
)
on commit preserve rows;
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.p_code
  is '人员ID';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.work_no
  is '工号';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.c_name
  is '姓名';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.filiale
  is '分公司';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.startdate
  is '开始时间';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.enddate
  is '结束时间';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.cate
  is '分类';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.ddo_id
  is '考勤ID';
comment on column T_INTF_YDYX_KAOQINMINGXI_NEW.remarks
  is '模拟机学员很多，需足够大';

prompt
prompt Creating table T_INTF_YXW_KAOQINMINGXI
prompt ======================================
prompt
create global temporary table T_INTF_YXW_KAOQINMINGXI
(
  c_name    VARCHAR2(50) not null,
  filiale   VARCHAR2(30),
  startdate VARCHAR2(20),
  cate      VARCHAR2(80),
  p_code    VARCHAR2(10) not null,
  work_no   VARCHAR2(10),
  priority  NUMBER(2,1)
)
on commit preserve rows;

prompt
prompt Creating table T_INTF_YXW_KAOQINMINGXI_NEW
prompt ==========================================
prompt
create global temporary table T_INTF_YXW_KAOQINMINGXI_NEW
(
  c_name    VARCHAR2(50) not null,
  filiale   VARCHAR2(30),
  startdate VARCHAR2(20),
  cate      VARCHAR2(40),
  p_code    VARCHAR2(10) not null,
  work_no   VARCHAR2(10),
  priority  NUMBER(2,1)
)
on commit preserve rows;

prompt
prompt Creating table T_INTF_YXW_UNIFIED_FLT
prompt =====================================
prompt
create table T_INTF_YXW_UNIFIED_FLT
(
  flightinfoid           NUMBER(11) not null,
  flightbjdate           DATE,
  flightno               VARCHAR2(15),
  operater               VARCHAR2(10),
  std                    DATE,
  plandeptairport        VARCHAR2(4),
  planarrairport         VARCHAR2(4),
  deptairport            VARCHAR2(4),
  arrairport             VARCHAR2(4),
  aircraftproperty       VARCHAR2(5),
  crewproperty           VARCHAR2(5),
  cabinproperty          VARCHAR2(5),
  aircraftinternalmodel  VARCHAR2(5),
  actualaircraftproperty VARCHAR2(5),
  actualcrewproperty     VARCHAR2(5),
  actualcabinproperty    VARCHAR2(5),
  ispassed               NUMBER(3),
  checkremark            VARCHAR2(40),
  flight_id              NUMBER(11),
  op_time                DATE,
  iscancel               NUMBER(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_INTF_YXW_UNIFIED_FLT.flightinfoid
  is 'MM航班ID';
comment on column T_INTF_YXW_UNIFIED_FLT.flightbjdate
  is '航班日期(北京)';
comment on column T_INTF_YXW_UNIFIED_FLT.flightno
  is '航班号';
comment on column T_INTF_YXW_UNIFIED_FLT.operater
  is '运营人';
comment on column T_INTF_YXW_UNIFIED_FLT.std
  is '计划起飞时间(北京)';
comment on column T_INTF_YXW_UNIFIED_FLT.plandeptairport
  is '计划起飞场';
comment on column T_INTF_YXW_UNIFIED_FLT.planarrairport
  is '计划落地场三字码';
comment on column T_INTF_YXW_UNIFIED_FLT.deptairport
  is '实际起飞场三字码';
comment on column T_INTF_YXW_UNIFIED_FLT.arrairport
  is '实际落地场三字码';
comment on column T_INTF_YXW_UNIFIED_FLT.aircraftproperty
  is '(发起)飞机要素';
comment on column T_INTF_YXW_UNIFIED_FLT.crewproperty
  is '(发起)飞行要素';
comment on column T_INTF_YXW_UNIFIED_FLT.cabinproperty
  is '(发起)客舱(空保)要素';
comment on column T_INTF_YXW_UNIFIED_FLT.aircraftinternalmodel
  is '(发起)营销机型';
comment on column T_INTF_YXW_UNIFIED_FLT.actualaircraftproperty
  is '(实际)飞机要素';
comment on column T_INTF_YXW_UNIFIED_FLT.actualcrewproperty
  is '(实际)飞行要素';
comment on column T_INTF_YXW_UNIFIED_FLT.actualcabinproperty
  is '(实际)客舱(空保)要素';
comment on column T_INTF_YXW_UNIFIED_FLT.ispassed
  is '是否校验通过  0不通过 1通过  999待校验';
comment on column T_INTF_YXW_UNIFIED_FLT.checkremark
  is '校验备注';
comment on column T_INTF_YXW_UNIFIED_FLT.flight_id
  is '根据MMLEGID查找的排班的航班ID';
comment on column T_INTF_YXW_UNIFIED_FLT.op_time
  is '操作时间';
comment on column T_INTF_YXW_UNIFIED_FLT.iscancel
  is '是否取消统一运行标识 0为取消 1为不取消';
alter table T_INTF_YXW_UNIFIED_FLT
  add primary key (FLIGHTINFOID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_LOG
prompt ====================
prompt
create table T_LOG
(
  log_id        NUMBER(12) not null,
  table_name    VARCHAR2(50) not null,
  key_values    VARCHAR2(300),
  chg_columns   VARCHAR2(2000),
  chg_values    VARCHAR2(4000),
  uids          VARCHAR2(1),
  module_flag   VARCHAR2(1),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  flight_leg_id NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1872576K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_LOG
  is '数据日志表';
comment on column T_LOG.log_id
  is '日志ID';
comment on column T_LOG.table_name
  is '表名称';
comment on column T_LOG.key_values
  is '表主键值';
comment on column T_LOG.chg_columns
  is '修改列';
comment on column T_LOG.chg_values
  is '列变化值';
comment on column T_LOG.uids
  is 'I增,D删,U改';
comment on column T_LOG.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_LOG.oper
  is '操作人';
comment on column T_LOG.op_time
  is '操作时间';
comment on column T_LOG.remarks
  is '备注';
comment on column T_LOG.oper_ip
  is 'IP地址';
comment on column T_LOG.oper_host
  is '主机名';
comment on column T_LOG.flight_leg_id
  is 'DOC提供的ID';
create index IDX_LOG_TABLE_NAME on T_LOG (TABLE_NAME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_LOG
  add constraint PK_T_LOG primary key (LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_LOG_20150504ZXLCHANGE
prompt ======================================
prompt
create table T_LOG_20150504ZXLCHANGE
(
  chg_values VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_LOG_SET
prompt ========================
prompt
create table T_LOG_SET
(
  trigger_name VARCHAR2(60) not null,
  table_name   VARCHAR2(60) not null,
  column_names VARCHAR2(4000),
  s_type       VARCHAR2(20),
  trigger_sql  VARCHAR2(4000),
  trigger_desc VARCHAR2(1000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_LOG_SET
  is '创建的日志TRIIGER表';
comment on column T_LOG_SET.trigger_name
  is '触发器名称';
comment on column T_LOG_SET.table_name
  is '表名';
comment on column T_LOG_SET.column_names
  is '列名(用,分隔)';
comment on column T_LOG_SET.s_type
  is '触发器类型(U,I,D组合 U=修改 I=插入 D=删除)';
comment on column T_LOG_SET.trigger_sql
  is '创建TRIGGER语句';
comment on column T_LOG_SET.trigger_desc
  is '说明';
alter table T_LOG_SET
  add constraint PK_T_LOG_SET primary key (TRIGGER_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_LOG_USER
prompt =========================
prompt
create global temporary table T_LOG_USER
(
  user_code   VARCHAR2(20),
  unit_id     VARCHAR2(20),
  module_flag VARCHAR2(1),
  log_yn      VARCHAR2(1),
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
on commit delete rows;
comment on table T_LOG_USER
  is '临时表用户信息';
comment on column T_LOG_USER.user_code
  is '用户代码';
comment on column T_LOG_USER.unit_id
  is '席位代码';
comment on column T_LOG_USER.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_LOG_USER.log_yn
  is '是否记录(Y写N不写)';
comment on column T_LOG_USER.remarks
  is '备注';
comment on column T_LOG_USER.oper_ip
  is 'IP地址';
comment on column T_LOG_USER.oper_host
  is '主机名';

prompt
prompt Creating table T_MEDI_DOCTOR
prompt ============================
prompt
create table T_MEDI_DOCTOR
(
  dept_code   VARCHAR2(16) not null,
  p_code      VARCHAR2(10) not null,
  c_name      VARCHAR2(20) not null,
  e_name      VARCHAR2(30),
  work_no     VARCHAR2(10),
  py_abbr     VARCHAR2(4) not null,
  sex         VARCHAR2(1),
  birth_date  DATE,
  mate_yn     VARCHAR2(1),
  party       VARCHAR2(10),
  culture     VARCHAR2(10),
  college     VARCHAR2(30),
  majority    VARCHAR2(10),
  grad_date   DATE,
  id_no       VARCHAR2(20),
  address     VARCHAR2(50),
  e_mail      VARCHAR2(30),
  phone       VARCHAR2(20),
  mobil_no    VARCHAR2(20),
  work_date   DATE,
  admin_rank  VARCHAR2(10),
  filiale     VARCHAR2(4) not null,
  home_base   VARCHAR2(4) not null,
  module_flag VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  valid_flag  VARCHAR2(1) default 'Y',
  idx         NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_DOCTOR
  is '地勤专业人员信息表';
comment on column T_MEDI_DOCTOR.dept_code
  is '部门编码';
comment on column T_MEDI_DOCTOR.p_code
  is '人员代码';
comment on column T_MEDI_DOCTOR.c_name
  is '姓名';
comment on column T_MEDI_DOCTOR.e_name
  is '英文姓名';
comment on column T_MEDI_DOCTOR.work_no
  is '工号';
comment on column T_MEDI_DOCTOR.py_abbr
  is '人员四码';
comment on column T_MEDI_DOCTOR.sex
  is '性别(M/F)';
comment on column T_MEDI_DOCTOR.birth_date
  is '出生日期';
comment on column T_MEDI_DOCTOR.mate_yn
  is '婚姻状态(N未婚Y已婚S独身)';
comment on column T_MEDI_DOCTOR.party
  is '政治面貌';
comment on column T_MEDI_DOCTOR.culture
  is '文化程度';
comment on column T_MEDI_DOCTOR.college
  is '毕业学校';
comment on column T_MEDI_DOCTOR.majority
  is '专业';
comment on column T_MEDI_DOCTOR.grad_date
  is '毕业时间';
comment on column T_MEDI_DOCTOR.id_no
  is '身份证号';
comment on column T_MEDI_DOCTOR.address
  is '家庭住址';
comment on column T_MEDI_DOCTOR.e_mail
  is 'Email地址';
comment on column T_MEDI_DOCTOR.phone
  is '住宅电话';
comment on column T_MEDI_DOCTOR.mobil_no
  is '手机号码';
comment on column T_MEDI_DOCTOR.work_date
  is '参加工作日期';
comment on column T_MEDI_DOCTOR.admin_rank
  is '行政级别';
comment on column T_MEDI_DOCTOR.filiale
  is '分公司';
comment on column T_MEDI_DOCTOR.home_base
  is '主基地';
comment on column T_MEDI_DOCTOR.module_flag
  is '模块(H航医)';
comment on column T_MEDI_DOCTOR.oper
  is '操作人';
comment on column T_MEDI_DOCTOR.op_time
  is '操作时间';
comment on column T_MEDI_DOCTOR.remarks
  is '备注';
comment on column T_MEDI_DOCTOR.oper_ip
  is 'IP地址';
comment on column T_MEDI_DOCTOR.oper_host
  is '主机名';
comment on column T_MEDI_DOCTOR.valid_flag
  is '有效标志';
comment on column T_MEDI_DOCTOR.idx
  is '序号';
alter table T_MEDI_DOCTOR
  add constraint PK_DOCTOR primary key (P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_DUTY
prompt ==========================
prompt
create table T_MEDI_DUTY
(
  flight_date DATE not null,
  p_code      VARCHAR2(10) not null,
  duty_code   VARCHAR2(10) not null,
  td          DATE not null,
  ta          DATE not null,
  duty_rec    VARCHAR2(300),
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_DUTY
  is '航医人员值班表';
comment on column T_MEDI_DUTY.flight_date
  is '值班日期';
comment on column T_MEDI_DUTY.p_code
  is '航医人员';
comment on column T_MEDI_DUTY.duty_code
  is '值班类型';
comment on column T_MEDI_DUTY.td
  is '开始时间';
comment on column T_MEDI_DUTY.ta
  is '结束时间';
comment on column T_MEDI_DUTY.duty_rec
  is '值班说明';
comment on column T_MEDI_DUTY.oper
  is '操作人';
comment on column T_MEDI_DUTY.op_time
  is '操作时间';
comment on column T_MEDI_DUTY.remarks
  is '备注';
comment on column T_MEDI_DUTY.oper_ip
  is 'IP地址';
comment on column T_MEDI_DUTY.oper_host
  is '主机名';
alter table T_MEDI_DUTY
  add constraint PK_DUTY_ARRANGE primary key (FLIGHT_DATE, P_CODE, DUTY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_FLIGHTHEALTH
prompt ==================================
prompt
create table T_MEDI_FLIGHTHEALTH
(
  id             NUMBER(11) not null,
  flight_ids     VARCHAR2(200),
  flight_date    DATE,
  filiale        VARCHAR2(10),
  crew_link_line NUMBER(11),
  flight_com     VARCHAR2(60),
  flight_voyage  VARCHAR2(100),
  p_code         VARCHAR2(10),
  pass           VARCHAR2(1),
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_FLIGHTHEALTH
  is '航前体检表';
comment on column T_MEDI_FLIGHTHEALTH.id
  is '流水号';
comment on column T_MEDI_FLIGHTHEALTH.flight_ids
  is '航班ID';
comment on column T_MEDI_FLIGHTHEALTH.flight_date
  is '航班日期';
comment on column T_MEDI_FLIGHTHEALTH.filiale
  is '分子公司';
comment on column T_MEDI_FLIGHTHEALTH.crew_link_line
  is '联班号';
comment on column T_MEDI_FLIGHTHEALTH.p_code
  is '人员编号';
comment on column T_MEDI_FLIGHTHEALTH.pass
  is '是否通过';
comment on column T_MEDI_FLIGHTHEALTH.oper
  is '操作人';
comment on column T_MEDI_FLIGHTHEALTH.op_time
  is '操作时间';
comment on column T_MEDI_FLIGHTHEALTH.remarks
  is '备注';
comment on column T_MEDI_FLIGHTHEALTH.oper_ip
  is 'IP地址';
comment on column T_MEDI_FLIGHTHEALTH.oper_host
  is '主机名';
alter table T_MEDI_FLIGHTHEALTH
  add constraint PK_MEDI_FLIGHTHEALTH_ID primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_HEALTH_DETAIL
prompt ===================================
prompt
create table T_MEDI_HEALTH_DETAIL
(
  id                 NUMBER(9) not null,
  p_code             VARCHAR2(10),
  blood_pressure     VARCHAR2(20),
  heart_rate         NUMBER(4),
  rhythm_heart       VARCHAR2(10),
  electrocardiogram  VARCHAR2(100),
  alcohol_monitoring NUMBER(5),
  health             VARCHAR2(10),
  oper               VARCHAR2(10),
  op_time            DATE,
  remarks            VARCHAR2(200),
  oper_ip            VARCHAR2(15),
  oper_host          VARCHAR2(50),
  heartbeat          VARCHAR2(20),
  temperature        VARCHAR2(20),
  degreeofblood      VARCHAR2(20),
  datasource         VARCHAR2(1),
  flight_id          NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_HEALTH_DETAIL
  is '航医人员健康监控';
comment on column T_MEDI_HEALTH_DETAIL.id
  is '主键';
comment on column T_MEDI_HEALTH_DETAIL.p_code
  is '人员代码';
comment on column T_MEDI_HEALTH_DETAIL.blood_pressure
  is '血压';
comment on column T_MEDI_HEALTH_DETAIL.heart_rate
  is '心率';
comment on column T_MEDI_HEALTH_DETAIL.rhythm_heart
  is '心律';
comment on column T_MEDI_HEALTH_DETAIL.electrocardiogram
  is '心电图';
comment on column T_MEDI_HEALTH_DETAIL.alcohol_monitoring
  is '酒精监测';
comment on column T_MEDI_HEALTH_DETAIL.health
  is '健康状况';
comment on column T_MEDI_HEALTH_DETAIL.oper
  is '操作人';
comment on column T_MEDI_HEALTH_DETAIL.op_time
  is '操作时间';
comment on column T_MEDI_HEALTH_DETAIL.remarks
  is '备注';
comment on column T_MEDI_HEALTH_DETAIL.oper_ip
  is 'IP地址';
comment on column T_MEDI_HEALTH_DETAIL.oper_host
  is '主机名';
comment on column T_MEDI_HEALTH_DETAIL.heartbeat
  is '脉搏';
comment on column T_MEDI_HEALTH_DETAIL.temperature
  is '体温';
comment on column T_MEDI_HEALTH_DETAIL.degreeofblood
  is '血氧饱和度';
comment on column T_MEDI_HEALTH_DETAIL.datasource
  is '来源 ‘H’手动 ''A''自动';
comment on column T_MEDI_HEALTH_DETAIL.flight_id
  is '航班ID';
alter table T_MEDI_HEALTH_DETAIL
  add constraint PK_ID primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_MONITOR
prompt =============================
prompt
create table T_MEDI_MONITOR
(
  filiale        VARCHAR2(4) not null,
  monitor_id     NUMBER(11) not null,
  p_code         VARCHAR2(10) not null,
  healthy_his    VARCHAR2(200),
  start_date     DATE not null,
  end_end        DATE not null,
  monitor_reason VARCHAR2(200),
  monitor_date   DATE not null,
  monitor_person VARCHAR2(10) not null,
  cancel_reason  VARCHAR2(200),
  cancel_date    DATE,
  cancel_person  VARCHAR2(10),
  valid_flag     VARCHAR2(1) default 'Y',
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  tjjg           VARCHAR2(200),
  tjzd           VARCHAR2(200),
  fxys           VARCHAR2(200),
  jybs           VARCHAR2(200),
  yyqk           VARCHAR2(200),
  special_flag   VARCHAR2(1) default 'N',
  healthgrade    VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_MONITOR
  is '航医重点监控人员表';
comment on column T_MEDI_MONITOR.filiale
  is '分公司';
comment on column T_MEDI_MONITOR.monitor_id
  is '监控记录ID';
comment on column T_MEDI_MONITOR.p_code
  is '飞行人员';
comment on column T_MEDI_MONITOR.healthy_his
  is '过往病史';
comment on column T_MEDI_MONITOR.start_date
  is '开始监控日期';
comment on column T_MEDI_MONITOR.end_end
  is '结束监控日期';
comment on column T_MEDI_MONITOR.monitor_reason
  is '监控原因';
comment on column T_MEDI_MONITOR.monitor_date
  is '记录日期';
comment on column T_MEDI_MONITOR.monitor_person
  is '记录航医';
comment on column T_MEDI_MONITOR.cancel_reason
  is '撤销原因';
comment on column T_MEDI_MONITOR.cancel_date
  is '撤销日期';
comment on column T_MEDI_MONITOR.cancel_person
  is '撤销航医';
comment on column T_MEDI_MONITOR.valid_flag
  is '有效标志';
comment on column T_MEDI_MONITOR.oper
  is '操作人';
comment on column T_MEDI_MONITOR.op_time
  is '操作时间';
comment on column T_MEDI_MONITOR.remarks
  is '备注';
comment on column T_MEDI_MONITOR.oper_ip
  is 'IP地址';
comment on column T_MEDI_MONITOR.oper_host
  is '主机名';
comment on column T_MEDI_MONITOR.tjjg
  is '体检机构建议';
comment on column T_MEDI_MONITOR.tjzd
  is '体检诊断';
comment on column T_MEDI_MONITOR.fxys
  is '风险因素';
comment on column T_MEDI_MONITOR.jybs
  is '简要病史';
comment on column T_MEDI_MONITOR.yyqk
  is '用药情况';
comment on column T_MEDI_MONITOR.special_flag
  is '特许飞行标识';
comment on column T_MEDI_MONITOR.healthgrade
  is '健康等级';
alter table T_MEDI_MONITOR
  add constraint PK_HEALTH_MONITOR primary key (MONITOR_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_MONITOR_ED
prompt ================================
prompt
create table T_MEDI_MONITOR_ED
(
  monitor_ed_id NUMBER(20) not null,
  p_code        VARCHAR2(20),
  monitor_id    VARCHAR2(20),
  ed_date       DATE,
  ed_content    VARCHAR2(20),
  ed_formart    VARCHAR2(20),
  hy_code       VARCHAR2(20),
  oper          VARCHAR2(20),
  op_time       DATE,
  remarks       VARCHAR2(20),
  oper_ip       VARCHAR2(20),
  oper_host     VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_MEDI_MONITOR_ED
  is '航医重点关注子表(健康宣传教育)';
comment on column T_MEDI_MONITOR_ED.monitor_ed_id
  is '主键ID';
comment on column T_MEDI_MONITOR_ED.p_code
  is '人员编号';
comment on column T_MEDI_MONITOR_ED.oper
  is '操作人';
comment on column T_MEDI_MONITOR_ED.op_time
  is '操作时间';
comment on column T_MEDI_MONITOR_ED.remarks
  is '备注';
comment on column T_MEDI_MONITOR_ED.oper_ip
  is '操作IP';
comment on column T_MEDI_MONITOR_ED.oper_host
  is '操作主机';
alter table T_MEDI_MONITOR_ED
  add constraint MONITOR_ED_ID_KEY primary key (MONITOR_ED_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_MEDI_MONITOR_EF
prompt ================================
prompt
create table T_MEDI_MONITOR_EF
(
  monitor_ef_id NUMBER(20) not null,
  p_code        VARCHAR2(20),
  monitor_id    VARCHAR2(20),
  ef_date       DATE,
  ef_result     VARCHAR2(20),
  ef_formart    VARCHAR2(20),
  hy_code       VARCHAR2(20),
  oper          VARCHAR2(20),
  op_time       DATE,
  remarks       VARCHAR2(100),
  oper_ip       VARCHAR2(30),
  oper_host     VARCHAR2(30)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_MEDI_MONITOR_EF
  is '航医重点关注子表(跟踪随访记录) ';
comment on column T_MEDI_MONITOR_EF.monitor_ef_id
  is '主键ID';
comment on column T_MEDI_MONITOR_EF.p_code
  is '人员主键';
comment on column T_MEDI_MONITOR_EF.monitor_id
  is '监控ID，外键主表';
comment on column T_MEDI_MONITOR_EF.oper
  is '操作人';
comment on column T_MEDI_MONITOR_EF.op_time
  is '操作时间';
comment on column T_MEDI_MONITOR_EF.remarks
  is '备注';
comment on column T_MEDI_MONITOR_EF.oper_ip
  is '操作IP';
comment on column T_MEDI_MONITOR_EF.oper_host
  is '操作主机';
alter table T_MEDI_MONITOR_EF
  add constraint MONITOR_EF_ID_KEY primary key (MONITOR_EF_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_MEDI_MONITOR_VI
prompt ================================
prompt
create table T_MEDI_MONITOR_VI
(
  monitor_vi_id NUMBER(20) not null,
  p_code        VARCHAR2(20),
  monitor_id    VARCHAR2(20),
  vi_date       DATE,
  vi_content    VARCHAR2(20),
  vi_formart    VARCHAR2(20),
  vi_result     VARCHAR2(20),
  hy_code       VARCHAR2(20),
  oper          VARCHAR2(20),
  op_time       DATE,
  remarks       VARCHAR2(20),
  oper_ip       VARCHAR2(20),
  oper_host     VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_MEDI_MONITOR_VI
  is '航医重点关注子表(跟踪随访记录)';
comment on column T_MEDI_MONITOR_VI.p_code
  is '人员主键';
comment on column T_MEDI_MONITOR_VI.oper
  is '操作人';
comment on column T_MEDI_MONITOR_VI.op_time
  is '操作时间';
comment on column T_MEDI_MONITOR_VI.remarks
  is '备注';
comment on column T_MEDI_MONITOR_VI.oper_ip
  is '操作IP';
comment on column T_MEDI_MONITOR_VI.oper_host
  is '操作主机';
alter table T_MEDI_MONITOR_VI
  add constraint MONITOR_VI_ID_KEY primary key (MONITOR_VI_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_MEDI_PRINT_TEMPLATE
prompt ====================================
prompt
create table T_MEDI_PRINT_TEMPLATE
(
  print_id    NUMBER(12) not null,
  filiale     VARCHAR2(4),
  remarks     VARCHAR2(500),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  print_title VARCHAR2(50),
  during      VARCHAR2(50),
  comeindate  DATE,
  gooutdate   DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_PRINT_TEMPLATE
  is '航医打印模板';
comment on column T_MEDI_PRINT_TEMPLATE.print_id
  is 'ID';
comment on column T_MEDI_PRINT_TEMPLATE.filiale
  is '分公司';
comment on column T_MEDI_PRINT_TEMPLATE.remarks
  is '备注';
comment on column T_MEDI_PRINT_TEMPLATE.oper
  is '操作人';
comment on column T_MEDI_PRINT_TEMPLATE.op_time
  is '操作时间';
comment on column T_MEDI_PRINT_TEMPLATE.oper_ip
  is 'IP地址';
comment on column T_MEDI_PRINT_TEMPLATE.oper_host
  is '主机名';
comment on column T_MEDI_PRINT_TEMPLATE.print_title
  is '标题';
comment on column T_MEDI_PRINT_TEMPLATE.during
  is '疗养期';
comment on column T_MEDI_PRINT_TEMPLATE.comeindate
  is '签发日期';
comment on column T_MEDI_PRINT_TEMPLATE.gooutdate
  is '有效日期';
alter table T_MEDI_PRINT_TEMPLATE
  add primary key (PRINT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_RECORD
prompt ============================
prompt
create table T_MEDI_RECORD
(
  prn_id      NUMBER(12) not null,
  flight_date DATE not null,
  p_code      VARCHAR2(10) not null,
  print_title VARCHAR2(60),
  remarks     VARCHAR2(500),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_RECORD
  is '航医疗养单';
comment on column T_MEDI_RECORD.prn_id
  is '疗养单Id';
comment on column T_MEDI_RECORD.flight_date
  is '打印日期';
comment on column T_MEDI_RECORD.p_code
  is '飞行员';
comment on column T_MEDI_RECORD.print_title
  is '标题';
comment on column T_MEDI_RECORD.remarks
  is '备注';
comment on column T_MEDI_RECORD.oper
  is '操作人';
comment on column T_MEDI_RECORD.op_time
  is '操作时间';
comment on column T_MEDI_RECORD.oper_ip
  is 'IP地址';
comment on column T_MEDI_RECORD.oper_host
  is '主机名';
alter table T_MEDI_RECORD
  add primary key (PRN_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_RECORD_DEL20141217
prompt ========================================
prompt
create table T_MEDI_RECORD_DEL20141217
(
  prn_id      NUMBER(12) not null,
  flight_date DATE not null,
  p_code      VARCHAR2(10) not null,
  print_title VARCHAR2(60),
  remarks     VARCHAR2(500),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MEDI_TERMS
prompt ===========================
prompt
create table T_MEDI_TERMS
(
  term_id     NUMBER(9) not null,
  term_name   VARCHAR2(200),
  term_type   VARCHAR2(10),
  filiale     VARCHAR2(4) not null,
  module_flag VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MEDI_TERMS
  is '航医值班记录常用术语';
comment on column T_MEDI_TERMS.term_id
  is '术语ID';
comment on column T_MEDI_TERMS.term_name
  is '术语';
comment on column T_MEDI_TERMS.term_type
  is '术语分类';
comment on column T_MEDI_TERMS.filiale
  is '分公司';
comment on column T_MEDI_TERMS.module_flag
  is '模块(H航医)';
comment on column T_MEDI_TERMS.oper
  is '操作人';
comment on column T_MEDI_TERMS.op_time
  is '操作时间';
comment on column T_MEDI_TERMS.remarks
  is '备注';
comment on column T_MEDI_TERMS.oper_ip
  is 'IP地址';
comment on column T_MEDI_TERMS.oper_host
  is '主机名';
alter table T_MEDI_TERMS
  add constraint PK_HEALTH_TERMS primary key (TERM_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MOF_FTB
prompt ========================
prompt
create table T_MOF_FTB
(
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6) default 0,
  grnd_hours    NUMBER(6) default 0,
  night_hours   NUMBER(6) default 0,
  totl_hours    NUMBER(6) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MOF_FTB
  is '任务书回收主表(移动飞行接口)';
comment on column T_MOF_FTB.flight_id
  is '航班ID';
comment on column T_MOF_FTB.taxi_out_time
  is '滑出时间';
comment on column T_MOF_FTB.takeoff_time
  is '起飞时刻';
comment on column T_MOF_FTB.landing_time
  is '降落时刻';
comment on column T_MOF_FTB.taxi_in_time
  is '滑入时间';
comment on column T_MOF_FTB.air_hours
  is '空中时间';
comment on column T_MOF_FTB.grnd_hours
  is '地面时间';
comment on column T_MOF_FTB.night_hours
  is '夜航时间';
comment on column T_MOF_FTB.totl_hours
  is '总时间';
comment on column T_MOF_FTB.oper
  is '操作人';
comment on column T_MOF_FTB.op_time
  is '操作时间';
comment on column T_MOF_FTB.remarks
  is '备注';
comment on column T_MOF_FTB.oper_ip
  is 'IP地址';
comment on column T_MOF_FTB.oper_host
  is '主机名';
comment on column T_MOF_FTB.is_icao
  is '是否执行英语通信';
comment on column T_MOF_FTB.old_fuel
  is '原存油';
comment on column T_MOF_FTB.new_fuel
  is '新加油';
comment on column T_MOF_FTB.left_fuel
  is '剩余油';
create index IDX_MOF_FTB_OPTIME on T_MOF_FTB (OP_TIME)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_MOF_FTB
  add constraint PK_MOF_FTB primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MOF_FTB_DETAIL
prompt ===============================
prompt
create table T_MOF_FTB_DETAIL
(
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6) default 0,
  exp_hours     NUMBER(6) default 0,
  left_hours    NUMBER(6) default 0,
  left_updowns  NUMBER(3) default 0,
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6) default 0,
  right_updowns NUMBER(3) default 0,
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  flight_date   DATE,
  left_night    NUMBER(6) default 0,
  left_teach    NUMBER(6) default 0,
  right_night   NUMBER(6) default 0,
  right_teach   NUMBER(6) default 0,
  left_downs    NUMBER(3) default 0,
  right_downs   NUMBER(3) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MOF_FTB_DETAIL
  is '任务书回收明细表(移动飞行接口)';
comment on column T_MOF_FTB_DETAIL.flight_id
  is '航班ID';
comment on column T_MOF_FTB_DETAIL.p_code
  is '人员代码';
comment on column T_MOF_FTB_DETAIL.fly_hours
  is '飞行时间';
comment on column T_MOF_FTB_DETAIL.exp_hours
  is '经历时间';
comment on column T_MOF_FTB_DETAIL.left_hours
  is '左座时间';
comment on column T_MOF_FTB_DETAIL.left_updowns
  is '左座降落次数';
comment on column T_MOF_FTB_DETAIL.left_op_manu
  is '主操作/辅助操作，可选PF/PNFPM';
comment on column T_MOF_FTB_DETAIL.right_hours
  is '右座时间';
comment on column T_MOF_FTB_DETAIL.right_updowns
  is '右座降落次数';
comment on column T_MOF_FTB_DETAIL.right_op_manu
  is '主操作/辅助操作(右)';
comment on column T_MOF_FTB_DETAIL.oper
  is '操作人';
comment on column T_MOF_FTB_DETAIL.op_time
  is '操作时间';
comment on column T_MOF_FTB_DETAIL.remarks
  is '备注';
comment on column T_MOF_FTB_DETAIL.oper_ip
  is 'IP地址';
comment on column T_MOF_FTB_DETAIL.oper_host
  is '主机名';
comment on column T_MOF_FTB_DETAIL.flight_date
  is '航班日期，冗余字段，用于建分区表';
comment on column T_MOF_FTB_DETAIL.left_night
  is '左座夜航时间';
comment on column T_MOF_FTB_DETAIL.left_teach
  is '左座教员时间';
comment on column T_MOF_FTB_DETAIL.right_night
  is '右座夜航时间';
comment on column T_MOF_FTB_DETAIL.right_teach
  is '右座教员时间';
comment on column T_MOF_FTB_DETAIL.left_downs
  is '左座起飞次数
';
comment on column T_MOF_FTB_DETAIL.right_downs
  is '右座起飞次数
';
create index IDX_MOF_FTB_DETAIL_OPTIME on T_MOF_FTB_DETAIL (OP_TIME)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_MOF_FTB_DETAIL
  add constraint PK_MOF_FTB_DETAIL primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MORCS_DUTYINFO
prompt ===============================
prompt
create table T_MORCS_DUTYINFO
(
  duty_id          VARCHAR2(50) not null,
  flight_date      DATE,
  flight_ids       VARCHAR2(1000),
  fly_hours        NUMBER(10),
  duty_time        NUMBER(10),
  duty_time_td     DATE,
  duty_time_ta     DATE,
  rest_time        NUMBER(10),
  rest_time_td     DATE,
  rest_time_ta     DATE,
  p_code           VARCHAR2(50),
  idx              VARCHAR2(50),
  last_modify_time DATE,
  valid_flag       VARCHAR2(100),
  log_op_time      DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 153M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MORCS_DUTYINFO
  is '执勤期接口';
comment on column T_MORCS_DUTYINFO.duty_id
  is '执勤期标示ID，自增长';
comment on column T_MORCS_DUTYINFO.flight_date
  is '执勤期第一班的开始日期';
comment on column T_MORCS_DUTYINFO.flight_ids
  is '执勤期内的航段ID串';
comment on column T_MORCS_DUTYINFO.fly_hours
  is '执勤期内的飞行时间';
comment on column T_MORCS_DUTYINFO.duty_time
  is '执勤时间';
comment on column T_MORCS_DUTYINFO.duty_time_td
  is '执勤开始时间';
comment on column T_MORCS_DUTYINFO.duty_time_ta
  is '执勤结束时间';
comment on column T_MORCS_DUTYINFO.rest_time
  is '执勤结束后的休息时间';
comment on column T_MORCS_DUTYINFO.rest_time_td
  is '休息开始时间';
comment on column T_MORCS_DUTYINFO.rest_time_ta
  is '休息结束时间';
comment on column T_MORCS_DUTYINFO.p_code
  is '当前人员P_CODE';
comment on column T_MORCS_DUTYINFO.idx
  is '执勤期序列';
comment on column T_MORCS_DUTYINFO.last_modify_time
  is '最后修改时间';
comment on column T_MORCS_DUTYINFO.valid_flag
  is '有效性';
comment on column T_MORCS_DUTYINFO.log_op_time
  is '存储本次处理的最后OP_TIME';

prompt
prompt Creating table T_MSG
prompt ====================
prompt
create table T_MSG
(
  msg_type    VARCHAR2(10) not null,
  msg_no      VARCHAR2(12) not null,
  key_word    VARCHAR2(100),
  msg_content VARCHAR2(2000) not null,
  msg_flag    VARCHAR2(1) default 'T' not null,
  send_yn     VARCHAR2(1) default 'N',
  unit_id     VARCHAR2(20) default 'SYS',
  issue_user  VARCHAR2(10) not null,
  issue_date  DATE not null,
  end_date    DATE,
  valid_flag  VARCHAR2(1) default 'Y' not null,
  flight_ids  VARCHAR2(1000),
  p_codes     VARCHAR2(1000)
)
partition by range (ISSUE_DATE)
(
  partition MSG_2012 values less than (TO_DATE(' 2013-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace MSG_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 2M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition MSG_2013 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace MSG_2013
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 96M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition MSG_2014 values less than (TO_DATE(' 2015-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace MSG_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 17M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition MSG_2015 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace MSG_2015
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 192K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition MSG_2016 values less than (TO_DATE(' 2017-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace MSG_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
alter table T_MSG
  add constraint PK_T_MSG primary key (MSG_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 15M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_EMAIL
prompt ==========================
prompt
create table T_MSG_EMAIL
(
  email_id      NUMBER(12) not null,
  send_user     VARCHAR2(10) not null,
  send_email    VARCHAR2(30) not null,
  send_date     DATE not null,
  recv_users    VARCHAR2(3000),
  recv_emails   VARCHAR2(4000) not null,
  cc_users      VARCHAR2(3000),
  cc_emails     VARCHAR2(4000),
  email_title   VARCHAR2(200) default '未知' not null,
  email_content VARCHAR2(4000) not null,
  email_address VARCHAR2(200) default 'N',
  module_flag   VARCHAR2(1) not null,
  flight_ids    VARCHAR2(1000),
  p_codes       VARCHAR2(1000),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_EMAIL
  is '邮件表';
comment on column T_MSG_EMAIL.email_id
  is '邮件ID';
comment on column T_MSG_EMAIL.send_user
  is '发送人';
comment on column T_MSG_EMAIL.send_email
  is '发送人Email';
comment on column T_MSG_EMAIL.send_date
  is '发送时间';
comment on column T_MSG_EMAIL.recv_users
  is '接收人(;分开)';
comment on column T_MSG_EMAIL.recv_emails
  is '接收人Email(;分开)';
comment on column T_MSG_EMAIL.cc_users
  is '抄送人(;分开)';
comment on column T_MSG_EMAIL.cc_emails
  is '抄送人Email(;分开)';
comment on column T_MSG_EMAIL.email_title
  is '邮件主题';
comment on column T_MSG_EMAIL.email_content
  is '邮件内容';
comment on column T_MSG_EMAIL.email_address
  is '邮件附件';
comment on column T_MSG_EMAIL.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_MSG_EMAIL.flight_ids
  is '关联航班串';
comment on column T_MSG_EMAIL.p_codes
  is '关联人员串';
comment on column T_MSG_EMAIL.oper
  is '操作人';
comment on column T_MSG_EMAIL.op_time
  is '操作时间';
comment on column T_MSG_EMAIL.remarks
  is '备注';
comment on column T_MSG_EMAIL.oper_ip
  is 'IP地址';
comment on column T_MSG_EMAIL.oper_host
  is '主机名';
alter table T_MSG_EMAIL
  add constraint PK_T_MSG_EMAIL primary key (EMAIL_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_FRIEND
prompt ===========================
prompt
create table T_MSG_FRIEND
(
  user_code    VARCHAR2(10) not null,
  user_code2   VARCHAR2(10) not null,
  s_type       VARCHAR2(1) default 'L' not null,
  last_contact DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_FRIEND
  is '常用联系人';
comment on column T_MSG_FRIEND.user_code
  is '用户代码';
comment on column T_MSG_FRIEND.user_code2
  is '用户代码2';
comment on column T_MSG_FRIEND.s_type
  is 'O常用L最近';
comment on column T_MSG_FRIEND.last_contact
  is 'USER_CODE与USER_CODE2最近一次联系的时间，用于最常用联系人排序用';
alter table T_MSG_FRIEND
  add constraint PK_T_MSG_FRIEND primary key (USER_CODE, USER_CODE2)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_GROUP
prompt ==========================
prompt
create table T_MSG_GROUP
(
  cluster_id   VARCHAR2(12) not null,
  cluster_name VARCHAR2(50) not null,
  cluster_desc VARCHAR2(200),
  s_type       VARCHAR2(1) default 'P' not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_GROUP
  is '群组';
comment on column T_MSG_GROUP.cluster_id
  is '群代码';
comment on column T_MSG_GROUP.cluster_name
  is '群名称';
comment on column T_MSG_GROUP.cluster_desc
  is '群描述';
comment on column T_MSG_GROUP.s_type
  is 'P员工群,X席位群M短信群';
alter table T_MSG_GROUP
  add constraint PK_T_MSG_GROUP primary key (CLUSTER_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_INFO
prompt =========================
prompt
create table T_MSG_INFO
(
  msg_info_id  NUMBER(12) not null,
  unit_id_s    NUMBER(12),
  user_code_s  VARCHAR2(10),
  unit_id_r    NUMBER(12),
  user_code_r  VARCHAR2(10),
  msg_content  VARCHAR2(1000) not null,
  send_time    DATE not null,
  offline_flag VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_INFO
  is '消息发送、接收消息内容表';
comment on column T_MSG_INFO.msg_info_id
  is '消息ID';
comment on column T_MSG_INFO.unit_id_s
  is '发送席位';
comment on column T_MSG_INFO.user_code_s
  is '发送员工';
comment on column T_MSG_INFO.unit_id_r
  is '接收席位';
comment on column T_MSG_INFO.user_code_r
  is '接收员工';
comment on column T_MSG_INFO.msg_content
  is '消息内容';
comment on column T_MSG_INFO.send_time
  is '发送时间';
comment on column T_MSG_INFO.offline_flag
  is '是否离线消息';
alter table T_MSG_INFO
  add constraint PK_T_MSG_INFO primary key (MSG_INFO_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_MEMBER
prompt ===========================
prompt
create table T_MSG_MEMBER
(
  cluster_id VARCHAR2(12) not null,
  user_code  VARCHAR2(12) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_MEMBER
  is '群组成员表';
comment on column T_MSG_MEMBER.cluster_id
  is '群代码';
comment on column T_MSG_MEMBER.user_code
  is '用户代码/席位';
alter table T_MSG_MEMBER
  add constraint PK_T_MSG_MEMBER primary key (CLUSTER_ID, USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_REV
prompt ========================
prompt
create table T_MSG_REV
(
  msg_no            VARCHAR2(12) not null,
  role_code         VARCHAR2(8),
  unit_id_recv      NUMBER(12),
  user_code_recv    VARCHAR2(10),
  user_code_read    VARCHAR2(10),
  resp_machine      VARCHAR2(50),
  machine_recv_time DATE,
  read_time         DATE,
  remarks           VARCHAR2(200),
  rev_id            NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_REV
  is '提醒告警 应答消息接收席位表';
comment on column T_MSG_REV.msg_no
  is '消息号';
comment on column T_MSG_REV.role_code
  is '接收消息角色';
comment on column T_MSG_REV.unit_id_recv
  is '接收消息席位';
comment on column T_MSG_REV.user_code_recv
  is '接收消息员工代码';
comment on column T_MSG_REV.user_code_read
  is '阅读确认消息的员工代码';
comment on column T_MSG_REV.resp_machine
  is '接收消息的机器信息';
comment on column T_MSG_REV.machine_recv_time
  is '机器接收时间';
comment on column T_MSG_REV.read_time
  is '阅读确认消息的时间';
comment on column T_MSG_REV.remarks
  is '备注信息';
comment on column T_MSG_REV.rev_id
  is 'id';
create index IDX_MSG_READTIME on T_MSG_REV (USER_CODE_READ, READ_TIME)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_MSG_RECVTIME on T_MSG_REV (USER_CODE_RECV)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_MSG_REV
  add constraint PK_T_MSG_REV primary key (REV_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_REV_SET
prompt ============================
prompt
create table T_MSG_REV_SET
(
  msg_type   VARCHAR2(10) not null,
  role_code  VARCHAR2(8) not null,
  valid_flag VARCHAR2(1) default 'Y' not null,
  wav_name   VARCHAR2(100),
  disp_type  VARCHAR2(1),
  offline_yn VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_REV_SET
  is '消息接收设置表';
comment on column T_MSG_REV_SET.msg_type
  is '消息类型';
comment on column T_MSG_REV_SET.role_code
  is '角色代码';
comment on column T_MSG_REV_SET.valid_flag
  is '有效';
comment on column T_MSG_REV_SET.wav_name
  is '提醒声音文件';
comment on column T_MSG_REV_SET.disp_type
  is 'Y弹出N提醒';
comment on column T_MSG_REV_SET.offline_yn
  is '是否接收离线消息,''Y''接收''N''不接收';
alter table T_MSG_REV_SET
  add constraint PK_T_MSG_REV_SET primary key (MSG_TYPE, ROLE_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_SMS
prompt ========================
prompt
create table T_MSG_SMS
(
  sm_id           NUMBER(12) not null,
  module_flag     VARCHAR2(10) not null,
  sm_key          VARCHAR2(100),
  sm_insert_date  DATE not null,
  sm_sender       VARCHAR2(20) not null,
  sm_sendto       VARCHAR2(4000) not null,
  sm_send_content VARCHAR2(1200) not null,
  sm_send_yn      VARCHAR2(1) default 'N',
  sm_send_date    DATE,
  sm_identifier   VARCHAR2(20),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 808M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_SMS
  is '手机短息表';
comment on column T_MSG_SMS.sm_id
  is 'ID';
comment on column T_MSG_SMS.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_MSG_SMS.sm_key
  is '关键字';
comment on column T_MSG_SMS.sm_insert_date
  is '记录插入时间';
comment on column T_MSG_SMS.sm_sender
  is '发送者工号';
comment on column T_MSG_SMS.sm_sendto
  is '发送目的手机号,用分号分隔';
comment on column T_MSG_SMS.sm_send_content
  is '发送内容';
comment on column T_MSG_SMS.sm_send_yn
  is '是否发送成功';
comment on column T_MSG_SMS.sm_send_date
  is '实际发送时间';
comment on column T_MSG_SMS.sm_identifier
  is '短信平台回执';
comment on column T_MSG_SMS.oper
  is '操作人';
comment on column T_MSG_SMS.op_time
  is '操作时间';
comment on column T_MSG_SMS.remarks
  is '备注';
comment on column T_MSG_SMS.oper_ip
  is 'IP地址';
comment on column T_MSG_SMS.oper_host
  is '主机名';
alter table T_MSG_SMS
  add constraint PK_T_MSG_SMS primary key (SM_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 96M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_SMS20150812
prompt ================================
prompt
create table T_MSG_SMS20150812
(
  sm_id           NUMBER(12) not null,
  module_flag     VARCHAR2(10) not null,
  sm_key          VARCHAR2(100),
  sm_insert_date  DATE not null,
  sm_sender       VARCHAR2(20) not null,
  sm_sendto       VARCHAR2(4000) not null,
  sm_send_content VARCHAR2(1200) not null,
  sm_send_yn      VARCHAR2(1),
  sm_send_date    DATE,
  sm_identifier   VARCHAR2(20),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_TYPE
prompt =========================
prompt
create table T_MSG_TYPE
(
  msg_type_parent VARCHAR2(10) not null,
  msg_type        VARCHAR2(10) not null,
  msg_type_name   VARCHAR2(30) not null,
  msg_model       VARCHAR2(500),
  msg_desc        VARCHAR2(200),
  msg_level       VARCHAR2(1) default '1',
  msg_phone       VARCHAR2(1) default 'N',
  msg_rw          VARCHAR2(1),
  msg_frequency   NUMBER(6),
  idx             NUMBER(6),
  key_word        VARCHAR2(200),
  valid_flag      VARCHAR2(1) default 'Y' not null,
  form_name       VARCHAR2(100),
  abnormal_flag   VARCHAR2(1) default 'Y'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_TYPE
  is '消息类型表';
comment on column T_MSG_TYPE.msg_type_parent
  is '消息父类';
comment on column T_MSG_TYPE.msg_type
  is '消息类型';
comment on column T_MSG_TYPE.msg_type_name
  is '消息类型名称';
comment on column T_MSG_TYPE.msg_model
  is '消息模板';
comment on column T_MSG_TYPE.msg_desc
  is '消息说明';
comment on column T_MSG_TYPE.msg_level
  is '消息等级1普通2比较重要3重要';
comment on column T_MSG_TYPE.msg_phone
  is '发手机短信否';
comment on column T_MSG_TYPE.msg_rw
  is 'R提醒W告警';
comment on column T_MSG_TYPE.msg_frequency
  is '提醒告警频率';
comment on column T_MSG_TYPE.idx
  is '顺序';
comment on column T_MSG_TYPE.key_word
  is '关键字';
comment on column T_MSG_TYPE.valid_flag
  is '有效标志';
comment on column T_MSG_TYPE.form_name
  is '关联业务窗口';
comment on column T_MSG_TYPE.abnormal_flag
  is '航班监控异常类型启用标识';
alter table T_MSG_TYPE
  add constraint PK_T_MSG_TYPE primary key (MSG_TYPE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_MSG_UNIT
prompt =========================
prompt
create table T_MSG_UNIT
(
  unit_id      NUMBER(12) not null,
  unit_id2     NUMBER(12) not null,
  s_type       VARCHAR2(1) default 'L' not null,
  last_contact DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_MSG_UNIT
  is '常用联系席位';
comment on column T_MSG_UNIT.unit_id
  is '席位ID';
comment on column T_MSG_UNIT.unit_id2
  is '席位ID2';
comment on column T_MSG_UNIT.s_type
  is 'O常用L最近';
comment on column T_MSG_UNIT.last_contact
  is 'UNIT_ID与UNIT_ID2最近一次联系的时间，用于最常用联系人排序用';
alter table T_MSG_UNIT
  add constraint PK_T_MSG_UNIT primary key (UNIT_ID, UNIT_ID2)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PAIRING_CREW_LOG
prompt =================================
prompt
create table T_PAIRING_CREW_LOG
(
  id               NUMBER(11) not null,
  flight_id        NUMBER(11),
  old_pairing_line NUMBER(11),
  is_use           VARCHAR2(1) default 'Y',
  del_p_code       VARCHAR2(10),
  crew_owner       VARCHAR2(4),
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  is_send_mes      VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PAIRING_CREW_LOG
  is '删除连线日志(机务人员)';
comment on column T_PAIRING_CREW_LOG.id
  is '主键ID';
comment on column T_PAIRING_CREW_LOG.flight_id
  is '航班ID';
comment on column T_PAIRING_CREW_LOG.old_pairing_line
  is '原连线号';
comment on column T_PAIRING_CREW_LOG.is_use
  is '是否关注';
comment on column T_PAIRING_CREW_LOG.del_p_code
  is '删除人';
comment on column T_PAIRING_CREW_LOG.crew_owner
  is '执飞单位';
comment on column T_PAIRING_CREW_LOG.oper
  is '操作人';
comment on column T_PAIRING_CREW_LOG.op_time
  is '操作时间';
comment on column T_PAIRING_CREW_LOG.oper_ip
  is '操作人IP';
comment on column T_PAIRING_CREW_LOG.oper_host
  is '操作人主机名';
comment on column T_PAIRING_CREW_LOG.is_send_mes
  is '是否发送短信';
alter table T_PAIRING_CREW_LOG
  add constraint PK_PAIRING_CREW_LOG primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PAIRING_CREW_LOG123
prompt ====================================
prompt
create table T_PAIRING_CREW_LOG123
(
  flight_id        NUMBER(11),
  old_pairing_line NUMBER(11),
  is_use           VARCHAR2(1),
  del_p_code       VARCHAR2(10),
  crew_owner       VARCHAR2(4),
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  id               NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PCODE_FENS
prompt ===========================
prompt
create table T_PCODE_FENS
(
  p_code        VARCHAR2(10) not null,
  fens          NUMBER(6,2),
  op_time       DATE,
  nonflightdate DATE,
  fenflg        VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PCODE_FENS
  is '航班后疲劳值';
comment on column T_PCODE_FENS.p_code
  is '人员编号';
comment on column T_PCODE_FENS.fens
  is '非航班疲劳值';
comment on column T_PCODE_FENS.op_time
  is '操作时间';
comment on column T_PCODE_FENS.nonflightdate
  is '非航班日期';
comment on column T_PCODE_FENS.fenflg
  is '疲劳分类。 TC：教员带飞本场 TM：教员带飞模拟机  F：复训  G：管理人员';

prompt
prompt Creating table T_PLAN
prompt =====================
prompt
create table T_PLAN
(
  plan_id         VARCHAR2(20) not null,
  plan_name       VARCHAR2(50),
  plan_type       VARCHAR2(50),
  data_source     VARCHAR2(2),
  plan_pub_flag   VARCHAR2(2) default 'N',
  create_date     DATE,
  start_date      DATE,
  end_date        DATE,
  ac_types        VARCHAR2(500),
  filiales        VARCHAR2(500),
  valid_flag      VARCHAR2(2) default 'Y',
  plan_params     VARCHAR2(1000),
  remarks         VARCHAR2(1000),
  oper            VARCHAR2(10),
  op_time         DATE,
  oper_ip         VARCHAR2(50),
  oper_host       VARCHAR2(50),
  is_initial      VARCHAR2(2) default 'N',
  directory_id    NUMBER not null,
  visit_lever     NUMBER default 0 not null,
  pairing_plan_id VARCHAR2(20),
  open_time       DATE
)
tablespace PLAN_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN
  is '方案表';
comment on column T_PLAN.plan_id
  is '方案ID';
comment on column T_PLAN.plan_name
  is '方案名称';
comment on column T_PLAN.plan_type
  is '方案类型(P:组环,A:排班)';
comment on column T_PLAN.data_source
  is '数据来源';
comment on column T_PLAN.plan_pub_flag
  is '方案是否发布';
comment on column T_PLAN.create_date
  is '创建日期';
comment on column T_PLAN.start_date
  is '开始日期';
comment on column T_PLAN.end_date
  is '结束日期';
comment on column T_PLAN.ac_types
  is '机型';
comment on column T_PLAN.filiales
  is '分子公司';
comment on column T_PLAN.valid_flag
  is '是否有效';
comment on column T_PLAN.plan_params
  is '参数';
comment on column T_PLAN.remarks
  is '备注';
comment on column T_PLAN.oper
  is '操作人';
comment on column T_PLAN.op_time
  is '操作时间';
comment on column T_PLAN.oper_ip
  is '操作IP';
comment on column T_PLAN.oper_host
  is '操作主机';
comment on column T_PLAN.is_initial
  is '是否已经初始化';
comment on column T_PLAN.directory_id
  is '方案存放目录';
comment on column T_PLAN.visit_lever
  is '访问级别( 0:私有，1:公有 )';
comment on column T_PLAN.pairing_plan_id
  is '组环方案ID';
alter table T_PLAN
  add constraint PK_PLAN primary key (PLAN_ID)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PLAN_BASE_FLTSCH
prompt =================================
prompt
create table T_PLAN_BASE_FLTSCH
(
  plan_id             VARCHAR2(20) not null,
  flight_id           NUMBER(11) not null,
  flight_date         DATE,
  carrier             VARCHAR2(10),
  flight_no           VARCHAR2(15),
  plan_departure      VARCHAR2(4),
  departure_airport   VARCHAR2(4),
  plan_arrival        VARCHAR2(4),
  arrival_airport     VARCHAR2(4),
  std                 DATE,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1) default '0',
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1) default 'A',
  sch_com_flag        VARCHAR2(1) default 'N',
  sch_ver_flag        VARCHAR2(1) default 'N',
  sch_pub_flag        VARCHAR2(1) default 'N',
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1) default 'N',
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1) default 'N',
  ftb_rec_flag        VARCHAR2(1) default 'N',
  cust_app_flag       VARCHAR2(1) default 'N',
  fly_hours           NUMBER(6) default 0,
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4) default 0,
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1) default 'P',
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1) default 'N',
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_BASE_FLTSCH2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_FLTSCH2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_FLTSCH2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_FLTSCH2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_FLTSCH2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_FLTSCH2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_FLTSCH2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_FLTSCH2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_BASE_FLTSCH
  is '航班计划基础表';
comment on column T_PLAN_BASE_FLTSCH.plan_id
  is '方案ID';
comment on column T_PLAN_BASE_FLTSCH.flight_id
  is '航班ID';
comment on column T_PLAN_BASE_FLTSCH.flight_date
  is '航班日期';
comment on column T_PLAN_BASE_FLTSCH.carrier
  is '承运人';
comment on column T_PLAN_BASE_FLTSCH.flight_no
  is '航班号';
comment on column T_PLAN_BASE_FLTSCH.plan_departure
  is '计划起飞机场';
comment on column T_PLAN_BASE_FLTSCH.departure_airport
  is '实际起飞机场';
comment on column T_PLAN_BASE_FLTSCH.plan_arrival
  is '计划到达机场';
comment on column T_PLAN_BASE_FLTSCH.arrival_airport
  is '实际到达机场';
comment on column T_PLAN_BASE_FLTSCH.std
  is '计划起飞时间';
comment on column T_PLAN_BASE_FLTSCH.etd
  is '预计起飞时间';
comment on column T_PLAN_BASE_FLTSCH.atd
  is '实际起飞时间';
comment on column T_PLAN_BASE_FLTSCH.sta
  is '计划到达时间';
comment on column T_PLAN_BASE_FLTSCH.eta
  is '预计到达时间';
comment on column T_PLAN_BASE_FLTSCH.ata
  is '实际到达时间';
comment on column T_PLAN_BASE_FLTSCH.d_or_i
  is '国际/国内（D:国内,I:国际,R:地区）';
comment on column T_PLAN_BASE_FLTSCH.flight_type
  is '航班性质';
comment on column T_PLAN_BASE_FLTSCH.ac_type
  is '机型';
comment on column T_PLAN_BASE_FLTSCH.ac_reg
  is '机号';
comment on column T_PLAN_BASE_FLTSCH.flg_delay
  is '延误标记';
comment on column T_PLAN_BASE_FLTSCH.flg_vr
  is '返航/备降标记';
comment on column T_PLAN_BASE_FLTSCH.flg_cs
  is '取消标记(C计划取消D取消R恢复)';
comment on column T_PLAN_BASE_FLTSCH.flg_patch
  is '是否返航/备降新增段';
comment on column T_PLAN_BASE_FLTSCH.off_wheel
  is '撤轮档时间';
comment on column T_PLAN_BASE_FLTSCH.on_wheel
  is '挡轮档时间';
comment on column T_PLAN_BASE_FLTSCH.ac_owner
  is '飞机执管单位';
comment on column T_PLAN_BASE_FLTSCH.crew_owner
  is '飞行执飞单位';
comment on column T_PLAN_BASE_FLTSCH.stew_owner
  is '乘务员执飞单位';
comment on column T_PLAN_BASE_FLTSCH.plce_owner
  is '空警执飞单位';
comment on column T_PLAN_BASE_FLTSCH.mant_owner
  is '机务执飞单位';
comment on column T_PLAN_BASE_FLTSCH.mm_leg_id
  is 'MM系统LEG_ID';
comment on column T_PLAN_BASE_FLTSCH.leg_sequence_number
  is '航段序号';
comment on column T_PLAN_BASE_FLTSCH.is_manual
  is '手工新增((0MM导入1手工新增)';
comment on column T_PLAN_BASE_FLTSCH.onward_flight
  is '后续航班';
comment on column T_PLAN_BASE_FLTSCH.ac_layover
  is '后续航班跨天数';
comment on column T_PLAN_BASE_FLTSCH.flight_flag
  is '航班标记(A正常B备份C本场D摆渡)';
comment on column T_PLAN_BASE_FLTSCH.sch_com_flag
  is '计划提交标志N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.sch_ver_flag
  is '计划审核标志N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.sch_pub_flag
  is '计划发布标志N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.tele_time
  is '发报时间';
comment on column T_PLAN_BASE_FLTSCH.tele_oper
  is '发报人';
comment on column T_PLAN_BASE_FLTSCH.tele_flag
  is '发报标记N-O(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.ftb_no
  is 'FTB编号';
comment on column T_PLAN_BASE_FLTSCH.ftb_prn_flag
  is 'FTB打印标志N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.ftb_rec_flag
  is 'FTB回收标志N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.cust_app_flag
  is '出入境单生成标志N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.fly_hours
  is '经验飞行时间(DOC获取)';
comment on column T_PLAN_BASE_FLTSCH.crew_link_line
  is '飞行联班';
comment on column T_PLAN_BASE_FLTSCH.stew_link_line
  is '乘务联班';
comment on column T_PLAN_BASE_FLTSCH.plce_link_line
  is '空警联班';
comment on column T_PLAN_BASE_FLTSCH.flight_fen
  is '航班积分';
comment on column T_PLAN_BASE_FLTSCH.oper
  is '操作人';
comment on column T_PLAN_BASE_FLTSCH.op_time
  is '操作时间';
comment on column T_PLAN_BASE_FLTSCH.remarks
  is '备注';
comment on column T_PLAN_BASE_FLTSCH.oper_ip
  is 'IP地址';
comment on column T_PLAN_BASE_FLTSCH.oper_host
  is '主机名';
comment on column T_PLAN_BASE_FLTSCH.p_or_c
  is '客货标志';
comment on column T_PLAN_BASE_FLTSCH.fxw_id
  is '飞行网航班ID（导入历史数据用）';
comment on column T_PLAN_BASE_FLTSCH.flg_vip
  is 'vip';
comment on column T_PLAN_BASE_FLTSCH.duty_flag
  is '值班锁N-X(看过)-Y(通过)';
comment on column T_PLAN_BASE_FLTSCH.from_sm
  is '数据来源（来自SM）';
comment on column T_PLAN_BASE_FLTSCH.co_old
  is '原飞行执飞单位';
comment on column T_PLAN_BASE_FLTSCH.so_old
  is '原乘务执飞单位';
comment on column T_PLAN_BASE_FLTSCH.po_old
  is '原空警执飞单位';
comment on column T_PLAN_BASE_FLTSCH.mo_old
  is '原机组跟班单位';
comment on column T_PLAN_BASE_FLTSCH.dep_bay
  is '起飞机场停机位';
comment on column T_PLAN_BASE_FLTSCH.arr_bay
  is '到达机场停机位';
comment on column T_PLAN_BASE_FLTSCH.fltdate
  is 'AOC航班日期';
comment on column T_PLAN_BASE_FLTSCH.ao_old
  is '原执管单位';
comment on column T_PLAN_BASE_FLTSCH.flight_id_ref
  is '所指向的正常航班FLIGHT_ID';
comment on column T_PLAN_BASE_FLTSCH.flt_season
  is '版本结束日期';
comment on column T_PLAN_BASE_FLTSCH.page_flag
  is '分页（来回程跨天）标志';
comment on column T_PLAN_BASE_FLTSCH.ac_link_line
  is '运力号(手工生成)';
comment on column T_PLAN_BASE_FLTSCH.sal_id
  is '上航FOC航班ID（导入历史数据用）';
comment on column T_PLAN_BASE_FLTSCH.gyts
  is '过夜天数';
comment on column T_PLAN_BASE_FLTSCH.turnon
  is '现保开车时间';
comment on column T_PLAN_BASE_FLTSCH.block_off_time
  is '现保撤轮挡时间';
comment on column T_PLAN_BASE_FLTSCH.block_on_time
  is '现保上轮挡时间';
comment on column T_PLAN_BASE_FLTSCH.turnoff
  is '现保关车时间';
comment on column T_PLAN_BASE_FLTSCH.block_time
  is '现保接口最后修改时间';
comment on column T_PLAN_BASE_FLTSCH.mm_leg_id_add
  is 'MM系统LEG_ID(大于等于T+3)';

prompt
prompt Creating table T_PLAN_BASE_PAIRING
prompt ==================================
prompt
create table T_PLAN_BASE_PAIRING
(
  plan_id                VARCHAR2(20) not null,
  flight_date            DATE not null,
  crew_link_line         NUMBER(11) not null,
  module_flag            VARCHAR2(1) not null,
  crew_pairing_line      NUMBER(11),
  flight_ids             VARCHAR2(200),
  ac_type_crew           VARCHAR2(10),
  ac_type                VARCHAR2(10),
  ac_reg                 VARCHAR2(10),
  flight_com             VARCHAR2(60),
  flight_voyage          VARCHAR2(100),
  flight_code            VARCHAR2(60),
  depa_airport           VARCHAR2(4),
  arri_airport           VARCHAR2(4),
  td_punch               NUMBER(3),
  td_before              NUMBER(3),
  td                     DATE not null,
  ta                     DATE not null,
  ta_after               NUMBER(3),
  d_or_i                 VARCHAR2(1),
  flight_type            VARCHAR2(1),
  fly_hours              NUMBER(4) default 0,
  filiale                VARCHAR2(10),
  base                   VARCHAR2(4),
  carrier                VARCHAR2(2),
  p_or_c                 VARCHAR2(1) default 'P',
  crew_id                NUMBER(9),
  flight_flag            VARCHAR2(1),
  icao_flag              VARCHAR2(1),
  foreign_flag           VARCHAR2(1),
  special_flag           VARCHAR2(1),
  fxw_id                 NUMBER(11),
  rec_id                 NUMBER(11),
  oper                   VARCHAR2(10),
  op_time                DATE,
  remarks                VARCHAR2(200),
  oper_ip                VARCHAR2(15),
  oper_host              VARCHAR2(50),
  sch_pub_flag           VARCHAR2(1) default 'N',
  dep_code               VARCHAR2(10),
  crew_pairing_line_lock VARCHAR2(1) default 'N',
  duty_line              NUMBER(11),
  cat_flag               VARCHAR2(1),
  sal_crew_link_line     NUMBER(11),
  fixed_flag             VARCHAR2(1),
  td_min                 DATE
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_BASE_PAIRING2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_PAIRING2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_PAIRING2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_PAIRING2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_PAIRING2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_PAIRING2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_PAIRING2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_PAIRING2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_BASE_PAIRING
  is '组环基础表';
comment on column T_PLAN_BASE_PAIRING.plan_id
  is '方案ID';
comment on column T_PLAN_BASE_PAIRING.flight_date
  is '日期';
comment on column T_PLAN_BASE_PAIRING.crew_link_line
  is '连班号';
comment on column T_PLAN_BASE_PAIRING.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_PLAN_BASE_PAIRING.crew_pairing_line
  is '联线号';
comment on column T_PLAN_BASE_PAIRING.flight_ids
  is 'FLIGHT_ID串，用/分隔';
comment on column T_PLAN_BASE_PAIRING.ac_type_crew
  is '机型组';
comment on column T_PLAN_BASE_PAIRING.ac_type
  is '机型';
comment on column T_PLAN_BASE_PAIRING.ac_reg
  is '机号';
comment on column T_PLAN_BASE_PAIRING.flight_com
  is '航班';
comment on column T_PLAN_BASE_PAIRING.flight_voyage
  is '航程';
comment on column T_PLAN_BASE_PAIRING.flight_code
  is '机场3码串';
comment on column T_PLAN_BASE_PAIRING.depa_airport
  is '发站';
comment on column T_PLAN_BASE_PAIRING.arri_airport
  is '到站';
comment on column T_PLAN_BASE_PAIRING.td_punch
  is '签到时间';
comment on column T_PLAN_BASE_PAIRING.td_before
  is '进场时间';
comment on column T_PLAN_BASE_PAIRING.td
  is '开始时间';
comment on column T_PLAN_BASE_PAIRING.ta
  is '结束时间';
comment on column T_PLAN_BASE_PAIRING.ta_after
  is '离场时间';
comment on column T_PLAN_BASE_PAIRING.d_or_i
  is '国内国际';
comment on column T_PLAN_BASE_PAIRING.flight_type
  is '航班性质';
comment on column T_PLAN_BASE_PAIRING.fly_hours
  is '飞行小时';
comment on column T_PLAN_BASE_PAIRING.filiale
  is '分公司';
comment on column T_PLAN_BASE_PAIRING.base
  is '基地';
comment on column T_PLAN_BASE_PAIRING.carrier
  is '承运人';
comment on column T_PLAN_BASE_PAIRING.p_or_c
  is '客货标志';
comment on column T_PLAN_BASE_PAIRING.crew_id
  is '搭配方案';
comment on column T_PLAN_BASE_PAIRING.flight_flag
  is '航班标记(正常,备份,搭机)';
comment on column T_PLAN_BASE_PAIRING.icao_flag
  is '是否ICAO航线';
comment on column T_PLAN_BASE_PAIRING.foreign_flag
  is '外籍飞行标志';
comment on column T_PLAN_BASE_PAIRING.special_flag
  is '特殊机场标志';
comment on column T_PLAN_BASE_PAIRING.fxw_id
  is '对应飞行网ID(导入飞行网历史数据用)';
comment on column T_PLAN_BASE_PAIRING.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步:seq_intf_recid_pairing_efb';
comment on column T_PLAN_BASE_PAIRING.oper
  is '操作人';
comment on column T_PLAN_BASE_PAIRING.op_time
  is ' 操作时间';
comment on column T_PLAN_BASE_PAIRING.remarks
  is '备注';
comment on column T_PLAN_BASE_PAIRING.oper_ip
  is 'IP地址';
comment on column T_PLAN_BASE_PAIRING.oper_host
  is '主机名';
comment on column T_PLAN_BASE_PAIRING.sch_pub_flag
  is '计划发布标志(此字段已不再使用!!)';
comment on column T_PLAN_BASE_PAIRING.dep_code
  is '任务环分配部门(为空全部部门都可以飞)';
comment on column T_PLAN_BASE_PAIRING.crew_pairing_line_lock
  is '联线锁';
comment on column T_PLAN_BASE_PAIRING.duty_line
  is '任务号';
comment on column T_PLAN_BASE_PAIRING.cat_flag
  is '是否CAT航线';
comment on column T_PLAN_BASE_PAIRING.sal_crew_link_line
  is '上航crew_link_line，导上航数据时使用';
comment on column T_PLAN_BASE_PAIRING.fixed_flag
  is '是否是固定发车时间，针对货航使用。Y是N否';
comment on column T_PLAN_BASE_PAIRING.td_min
  is '时间区间(开始)';
alter table T_PLAN_BASE_PAIRING
  add constraint PK_PLAN_BASE_PAIRING primary key (PLAN_ID, FLIGHT_DATE, CREW_LINK_LINE)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_BASE_PAIRING
  add constraint FK_PLAN_BASE_PAIRING foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);

prompt
prompt Creating table T_PLAN_BASE_ROSTER
prompt =================================
prompt
create table T_PLAN_BASE_ROSTER
(
  plan_id         VARCHAR2(20) not null,
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1) default 'N',
  backup_yn       VARCHAR2(1) default 'N',
  carry_yn        VARCHAR2(1) default 'N',
  carry_after_yn  VARCHAR2(1) default 'N',
  check_yn        VARCHAR2(1) default 'N',
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1) default 'Y',
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1) default 'Y',
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1) default 'N',
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11),
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6) default 0,
  night_days      NUMBER(2) default 0,
  modify_time     DATE,
  fly_hours1      NUMBER(6) default 0,
  fly_hours2      NUMBER(6) default 0,
  pub_time        DATE,
  pairing_plan_id VARCHAR2(20)
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_BASE_ROSTER2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_ROSTER2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_ROSTER2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_ROSTER2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_ROSTER2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_ROSTER2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_BASE_ROSTER2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_BASE_ROSTER2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_BASE_ROSTER
  is '排班基础表';
comment on column T_PLAN_BASE_ROSTER.plan_id
  is '方案ID';
comment on column T_PLAN_BASE_ROSTER.flight_id
  is '航班ID';
comment on column T_PLAN_BASE_ROSTER.flight_date
  is '航班日期';
comment on column T_PLAN_BASE_ROSTER.p_code
  is '人员代码';
comment on column T_PLAN_BASE_ROSTER.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_PLAN_BASE_ROSTER.auto_flag
  is '自动排班标志,
H-手动
A-自动';
comment on column T_PLAN_BASE_ROSTER.fjs_order
  is '机上位置';
comment on column T_PLAN_BASE_ROSTER.rank_no
  is '机上岗位';
comment on column T_PLAN_BASE_ROSTER.ts_flag
  is '兼职码(字典)';
comment on column T_PLAN_BASE_ROSTER.check_type
  is '检查类型(字典)';
comment on column T_PLAN_BASE_ROSTER.tech_no_i
  is '公司授权';
comment on column T_PLAN_BASE_ROSTER.tech_no_z
  is '排班授权';
comment on column T_PLAN_BASE_ROSTER.warning_content
  is '违反排班规则';
comment on column T_PLAN_BASE_ROSTER.modify_reason
  is '修改原因';
comment on column T_PLAN_BASE_ROSTER.adjust_yn
  is '调整标志(Y/N)';
comment on column T_PLAN_BASE_ROSTER.backup_yn
  is '备上标记(Y/N)';
comment on column T_PLAN_BASE_ROSTER.carry_yn
  is '航前接车(Y/N)';
comment on column T_PLAN_BASE_ROSTER.carry_after_yn
  is '航后接车(Y/N)';
comment on column T_PLAN_BASE_ROSTER.check_yn
  is '签注结果(Y/N)';
comment on column T_PLAN_BASE_ROSTER.old_p_code
  is '调整人员代码';
comment on column T_PLAN_BASE_ROSTER.ver_yn
  is '审批标记';
comment on column T_PLAN_BASE_ROSTER.ver_code
  is '审批类别(字典)';
comment on column T_PLAN_BASE_ROSTER.ver_desc
  is '审批备注';
comment on column T_PLAN_BASE_ROSTER.heath_yn
  is '体检结果(Y/N)';
comment on column T_PLAN_BASE_ROSTER.heathy
  is '体检备注';
comment on column T_PLAN_BASE_ROSTER.hotel_yn
  is '宾馆(N不需要X需要没有安排Y已经安排)';
comment on column T_PLAN_BASE_ROSTER.oper
  is '操作人';
comment on column T_PLAN_BASE_ROSTER.op_time
  is '操作时间';
comment on column T_PLAN_BASE_ROSTER.remarks
  is '备注';
comment on column T_PLAN_BASE_ROSTER.oper_ip
  is 'IP地址';
comment on column T_PLAN_BASE_ROSTER.oper_host
  is '主机名';
comment on column T_PLAN_BASE_ROSTER.fxw_id
  is '对应飞行网ID(导入飞行网历史数据用)';
comment on column T_PLAN_BASE_ROSTER.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_PLAN_BASE_ROSTER.hotel_id
  is '酒店ID';
comment on column T_PLAN_BASE_ROSTER.fly_hours
  is '飞行时间(计划DOC,回收取FTB)';
comment on column T_PLAN_BASE_ROSTER.night_days
  is '过夜天数(发布计算)';
comment on column T_PLAN_BASE_ROSTER.modify_time
  is '修改人员时间戳';
comment on column T_PLAN_BASE_ROSTER.fly_hours1
  is '计算到当月飞行时间';
comment on column T_PLAN_BASE_ROSTER.fly_hours2
  is '计算到下月飞行时间';
comment on column T_PLAN_BASE_ROSTER.pub_time
  is '发布时间';
comment on column T_PLAN_BASE_ROSTER.pairing_plan_id
  is '组环方案ID';
alter table T_PLAN_BASE_ROSTER
  add constraint PK_PLAN_BASE_ROSTER primary key (PLAN_ID, FLIGHT_ID, P_CODE)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_BASE_ROSTER
  add constraint UK_PLAN_BASE_ROSTER unique (PLAN_ID, FLIGHT_ID, FJS_ORDER)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_BASE_ROSTER
  add constraint FK_PLAN_BASE_ROSTER foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);
alter table T_PLAN_BASE_ROSTER
  add constraint FK_PLAN_BASE_ROSTER_FLIGHT_ID foreign key (FLIGHT_ID)
  references T_FLT_SCHEDULE (FLIGHT_ID);
alter table T_PLAN_BASE_ROSTER
  add constraint FK_PLAN_BASE_ROSTER_P_CODE foreign key (P_CODE)
  references T_HR_CREW (P_CODE);

prompt
prompt Creating table T_PLAN_BASE_ROSTER_A
prompt ===================================
prompt
create table T_PLAN_BASE_ROSTER_A
(
  plan_id          VARCHAR2(20) not null,
  flight_date      DATE not null,
  p_code           VARCHAR2(10) not null,
  month_fly_hours  NUMBER(9) default 0 not null,
  month3_fly_hours NUMBER(9) default 0 not null,
  year_fly_hours   NUMBER(9) default 0 not null
)
tablespace PLAN_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_BASE_ROSTER_A
  is '飞行时间基础表';
comment on column T_PLAN_BASE_ROSTER_A.plan_id
  is '方案ID';
comment on column T_PLAN_BASE_ROSTER_A.flight_date
  is '航班日期';
comment on column T_PLAN_BASE_ROSTER_A.p_code
  is '人员代码';
comment on column T_PLAN_BASE_ROSTER_A.month_fly_hours
  is '月飞行时间';
comment on column T_PLAN_BASE_ROSTER_A.month3_fly_hours
  is '3月飞行时间';
comment on column T_PLAN_BASE_ROSTER_A.year_fly_hours
  is '年飞行时间';
alter table T_PLAN_BASE_ROSTER_A
  add constraint PK_PLAN_BASE_ROSTER_A primary key (PLAN_ID, FLIGHT_DATE, P_CODE)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_BASE_ROSTER_A
  add constraint FK_PLAN_BASE_ROSTER_A foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);
alter table T_PLAN_BASE_ROSTER_A
  add constraint FK_PLAN_BASE_ROSTER_A_P_CODE foreign key (P_CODE)
  references T_HR_CREW (P_CODE);

prompt
prompt Creating table T_PLAN_CHANGE_FLTSCH
prompt ===================================
prompt
create table T_PLAN_CHANGE_FLTSCH
(
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10) not null,
  flight_no           VARCHAR2(15) not null,
  plan_departure      VARCHAR2(4) not null,
  departure_airport   VARCHAR2(4),
  plan_arrival        VARCHAR2(4) not null,
  arrival_airport     VARCHAR2(4),
  std                 DATE not null,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE not null,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1) default '0',
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1) default 'A',
  sch_com_flag        VARCHAR2(1) default 'N',
  sch_ver_flag        VARCHAR2(1) default 'N',
  sch_pub_flag        VARCHAR2(1) default 'N',
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1) default 'N',
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1) default 'N',
  ftb_rec_flag        VARCHAR2(1) default 'N',
  cust_app_flag       VARCHAR2(1) default 'N',
  fly_hours           NUMBER(6) default 0,
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4) default 0,
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1) default 'P',
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1) default 'N',
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13),
  isdelete            NUMBER(1) default 1,
  plan_id             NUMBER(18)
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_CHANGE_FLTSCH2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_CHANGE_FLTSCH2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_CHANGE_FLTSCH2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_CHANGE_FLTSCH2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_CHANGE_FLTSCH2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_CHANGE_FLTSCH2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_CHANGE_FLTSCH2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_CHANGE_FLTSCH2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_CHANGE_FLTSCH
  is '航班计划变更表';
comment on column T_PLAN_CHANGE_FLTSCH.flight_id
  is '航班ID  seq_PLAN_CHANGE_FLTSCH';
comment on column T_PLAN_CHANGE_FLTSCH.flight_date
  is '航班日期';
comment on column T_PLAN_CHANGE_FLTSCH.carrier
  is '承运人';
comment on column T_PLAN_CHANGE_FLTSCH.flight_no
  is '航班号';
comment on column T_PLAN_CHANGE_FLTSCH.plan_departure
  is '计划起飞机场';
comment on column T_PLAN_CHANGE_FLTSCH.departure_airport
  is '实际起飞机场';
comment on column T_PLAN_CHANGE_FLTSCH.plan_arrival
  is '计划到达机场';
comment on column T_PLAN_CHANGE_FLTSCH.arrival_airport
  is '实际到达机场';
comment on column T_PLAN_CHANGE_FLTSCH.std
  is '计划起飞时间';
comment on column T_PLAN_CHANGE_FLTSCH.etd
  is '预计起飞时间';
comment on column T_PLAN_CHANGE_FLTSCH.atd
  is '实际起飞时间';
comment on column T_PLAN_CHANGE_FLTSCH.sta
  is '计划到达时间';
comment on column T_PLAN_CHANGE_FLTSCH.eta
  is '预计到达时间';
comment on column T_PLAN_CHANGE_FLTSCH.ata
  is '实际到达时间';
comment on column T_PLAN_CHANGE_FLTSCH.d_or_i
  is '国际/国内（D:国内,I:国际,R:地区）';
comment on column T_PLAN_CHANGE_FLTSCH.flight_type
  is '航班性质';
comment on column T_PLAN_CHANGE_FLTSCH.ac_type
  is '机型';
comment on column T_PLAN_CHANGE_FLTSCH.ac_reg
  is '机号';
comment on column T_PLAN_CHANGE_FLTSCH.flg_delay
  is '延误标记';
comment on column T_PLAN_CHANGE_FLTSCH.flg_vr
  is '返航/备降标记';
comment on column T_PLAN_CHANGE_FLTSCH.flg_cs
  is '取消标记(C计划取消D取消R恢复)';
comment on column T_PLAN_CHANGE_FLTSCH.flg_patch
  is '是否返航/备降新增段';
comment on column T_PLAN_CHANGE_FLTSCH.off_wheel
  is '撤轮档时间';
comment on column T_PLAN_CHANGE_FLTSCH.on_wheel
  is '挡轮档时间';
comment on column T_PLAN_CHANGE_FLTSCH.ac_owner
  is '飞机执管单位';
comment on column T_PLAN_CHANGE_FLTSCH.crew_owner
  is '飞行执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.stew_owner
  is '乘务员执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.plce_owner
  is '空警执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.mant_owner
  is '机务执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.mm_leg_id
  is 'MM系统LEG_ID';
comment on column T_PLAN_CHANGE_FLTSCH.leg_sequence_number
  is '航段序号';
comment on column T_PLAN_CHANGE_FLTSCH.is_manual
  is '手工新增((0MM导入1手工新增)';
comment on column T_PLAN_CHANGE_FLTSCH.onward_flight
  is '后续航班';
comment on column T_PLAN_CHANGE_FLTSCH.ac_layover
  is '后续航班跨天数';
comment on column T_PLAN_CHANGE_FLTSCH.flight_flag
  is '航班标记(A正常B备份C本场D摆渡)';
comment on column T_PLAN_CHANGE_FLTSCH.sch_com_flag
  is '计划提交标志N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.sch_ver_flag
  is '计划审核标志N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.sch_pub_flag
  is '计划发布标志N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.tele_time
  is '发报时间';
comment on column T_PLAN_CHANGE_FLTSCH.tele_oper
  is '发报人';
comment on column T_PLAN_CHANGE_FLTSCH.tele_flag
  is '发报标记N-O(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.ftb_no
  is 'FTB编号';
comment on column T_PLAN_CHANGE_FLTSCH.ftb_prn_flag
  is 'FTB打印标志N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.ftb_rec_flag
  is 'FTB回收标志N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.cust_app_flag
  is '出入境单生成标志N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.fly_hours
  is '经验飞行时间(DOC获取)';
comment on column T_PLAN_CHANGE_FLTSCH.crew_link_line
  is '飞行联班';
comment on column T_PLAN_CHANGE_FLTSCH.stew_link_line
  is '乘务联班';
comment on column T_PLAN_CHANGE_FLTSCH.plce_link_line
  is '空警联班';
comment on column T_PLAN_CHANGE_FLTSCH.flight_fen
  is '航班积分';
comment on column T_PLAN_CHANGE_FLTSCH.oper
  is '操作人';
comment on column T_PLAN_CHANGE_FLTSCH.op_time
  is '操作时间';
comment on column T_PLAN_CHANGE_FLTSCH.remarks
  is '备注';
comment on column T_PLAN_CHANGE_FLTSCH.oper_ip
  is 'IP地址';
comment on column T_PLAN_CHANGE_FLTSCH.oper_host
  is '主机名';
comment on column T_PLAN_CHANGE_FLTSCH.p_or_c
  is '客货标志';
comment on column T_PLAN_CHANGE_FLTSCH.fxw_id
  is '飞行网航班ID（导入历史数据用）';
comment on column T_PLAN_CHANGE_FLTSCH.flg_vip
  is 'vip';
comment on column T_PLAN_CHANGE_FLTSCH.duty_flag
  is '值班锁N-X(看过)-Y(通过)';
comment on column T_PLAN_CHANGE_FLTSCH.from_sm
  is '数据来源（来自SM）';
comment on column T_PLAN_CHANGE_FLTSCH.co_old
  is '原飞行执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.so_old
  is '原乘务执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.po_old
  is '原空警执飞单位';
comment on column T_PLAN_CHANGE_FLTSCH.mo_old
  is '原机组跟班单位';
comment on column T_PLAN_CHANGE_FLTSCH.dep_bay
  is '起飞机场停机位';
comment on column T_PLAN_CHANGE_FLTSCH.arr_bay
  is '到达机场停机位';
comment on column T_PLAN_CHANGE_FLTSCH.fltdate
  is 'AOC航班日期';
comment on column T_PLAN_CHANGE_FLTSCH.ao_old
  is '原执管单位';
comment on column T_PLAN_CHANGE_FLTSCH.flight_id_ref
  is '所指向的正常航班FLIGHT_ID';
comment on column T_PLAN_CHANGE_FLTSCH.flt_season
  is '版本结束日期';
comment on column T_PLAN_CHANGE_FLTSCH.page_flag
  is '分页（来回程跨天）标志';
comment on column T_PLAN_CHANGE_FLTSCH.ac_link_line
  is '运力号(手工生成)';
comment on column T_PLAN_CHANGE_FLTSCH.sal_id
  is '上航FOC航班ID（导入历史数据用）';
comment on column T_PLAN_CHANGE_FLTSCH.gyts
  is '过夜天数';
comment on column T_PLAN_CHANGE_FLTSCH.turnon
  is '现保开车时间';
comment on column T_PLAN_CHANGE_FLTSCH.block_off_time
  is '现保撤轮挡时间';
comment on column T_PLAN_CHANGE_FLTSCH.block_on_time
  is '现保上轮挡时间';
comment on column T_PLAN_CHANGE_FLTSCH.turnoff
  is '现保关车时间';
comment on column T_PLAN_CHANGE_FLTSCH.block_time
  is '现保接口最后修改时间';
comment on column T_PLAN_CHANGE_FLTSCH.mm_leg_id_add
  is 'MM系统LEG_ID(大于等于T+3)';
comment on column T_PLAN_CHANGE_FLTSCH.isdelete
  is '0:删除 1:存在';
comment on column T_PLAN_CHANGE_FLTSCH.plan_id
  is '计划ID';
alter table T_PLAN_CHANGE_FLTSCH
  add constraint PK_PLAN_CHANGE_FLTSCH primary key (FLIGHT_ID)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PLAN_DIRECTORY
prompt ===============================
prompt
create table T_PLAN_DIRECTORY
(
  directory_id   NUMBER(11) not null,
  directory_name NVARCHAR2(120) not null,
  parent_id      NUMBER(11) not null,
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_DIRECTORY
  is '目录结构表';
comment on column T_PLAN_DIRECTORY.directory_id
  is '目录';
comment on column T_PLAN_DIRECTORY.directory_name
  is '目录名称';
comment on column T_PLAN_DIRECTORY.parent_id
  is '父级目录ID(0:组环，1:排班)';
comment on column T_PLAN_DIRECTORY.oper
  is '操作人';
comment on column T_PLAN_DIRECTORY.op_time
  is '操作时间';
comment on column T_PLAN_DIRECTORY.oper_ip
  is 'IP地址';
comment on column T_PLAN_DIRECTORY.oper_host
  is '主机名';
alter table T_PLAN_DIRECTORY
  add constraint PK_PLAN_DIRECTORY primary key (DIRECTORY_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PLAN_FLTCHANGE
prompt ===============================
prompt
create table T_PLAN_FLTCHANGE
(
  flight_id    NUMBER(11) not null,
  chg_column   VARCHAR2(200) not null,
  chg_value    VARCHAR2(400),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fltchange_id NUMBER(18) not null,
  plan_id      NUMBER(18)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_FLTCHANGE
  is '航班预变更表';
comment on column T_PLAN_FLTCHANGE.flight_id
  is '航班ID';
comment on column T_PLAN_FLTCHANGE.chg_column
  is '变更字段集合';
comment on column T_PLAN_FLTCHANGE.chg_value
  is '变更值';
comment on column T_PLAN_FLTCHANGE.oper
  is '操作人';
comment on column T_PLAN_FLTCHANGE.op_time
  is '操作时间';
comment on column T_PLAN_FLTCHANGE.oper_ip
  is '操作IP';
comment on column T_PLAN_FLTCHANGE.oper_host
  is '操作主机名';
comment on column T_PLAN_FLTCHANGE.fltchange_id
  is '自增列';
comment on column T_PLAN_FLTCHANGE.plan_id
  is '计划ID';
alter table T_PLAN_FLTCHANGE
  add constraint T_PLAN_FLTCHANGE_PK primary key (FLTCHANGE_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PLAN_FLTSCH
prompt ============================
prompt
create table T_PLAN_FLTSCH
(
  plan_id             VARCHAR2(20) not null,
  flight_id           NUMBER(11) not null,
  flight_date         DATE not null,
  carrier             VARCHAR2(10),
  flight_no           VARCHAR2(15),
  plan_departure      VARCHAR2(4),
  departure_airport   VARCHAR2(4),
  plan_arrival        VARCHAR2(4),
  arrival_airport     VARCHAR2(4),
  std                 DATE,
  etd                 DATE,
  atd                 DATE,
  sta                 DATE,
  eta                 DATE,
  ata                 DATE,
  d_or_i              VARCHAR2(1),
  flight_type         VARCHAR2(1),
  ac_type             VARCHAR2(10),
  ac_reg              VARCHAR2(10),
  flg_delay           VARCHAR2(1),
  flg_vr              VARCHAR2(1),
  flg_cs              VARCHAR2(1),
  flg_patch           VARCHAR2(1),
  off_wheel           DATE,
  on_wheel            DATE,
  ac_owner            VARCHAR2(4),
  crew_owner          VARCHAR2(4),
  stew_owner          VARCHAR2(4),
  plce_owner          VARCHAR2(4),
  mant_owner          VARCHAR2(4),
  mm_leg_id           NUMBER(13),
  leg_sequence_number NUMBER(9),
  is_manual           VARCHAR2(1) default '0',
  onward_flight       VARCHAR2(10),
  ac_layover          NUMBER(2),
  flight_flag         VARCHAR2(1) default 'A',
  sch_com_flag        VARCHAR2(1) default 'N',
  sch_ver_flag        VARCHAR2(1) default 'N',
  sch_pub_flag        VARCHAR2(1) default 'N',
  tele_time           DATE,
  tele_oper           VARCHAR2(10),
  tele_flag           VARCHAR2(1) default 'N',
  ftb_no              VARCHAR2(12),
  ftb_prn_flag        VARCHAR2(1) default 'N',
  ftb_rec_flag        VARCHAR2(1) default 'N',
  cust_app_flag       VARCHAR2(1) default 'N',
  fly_hours           NUMBER(6) default 0,
  crew_link_line      NUMBER(11),
  stew_link_line      NUMBER(11),
  plce_link_line      NUMBER(11),
  flight_fen          NUMBER(4) default 0,
  oper                VARCHAR2(10),
  op_time             DATE,
  remarks             VARCHAR2(200),
  oper_ip             VARCHAR2(15),
  oper_host           VARCHAR2(50),
  p_or_c              VARCHAR2(1) default 'P',
  fxw_id              NUMBER(11),
  flg_vip             VARCHAR2(10),
  duty_flag           VARCHAR2(1) default 'N',
  from_sm             VARCHAR2(1),
  co_old              VARCHAR2(4),
  so_old              VARCHAR2(4),
  po_old              VARCHAR2(4),
  mo_old              VARCHAR2(4),
  dep_bay             VARCHAR2(20),
  arr_bay             VARCHAR2(20),
  fltdate             DATE,
  ao_old              VARCHAR2(4),
  flight_id_ref       NUMBER(11),
  flt_season          VARCHAR2(10),
  page_flag           VARCHAR2(1),
  ac_link_line        VARCHAR2(30),
  sal_id              NUMBER(11),
  gyts                NUMBER(2),
  turnon              DATE,
  block_off_time      DATE,
  block_on_time       DATE,
  turnoff             DATE,
  block_time          DATE,
  mm_leg_id_add       NUMBER(13)
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_FLTSCH2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_FLTSCH2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_FLTSCH2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_FLTSCH2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_FLTSCH2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_FLTSCH2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_FLTSCH2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_FLTSCH2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_FLTSCH
  is '航班计划方案表';
comment on column T_PLAN_FLTSCH.plan_id
  is '方案ID';
comment on column T_PLAN_FLTSCH.flight_id
  is '航班ID';
comment on column T_PLAN_FLTSCH.flight_date
  is '航班日期';
comment on column T_PLAN_FLTSCH.carrier
  is '承运人';
comment on column T_PLAN_FLTSCH.flight_no
  is '航班号';
comment on column T_PLAN_FLTSCH.plan_departure
  is '计划起飞机场';
comment on column T_PLAN_FLTSCH.departure_airport
  is '实际起飞机场';
comment on column T_PLAN_FLTSCH.plan_arrival
  is '计划到达机场';
comment on column T_PLAN_FLTSCH.arrival_airport
  is '实际到达机场';
comment on column T_PLAN_FLTSCH.std
  is '计划起飞时间';
comment on column T_PLAN_FLTSCH.etd
  is '预计起飞时间';
comment on column T_PLAN_FLTSCH.atd
  is '实际起飞时间';
comment on column T_PLAN_FLTSCH.sta
  is '计划到达时间';
comment on column T_PLAN_FLTSCH.eta
  is '预计到达时间';
comment on column T_PLAN_FLTSCH.ata
  is '实际到达时间';
comment on column T_PLAN_FLTSCH.d_or_i
  is '国际/国内（D:国内,I:国际,R:地区）';
comment on column T_PLAN_FLTSCH.flight_type
  is '航班性质';
comment on column T_PLAN_FLTSCH.ac_type
  is '机型';
comment on column T_PLAN_FLTSCH.ac_reg
  is '机号';
comment on column T_PLAN_FLTSCH.flg_delay
  is '延误标记';
comment on column T_PLAN_FLTSCH.flg_vr
  is '返航/备降标记';
comment on column T_PLAN_FLTSCH.flg_cs
  is '取消标记(C计划取消D取消R恢复)';
comment on column T_PLAN_FLTSCH.flg_patch
  is '是否返航/备降新增段';
comment on column T_PLAN_FLTSCH.off_wheel
  is '撤轮档时间';
comment on column T_PLAN_FLTSCH.on_wheel
  is '挡轮档时间';
comment on column T_PLAN_FLTSCH.ac_owner
  is '飞机执管单位';
comment on column T_PLAN_FLTSCH.crew_owner
  is '飞行执飞单位';
comment on column T_PLAN_FLTSCH.stew_owner
  is '乘务员执飞单位';
comment on column T_PLAN_FLTSCH.plce_owner
  is '空警执飞单位';
comment on column T_PLAN_FLTSCH.mant_owner
  is '机务执飞单位';
comment on column T_PLAN_FLTSCH.mm_leg_id
  is 'MM系统LEG_ID';
comment on column T_PLAN_FLTSCH.leg_sequence_number
  is '航段序号';
comment on column T_PLAN_FLTSCH.is_manual
  is '手工新增((0MM导入1手工新增)';
comment on column T_PLAN_FLTSCH.onward_flight
  is '后续航班';
comment on column T_PLAN_FLTSCH.ac_layover
  is '后续航班跨天数';
comment on column T_PLAN_FLTSCH.flight_flag
  is '航班标记(A正常B备份C本场D摆渡)';
comment on column T_PLAN_FLTSCH.sch_com_flag
  is '计划提交标志N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.sch_ver_flag
  is '计划审核标志N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.sch_pub_flag
  is '计划发布标志N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.tele_time
  is '发报时间';
comment on column T_PLAN_FLTSCH.tele_oper
  is '发报人';
comment on column T_PLAN_FLTSCH.tele_flag
  is '发报标记N-O(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.ftb_no
  is 'FTB编号';
comment on column T_PLAN_FLTSCH.ftb_prn_flag
  is 'FTB打印标志N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.ftb_rec_flag
  is 'FTB回收标志N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.cust_app_flag
  is '出入境单生成标志N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.fly_hours
  is '经验飞行时间(DOC获取)';
comment on column T_PLAN_FLTSCH.crew_link_line
  is '飞行联班';
comment on column T_PLAN_FLTSCH.stew_link_line
  is '乘务联班';
comment on column T_PLAN_FLTSCH.plce_link_line
  is '空警联班';
comment on column T_PLAN_FLTSCH.flight_fen
  is '航班积分';
comment on column T_PLAN_FLTSCH.oper
  is '操作人';
comment on column T_PLAN_FLTSCH.op_time
  is '操作时间';
comment on column T_PLAN_FLTSCH.remarks
  is '备注';
comment on column T_PLAN_FLTSCH.oper_ip
  is 'IP地址';
comment on column T_PLAN_FLTSCH.oper_host
  is '主机名';
comment on column T_PLAN_FLTSCH.p_or_c
  is '客货标志';
comment on column T_PLAN_FLTSCH.fxw_id
  is '飞行网航班ID（导入历史数据用）';
comment on column T_PLAN_FLTSCH.flg_vip
  is 'vip';
comment on column T_PLAN_FLTSCH.duty_flag
  is '值班锁N-X(看过)-Y(通过)';
comment on column T_PLAN_FLTSCH.from_sm
  is '数据来源（来自SM）';
comment on column T_PLAN_FLTSCH.co_old
  is '原飞行执飞单位';
comment on column T_PLAN_FLTSCH.so_old
  is '原乘务执飞单位';
comment on column T_PLAN_FLTSCH.po_old
  is '原空警执飞单位';
comment on column T_PLAN_FLTSCH.mo_old
  is '原机组跟班单位';
comment on column T_PLAN_FLTSCH.dep_bay
  is '起飞机场停机位';
comment on column T_PLAN_FLTSCH.arr_bay
  is '到达机场停机位';
comment on column T_PLAN_FLTSCH.fltdate
  is 'AOC航班日期';
comment on column T_PLAN_FLTSCH.ao_old
  is '原执管单位';
comment on column T_PLAN_FLTSCH.flight_id_ref
  is '所指向的正常航班FLIGHT_ID';
comment on column T_PLAN_FLTSCH.flt_season
  is '版本结束日期';
comment on column T_PLAN_FLTSCH.page_flag
  is '分页（来回程跨天）标志';
comment on column T_PLAN_FLTSCH.ac_link_line
  is '运力号(手工生成)';
comment on column T_PLAN_FLTSCH.sal_id
  is '上航FOC航班ID（导入历史数据用）';
comment on column T_PLAN_FLTSCH.gyts
  is '过夜天数';
comment on column T_PLAN_FLTSCH.turnon
  is '现保开车时间';
comment on column T_PLAN_FLTSCH.block_off_time
  is '现保撤轮挡时间';
comment on column T_PLAN_FLTSCH.block_on_time
  is '现保上轮挡时间';
comment on column T_PLAN_FLTSCH.turnoff
  is '现保关车时间';
comment on column T_PLAN_FLTSCH.block_time
  is '现保接口最后修改时间';
comment on column T_PLAN_FLTSCH.mm_leg_id_add
  is 'MM系统LEG_ID(大于等于T+3)';
alter table T_PLAN_FLTSCH
  add constraint PK_PLAN_FLTSCH primary key (PLAN_ID, FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_FLTSCH
  add constraint FK_PLAN_FLTSCH foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID)
  disable
  novalidate;
alter table T_PLAN_FLTSCH
  add constraint FK_PLAN_FLTSCH_FLIGHT_ID foreign key (FLIGHT_ID)
  references T_FLT_SCHEDULE (FLIGHT_ID)
  disable
  novalidate;

prompt
prompt Creating table T_PLAN_PACKAGE_DETAIL
prompt ====================================
prompt
create table T_PLAN_PACKAGE_DETAIL
(
  pkg_id    NUMBER not null,
  rule_id   NUMBER not null,
  op_time   DATE,
  oper_host VARCHAR2(50),
  oper_ip   VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_PACKAGE_DETAIL
  is '规则包明细';
comment on column T_PLAN_PACKAGE_DETAIL.pkg_id
  is '规则包ID';
comment on column T_PLAN_PACKAGE_DETAIL.rule_id
  is '规则ID';
comment on column T_PLAN_PACKAGE_DETAIL.op_time
  is '操作时间';
comment on column T_PLAN_PACKAGE_DETAIL.oper_host
  is '主机名';
comment on column T_PLAN_PACKAGE_DETAIL.oper_ip
  is '操作人IP';
alter table T_PLAN_PACKAGE_DETAIL
  add constraint PK_PACKAGE_DETAIL primary key (PKG_ID, RULE_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PLAN_PAIRING
prompt =============================
prompt
create table T_PLAN_PAIRING
(
  plan_id                VARCHAR2(20) not null,
  flight_date            DATE not null,
  crew_link_line         NUMBER(11) not null,
  module_flag            VARCHAR2(1) not null,
  crew_pairing_line      NUMBER(11),
  flight_ids             VARCHAR2(200),
  ac_type_crew           VARCHAR2(10),
  ac_type                VARCHAR2(10),
  ac_reg                 VARCHAR2(10),
  flight_com             VARCHAR2(60),
  flight_voyage          VARCHAR2(100),
  flight_code            VARCHAR2(60),
  depa_airport           VARCHAR2(4),
  arri_airport           VARCHAR2(4),
  td_punch               NUMBER(3),
  td_before              NUMBER(3),
  td                     DATE not null,
  ta                     DATE not null,
  ta_after               NUMBER(3),
  d_or_i                 VARCHAR2(1),
  flight_type            VARCHAR2(1),
  fly_hours              NUMBER(4) default 0,
  filiale                VARCHAR2(10),
  base                   VARCHAR2(4),
  carrier                VARCHAR2(2),
  p_or_c                 VARCHAR2(1) default 'P',
  crew_id                NUMBER(9),
  flight_flag            VARCHAR2(1),
  icao_flag              VARCHAR2(1),
  foreign_flag           VARCHAR2(1),
  special_flag           VARCHAR2(1),
  fxw_id                 NUMBER(11),
  rec_id                 NUMBER(11),
  oper                   VARCHAR2(10),
  op_time                DATE,
  remarks                VARCHAR2(200),
  oper_ip                VARCHAR2(15),
  oper_host              VARCHAR2(50),
  sch_pub_flag           VARCHAR2(1) default 'N',
  dep_code               VARCHAR2(10),
  crew_pairing_line_lock VARCHAR2(1) default 'N',
  duty_line              NUMBER(11),
  cat_flag               VARCHAR2(1),
  sal_crew_link_line     NUMBER(11),
  fixed_flag             VARCHAR2(1),
  td_min                 DATE
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_PAIRING2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_PAIRING2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_PAIRING2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_PAIRING2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_PAIRING2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_PAIRING2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_PAIRING2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_PAIRING2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_PAIRING
  is '组环方案表';
comment on column T_PLAN_PAIRING.plan_id
  is '方案ID';
comment on column T_PLAN_PAIRING.flight_date
  is '日期';
comment on column T_PLAN_PAIRING.crew_link_line
  is '连班号';
comment on column T_PLAN_PAIRING.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_PLAN_PAIRING.crew_pairing_line
  is '联线号';
comment on column T_PLAN_PAIRING.flight_ids
  is 'FLIGHT_ID串，用/分隔';
comment on column T_PLAN_PAIRING.ac_type_crew
  is '机型组';
comment on column T_PLAN_PAIRING.ac_type
  is '机型';
comment on column T_PLAN_PAIRING.ac_reg
  is '机号';
comment on column T_PLAN_PAIRING.flight_com
  is '航班';
comment on column T_PLAN_PAIRING.flight_voyage
  is '航程';
comment on column T_PLAN_PAIRING.flight_code
  is '机场3码串';
comment on column T_PLAN_PAIRING.depa_airport
  is '发站';
comment on column T_PLAN_PAIRING.arri_airport
  is '到站';
comment on column T_PLAN_PAIRING.td_punch
  is '签到时间';
comment on column T_PLAN_PAIRING.td_before
  is '进场时间';
comment on column T_PLAN_PAIRING.td
  is '开始时间';
comment on column T_PLAN_PAIRING.ta
  is '结束时间';
comment on column T_PLAN_PAIRING.ta_after
  is '离场时间';
comment on column T_PLAN_PAIRING.d_or_i
  is '国内国际';
comment on column T_PLAN_PAIRING.flight_type
  is '航班性质';
comment on column T_PLAN_PAIRING.fly_hours
  is '飞行小时';
comment on column T_PLAN_PAIRING.filiale
  is '分公司';
comment on column T_PLAN_PAIRING.base
  is '基地';
comment on column T_PLAN_PAIRING.carrier
  is '承运人';
comment on column T_PLAN_PAIRING.p_or_c
  is '客货标志';
comment on column T_PLAN_PAIRING.crew_id
  is '搭配方案';
comment on column T_PLAN_PAIRING.flight_flag
  is '航班标记(正常,备份,搭机)';
comment on column T_PLAN_PAIRING.icao_flag
  is '是否ICAO航线';
comment on column T_PLAN_PAIRING.foreign_flag
  is '外籍飞行标志';
comment on column T_PLAN_PAIRING.special_flag
  is '特殊机场标志';
comment on column T_PLAN_PAIRING.fxw_id
  is '对应飞行网ID(导入飞行网历史数据用)';
comment on column T_PLAN_PAIRING.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步:seq_intf_recid_pairing_efb';
comment on column T_PLAN_PAIRING.oper
  is '操作人';
comment on column T_PLAN_PAIRING.op_time
  is '操作时间';
comment on column T_PLAN_PAIRING.remarks
  is '备注';
comment on column T_PLAN_PAIRING.oper_ip
  is 'IP地址';
comment on column T_PLAN_PAIRING.oper_host
  is '主机名';
comment on column T_PLAN_PAIRING.sch_pub_flag
  is '计划发布标志(此字段已不再使用!!)';
comment on column T_PLAN_PAIRING.dep_code
  is '任务环分配部门(为空全部部门都可以飞)';
comment on column T_PLAN_PAIRING.crew_pairing_line_lock
  is '联线锁';
comment on column T_PLAN_PAIRING.duty_line
  is '任务号';
comment on column T_PLAN_PAIRING.cat_flag
  is '是否CAT航线';
comment on column T_PLAN_PAIRING.sal_crew_link_line
  is '上航crew_link_line，导上航数据时使用';
comment on column T_PLAN_PAIRING.fixed_flag
  is '是否是固定发车时间，针对货航使用。Y是N否';
comment on column T_PLAN_PAIRING.td_min
  is '时间区间(开始)';
alter table T_PLAN_PAIRING
  add constraint PK_PLAN_PAIRING primary key (PLAN_ID, FLIGHT_DATE, CREW_LINK_LINE)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_PAIRING
  add constraint FK_PLAN_PAIRING foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);

prompt
prompt Creating table T_PLAN_POLICYDEFINTIONS
prompt ======================================
prompt
create table T_PLAN_POLICYDEFINTIONS
(
  pdt_id            NUMBER not null,
  pkg_id            NUMBER,
  is_firstdrive     NUMBER,
  is_seconddrive    NUMBER,
  is_captain        NUMBER,
  is_coursecaptain  NUMBER,
  is_quickreference NUMBER,
  is_backup         NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_POLICYDEFINTIONS
  is '策略定义表';
comment on column T_PLAN_POLICYDEFINTIONS.pdt_id
  is '策略ID';
comment on column T_PLAN_POLICYDEFINTIONS.pkg_id
  is '规则包ID';
comment on column T_PLAN_POLICYDEFINTIONS.is_firstdrive
  is '是否选择第一副驾 0 不选择，1选择';
comment on column T_PLAN_POLICYDEFINTIONS.is_seconddrive
  is '是否选择第二副驾 ';
comment on column T_PLAN_POLICYDEFINTIONS.is_captain
  is '是否选择机长  ';
comment on column T_PLAN_POLICYDEFINTIONS.is_coursecaptain
  is '是否选择航线机长  ';
comment on column T_PLAN_POLICYDEFINTIONS.is_quickreference
  is '是否快速推荐';
comment on column T_PLAN_POLICYDEFINTIONS.is_backup
  is '是否选择备份';
alter table T_PLAN_POLICYDEFINTIONS
  add constraint PK_T_PLAN_POLICYDEFINTIONS primary key (PDT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PLAN_RECOMMAND
prompt ===============================
prompt
create table T_PLAN_RECOMMAND
(
  plan_id          VARCHAR2(20) not null,
  parent_link_line NUMBER(11) not null,
  son_link_line    NUMBER(11) not null,
  is_used          NVARCHAR2(1) default 'N',
  oper             VARCHAR2(10),
  op_time          DATE,
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_RECOMMAND
  is '航班推荐表(用于推荐联班和现有联班的对应关系)';
comment on column T_PLAN_RECOMMAND.plan_id
  is '方案ID';
comment on column T_PLAN_RECOMMAND.parent_link_line
  is '推荐联班号';
comment on column T_PLAN_RECOMMAND.son_link_line
  is '搭配联班号';
comment on column T_PLAN_RECOMMAND.is_used
  is '是否被使用';
comment on column T_PLAN_RECOMMAND.oper
  is '操作人';
comment on column T_PLAN_RECOMMAND.op_time
  is '操作时间';
comment on column T_PLAN_RECOMMAND.oper_ip
  is 'IP地址';
comment on column T_PLAN_RECOMMAND.oper_host
  is '主机名';
alter table T_PLAN_RECOMMAND
  add constraint PK_PLAN_RECOMMAND primary key (PLAN_ID, PARENT_LINK_LINE, SON_LINK_LINE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_RECOMMAND
  add constraint FK_PLAN_RECOMMAND foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);

prompt
prompt Creating table T_PLAN_ROSTER
prompt ============================
prompt
create table T_PLAN_ROSTER
(
  plan_id         VARCHAR2(20) not null,
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4),
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1) default 'N',
  backup_yn       VARCHAR2(1) default 'N',
  carry_yn        VARCHAR2(1) default 'N',
  carry_after_yn  VARCHAR2(1) default 'N',
  check_yn        VARCHAR2(1) default 'N',
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1) default 'Y',
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1) default 'Y',
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1) default 'N',
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11),
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6) default 0,
  night_days      NUMBER(2) default 0,
  modify_time     DATE,
  fly_hours1      NUMBER(6) default 0,
  fly_hours2      NUMBER(6) default 0,
  pub_time        DATE,
  pairing_plan_id VARCHAR2(20)
)
partition by range (FLIGHT_DATE)
(
  partition PLAN_ROSTER2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_ROSTER2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_ROSTER2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_ROSTER2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 8M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_ROSTER2020 values less than (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_ROSTER2020
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition PLAN_ROSTER2022 values less than (TO_DATE(' 2024-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace PLAN_ROSTER2022
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_PLAN_ROSTER
  is '排班方案表';
comment on column T_PLAN_ROSTER.plan_id
  is '方案ID';
comment on column T_PLAN_ROSTER.flight_id
  is '航班ID';
comment on column T_PLAN_ROSTER.flight_date
  is '航班日期';
comment on column T_PLAN_ROSTER.p_code
  is '人员代码';
comment on column T_PLAN_ROSTER.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_PLAN_ROSTER.auto_flag
  is '自动排班标志,
H-手动
A-自动';
comment on column T_PLAN_ROSTER.fjs_order
  is '机上位置';
comment on column T_PLAN_ROSTER.rank_no
  is '机上岗位';
comment on column T_PLAN_ROSTER.ts_flag
  is '兼职码(字典)';
comment on column T_PLAN_ROSTER.check_type
  is '检查类型(字典)';
comment on column T_PLAN_ROSTER.tech_no_i
  is '公司授权';
comment on column T_PLAN_ROSTER.tech_no_z
  is '排班授权';
comment on column T_PLAN_ROSTER.warning_content
  is '违反排班规则';
comment on column T_PLAN_ROSTER.modify_reason
  is '修改原因';
comment on column T_PLAN_ROSTER.adjust_yn
  is '调整标志(Y/N)';
comment on column T_PLAN_ROSTER.backup_yn
  is '备上标记(Y/N)';
comment on column T_PLAN_ROSTER.carry_yn
  is '航前接车(Y/N)';
comment on column T_PLAN_ROSTER.carry_after_yn
  is '航后接车(Y/N)';
comment on column T_PLAN_ROSTER.check_yn
  is '签注结果(Y/N)';
comment on column T_PLAN_ROSTER.old_p_code
  is '调整人员代码';
comment on column T_PLAN_ROSTER.ver_yn
  is '审批标记';
comment on column T_PLAN_ROSTER.ver_code
  is '审批类别(字典)';
comment on column T_PLAN_ROSTER.ver_desc
  is '审批备注';
comment on column T_PLAN_ROSTER.heath_yn
  is '体检结果(Y/N)';
comment on column T_PLAN_ROSTER.heathy
  is '体检备注';
comment on column T_PLAN_ROSTER.hotel_yn
  is '宾馆(N不需要X需要没有安排Y已经安排)';
comment on column T_PLAN_ROSTER.oper
  is '操作人';
comment on column T_PLAN_ROSTER.op_time
  is '操作时间';
comment on column T_PLAN_ROSTER.remarks
  is '备注';
comment on column T_PLAN_ROSTER.oper_ip
  is 'IP地址';
comment on column T_PLAN_ROSTER.oper_host
  is '主机名';
comment on column T_PLAN_ROSTER.fxw_id
  is '对应飞行网ID(导入飞行网历史数据用)';
comment on column T_PLAN_ROSTER.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_PLAN_ROSTER.hotel_id
  is '酒店ID';
comment on column T_PLAN_ROSTER.fly_hours
  is '飞行时间(计划DOC,回收取FTB)';
comment on column T_PLAN_ROSTER.night_days
  is '过夜天数(发布计算)';
comment on column T_PLAN_ROSTER.modify_time
  is '修改人员时间戳';
comment on column T_PLAN_ROSTER.fly_hours1
  is '计算到当月飞行时间';
comment on column T_PLAN_ROSTER.fly_hours2
  is '计算到下月飞行时间';
comment on column T_PLAN_ROSTER.pub_time
  is '发布时间';
comment on column T_PLAN_ROSTER.pairing_plan_id
  is '组环方案ID';
alter table T_PLAN_ROSTER
  add constraint PK_PLAN_ROSTER primary key (PLAN_ID, FLIGHT_ID, P_CODE)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_ROSTER
  add constraint UK_PLAN_ROSTER unique (PLAN_ID, FLIGHT_ID, FJS_ORDER)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_ROSTER
  add constraint FK_PLAN_ROSTER foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);
alter table T_PLAN_ROSTER
  add constraint FK_PLAN_ROSTER_FLIGHT_ID foreign key (FLIGHT_ID)
  references T_FLT_SCHEDULE (FLIGHT_ID);
alter table T_PLAN_ROSTER
  add constraint FK_PLAN_ROSTER_P_CODE foreign key (P_CODE)
  references T_HR_CREW (P_CODE);

prompt
prompt Creating table T_PLAN_ROSTER_A
prompt ==============================
prompt
create table T_PLAN_ROSTER_A
(
  plan_id          VARCHAR2(20) not null,
  flight_date      DATE not null,
  p_code           VARCHAR2(10) not null,
  month_fly_hours  NUMBER(9) default 0 not null,
  month3_fly_hours NUMBER(9) default 0 not null,
  year_fly_hours   NUMBER(9) default 0 not null
)
tablespace PLAN_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_ROSTER_A
  is '飞行时间方案表';
comment on column T_PLAN_ROSTER_A.plan_id
  is '方案ID';
comment on column T_PLAN_ROSTER_A.flight_date
  is '航班日期';
comment on column T_PLAN_ROSTER_A.p_code
  is '人员代码';
comment on column T_PLAN_ROSTER_A.month_fly_hours
  is '月飞行时间';
comment on column T_PLAN_ROSTER_A.month3_fly_hours
  is '3月飞行时间';
comment on column T_PLAN_ROSTER_A.year_fly_hours
  is '年飞行时间';
alter table T_PLAN_ROSTER_A
  add constraint PK_PLAN_ROSTER_A primary key (PLAN_ID, FLIGHT_DATE, P_CODE)
  using index 
  tablespace PLAN_INDEX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_PLAN_ROSTER_A
  add constraint FK_PLAN_ROSTER_A foreign key (PLAN_ID)
  references T_PLAN (PLAN_ID);
alter table T_PLAN_ROSTER_A
  add constraint FK_PLAN_ROSTER_A_P_CODE foreign key (P_CODE)
  references T_HR_CREW (P_CODE);

prompt
prompt Creating table T_PLAN_RULE_PACKAGES
prompt ===================================
prompt
create table T_PLAN_RULE_PACKAGES
(
  pkg_id           NUMBER not null,
  pkg_cname        VARCHAR2(120) not null,
  pkg_ename        VARCHAR2(250),
  pkg_access_level CHAR(1),
  op_time          DATE,
  oper_host        VARCHAR2(50),
  oper_ip          VARCHAR2(15),
  pkg_filiale      VARCHAR2(4),
  oper             VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PLAN_RULE_PACKAGES
  is '规则包定义';
comment on column T_PLAN_RULE_PACKAGES.pkg_id
  is '规则包ID';
comment on column T_PLAN_RULE_PACKAGES.pkg_cname
  is '规则包中文名称名称';
comment on column T_PLAN_RULE_PACKAGES.pkg_ename
  is '规则包英文名称';
comment on column T_PLAN_RULE_PACKAGES.pkg_access_level
  is '规则包访问等级（0私有  1共有）';
comment on column T_PLAN_RULE_PACKAGES.op_time
  is '操作时间';
comment on column T_PLAN_RULE_PACKAGES.oper_host
  is '主机名';
comment on column T_PLAN_RULE_PACKAGES.oper_ip
  is '操作人IP';
comment on column T_PLAN_RULE_PACKAGES.pkg_filiale
  is '分公司';
comment on column T_PLAN_RULE_PACKAGES.oper
  is '操作人';
alter table T_PLAN_RULE_PACKAGES
  add constraint PK_T_PLAN_RULE_PACKAGES primary key (PKG_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_APPRAISAL
prompt ==============================
prompt
create table T_PRF_APPRAISAL
(
  appid        NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  ddo_code     VARCHAR2(10),
  td           DATE not null,
  ta           DATE not null,
  valid_flag   VARCHAR2(1),
  ver_flag     VARCHAR2(1),
  oper         VARCHAR2(50),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(50),
  oper_host    VARCHAR2(50),
  apply_result VARCHAR2(1),
  type         NUMBER(1),
  fail_content VARCHAR2(500),
  apply_time   DATE,
  sys_code     VARCHAR2(1),
  module_flag  VARCHAR2(1),
  block_id     NUMBER,
  ddo_id       NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_APPRAISAL
  is '绩效考核';
comment on column T_PRF_APPRAISAL.appid
  is '主键自动增长';
comment on column T_PRF_APPRAISAL.p_code
  is '飞行员CODE';
comment on column T_PRF_APPRAISAL.ddo_code
  is '原因CODE(请假)';
comment on column T_PRF_APPRAISAL.td
  is '开始时间';
comment on column T_PRF_APPRAISAL.ta
  is '结束时间';
comment on column T_PRF_APPRAISAL.valid_flag
  is '是否有效(针对数据)';
comment on column T_PRF_APPRAISAL.ver_flag
  is '是否审核';
comment on column T_PRF_APPRAISAL.oper
  is '操作人';
comment on column T_PRF_APPRAISAL.op_time
  is '操作时间';
comment on column T_PRF_APPRAISAL.remarks
  is '备注';
comment on column T_PRF_APPRAISAL.oper_ip
  is '操作人IP';
comment on column T_PRF_APPRAISAL.oper_host
  is '操作人主机';
comment on column T_PRF_APPRAISAL.apply_result
  is '是否通过验证';
comment on column T_PRF_APPRAISAL.type
  is '0.年休假 1.考勤';
comment on column T_PRF_APPRAISAL.fail_content
  is '结果(审核不通过/验证不通过)';
comment on column T_PRF_APPRAISAL.apply_time
  is '申请时间';
comment on column T_PRF_APPRAISAL.sys_code
  is '飞行网调用设备CODE';
comment on column T_PRF_APPRAISAL.module_flag
  is '模块';
comment on column T_PRF_APPRAISAL.block_id
  is '休假块(t_tr_holi_sch) ID  ';
comment on column T_PRF_APPRAISAL.ddo_id
  is '安排考勤 (T_TR_DDO) ID ';

prompt
prompt Creating table T_PRF_DDO_NUM
prompt ============================
prompt
create table T_PRF_DDO_NUM
(
  tech_no_z VARCHAR2(20),
  ddo_time  DATE,
  ddo_num   NUMBER,
  filiale   VARCHAR2(20),
  ac_type   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_DDO_NUM
  is '飞行员考勤次数汇总(排班授权)';
comment on column T_PRF_DDO_NUM.tech_no_z
  is '公司授权';
comment on column T_PRF_DDO_NUM.ddo_num
  is '考勤次数';
comment on column T_PRF_DDO_NUM.filiale
  is '分公司';
comment on column T_PRF_DDO_NUM.ac_type
  is '机型';

prompt
prompt Creating table T_PRF_FLIGHT_APPLY
prompt =================================
prompt
create table T_PRF_FLIGHT_APPLY
(
  p_code       VARCHAR2(10) not null,
  flight_date  DATE not null,
  flight_id    NUMBER(11) not null,
  rank_no      VARCHAR2(4) not null,
  ver_flag     VARCHAR2(1) default 'Y',
  valid_flag   VARCHAR2(1) default 'Y',
  remarks      VARCHAR2(200),
  oper         VARCHAR2(20),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  app_id       NUMBER(11),
  module_flag  VARCHAR2(1),
  apply_time   DATE,
  fail_content VARCHAR2(2000),
  apply_flag   VARCHAR2(1),
  sys_code     VARCHAR2(11),
  pairing_line VARCHAR2(20),
  guidpk       VARCHAR2(200),
  fjs_order    NUMBER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_FLIGHT_APPLY
  is '航班申请表';
comment on column T_PRF_FLIGHT_APPLY.p_code
  is '人员代码';
comment on column T_PRF_FLIGHT_APPLY.flight_date
  is '日期';
comment on column T_PRF_FLIGHT_APPLY.flight_id
  is '申请航班ID';
comment on column T_PRF_FLIGHT_APPLY.rank_no
  is '机上岗位';
comment on column T_PRF_FLIGHT_APPLY.ver_flag
  is '审批标志(Y/N)';
comment on column T_PRF_FLIGHT_APPLY.valid_flag
  is '有效标志(Y/N)';
comment on column T_PRF_FLIGHT_APPLY.remarks
  is '备注';
comment on column T_PRF_FLIGHT_APPLY.oper
  is '操作人';
comment on column T_PRF_FLIGHT_APPLY.op_time
  is '操作时间';
comment on column T_PRF_FLIGHT_APPLY.oper_ip
  is 'IP地址';
comment on column T_PRF_FLIGHT_APPLY.oper_host
  is '主机名';
comment on column T_PRF_FLIGHT_APPLY.app_id
  is '主键 create sequence seq_PRF_FLIGHT_APPLY';
comment on column T_PRF_FLIGHT_APPLY.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_PRF_FLIGHT_APPLY.apply_time
  is '申请时间';
comment on column T_PRF_FLIGHT_APPLY.fail_content
  is '申请结果（拒绝原因）';
comment on column T_PRF_FLIGHT_APPLY.apply_flag
  is '申请结果（Y/N）';
comment on column T_PRF_FLIGHT_APPLY.sys_code
  is '飞行网调用设备CODE';
comment on column T_PRF_FLIGHT_APPLY.pairing_line
  is '任务号';
comment on column T_PRF_FLIGHT_APPLY.guidpk
  is '同一人一次申请的航班';
comment on column T_PRF_FLIGHT_APPLY.fjs_order
  is '机上位置';

prompt
prompt Creating table T_PRF_FLT_PUB
prompt ============================
prompt
create table T_PRF_FLT_PUB
(
  flight_id         NUMBER(11) not null,
  crew_pairing_line NUMBER(11),
  sch_pub_flag      VARCHAR2(1),
  crew_link_line    NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_FLT_PUB
  is '航班计划申请计划发布';
comment on column T_PRF_FLT_PUB.flight_id
  is '航班ID';
comment on column T_PRF_FLT_PUB.crew_pairing_line
  is '联线号';
comment on column T_PRF_FLT_PUB.sch_pub_flag
  is '发布状态';
comment on column T_PRF_FLT_PUB.crew_link_line
  is '连班号';

prompt
prompt Creating table T_PRF_HILIDAY_SCHPLAN
prompt ====================================
prompt
create table T_PRF_HILIDAY_SCHPLAN
(
  pk_id   NUMBER,
  year    NUMBER,
  month   NUMBER,
  spanday NUMBER,
  daybili VARCHAR2(50),
  filiale VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_HILIDAY_SCHPLAN
  is '年休假跨月/比例';
comment on column T_PRF_HILIDAY_SCHPLAN.pk_id
  is '主键 Sep_PRF_Hiliday_SchPlan';
comment on column T_PRF_HILIDAY_SCHPLAN.spanday
  is '跨月天数 (向前)';
comment on column T_PRF_HILIDAY_SCHPLAN.daybili
  is '天数比例';
comment on column T_PRF_HILIDAY_SCHPLAN.filiale
  is '分公司';

prompt
prompt Creating table T_PRF_HOLIDAY_BUY
prompt ================================
prompt
create table T_PRF_HOLIDAY_BUY
(
  h_buy_id            NUMBER not null,
  buy_p_code          VARCHAR2(20) not null,
  buy_block_id        NUMBER not null,
  buy_blockstart_time DATE not null,
  buy_blockend_time   DATE not null,
  over_time           DATE,
  sale_id             NUMBER,
  remarks             VARCHAR2(500),
  applytime           DATE,
  issuccess           VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_HOLIDAY_BUY
  is '年休假 换牌信息 ';
comment on column T_PRF_HOLIDAY_BUY.h_buy_id
  is '主键 seq_PRF_HOLIDAY_BUY';
comment on column T_PRF_HOLIDAY_BUY.buy_p_code
  is '换牌人';
comment on column T_PRF_HOLIDAY_BUY.buy_block_id
  is '换牌年休假ID';
comment on column T_PRF_HOLIDAY_BUY.buy_blockstart_time
  is '年休假开始时间';
comment on column T_PRF_HOLIDAY_BUY.buy_blockend_time
  is '年休假结束时间';
comment on column T_PRF_HOLIDAY_BUY.over_time
  is '成交时间';
comment on column T_PRF_HOLIDAY_BUY.sale_id
  is '挂牌ID  T_PRF_HOLIDAY_SALE';
comment on column T_PRF_HOLIDAY_BUY.remarks
  is '备注';
comment on column T_PRF_HOLIDAY_BUY.applytime
  is '申请时间';
comment on column T_PRF_HOLIDAY_BUY.issuccess
  is '是否匹配成功 Y N X：匹配失败';
alter table T_PRF_HOLIDAY_BUY
  add constraint PK_H_BUY_ID primary key (H_BUY_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_HOLIDAY_PLAN
prompt =================================
prompt
create table T_PRF_HOLIDAY_PLAN
(
  ver_id     NUMBER,
  start_time DATE,
  end_time   DATE,
  indexnum   VARCHAR2(20),
  id         NUMBER not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_HOLIDAY_PLAN
  is '年休假申请时间段';
comment on column T_PRF_HOLIDAY_PLAN.ver_id
  is '公司版本';
comment on column T_PRF_HOLIDAY_PLAN.start_time
  is '开始时间';
comment on column T_PRF_HOLIDAY_PLAN.end_time
  is '结束时间';
comment on column T_PRF_HOLIDAY_PLAN.indexnum
  is '第几轮';
comment on column T_PRF_HOLIDAY_PLAN.id
  is '主键 ID   seq_T_PRF_HOLIDAY_PLAN ';
alter table T_PRF_HOLIDAY_PLAN
  add constraint PK_T_PRF_HOLIDAY_PLAN primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_HOLIDAY_RECORD
prompt ===================================
prompt
create table T_PRF_HOLIDAY_RECORD
(
  filiale VARCHAR2(50),
  actype  VARCHAR2(20),
  year    VARCHAR2(20),
  rank    VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 18M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_HOLIDAY_RECORD
  is '年休假块已划拨记录';

prompt
prompt Creating table T_PRF_HOLIDAY_SALE
prompt =================================
prompt
create table T_PRF_HOLIDAY_SALE
(
  h_sale_id            NUMBER not null,
  sale_p_code          VARCHAR2(20) not null,
  sale_block_id        NUMBER not null,
  sale_blockstart_time DATE not null,
  sale_blockend_time   DATE not null,
  sale_time            DATE not null,
  over_time            DATE,
  state                NUMBER not null,
  buy_id               NUMBER,
  remarks              VARCHAR2(500),
  issuccess            VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_HOLIDAY_SALE
  is '年休假 挂牌信息';
comment on column T_PRF_HOLIDAY_SALE.h_sale_id
  is '主键 seq_prf_holiday_sale';
comment on column T_PRF_HOLIDAY_SALE.sale_p_code
  is '挂牌人';
comment on column T_PRF_HOLIDAY_SALE.sale_block_id
  is '挂牌年休假ID';
comment on column T_PRF_HOLIDAY_SALE.sale_blockstart_time
  is '年休假开始时间';
comment on column T_PRF_HOLIDAY_SALE.sale_blockend_time
  is '年休假结束时间';
comment on column T_PRF_HOLIDAY_SALE.sale_time
  is '挂牌时间';
comment on column T_PRF_HOLIDAY_SALE.over_time
  is '成交时间';
comment on column T_PRF_HOLIDAY_SALE.state
  is '状态 0：待完成 1已完成';
comment on column T_PRF_HOLIDAY_SALE.buy_id
  is '换牌 ID  T_PRF_HOLIDAY_BUY';
comment on column T_PRF_HOLIDAY_SALE.remarks
  is '备注';
comment on column T_PRF_HOLIDAY_SALE.issuccess
  is '是否匹配成功 Y N X：匹配失败';
alter table T_PRF_HOLIDAY_SALE
  add constraint PK_H_SALE_ID primary key (H_SALE_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_INITINTEGRAL
prompt =================================
prompt
create table T_PRF_INITINTEGRAL
(
  p_code           VARCHAR2(10) not null,
  integralcycle_id NUMBER(9) not null,
  scores           NUMBER(9),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_INITINTEGRAL
  is '人员周期初始积分';
comment on column T_PRF_INITINTEGRAL.p_code
  is '人员代码';
comment on column T_PRF_INITINTEGRAL.integralcycle_id
  is '周期ID';
comment on column T_PRF_INITINTEGRAL.scores
  is '积分';
comment on column T_PRF_INITINTEGRAL.oper
  is '操作人';
comment on column T_PRF_INITINTEGRAL.op_time
  is '操作时间';
comment on column T_PRF_INITINTEGRAL.remarks
  is '备注';
comment on column T_PRF_INITINTEGRAL.oper_ip
  is 'IP地址';
comment on column T_PRF_INITINTEGRAL.oper_host
  is '主机名';
alter table T_PRF_INITINTEGRAL
  add constraint PK_T_PRF_INITINTEGRAL_ID primary key (P_CODE, INTEGRALCYCLE_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_INTEGRALCYCLE
prompt ==================================
prompt
create table T_PRF_INTEGRALCYCLE
(
  id        NUMBER(9) not null,
  ver_id    NUMBER(9),
  startdate DATE,
  enddate   DATE,
  scores    NUMBER(9),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_INTEGRALCYCLE
  is '积分周期表';
comment on column T_PRF_INTEGRALCYCLE.id
  is 'ID';
comment on column T_PRF_INTEGRALCYCLE.ver_id
  is '版本ID';
comment on column T_PRF_INTEGRALCYCLE.startdate
  is '开始日期';
comment on column T_PRF_INTEGRALCYCLE.enddate
  is '结束日期';
comment on column T_PRF_INTEGRALCYCLE.scores
  is '积分';
comment on column T_PRF_INTEGRALCYCLE.oper
  is '操作人';
comment on column T_PRF_INTEGRALCYCLE.op_time
  is '操作时间';
comment on column T_PRF_INTEGRALCYCLE.remarks
  is '备注';
comment on column T_PRF_INTEGRALCYCLE.oper_ip
  is 'IP地址';
comment on column T_PRF_INTEGRALCYCLE.oper_host
  is '主机名';
alter table T_PRF_INTEGRALCYCLE
  add constraint PK_T_PRF_INTEGRALCYCLE primary key (ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_OCCUPIED_REMIND
prompt ====================================
prompt
create table T_PRF_OCCUPIED_REMIND
(
  occupied_id NUMBER not null,
  flight_id   NUMBER not null,
  p_code      NUMBER not null,
  prf_type    NUMBER not null,
  status      CHAR(1) default 'N' not null,
  oper_time   DATE default SYSDATE not null,
  oper_ip     NVARCHAR2(100),
  oper        NVARCHAR2(100),
  oper_host   NVARCHAR2(100),
  flight_date DATE not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 832K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_OCCUPIED_REMIND
  is '占位提醒记录';
comment on column T_PRF_OCCUPIED_REMIND.prf_type
  is '原因';
comment on column T_PRF_OCCUPIED_REMIND.status
  is 'N:没有处理    Y:已经处理';
alter table T_PRF_OCCUPIED_REMIND
  add constraint T_PRF_OCCUPIED_REMIND_PK primary key (OCCUPIED_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_PARAM
prompt ==========================
prompt
create table T_PRF_PARAM
(
  parm_id     NUMBER(6) not null,
  parm_name   VARCHAR2(300) not null,
  the_value   NUMBER(6) default 1 not null,
  module_flag VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     NUMBER(6),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  parent_id   NUMBER(6),
  valid_flag  VARCHAR2(1),
  prftype_id  NUMBER(6),
  remarks_2   VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_PARAM
  is '规则参数基准表';
comment on column T_PRF_PARAM.parm_id
  is '参数ID';
comment on column T_PRF_PARAM.parm_name
  is '参数名称';
comment on column T_PRF_PARAM.the_value
  is '默认值';
comment on column T_PRF_PARAM.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_PRF_PARAM.oper
  is '操作人';
comment on column T_PRF_PARAM.op_time
  is '操作时间';
comment on column T_PRF_PARAM.remarks
  is '积分明细页签显示顺序';
comment on column T_PRF_PARAM.oper_ip
  is 'IP地址';
comment on column T_PRF_PARAM.oper_host
  is '主机名';
comment on column T_PRF_PARAM.parent_id
  is '父节点ID';
comment on column T_PRF_PARAM.valid_flag
  is '有效标识';
comment on column T_PRF_PARAM.prftype_id
  is '类别方向';
comment on column T_PRF_PARAM.remarks_2
  is '备注';
alter table T_PRF_PARAM
  add constraint PK_T_PRF_PARAM primary key (PARM_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_PARAM_DETAIL
prompt =================================
prompt
create table T_PRF_PARAM_DETAIL
(
  ver_id     NUMBER(9) not null,
  parm_id    NUMBER(6) not null,
  the_value  NUMBER(9,2),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  the_value2 NUMBER(9,2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_PARAM_DETAIL
  is '规则参数定义表';
comment on column T_PRF_PARAM_DETAIL.ver_id
  is '版本ID';
comment on column T_PRF_PARAM_DETAIL.parm_id
  is '参数ID';
comment on column T_PRF_PARAM_DETAIL.the_value
  is '设定值';
comment on column T_PRF_PARAM_DETAIL.oper
  is '操作人';
comment on column T_PRF_PARAM_DETAIL.op_time
  is '操作时间';
comment on column T_PRF_PARAM_DETAIL.remarks
  is '备注';
comment on column T_PRF_PARAM_DETAIL.oper_ip
  is 'IP地址';
comment on column T_PRF_PARAM_DETAIL.oper_host
  is '主机名';
alter table T_PRF_PARAM_DETAIL
  add constraint PK_PRF_PARAM primary key (VER_ID, PARM_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_PARAM_DETAIL20150310
prompt =========================================
prompt
create table T_PRF_PARAM_DETAIL20150310
(
  ver_id    NUMBER(9) not null,
  parm_id   NUMBER(6) not null,
  the_value NUMBER(6),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_RECORD
prompt ===========================
prompt
create table T_PRF_RECORD
(
  record_id   NUMBER(11) not null,
  p_code      VARCHAR2(10),
  flight_id   NUMBER(11),
  param_id    NUMBER(11),
  oper        VARCHAR2(20),
  op_time     DATE,
  remarks     VARCHAR2(20),
  oper_ip     VARCHAR2(100),
  oper_host   VARCHAR2(50),
  oper_type   VARCHAR2(20),
  oper_yn     VARCHAR2(2),
  rank_no     VARCHAR2(20),
  airline     VARCHAR2(100),
  flight_date DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 18M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_RECORD
  is '积分业务表';
comment on column T_PRF_RECORD.record_id
  is '主键(自增)';
comment on column T_PRF_RECORD.p_code
  is '人员编码';
comment on column T_PRF_RECORD.flight_id
  is '积分对应航班';
comment on column T_PRF_RECORD.param_id
  is '积分类型
';
comment on column T_PRF_RECORD.oper
  is '操作人
';
comment on column T_PRF_RECORD.op_time
  is '操作时间

';
comment on column T_PRF_RECORD.remarks
  is '
备注';
comment on column T_PRF_RECORD.oper_ip
  is '操作人IP
';
comment on column T_PRF_RECORD.oper_host
  is '主机名';
comment on column T_PRF_RECORD.oper_type
  is '操作类型
';
comment on column T_PRF_RECORD.oper_yn
  is '是否已处理（Y:已处理；N未处理）';
comment on column T_PRF_RECORD.rank_no
  is '安排岗位';
comment on column T_PRF_RECORD.airline
  is '连线号';
comment on column T_PRF_RECORD.flight_date
  is '航班日期';
alter table T_PRF_RECORD
  add constraint PK_PRF_RECORD primary key (RECORD_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_RECORD20151231
prompt ===================================
prompt
create table T_PRF_RECORD20151231
(
  record_id NUMBER(11) not null,
  p_code    VARCHAR2(10),
  flight_id NUMBER(11),
  param_id  NUMBER(11),
  oper      VARCHAR2(20),
  op_time   DATE,
  remarks   VARCHAR2(20),
  oper_ip   VARCHAR2(100),
  oper_host VARCHAR2(50),
  oper_type VARCHAR2(20),
  oper_yn   VARCHAR2(2),
  rank_no   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_RECORD20160126
prompt ===================================
prompt
create table T_PRF_RECORD20160126
(
  record_id NUMBER(11) not null,
  p_code    VARCHAR2(10),
  flight_id NUMBER(11),
  param_id  NUMBER(11),
  oper      VARCHAR2(20),
  op_time   DATE,
  remarks   VARCHAR2(20),
  oper_ip   VARCHAR2(100),
  oper_host VARCHAR2(50),
  oper_type VARCHAR2(20),
  oper_yn   VARCHAR2(2),
  rank_no   VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_SCH_LOCK
prompt =============================
prompt
create table T_PRF_SCH_LOCK
(
  lock_id       NUMBER(11),
  flight_date   DATE not null,
  flight_id     NUMBER(11) not null,
  module_flag   VARCHAR2(1) not null,
  p_code        VARCHAR2(10) not null,
  work_no       VARCHAR2(10),
  lock_date     DATE,
  app_status    VARCHAR2(1) not null,
  reason        VARCHAR2(200),
  change_reason VARCHAR2(200),
  oper          VARCHAR2(20),
  op_time       DATE,
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  remarks       VARCHAR2(2000),
  sys_code      VARCHAR2(10),
  rank_no       VARCHAR2(20),
  fjs_order     VARCHAR2(20),
  pairing_line  VARCHAR2(20),
  guidpk        VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_PRF_SCH_LOCK
  is '航班锁定申请记录';
comment on column T_PRF_SCH_LOCK.lock_id
  is '自增长ID';
comment on column T_PRF_SCH_LOCK.flight_date
  is '日期';
comment on column T_PRF_SCH_LOCK.flight_id
  is '航班ID';
comment on column T_PRF_SCH_LOCK.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_PRF_SCH_LOCK.p_code
  is '人员代码';
comment on column T_PRF_SCH_LOCK.work_no
  is '工号';
comment on column T_PRF_SCH_LOCK.lock_date
  is '申请锁定时间';
comment on column T_PRF_SCH_LOCK.app_status
  is '状态(1锁定2解锁3其他)';
comment on column T_PRF_SCH_LOCK.reason
  is '申请锁定原因';
comment on column T_PRF_SCH_LOCK.change_reason
  is '航班调整原因(对应解锁）';
comment on column T_PRF_SCH_LOCK.oper
  is '操作人';
comment on column T_PRF_SCH_LOCK.op_time
  is '操作时间';
comment on column T_PRF_SCH_LOCK.oper_ip
  is 'IP地址';
comment on column T_PRF_SCH_LOCK.oper_host
  is '主机名';
comment on column T_PRF_SCH_LOCK.remarks
  is '备注';
comment on column T_PRF_SCH_LOCK.sys_code
  is '系统编号';
comment on column T_PRF_SCH_LOCK.rank_no
  is '机上岗位';
comment on column T_PRF_SCH_LOCK.fjs_order
  is '机上位置';
comment on column T_PRF_SCH_LOCK.pairing_line
  is '任务号';
comment on column T_PRF_SCH_LOCK.guidpk
  is '同一人一次申请的航班';

prompt
prompt Creating table T_PRF_SCORES
prompt ===========================
prompt
create table T_PRF_SCORES
(
  record_id   NUMBER(11) not null,
  p_code      VARCHAR2(10) not null,
  scores_id   NUMBER(11),
  flight_date DATE,
  param_id    VARCHAR2(500) not null,
  value       NUMBER(11),
  op_time     DATE,
  remarks     VARCHAR2(200),
  scorestype  VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 6M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_SCORES
  is '积分计算结果记录表';
comment on column T_PRF_SCORES.record_id
  is '主键（自增）SEQ_PRF_SCORES';
comment on column T_PRF_SCORES.p_code
  is '人员编码';
comment on column T_PRF_SCORES.scores_id
  is '积分对应类型ID（航班、考勤申请、航班申请、占位生成积分）';
comment on column T_PRF_SCORES.flight_date
  is '航班日期 (年休假申请的记录，该字段记录T_PRF_APPRAISAL表的apply_time)';
comment on column T_PRF_SCORES.param_id
  is '积分类型';
comment on column T_PRF_SCORES.value
  is '分值';
comment on column T_PRF_SCORES.op_time
  is '操作时间';
comment on column T_PRF_SCORES.remarks
  is '备注';
comment on column T_PRF_SCORES.scorestype
  is '积分类型 A:调班积分 B:岗级积分 C:月飞行小时积分';
alter table T_PRF_SCORES
  add constraint PK_PRF_SCORES primary key (RECORD_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_SCORES20151231
prompt ===================================
prompt
create table T_PRF_SCORES20151231
(
  record_id   NUMBER(11) not null,
  p_code      VARCHAR2(10) not null,
  scores_id   NUMBER(11),
  flight_date DATE,
  param_id    VARCHAR2(100),
  value       NUMBER(11),
  op_time     DATE,
  remarks     VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_SCORESBAK20151222
prompt ======================================
prompt
create table T_PRF_SCORESBAK20151222
(
  record_id   NUMBER(11) not null,
  p_code      VARCHAR2(10) not null,
  scores_id   NUMBER(11),
  flight_date DATE,
  param_id    VARCHAR2(100),
  value       NUMBER(11),
  op_time     DATE,
  remarks     VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_SCORESBAK20151222FLT
prompt =========================================
prompt
create table T_PRF_SCORESBAK20151222FLT
(
  record_id   NUMBER(11) not null,
  p_code      VARCHAR2(10) not null,
  scores_id   NUMBER(11),
  flight_date DATE,
  param_id    VARCHAR2(100),
  value       NUMBER(11),
  op_time     DATE,
  remarks     VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_SCORES_BAK
prompt ===============================
prompt
create table T_PRF_SCORES_BAK
(
  record_id   NUMBER(11) not null,
  p_code      VARCHAR2(10) not null,
  scores_id   NUMBER(11),
  flight_date DATE,
  param_id    NUMBER(11) not null,
  value       NUMBER(11),
  op_time     DATE,
  remarks     VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_PRF_SCORES_RECORD
prompt ==================================
prompt
create table T_PRF_SCORES_RECORD
(
  scoresid NUMBER(11) not null,
  recordid NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_SCORES_RECORD
  is '绩效分数记录主从表';
comment on column T_PRF_SCORES_RECORD.scoresid
  is '积分ID 1';
comment on column T_PRF_SCORES_RECORD.recordid
  is '记录ID n';

prompt
prompt Creating table T_PRF_SCORES_SUM
prompt ===============================
prompt
create table T_PRF_SCORES_SUM
(
  p_code      VARCHAR2(20) not null,
  flight_date DATE not null,
  scores      NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_PRF_SCORES_SUM
  is '积分汇总表';
comment on column T_PRF_SCORES_SUM.p_code
  is '人员编码';
comment on column T_PRF_SCORES_SUM.flight_date
  is '月份';
comment on column T_PRF_SCORES_SUM.scores
  is '当月分值';
alter table T_PRF_SCORES_SUM
  add constraint PK_PRF_SCORES_SUM primary key (P_CODE, FLIGHT_DATE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_ROSTER_BAK
prompt ===========================
prompt
create table T_ROSTER_BAK
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_AVG_FLYTIME
prompt ================================
prompt
create table T_RPT_AVG_FLYTIME
(
  flight_date       VARCHAR2(7) not null,
  ac_type           VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  avg_flytime       NUMBER(11) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 960K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_AVG_FLYTIME
  is '按分航线和机型的平均飞行时间';
comment on column T_RPT_AVG_FLYTIME.flight_date
  is '航班月份';
comment on column T_RPT_AVG_FLYTIME.ac_type
  is '机型';
comment on column T_RPT_AVG_FLYTIME.departure_airport
  is '实际起飞机场';
comment on column T_RPT_AVG_FLYTIME.arrival_airport
  is '实际到达机场';
comment on column T_RPT_AVG_FLYTIME.avg_flytime
  is '平均飞行时间';
comment on column T_RPT_AVG_FLYTIME.oper
  is '操作人';
comment on column T_RPT_AVG_FLYTIME.op_time
  is '操作时间';
comment on column T_RPT_AVG_FLYTIME.remarks
  is '备注';
comment on column T_RPT_AVG_FLYTIME.oper_ip
  is 'IP地址';
comment on column T_RPT_AVG_FLYTIME.oper_host
  is '主机名';
alter table T_RPT_AVG_FLYTIME
  add constraint PK_RPT_AVG_FLYTIME primary key (FLIGHT_DATE, AC_TYPE, DEPARTURE_AIRPORT, ARRIVAL_AIRPORT)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 896K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_AVG_GLIDETIME
prompt ==================================
prompt
create table T_RPT_AVG_GLIDETIME
(
  flight_date       VARCHAR2(7) not null,
  airport_3code     VARCHAR2(3) not null,
  avg_taxi_out_time NUMBER(11) not null,
  avg_taxi_in_time  NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_RPT_AVG_GLIDETIME
  is '按月和机场的平均滑出滑入时间';
comment on column T_RPT_AVG_GLIDETIME.flight_date
  is '航班月份';
comment on column T_RPT_AVG_GLIDETIME.airport_3code
  is '机场三字码';
comment on column T_RPT_AVG_GLIDETIME.avg_taxi_out_time
  is '平均滑出时间';
comment on column T_RPT_AVG_GLIDETIME.avg_taxi_in_time
  is '平均滑入时间';
alter table T_RPT_AVG_GLIDETIME
  add constraint PK_RPT_AVG_GLIDETIME primary key (FLIGHT_DATE, AIRPORT_3CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_RPT_CAPTAIN_FLY_COUNT
prompt ======================================
prompt
create table T_RPT_CAPTAIN_FLY_COUNT
(
  start_date         DATE not null,
  end_date           DATE not null,
  filiale            VARCHAR2(10) not null,
  ac_type_m          VARCHAR2(10) not null,
  p_code             VARCHAR2(10) not null,
  p_type             VARCHAR2(10) not null,
  m1                 NUMBER(4),
  m2                 NUMBER(4),
  m3                 NUMBER(4),
  m4                 NUMBER(4),
  m5                 NUMBER(4),
  m6                 NUMBER(4),
  m7                 NUMBER(4),
  m8                 NUMBER(4),
  m9                 NUMBER(4),
  m10                NUMBER(4),
  m11                NUMBER(4),
  m12                NUMBER(4),
  total_count        NUMBER(4),
  fly_hours          NUMBER(6,2),
  post_rank          VARCHAR2(4),
  month_plantime_min NUMBER(9),
  tech_no_i_m_name   VARCHAR2(50),
  tech_no_z_m        VARCHAR2(50),
  post_rank_name     VARCHAR2(50),
  post_rank_weight   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_CAPTAIN_FLY_COUNT
  is '机长月起落分析表';
comment on column T_RPT_CAPTAIN_FLY_COUNT.start_date
  is '查询起始日期';
comment on column T_RPT_CAPTAIN_FLY_COUNT.end_date
  is '查询结束日期';
comment on column T_RPT_CAPTAIN_FLY_COUNT.filiale
  is '分公司';
comment on column T_RPT_CAPTAIN_FLY_COUNT.ac_type_m
  is '主飞机型';
comment on column T_RPT_CAPTAIN_FLY_COUNT.p_code
  is '人员代码';
comment on column T_RPT_CAPTAIN_FLY_COUNT.p_type
  is '岗级分类(干部,一线)';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m1
  is '1月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m2
  is '2月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m3
  is '3月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m4
  is '4月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m5
  is '5月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m6
  is '6月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m7
  is '7月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m8
  is '8月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m9
  is '9月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m10
  is '10月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m11
  is '11月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.m12
  is '12月起落数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.total_count
  is '起落总数';
comment on column T_RPT_CAPTAIN_FLY_COUNT.fly_hours
  is '查询结束月飞行时间';
comment on column T_RPT_CAPTAIN_FLY_COUNT.post_rank
  is '职务岗级(字典)';
comment on column T_RPT_CAPTAIN_FLY_COUNT.month_plantime_min
  is '航医限制';
comment on column T_RPT_CAPTAIN_FLY_COUNT.tech_no_i_m_name
  is '公司授权';
comment on column T_RPT_CAPTAIN_FLY_COUNT.tech_no_z_m
  is '排班授权';
comment on column T_RPT_CAPTAIN_FLY_COUNT.post_rank_name
  is '岗级';
comment on column T_RPT_CAPTAIN_FLY_COUNT.post_rank_weight
  is '岗级系数';
alter table T_RPT_CAPTAIN_FLY_COUNT
  add primary key (START_DATE, END_DATE, FILIALE, AC_TYPE_M, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_CONTRIBUTION_DEGREE
prompt ========================================
prompt
create table T_RPT_CONTRIBUTION_DEGREE
(
  start_date     DATE not null,
  end_date       DATE not null,
  ac_type_crew   VARCHAR2(10) not null,
  filiale        VARCHAR2(10) not null,
  cls1           NUMBER(9,2),
  cls2           NUMBER(9,2),
  cls3           NUMBER(9,2),
  cls6           NUMBER(9,2),
  clsn           NUMBER(9,2),
  a319           NUMBER(9,2),
  a320           NUMBER(9,2),
  a321           NUMBER(9,2),
  flycount       NUMBER(9,2),
  coef_cls1      NUMBER(9,2),
  coef_cls2      NUMBER(9,2),
  coef_cls3      NUMBER(9,2),
  coef_cls6      NUMBER(9,2),
  coef_clsn      NUMBER(9,2),
  coef_a319      NUMBER(9,2),
  coef_a320      NUMBER(9,2),
  coef_a321      NUMBER(9,2),
  coef_flycount  NUMBER(9,2),
  fly_hours_full NUMBER(9,2),
  captains       NUMBER(6,2),
  save_date      DATE,
  iandr          NUMBER(9,2) default 0 not null,
  coef_iandr     NUMBER(9,2) default 0 not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_CONTRIBUTION_DEGREE
  is '各单位贡献度分析历史数据';
comment on column T_RPT_CONTRIBUTION_DEGREE.start_date
  is '起始时间';
comment on column T_RPT_CONTRIBUTION_DEGREE.end_date
  is '结束时间';
comment on column T_RPT_CONTRIBUTION_DEGREE.ac_type_crew
  is '机型';
comment on column T_RPT_CONTRIBUTION_DEGREE.filiale
  is '分公司';
comment on column T_RPT_CONTRIBUTION_DEGREE.cls1
  is '一类机场小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.cls2
  is '二类机场小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.cls3
  is '三类机场小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.cls6
  is '高高原机场小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.clsn
  is '普通机场小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.a319
  is 'A319小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.a320
  is 'A320小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.a321
  is 'A321小时数';
comment on column T_RPT_CONTRIBUTION_DEGREE.flycount
  is '起降段数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_cls1
  is '一类机场系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_cls2
  is '二类机场系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_cls3
  is '三类机场系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_cls6
  is '高高原机场系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_clsn
  is '普通机场系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_a319
  is 'A319系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_a320
  is 'A320系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_a321
  is 'A321系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_flycount
  is '起降段数系数';
comment on column T_RPT_CONTRIBUTION_DEGREE.fly_hours_full
  is '总航班时间';
comment on column T_RPT_CONTRIBUTION_DEGREE.captains
  is '机长人数';
comment on column T_RPT_CONTRIBUTION_DEGREE.save_date
  is '保存时间';
comment on column T_RPT_CONTRIBUTION_DEGREE.iandr
  is '国际地区航班';
comment on column T_RPT_CONTRIBUTION_DEGREE.coef_iandr
  is '国际地区航班系数';
alter table T_RPT_CONTRIBUTION_DEGREE
  add primary key (START_DATE, END_DATE, AC_TYPE_CREW, FILIALE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_CREW_FORCAST
prompt =================================
prompt
create table T_RPT_CREW_FORCAST
(
  flight_date    DATE not null,
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  filiale        VARCHAR2(10),
  dep_code       VARCHAR2(10),
  post_rank_name VARCHAR2(100),
  kind_name      VARCHAR2(100),
  wreck          VARCHAR2(100),
  is_leader      VARCHAR2(100),
  tech_no_i_name VARCHAR2(50),
  tech_no_z      VARCHAR2(50),
  year_plan      NUMBER(5),
  m3_plan        NUMBER(5),
  m_plan         NUMBER(5),
  m_plan_min     NUMBER(5),
  year_fly       NUMBER(5),
  m3_fly         NUMBER(5),
  m2_fly         NUMBER(5),
  m_fly          NUMBER(5),
  self_ac_type_n NUMBER(5),
  self_ac_type_y NUMBER(5),
  self_fly       NUMBER(5),
  fly_days       NUMBER(5),
  no_fly_days    NUMBER(5),
  duty_days      NUMBER(5),
  year_rest      NUMBER(5),
  m3_rest        NUMBER(5),
  m_rest         NUMBER(5),
  max_rest       NUMBER(5),
  max_cap        NUMBER(5),
  year_pct       NUMBER(6,4),
  m3_pct         NUMBER(6,4),
  m_pct          NUMBER(6,4),
  input_plan     NUMBER(5),
  oper           VARCHAR2(50),
  op_time        DATE,
  oper_ip        VARCHAR2(50),
  oper_host      VARCHAR2(50),
  ver_id         NUMBER(7) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_CREW_FORCAST
  is '飞行员预计飞行时间历史版本';
comment on column T_RPT_CREW_FORCAST.flight_date
  is '所在月份';
comment on column T_RPT_CREW_FORCAST.p_code
  is '人员编码';
comment on column T_RPT_CREW_FORCAST.ac_type
  is '机型';
comment on column T_RPT_CREW_FORCAST.filiale
  is '分子公司';
comment on column T_RPT_CREW_FORCAST.dep_code
  is '排班部门代码';
comment on column T_RPT_CREW_FORCAST.post_rank_name
  is '岗级';
comment on column T_RPT_CREW_FORCAST.kind_name
  is '人员类型';
comment on column T_RPT_CREW_FORCAST.wreck
  is '折损说明';
comment on column T_RPT_CREW_FORCAST.is_leader
  is '是否领导';
comment on column T_RPT_CREW_FORCAST.tech_no_i_name
  is '公司授权';
comment on column T_RPT_CREW_FORCAST.tech_no_z
  is '排班授权';
comment on column T_RPT_CREW_FORCAST.year_plan
  is '年计划';
comment on column T_RPT_CREW_FORCAST.m3_plan
  is '三月计划';
comment on column T_RPT_CREW_FORCAST.m_plan
  is '旺季月计划';
comment on column T_RPT_CREW_FORCAST.m_plan_min
  is '航医限制';
comment on column T_RPT_CREW_FORCAST.year_fly
  is '年已飞时间';
comment on column T_RPT_CREW_FORCAST.m3_fly
  is '三月已飞时间';
comment on column T_RPT_CREW_FORCAST.m2_fly
  is '两月已飞时间';
comment on column T_RPT_CREW_FORCAST.m_fly
  is '月已飞时间';
comment on column T_RPT_CREW_FORCAST.self_ac_type_n
  is '本部非A320时间';
comment on column T_RPT_CREW_FORCAST.self_ac_type_y
  is '本部A320时间';
comment on column T_RPT_CREW_FORCAST.self_fly
  is '本部时间';
comment on column T_RPT_CREW_FORCAST.fly_days
  is '飞行天数';
comment on column T_RPT_CREW_FORCAST.no_fly_days
  is '不飞天数';
comment on column T_RPT_CREW_FORCAST.duty_days
  is '出勤天数';
comment on column T_RPT_CREW_FORCAST.year_rest
  is '年剩余';
comment on column T_RPT_CREW_FORCAST.m3_rest
  is '三月剩余';
comment on column T_RPT_CREW_FORCAST.m_rest
  is '旺季月剩余';
comment on column T_RPT_CREW_FORCAST.max_rest
  is '预测最高可飞';
comment on column T_RPT_CREW_FORCAST.max_cap
  is '最大实力';
comment on column T_RPT_CREW_FORCAST.year_pct
  is '年飞行进度';
comment on column T_RPT_CREW_FORCAST.m3_pct
  is '三月飞行进度';
comment on column T_RPT_CREW_FORCAST.m_pct
  is '旺季月进度';
comment on column T_RPT_CREW_FORCAST.input_plan
  is '手工输入参数';
comment on column T_RPT_CREW_FORCAST.oper
  is '操作人';
comment on column T_RPT_CREW_FORCAST.op_time
  is '操作时间';
comment on column T_RPT_CREW_FORCAST.oper_ip
  is '操作IP';
comment on column T_RPT_CREW_FORCAST.oper_host
  is '操作主机名';
comment on column T_RPT_CREW_FORCAST.ver_id
  is '版本号';
create index IDX_VER_ID on T_RPT_CREW_FORCAST (VER_ID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 960K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_CREW_FORCAST
  add constraint PK_T_RPT_CREW_FORECAST primary key (FLIGHT_DATE, P_CODE, AC_TYPE, VER_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_CREW_FORCAST_VER
prompt =====================================
prompt
create table T_RPT_CREW_FORCAST_VER
(
  ver_id     NUMBER(7) not null,
  ld_mode    NVARCHAR2(5),
  ld_m4      NUMBER(5),
  ld_m5      NUMBER(5),
  ld_m6      NUMBER(5),
  ld_0       NUMBER(5),
  ld_rest    NUMBER(5),
  fxy_m      NUMBER(5),
  jf_m       NUMBER(5),
  m3_m       NUMBER(5),
  njh_m      NUMBER(5),
  njh_m_gb   NUMBER(5),
  date_month DATE,
  dep_code   NVARCHAR2(1000),
  ac_type    NVARCHAR2(50),
  tech_no_z  NVARCHAR2(100),
  valid_flag NVARCHAR2(5),
  oper       VARCHAR2(50),
  op_time    DATE,
  oper_ip    VARCHAR2(50),
  oper_host  VARCHAR2(50),
  ver_name   VARCHAR2(100),
  remark     VARCHAR2(1000),
  ld_r       NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_CREW_FORCAST_VER
  is '飞行员预计飞行时间总表';
comment on column T_RPT_CREW_FORCAST_VER.ver_id
  is '版本号';
comment on column T_RPT_CREW_FORCAST_VER.ld_mode
  is 'X：领导按系数；R：领导按人工录入';
comment on column T_RPT_CREW_FORCAST_VER.ld_m4
  is '领导M4月计划';
comment on column T_RPT_CREW_FORCAST_VER.ld_m5
  is '领导M5月计划';
comment on column T_RPT_CREW_FORCAST_VER.ld_m6
  is '领导M6月计划';
comment on column T_RPT_CREW_FORCAST_VER.ld_0
  is '领导（各类停飞保留）月计划';
comment on column T_RPT_CREW_FORCAST_VER.ld_rest
  is '领导（其它类）月计划';
comment on column T_RPT_CREW_FORCAST_VER.fxy_m
  is '一线飞行员月计划';
comment on column T_RPT_CREW_FORCAST_VER.jf_m
  is '局方月计划';
comment on column T_RPT_CREW_FORCAST_VER.m3_m
  is '3月计划小时';
comment on column T_RPT_CREW_FORCAST_VER.njh_m
  is '年计划小时';
comment on column T_RPT_CREW_FORCAST_VER.njh_m_gb
  is '年计划小时（干部）';
comment on column T_RPT_CREW_FORCAST_VER.date_month
  is '查询时间';
comment on column T_RPT_CREW_FORCAST_VER.dep_code
  is '查询部门';
comment on column T_RPT_CREW_FORCAST_VER.ac_type
  is '机型';
comment on column T_RPT_CREW_FORCAST_VER.tech_no_z
  is '排班授权';
comment on column T_RPT_CREW_FORCAST_VER.valid_flag
  is '有效标志';
comment on column T_RPT_CREW_FORCAST_VER.oper
  is '操作人';
comment on column T_RPT_CREW_FORCAST_VER.op_time
  is '操作时间';
comment on column T_RPT_CREW_FORCAST_VER.oper_ip
  is '操作IP';
comment on column T_RPT_CREW_FORCAST_VER.oper_host
  is '操作主机名';
comment on column T_RPT_CREW_FORCAST_VER.ver_name
  is '版本名称';
comment on column T_RPT_CREW_FORCAST_VER.remark
  is '备注信息';
comment on column T_RPT_CREW_FORCAST_VER.ld_r
  is '按系数额外增加时间';
create index IDX_DATE_MONTH on T_RPT_CREW_FORCAST_VER (DATE_MONTH)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_CREW_FORCAST_VER
  add constraint PK_VER_ID primary key (VER_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FLIGHTRATING
prompt =================================
prompt
create table T_RPT_FLIGHTRATING
(
  rating_id NUMBER(11) not null,
  filiale   VARCHAR2(5) not null,
  airport   VARCHAR2(3),
  flight_no VARCHAR2(15),
  rating    VARCHAR2(2),
  score     NUMBER(3),
  remarks   VARCHAR2(200),
  oper      VARCHAR2(10),
  op_time   DATE,
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FLIGHTRATING
  is '好坏航班定义表';
comment on column T_RPT_FLIGHTRATING.rating_id
  is 'ID';
comment on column T_RPT_FLIGHTRATING.filiale
  is '分公司';
comment on column T_RPT_FLIGHTRATING.airport
  is '航站';
comment on column T_RPT_FLIGHTRATING.flight_no
  is '航班号';
comment on column T_RPT_FLIGHTRATING.rating
  is '好坏评级(G或B)';
comment on column T_RPT_FLIGHTRATING.score
  is '分值';
comment on column T_RPT_FLIGHTRATING.remarks
  is '备注';
comment on column T_RPT_FLIGHTRATING.oper
  is '操作人';
comment on column T_RPT_FLIGHTRATING.op_time
  is '操作时间';
comment on column T_RPT_FLIGHTRATING.oper_ip
  is '操作IP';
comment on column T_RPT_FLIGHTRATING.oper_host
  is '操作主机';
alter table T_RPT_FLIGHTRATING
  add constraint PK_RPT_FLIGHTRATING primary key (RATING_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FLIGHT_ACTYPE
prompt ==================================
prompt
create table T_RPT_FLIGHT_ACTYPE
(
  flight_date   DATE not null,
  flight_id     NUMBER(11) not null,
  sta           DATE,
  std           DATE,
  fly_hours_adt NUMBER(7),
  fly_hours_doc NUMBER(7),
  totl_hours    NUMBER(7),
  fly_hours     NUMBER(7),
  fly_hours_ftb NUMBER(7),
  crew_owner    VARCHAR2(100),
  ac_type_crew  VARCHAR2(100),
  ac_type_long  VARCHAR2(100),
  op_time       DATE,
  oper          VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FLIGHT_ACTYPE
  is '航班按机型统计报表';
comment on column T_RPT_FLIGHT_ACTYPE.flight_date
  is '航班日期';
comment on column T_RPT_FLIGHT_ACTYPE.flight_id
  is '航班ID';
comment on column T_RPT_FLIGHT_ACTYPE.sta
  is '计划落地时间';
comment on column T_RPT_FLIGHT_ACTYPE.std
  is '计划起飞时间';
comment on column T_RPT_FLIGHT_ACTYPE.fly_hours_adt
  is '飞行时间1';
comment on column T_RPT_FLIGHT_ACTYPE.fly_hours_doc
  is '飞行时间2';
comment on column T_RPT_FLIGHT_ACTYPE.totl_hours
  is '飞行时间3';
comment on column T_RPT_FLIGHT_ACTYPE.fly_hours
  is '飞行时间4';
comment on column T_RPT_FLIGHT_ACTYPE.fly_hours_ftb
  is '飞行时间5';
comment on column T_RPT_FLIGHT_ACTYPE.crew_owner
  is '飞行执飞单位';
comment on column T_RPT_FLIGHT_ACTYPE.ac_type_crew
  is '机型组';
comment on column T_RPT_FLIGHT_ACTYPE.ac_type_long
  is '长机型';
comment on column T_RPT_FLIGHT_ACTYPE.op_time
  is '操作时间';
comment on column T_RPT_FLIGHT_ACTYPE.oper
  is '操作人';
alter table T_RPT_FLIGHT_ACTYPE
  add constraint PK_FLIGHT_ACTYPE primary key (FLIGHT_DATE, FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FLIGHT_AC_TYPE
prompt ===================================
prompt
create table T_RPT_FLIGHT_AC_TYPE
(
  pdate         DATE not null,
  ac_type_crew  VARCHAR2(100) not null,
  crew_owner    VARCHAR2(100) not null,
  ac_type_long  VARCHAR2(100) not null,
  fiight_id     NUMBER(11),
  lastyear      NUMBER(7),
  lastmonth     NUMBER(7),
  fly_hours_ftb NUMBER(7),
  add_date      DATE,
  oper          VARCHAR2(100),
  op_time       DATE,
  remarks       VARCHAR2(500),
  oper_ip       VARCHAR2(100),
  oper_host     VARCHAR2(100),
  lastyear_s    NUMBER(7),
  lastmonth_s   NUMBER(7),
  fly_hours_s   NUMBER(7)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FLIGHT_AC_TYPE
  is '各单位按机型航班任务量';
comment on column T_RPT_FLIGHT_AC_TYPE.pdate
  is '日期(1号)';
comment on column T_RPT_FLIGHT_AC_TYPE.ac_type_crew
  is '大机型';
comment on column T_RPT_FLIGHT_AC_TYPE.crew_owner
  is '分公司';
comment on column T_RPT_FLIGHT_AC_TYPE.ac_type_long
  is '小机型';
comment on column T_RPT_FLIGHT_AC_TYPE.fiight_id
  is '航班量';
comment on column T_RPT_FLIGHT_AC_TYPE.lastyear
  is '回收时间(同年同月)';
comment on column T_RPT_FLIGHT_AC_TYPE.lastmonth
  is '回收时间(前一月)';
comment on column T_RPT_FLIGHT_AC_TYPE.fly_hours_ftb
  is '回收时间';
comment on column T_RPT_FLIGHT_AC_TYPE.add_date
  is '日期';
comment on column T_RPT_FLIGHT_AC_TYPE.oper
  is '操作人';
comment on column T_RPT_FLIGHT_AC_TYPE.op_time
  is '操作时间';
comment on column T_RPT_FLIGHT_AC_TYPE.remarks
  is '备注';
comment on column T_RPT_FLIGHT_AC_TYPE.oper_ip
  is 'IP地址';
comment on column T_RPT_FLIGHT_AC_TYPE.oper_host
  is '主机名';
comment on column T_RPT_FLIGHT_AC_TYPE.lastyear_s
  is '计划时间(同年同月)';
comment on column T_RPT_FLIGHT_AC_TYPE.lastmonth_s
  is '计划时间(前一月)';
comment on column T_RPT_FLIGHT_AC_TYPE.fly_hours_s
  is '计划时间';
alter table T_RPT_FLIGHT_AC_TYPE
  add constraint PK_FLIGHT_AC_YPTE primary key (PDATE, AC_TYPE_CREW, CREW_OWNER, AC_TYPE_LONG)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FORECAST_CUSTOM
prompt ====================================
prompt
create table T_RPT_FORECAST_CUSTOM
(
  forecastdate DATE not null,
  oper         VARCHAR2(10) not null,
  p_code       VARCHAR2(10) not null,
  m_plan       NUMBER(5,2),
  add_hours    NUMBER(5,2),
  zw_flag      NUMBER(1),
  zs_flag      NUMBER(1),
  op_time      DATE,
  oper_ip      VARCHAR2(50),
  oper_host    VARCHAR2(50),
  user_code    VARCHAR2(10) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FORECAST_CUSTOM
  is '飞行员预计飞行时间定制';
comment on column T_RPT_FORECAST_CUSTOM.forecastdate
  is '预测日期';
comment on column T_RPT_FORECAST_CUSTOM.oper
  is '操作人';
comment on column T_RPT_FORECAST_CUSTOM.p_code
  is '人员代码';
comment on column T_RPT_FORECAST_CUSTOM.m_plan
  is '月计划';
comment on column T_RPT_FORECAST_CUSTOM.add_hours
  is '额外增加值';
comment on column T_RPT_FORECAST_CUSTOM.zw_flag
  is '是否计算占位';
comment on column T_RPT_FORECAST_CUSTOM.zs_flag
  is '是否计算折损';
comment on column T_RPT_FORECAST_CUSTOM.op_time
  is '操作日期';
comment on column T_RPT_FORECAST_CUSTOM.oper_ip
  is '操作人IP地址';
comment on column T_RPT_FORECAST_CUSTOM.oper_host
  is '操作人主机名';
comment on column T_RPT_FORECAST_CUSTOM.user_code
  is '用户代码';
alter table T_RPT_FORECAST_CUSTOM
  add constraint PK_T_RPT_FORECAST_CUSTOM primary key (FORECASTDATE, USER_CODE, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FORECAST_DETAIL
prompt ====================================
prompt
create table T_RPT_FORECAST_DETAIL
(
  forecastdate     DATE not null,
  ver_id           NUMBER(7) not null,
  p_code           VARCHAR2(10) not null,
  ac_type          VARCHAR2(10) not null,
  filiale          VARCHAR2(10),
  dep_code         VARCHAR2(10),
  post_rank_name   VARCHAR2(100),
  wreck            VARCHAR2(100),
  is_leader        VARCHAR2(100),
  tech_no_i_name   VARCHAR2(50),
  tech_no_z        VARCHAR2(50),
  year_plan        NUMBER(5),
  m3_plan          NUMBER(5),
  m_plan           NUMBER(5),
  m_plan_min       NUMBER(5),
  year_fly         NUMBER(5),
  m3_fly           NUMBER(5),
  m2_fly           NUMBER(5),
  m_fly            NUMBER(5),
  flightdays       NUMBER(5),
  emptydays        NUMBER(5),
  dutydays         NUMBER(5),
  year_rest        NUMBER(5),
  m3_rest          NUMBER(5),
  m_rest           NUMBER(5),
  max_rest         NUMBER(5),
  max_cap          NUMBER(5),
  year_pct         NUMBER(6,4),
  m3_pct           NUMBER(6,4),
  m_pct            NUMBER(6,4),
  input_plan       NUMBER(5),
  oper             VARCHAR2(50),
  op_time          DATE,
  oper_ip          VARCHAR2(50),
  oper_host        VARCHAR2(50),
  post_rank_weight NUMBER(5,2),
  resthours        NUMBER(7,2),
  ulti_cap         NUMBER(5),
  ulti_rest        NUMBER(5),
  avg_hours        NUMBER(5),
  wreck_rate       NUMBER(3,2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FORECAST_DETAIL
  is '飞行员预计飞行时间历史明细';
comment on column T_RPT_FORECAST_DETAIL.forecastdate
  is '所在月份';
comment on column T_RPT_FORECAST_DETAIL.ver_id
  is '版本号';
comment on column T_RPT_FORECAST_DETAIL.p_code
  is '人员编码';
comment on column T_RPT_FORECAST_DETAIL.ac_type
  is '机型';
comment on column T_RPT_FORECAST_DETAIL.filiale
  is '分子公司';
comment on column T_RPT_FORECAST_DETAIL.dep_code
  is '排班部门代码';
comment on column T_RPT_FORECAST_DETAIL.post_rank_name
  is '岗级';
comment on column T_RPT_FORECAST_DETAIL.wreck
  is '折损说明';
comment on column T_RPT_FORECAST_DETAIL.is_leader
  is '是否领导';
comment on column T_RPT_FORECAST_DETAIL.tech_no_i_name
  is '公司授权';
comment on column T_RPT_FORECAST_DETAIL.tech_no_z
  is '排班授权';
comment on column T_RPT_FORECAST_DETAIL.year_plan
  is '年计划';
comment on column T_RPT_FORECAST_DETAIL.m3_plan
  is '三月计划';
comment on column T_RPT_FORECAST_DETAIL.m_plan
  is '旺季月计划';
comment on column T_RPT_FORECAST_DETAIL.m_plan_min
  is '航医限制';
comment on column T_RPT_FORECAST_DETAIL.year_fly
  is '年已飞时间';
comment on column T_RPT_FORECAST_DETAIL.m3_fly
  is '三月已飞时间';
comment on column T_RPT_FORECAST_DETAIL.m2_fly
  is '两月已飞时间';
comment on column T_RPT_FORECAST_DETAIL.m_fly
  is '月已飞时间';
comment on column T_RPT_FORECAST_DETAIL.flightdays
  is '飞行天数';
comment on column T_RPT_FORECAST_DETAIL.emptydays
  is '不飞天数';
comment on column T_RPT_FORECAST_DETAIL.dutydays
  is '出勤天数';
comment on column T_RPT_FORECAST_DETAIL.year_rest
  is '年剩余';
comment on column T_RPT_FORECAST_DETAIL.m3_rest
  is '三月剩余';
comment on column T_RPT_FORECAST_DETAIL.m_rest
  is '旺季月剩余';
comment on column T_RPT_FORECAST_DETAIL.max_rest
  is '预测最高可飞，当天至月底的已排未飞的飞行时间+预测未排航班的飞行时间';
comment on column T_RPT_FORECAST_DETAIL.max_cap
  is '最大实力，预测整月的人员可飞时间';
comment on column T_RPT_FORECAST_DETAIL.year_pct
  is '年飞行进度';
comment on column T_RPT_FORECAST_DETAIL.m3_pct
  is '三月飞行进度';
comment on column T_RPT_FORECAST_DETAIL.m_pct
  is '旺季月进度';
comment on column T_RPT_FORECAST_DETAIL.input_plan
  is '手工输入参数';
comment on column T_RPT_FORECAST_DETAIL.oper
  is '操作人';
comment on column T_RPT_FORECAST_DETAIL.op_time
  is '操作时间';
comment on column T_RPT_FORECAST_DETAIL.oper_ip
  is '操作IP';
comment on column T_RPT_FORECAST_DETAIL.oper_host
  is '操作主机名';
comment on column T_RPT_FORECAST_DETAIL.post_rank_weight
  is '岗级系数';
comment on column T_RPT_FORECAST_DETAIL.resthours
  is '剩余潜力';
comment on column T_RPT_FORECAST_DETAIL.ulti_cap
  is '超系数最大实力';
comment on column T_RPT_FORECAST_DETAIL.ulti_rest
  is '超系数剩余';
comment on column T_RPT_FORECAST_DETAIL.avg_hours
  is '平均环长';
comment on column T_RPT_FORECAST_DETAIL.wreck_rate
  is '折损率';
create index IDX_FORECAST_DATE_DETAIL on T_RPT_FORECAST_DETAIL (FORECASTDATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 11M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_FORECAST_DETAIL
  add constraint PK_T_RPT_FORECAST_DETAIL primary key (FORECASTDATE, VER_ID, P_CODE, AC_TYPE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 17M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FORECAST_DOUBLEPER
prompt =======================================
prompt
create table T_RPT_FORECAST_DOUBLEPER
(
  doublecaptainperid NUMBER(8) not null,
  filiale            VARCHAR2(10) not null,
  ac_type            VARCHAR2(10) not null,
  doublecaptainper   NUMBER(8,4) not null,
  op_time            DATE,
  oper               VARCHAR2(20),
  oper_ip            VARCHAR2(20),
  oper_host          VARCHAR2(40)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FORECAST_DOUBLEPER
  is '各单位各机型的双机长比例';
comment on column T_RPT_FORECAST_DOUBLEPER.doublecaptainperid
  is '参数版本ID';
comment on column T_RPT_FORECAST_DOUBLEPER.filiale
  is '分公司';
comment on column T_RPT_FORECAST_DOUBLEPER.ac_type
  is '机型';
comment on column T_RPT_FORECAST_DOUBLEPER.doublecaptainper
  is '双机长比例';
comment on column T_RPT_FORECAST_DOUBLEPER.op_time
  is '记录生成时间';
comment on column T_RPT_FORECAST_DOUBLEPER.oper
  is '操作人';
comment on column T_RPT_FORECAST_DOUBLEPER.oper_ip
  is '操作人IP';
comment on column T_RPT_FORECAST_DOUBLEPER.oper_host
  is '操作人主机名';
alter table T_RPT_FORECAST_DOUBLEPER
  add constraint PK_DOUBLEPER primary key (DOUBLECAPTAINPERID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FORECAST_PARAM
prompt ===================================
prompt
create table T_RPT_FORECAST_PARAM
(
  forecastparamid NUMBER(8) not null,
  paramyear       NUMBER(8) not null,
  parammonth      NUMBER(8) not null,
  monthhours      NUMBER(8),
  month3hours     NUMBER(8),
  yearhours       NUMBER(8),
  op_time         DATE,
  oper            VARCHAR2(20),
  oper_ip         VARCHAR2(20),
  oper_host       VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FORECAST_PARAM
  is '预测本月各单位各机型剩余可飞航班时间的参数';
comment on column T_RPT_FORECAST_PARAM.forecastparamid
  is '参数版本ID';
comment on column T_RPT_FORECAST_PARAM.paramyear
  is '年份';
comment on column T_RPT_FORECAST_PARAM.parammonth
  is '月份';
comment on column T_RPT_FORECAST_PARAM.monthhours
  is '月份时间';
comment on column T_RPT_FORECAST_PARAM.month3hours
  is '3月份时间';
comment on column T_RPT_FORECAST_PARAM.yearhours
  is '年飞时间';
comment on column T_RPT_FORECAST_PARAM.op_time
  is '记录生成时间';
comment on column T_RPT_FORECAST_PARAM.oper
  is '操作人';
comment on column T_RPT_FORECAST_PARAM.oper_ip
  is '操作人主IP';
comment on column T_RPT_FORECAST_PARAM.oper_host
  is '操作人主机名';
alter table T_RPT_FORECAST_PARAM
  add constraint PK_FORECAST_PARAM primary key (FORECASTPARAMID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_FORECAST_SUM
prompt =================================
prompt
create table T_RPT_FORECAST_SUM
(
  forecastdate       DATE not null,
  filiale            VARCHAR2(10) not null,
  ac_type            VARCHAR2(10) not null,
  hasrosterhours     NUMBER(8,2),
  rest_flight_hours  NUMBER(8,2),
  sumhours           NUMBER(8,2),
  doublecaptainperid NUMBER(8),
  op_time            DATE,
  rest_roster_hours  NUMBER(8,2),
  month_flight_hours NUMBER(8,2),
  month_roster_hours NUMBER(8,2),
  flied_flight_hours NUMBER(8,2),
  flied_roster_hours NUMBER(8,2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_FORECAST_SUM
  is '预测本月各单位各机型剩余可飞航班时间';
comment on column T_RPT_FORECAST_SUM.forecastdate
  is '预测日期，如该日期是15日，那么该条记录预测是15日至该月底的可飞航班时间';
comment on column T_RPT_FORECAST_SUM.filiale
  is '分公司';
comment on column T_RPT_FORECAST_SUM.ac_type
  is '机型';
comment on column T_RPT_FORECAST_SUM.hasrosterhours
  is '已排人航班的飞行时间';
comment on column T_RPT_FORECAST_SUM.rest_flight_hours
  is '预测未排人航班的可飞航班时间';
comment on column T_RPT_FORECAST_SUM.sumhours
  is '已排人未飞的航班时间+REST_FLIGHT_HOURS';
comment on column T_RPT_FORECAST_SUM.doublecaptainperid
  is '双机长比例ID，用于将 预测得到的人员飞行时间 转成 航班时间';
comment on column T_RPT_FORECAST_SUM.op_time
  is '记录生成时间';
comment on column T_RPT_FORECAST_SUM.rest_roster_hours
  is '预测未排人航班的可飞机长时间，通过 该字段*DOUBLECAPTAINPERID 得到 REST_FLIGHT_HOURS';
comment on column T_RPT_FORECAST_SUM.month_flight_hours
  is '当月航班总时间';
comment on column T_RPT_FORECAST_SUM.month_roster_hours
  is '当月航班已排人员总时间';
comment on column T_RPT_FORECAST_SUM.flied_flight_hours
  is '当月已飞航班总时间';
comment on column T_RPT_FORECAST_SUM.flied_roster_hours
  is '当月已飞航班排班人员总时间';
create index IDX_FORECASTDATE on T_RPT_FORECAST_SUM (FORECASTDATE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_FORECAST_SUM
  add constraint PK_FORECAST_SUM primary key (FORECASTDATE, FILIALE, AC_TYPE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_HR_A001_MONTHLY
prompt ====================================
prompt
create table T_RPT_HR_A001_MONTHLY
(
  pdate              DATE not null,
  ac_type_crew       VARCHAR2(10) not null,
  filiale            VARCHAR2(100) not null,
  p_code             VARCHAR2(10) not null,
  post_rank_name     VARCHAR2(100),
  p_type             VARCHAR2(50),
  roster_fly_hours   NUMBER(9),
  tech_no_zs         VARCHAR2(100),
  valid_flag         VARCHAR2(1) default 'Y',
  oper               VARCHAR2(50),
  op_time            DATE,
  oper_ip            VARCHAR2(50),
  oper_host          VARCHAR2(50),
  remarks            VARCHAR2(100),
  add_date           DATE default (SYSDATE),
  captain_info       NVARCHAR2(50),
  tech_no_i          NVARCHAR2(50),
  month_plantime_min NUMBER(6,2),
  ver_id             NUMBER(7) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_HR_A001_MONTHLY
  is '干部及一线带队机长月飞时间分析';
comment on column T_RPT_HR_A001_MONTHLY.pdate
  is '所在月份';
comment on column T_RPT_HR_A001_MONTHLY.ac_type_crew
  is '机型组';
comment on column T_RPT_HR_A001_MONTHLY.filiale
  is '分公司';
comment on column T_RPT_HR_A001_MONTHLY.p_code
  is '工号';
comment on column T_RPT_HR_A001_MONTHLY.post_rank_name
  is '岗级名称';
comment on column T_RPT_HR_A001_MONTHLY.p_type
  is '类型';
comment on column T_RPT_HR_A001_MONTHLY.roster_fly_hours
  is '月飞时间';
comment on column T_RPT_HR_A001_MONTHLY.tech_no_zs
  is '排班授权';
comment on column T_RPT_HR_A001_MONTHLY.valid_flag
  is '是否有效';
comment on column T_RPT_HR_A001_MONTHLY.oper
  is '操作人';
comment on column T_RPT_HR_A001_MONTHLY.op_time
  is '操作时间';
comment on column T_RPT_HR_A001_MONTHLY.oper_ip
  is 'IP';
comment on column T_RPT_HR_A001_MONTHLY.oper_host
  is '主机名';
comment on column T_RPT_HR_A001_MONTHLY.remarks
  is '备注';
comment on column T_RPT_HR_A001_MONTHLY.add_date
  is '数据插入时间';
comment on column T_RPT_HR_A001_MONTHLY.captain_info
  is '能否独立带队说明';
comment on column T_RPT_HR_A001_MONTHLY.tech_no_i
  is '公司授权';
comment on column T_RPT_HR_A001_MONTHLY.month_plantime_min
  is '航医限制';
comment on column T_RPT_HR_A001_MONTHLY.ver_id
  is '版本号';
alter table T_RPT_HR_A001_MONTHLY
  add constraint PK_T_RPT_HR_A001_MONTHLY primary key (VER_ID, PDATE, AC_TYPE_CREW, FILIALE, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 10M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_HR_A001_MONTHLY_VER
prompt ========================================
prompt
create table T_RPT_HR_A001_MONTHLY_VER
(
  ver_id     NUMBER(7) not null,
  start_date DATE,
  end_date   DATE,
  valid_flag NVARCHAR2(5),
  oper       VARCHAR2(50),
  op_time    DATE,
  oper_ip    VARCHAR2(50),
  oper_host  VARCHAR2(50),
  ver_name   VARCHAR2(100),
  remark     VARCHAR2(1000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_HR_A001_MONTHLY_VER
  is '干部及一线带队机长月飞时间分析历史版本';
comment on column T_RPT_HR_A001_MONTHLY_VER.ver_id
  is '版本号';
comment on column T_RPT_HR_A001_MONTHLY_VER.start_date
  is '起始时间';
comment on column T_RPT_HR_A001_MONTHLY_VER.end_date
  is '结束时间';
comment on column T_RPT_HR_A001_MONTHLY_VER.valid_flag
  is '有效标志';
comment on column T_RPT_HR_A001_MONTHLY_VER.oper
  is '操作人';
comment on column T_RPT_HR_A001_MONTHLY_VER.op_time
  is '操作时间';
comment on column T_RPT_HR_A001_MONTHLY_VER.oper_ip
  is '操作IP';
comment on column T_RPT_HR_A001_MONTHLY_VER.oper_host
  is '操作主机名';
comment on column T_RPT_HR_A001_MONTHLY_VER.ver_name
  is '版本名称';
comment on column T_RPT_HR_A001_MONTHLY_VER.remark
  is '备注信息';
alter table T_RPT_HR_A001_MONTHLY_VER
  add primary key (VER_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_HR_AC_TYPE_MAIN
prompt ====================================
prompt
create table T_RPT_HR_AC_TYPE_MAIN
(
  p_code           VARCHAR2(10) not null,
  ac_type_m        VARCHAR2(50),
  tech_no_i_m      VARCHAR2(50),
  tech_no_i_m_name VARCHAR2(50),
  tech_no_z_m      VARCHAR2(50),
  op_time          DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_HR_AC_TYPE_MAIN
  is '人员主飞机型表';
comment on column T_RPT_HR_AC_TYPE_MAIN.p_code
  is '工号';
comment on column T_RPT_HR_AC_TYPE_MAIN.ac_type_m
  is '主飞机型';
comment on column T_RPT_HR_AC_TYPE_MAIN.tech_no_i_m
  is '公司授权';
comment on column T_RPT_HR_AC_TYPE_MAIN.tech_no_i_m_name
  is '公司授权名称';
comment on column T_RPT_HR_AC_TYPE_MAIN.tech_no_z_m
  is '排班授权';
comment on column T_RPT_HR_AC_TYPE_MAIN.op_time
  is '同步日期';
create index IDX_AC_TYPE_M on T_RPT_HR_AC_TYPE_MAIN (AC_TYPE_M)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_HR_AC_TYPE_MAIN
  add constraint PK_P_CODE primary key (P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_HR_DUTY_REASON
prompt ===================================
prompt
create table T_RPT_HR_DUTY_REASON
(
  p_date       DATE not null,
  p_code       NVARCHAR2(10) not null,
  filiale_name NVARCHAR2(20),
  name         NVARCHAR2(20),
  title        NVARCHAR2(10),
  monft        NUMBER(6,2),
  tmonft       NUMBER(6,2),
  resean       NVARCHAR2(150),
  hours        NVARCHAR2(4),
  oper         NVARCHAR2(50),
  op_time      DATE,
  oper_ip      NVARCHAR2(50),
  oper_host    NVARCHAR2(50),
  ac_type      VARCHAR2(10),
  remarks      VARCHAR2(200),
  work_no      VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_HR_DUTY_REASON
  is '机长飞行低于X小时原因列表';
comment on column T_RPT_HR_DUTY_REASON.p_date
  is '参数适用时间';
comment on column T_RPT_HR_DUTY_REASON.p_code
  is '人员编号';
comment on column T_RPT_HR_DUTY_REASON.filiale_name
  is '公司';
comment on column T_RPT_HR_DUTY_REASON.name
  is '姓名';
comment on column T_RPT_HR_DUTY_REASON.title
  is '分类';
comment on column T_RPT_HR_DUTY_REASON.monft
  is '月飞';
comment on column T_RPT_HR_DUTY_REASON.tmonft
  is '三月飞';
comment on column T_RPT_HR_DUTY_REASON.resean
  is '原因';
comment on column T_RPT_HR_DUTY_REASON.hours
  is '小时数';
comment on column T_RPT_HR_DUTY_REASON.oper
  is '用户名';
comment on column T_RPT_HR_DUTY_REASON.op_time
  is '操作时间';
comment on column T_RPT_HR_DUTY_REASON.oper_ip
  is '操作ip';
comment on column T_RPT_HR_DUTY_REASON.oper_host
  is '操作主机';
comment on column T_RPT_HR_DUTY_REASON.ac_type
  is '机型';
comment on column T_RPT_HR_DUTY_REASON.remarks
  is '岗级';
comment on column T_RPT_HR_DUTY_REASON.work_no
  is '工号';
alter table T_RPT_HR_DUTY_REASON
  add constraint PKT_RPT_KKHISTORY primary key (P_DATE, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_HR_ZORE_FLY_HOURS
prompt ======================================
prompt
create table T_RPT_HR_ZORE_FLY_HOURS
(
  pdate              DATE not null,
  filiale            VARCHAR2(4) not null,
  ac_type_crew       VARCHAR2(10) not null,
  p_code             VARCHAR2(10) not null,
  p_type             VARCHAR2(50),
  post_rank_name     VARCHAR2(100),
  post_rank_weight   VARCHAR2(10),
  tech_no_i_name     VARCHAR2(100),
  tech_no_z_name     VARCHAR2(100),
  month_plantime_min NUMBER(9),
  valid_flag         VARCHAR2(1) default 'Y',
  oper               VARCHAR2(50),
  op_time            DATE,
  oper_ip            VARCHAR2(50),
  oper_host          VARCHAR2(50),
  remarks            VARCHAR2(200),
  add_date           DATE default (SYSDATE)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_HR_ZORE_FLY_HOURS
  is '各单位零时机长表';
comment on column T_RPT_HR_ZORE_FLY_HOURS.pdate
  is '日期';
comment on column T_RPT_HR_ZORE_FLY_HOURS.filiale
  is '分公司';
comment on column T_RPT_HR_ZORE_FLY_HOURS.ac_type_crew
  is '机型';
comment on column T_RPT_HR_ZORE_FLY_HOURS.p_code
  is '人员代码';
comment on column T_RPT_HR_ZORE_FLY_HOURS.p_type
  is '零时机长分类';
comment on column T_RPT_HR_ZORE_FLY_HOURS.post_rank_name
  is '岗级';
comment on column T_RPT_HR_ZORE_FLY_HOURS.post_rank_weight
  is '岗级系数';
comment on column T_RPT_HR_ZORE_FLY_HOURS.tech_no_i_name
  is '公司授权';
comment on column T_RPT_HR_ZORE_FLY_HOURS.tech_no_z_name
  is '排班授权';
comment on column T_RPT_HR_ZORE_FLY_HOURS.month_plantime_min
  is '航医限制';
comment on column T_RPT_HR_ZORE_FLY_HOURS.valid_flag
  is '有效标志(Y/N)';
comment on column T_RPT_HR_ZORE_FLY_HOURS.oper
  is '操作人';
comment on column T_RPT_HR_ZORE_FLY_HOURS.op_time
  is '操作时间';
comment on column T_RPT_HR_ZORE_FLY_HOURS.oper_ip
  is 'IP地址';
comment on column T_RPT_HR_ZORE_FLY_HOURS.oper_host
  is '主机名';
comment on column T_RPT_HR_ZORE_FLY_HOURS.remarks
  is '备注';
comment on column T_RPT_HR_ZORE_FLY_HOURS.add_date
  is '数据插入时间';
alter table T_RPT_HR_ZORE_FLY_HOURS
  add constraint PK_T_RPT_HR_ZORE_FLY_HOURS primary key (PDATE, FILIALE, AC_TYPE_CREW, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 768K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_MONTHLY_PARAS
prompt ==================================
prompt
create table T_RPT_MONTHLY_PARAS
(
  p_date      DATE not null,
  parent_code NVARCHAR2(10) not null,
  para_code   NVARCHAR2(10) not null,
  para_value  NVARCHAR2(1000),
  filiale     NVARCHAR2(4),
  valid_flag  NVARCHAR2(1),
  oper        NVARCHAR2(50),
  op_time     DATE,
  oper_ip     NVARCHAR2(50),
  oper_host   NVARCHAR2(50),
  remarks     NVARCHAR2(50),
  state       NVARCHAR2(10) default ('A'),
  pub_date    DATE default (sysdate)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_MONTHLY_PARAS
  is '月报参数设定表';
comment on column T_RPT_MONTHLY_PARAS.p_date
  is '参数适用时间';
comment on column T_RPT_MONTHLY_PARAS.parent_code
  is '参数类型(MR月报;)';
comment on column T_RPT_MONTHLY_PARAS.para_code
  is '参数代码';
comment on column T_RPT_MONTHLY_PARAS.para_value
  is '参数值';
comment on column T_RPT_MONTHLY_PARAS.filiale
  is '参数适用公司';
comment on column T_RPT_MONTHLY_PARAS.valid_flag
  is '有效标志';
comment on column T_RPT_MONTHLY_PARAS.oper
  is '操作人';
comment on column T_RPT_MONTHLY_PARAS.op_time
  is '操作日期';
comment on column T_RPT_MONTHLY_PARAS.oper_ip
  is '操作ip';
comment on column T_RPT_MONTHLY_PARAS.oper_host
  is '操作主机';
comment on column T_RPT_MONTHLY_PARAS.remarks
  is '备注';
comment on column T_RPT_MONTHLY_PARAS.state
  is '状态(A:预留;B:已完成,C:已发布)';
comment on column T_RPT_MONTHLY_PARAS.pub_date
  is '发布时间';
create index IDX0 on T_RPT_MONTHLY_PARAS (P_DATE, PARENT_CODE, PARA_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_MONTHLY_PARAS
  add constraint PKT_RPT_MONTHLY_PARAS primary key (PARENT_CODE, P_DATE, PARA_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_PAIR_DOUBLE_CAPTAIN
prompt ========================================
prompt
create table T_RPT_PAIR_DOUBLE_CAPTAIN
(
  crew_pairing_line NUMBER(11) not null,
  p_date            DATE not null,
  ac_type_crew      VARCHAR2(10) not null,
  ac_types          VARCHAR2(50) not null,
  filiale           VARCHAR2(10) not null,
  fly_hours         NUMBER(9),
  flight_ids        NUMBER(4),
  flight_nos        VARCHAR2(500),
  captaions         VARCHAR2(200),
  p_type            VARCHAR2(50),
  valid_flag        VARCHAR2(1) default 'Y',
  oper              VARCHAR2(50),
  op_time           DATE,
  oper_ip           VARCHAR2(50),
  oper_host         VARCHAR2(50),
  remarks           VARCHAR2(200),
  add_date          DATE default (SYSDATE),
  fly_hours_b       NUMBER(9) default (0),
  cruisecapt        VARCHAR2(100),
  inspector         VARCHAR2(100),
  plan_hours        NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_PAIR_DOUBLE_CAPTAIN
  is '双机长任务分析表';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.crew_pairing_line
  is '任务号';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.p_date
  is '任务出发日期';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.ac_type_crew
  is '大机型';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.ac_types
  is '小机型列表';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.filiale
  is '任务所在公司';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.fly_hours
  is '任务飞行时间';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.flight_ids
  is '任务航班量';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.flight_nos
  is '航班列表';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.captaions
  is '机长列表';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.p_type
  is '任务类型';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.valid_flag
  is '有效标志位';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.add_date
  is '数据插入时间';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.fly_hours_b
  is '任务航线检查时间';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.cruisecapt
  is '航线机长';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.inspector
  is '检察员';
comment on column T_RPT_PAIR_DOUBLE_CAPTAIN.plan_hours
  is '任务航班计划时间(计划到达减起飞或预计到达减起飞)';
create index IDX_T_RPT_PAIR_DOUBLE_CAPTAIN on T_RPT_PAIR_DOUBLE_CAPTAIN (P_DATE, AC_TYPE_CREW, FILIALE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_RPT_PAIR_DOUBLE_CAPTAIN
  add constraint PK_T_RPT_PAIR_DOUBLE_CAPTAIN primary key (CREW_PAIRING_LINE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_PAIR_FLY_HOURS
prompt ===================================
prompt
create table T_RPT_PAIR_FLY_HOURS
(
  p_date       DATE not null,
  ac_type_crew NVARCHAR2(10) not null,
  filiale      NVARCHAR2(10) not null,
  fly_hours    NUMBER(9),
  oper_date    DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_PAIR_FLY_HOURS
  is '各分公司每月任务飞行时间';
comment on column T_RPT_PAIR_FLY_HOURS.p_date
  is '任务出发所在月份';
comment on column T_RPT_PAIR_FLY_HOURS.ac_type_crew
  is '任务机型';
comment on column T_RPT_PAIR_FLY_HOURS.filiale
  is '任务执飞单位';
comment on column T_RPT_PAIR_FLY_HOURS.fly_hours
  is '飞行时间';
comment on column T_RPT_PAIR_FLY_HOURS.oper_date
  is '更新日期';
alter table T_RPT_PAIR_FLY_HOURS
  add constraint PK_T_RPT_PAIR_FLY_HOURS primary key (P_DATE, AC_TYPE_CREW, FILIALE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RPT_TEMP_TOOL
prompt ==============================
prompt
create table T_RPT_TEMP_TOOL
(
  str0   NVARCHAR2(50),
  str1   NVARCHAR2(50),
  str2   NVARCHAR2(50),
  str3   NVARCHAR2(50),
  pdate0 DATE,
  pdate1 DATE,
  pdate2 DATE,
  num0   NUMBER(8,2),
  num1   NUMBER(8,2),
  num2   NUMBER(8,2),
  pkcol  NUMBER(8) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RPT_TEMP_TOOL
  is '用于导入导出数据的临时表（报表相关数据）';
comment on column T_RPT_TEMP_TOOL.str0
  is '值0';
comment on column T_RPT_TEMP_TOOL.str1
  is '值1';
comment on column T_RPT_TEMP_TOOL.str2
  is '值2';
comment on column T_RPT_TEMP_TOOL.str3
  is '值3';
comment on column T_RPT_TEMP_TOOL.pdate0
  is '日期0';
comment on column T_RPT_TEMP_TOOL.pdate1
  is '日期1';
comment on column T_RPT_TEMP_TOOL.pdate2
  is '日期2';
comment on column T_RPT_TEMP_TOOL.num0
  is '数值0';
comment on column T_RPT_TEMP_TOOL.num1
  is '数值1';
comment on column T_RPT_TEMP_TOOL.num2
  is '数值2';
comment on column T_RPT_TEMP_TOOL.pkcol
  is '主键列';

prompt
prompt Creating table T_RULE_AIRPORTRESTTIME
prompt =====================================
prompt
create table T_RULE_AIRPORTRESTTIME
(
  resttimeid    NUMBER(11) not null,
  airport_3code VARCHAR2(10) not null,
  resttime      NUMBER not null,
  oper          VARCHAR2(20),
  op_time       DATE,
  oper_ip       VARCHAR2(20),
  oper_host     VARCHAR2(40),
  filiale       VARCHAR2(10) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_AIRPORTRESTTIME
  is '机场指定休息时间';
comment on column T_RULE_AIRPORTRESTTIME.resttimeid
  is '主键';
comment on column T_RULE_AIRPORTRESTTIME.airport_3code
  is '机场三码';
comment on column T_RULE_AIRPORTRESTTIME.resttime
  is '最短休息时间(分钟)';
comment on column T_RULE_AIRPORTRESTTIME.filiale
  is '分公司';
alter table T_RULE_AIRPORTRESTTIME
  add constraint PK_AIRPORTRESTTIME primary key (FILIALE, AIRPORT_3CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_CCAR
prompt ==========================
prompt
create table T_RULE_CCAR
(
  ver_id           NUMBER(9) not null,
  parm_id          NUMBER(9) not null,
  parm_name        VARCHAR2(60) not null,
  crew_num         NUMBER(6) default 2 not null,
  voyage_count_min NUMBER(6),
  voyage_count_max NUMBER(6),
  fly_hours_min    NUMBER(6),
  fly_hours_max    NUMBER(6),
  duty_hours_min   NUMBER(6),
  duty_hours_max   NUMBER(6),
  rest_hours_min   NUMBER(6),
  rest_hours_max   NUMBER(6),
  sta_red_yn       VARCHAR2(1) default 'N',
  delay_yn         VARCHAR2(1) default 'N',
  fz_yn            VARCHAR2(1) default 'N',
  rest_yn          VARCHAR2(1) default 'N',
  air6_yn          VARCHAR2(1) default 'N',
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_CCAR
  is '121部飞行时间定义';
comment on column T_RULE_CCAR.ver_id
  is '版本ID';
comment on column T_RULE_CCAR.parm_id
  is '参数ID';
comment on column T_RULE_CCAR.parm_name
  is '参数名称';
comment on column T_RULE_CCAR.crew_num
  is '定员人数';
comment on column T_RULE_CCAR.voyage_count_min
  is '最小航段数';
comment on column T_RULE_CCAR.voyage_count_max
  is '最大航段数';
comment on column T_RULE_CCAR.fly_hours_min
  is '最小飞行时间';
comment on column T_RULE_CCAR.fly_hours_max
  is '最大飞行时间';
comment on column T_RULE_CCAR.duty_hours_min
  is '最小执勤时间';
comment on column T_RULE_CCAR.duty_hours_max
  is '最大执勤时间';
comment on column T_RULE_CCAR.rest_hours_min
  is '最小休息时间';
comment on column T_RULE_CCAR.rest_hours_max
  is '最大休息时间';
comment on column T_RULE_CCAR.sta_red_yn
  is '是否跨零点STA';
comment on column T_RULE_CCAR.delay_yn
  is '是否延误';
comment on column T_RULE_CCAR.fz_yn
  is '是否有资深副驾驶';
comment on column T_RULE_CCAR.rest_yn
  is '是否有局方规定的休息区';
comment on column T_RULE_CCAR.air6_yn
  is '是否跨6小时时区';
comment on column T_RULE_CCAR.oper
  is '操作人';
comment on column T_RULE_CCAR.op_time
  is '操作时间';
comment on column T_RULE_CCAR.remarks
  is '备注';
comment on column T_RULE_CCAR.oper_ip
  is 'IP地址';
comment on column T_RULE_CCAR.oper_host
  is '主机名';
alter table T_RULE_CCAR
  add constraint PK_CCAR_FLYHR primary key (PARM_ID, VER_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_CCAR20160517
prompt ==================================
prompt
create table T_RULE_CCAR20160517
(
  ver_id           NUMBER(9) not null,
  parm_id          NUMBER(9) not null,
  parm_name        VARCHAR2(60) not null,
  crew_num         NUMBER(6) not null,
  voyage_count_min NUMBER(6),
  voyage_count_max NUMBER(6),
  fly_hours_min    NUMBER(6),
  fly_hours_max    NUMBER(6),
  duty_hours_min   NUMBER(6),
  duty_hours_max   NUMBER(6),
  rest_hours_min   NUMBER(6),
  rest_hours_max   NUMBER(6),
  sta_red_yn       VARCHAR2(1),
  delay_yn         VARCHAR2(1),
  fz_yn            VARCHAR2(1),
  rest_yn          VARCHAR2(1),
  air6_yn          VARCHAR2(1),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_CCAR5
prompt ===========================
prompt
create table T_RULE_CCAR5
(
  ver_id                    NUMBER(19) not null,
  parm_id                   NUMBER(7) not null,
  parm_name                 VARCHAR2(1000),
  rest_level                VARCHAR2(50),
  crew_type                 VARCHAR2(50),
  crew_num                  NUMBER(10),
  report_time_min           NUMBER(6),
  report_time_max           NUMBER(6),
  voyage_count_min          NUMBER(6),
  voyage_count_max          NUMBER(6),
  fly_hours_min             NUMBER(6),
  fly_hours_max             NUMBER(6),
  duty_hours_min            NUMBER(6),
  duty_hours_max            NUMBER(6),
  rest_hours_min            NUMBER(6),
  rest_hours_max            NUMBER(6),
  delay_before_takeoff      VARCHAR2(1),
  delay_after_takeoff       VARCHAR2(1),
  rest_yn1                  NUMBER(20),
  is_gt_total_duty_time_lmt VARCHAR2(1),
  oper                      VARCHAR2(10),
  op_time                   DATE,
  remarks                   VARCHAR2(200),
  oper_ip                   VARCHAR2(15),
  oper_host                 VARCHAR2(50),
  rest_yn2                  NUMBER(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_CCAR5
  is '121部时间定义R5(T_RULE_CCAR5)';
comment on column T_RULE_CCAR5.ver_id
  is '版本ID';
comment on column T_RULE_CCAR5.parm_id
  is '参数ID';
comment on column T_RULE_CCAR5.parm_name
  is '参数名称';
comment on column T_RULE_CCAR5.rest_level
  is '休息级别(1级休息区,2级休息区,3级休息区)';
comment on column T_RULE_CCAR5.crew_type
  is '机组类型(非扩编机组,扩编机组)';
comment on column T_RULE_CCAR5.crew_num
  is '机组人数';
comment on column T_RULE_CCAR5.report_time_min
  is '最小报到时间';
comment on column T_RULE_CCAR5.report_time_max
  is '最大报到时间';
comment on column T_RULE_CCAR5.voyage_count_min
  is '最小航段数';
comment on column T_RULE_CCAR5.voyage_count_max
  is '最大航段数';
comment on column T_RULE_CCAR5.fly_hours_min
  is '最小飞行时间';
comment on column T_RULE_CCAR5.fly_hours_max
  is '最大飞行时间';
comment on column T_RULE_CCAR5.duty_hours_min
  is '最小执勤时间';
comment on column T_RULE_CCAR5.duty_hours_max
  is '最大执勤时间';
comment on column T_RULE_CCAR5.rest_hours_min
  is '最小休息时间';
comment on column T_RULE_CCAR5.rest_hours_max
  is '最大休息时间';
comment on column T_RULE_CCAR5.delay_before_takeoff
  is '起飞前延误';
comment on column T_RULE_CCAR5.delay_after_takeoff
  is '起飞后延误';
comment on column T_RULE_CCAR5.rest_yn1
  is '休息标识';
comment on column T_RULE_CCAR5.is_gt_total_duty_time_lmt
  is '是否可超过累计执勤期限制';
comment on column T_RULE_CCAR5.oper
  is '操作人';
comment on column T_RULE_CCAR5.op_time
  is '操作时间';
comment on column T_RULE_CCAR5.remarks
  is '备注';
comment on column T_RULE_CCAR5.oper_ip
  is 'IP地址';
comment on column T_RULE_CCAR5.oper_host
  is '主机名';
comment on column T_RULE_CCAR5.rest_yn2
  is '休息标识';
alter table T_RULE_CCAR5
  add constraint PK_T_RULE_CCAR5 primary key (VER_ID, PARM_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE
prompt ============================
prompt
create table T_RULE_DEFINE
(
  ver_id          NUMBER(9) not null,
  rule_id         NUMBER(9) not null,
  rule_name       VARCHAR2(200) not null,
  rule_type       VARCHAR2(1) not null,
  auto_yn         VARCHAR2(1) default 'Y' not null,
  hand_yn         VARCHAR2(1) default 'Y' not null,
  mode_yn         VARCHAR2(1) default 'Y' not null,
  fun_code        VARCHAR2(200),
  valid_flag      VARCHAR2(1) default 'Y' not null,
  idx             NUMBER(5) default 99,
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  ac_types        VARCHAR2(500),
  rank_nos        VARCHAR2(500),
  validate_method VARCHAR2(50),
  rule_class      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_DEFINE
  is '排班规则';
comment on column T_RULE_DEFINE.ver_id
  is '版本ID';
comment on column T_RULE_DEFINE.rule_id
  is '规则ID';
comment on column T_RULE_DEFINE.rule_name
  is '规则名称';
comment on column T_RULE_DEFINE.rule_type
  is '规则类型(L联班P联线A排班)';
comment on column T_RULE_DEFINE.auto_yn
  is '自动规则(Y/N)';
comment on column T_RULE_DEFINE.hand_yn
  is '手工规则(Y/N)';
comment on column T_RULE_DEFINE.mode_yn
  is '模式(Y强制类N提醒类)';
comment on column T_RULE_DEFINE.fun_code
  is '规则的函数';
comment on column T_RULE_DEFINE.valid_flag
  is '有效标志(Y/N)';
comment on column T_RULE_DEFINE.idx
  is '顺序';
comment on column T_RULE_DEFINE.oper
  is '操作人';
comment on column T_RULE_DEFINE.op_time
  is '操作时间';
comment on column T_RULE_DEFINE.remarks
  is '备注';
comment on column T_RULE_DEFINE.oper_ip
  is 'IP地址';
comment on column T_RULE_DEFINE.oper_host
  is '主机名';
comment on column T_RULE_DEFINE.ac_types
  is '适用机型串';
comment on column T_RULE_DEFINE.rank_nos
  is '适用岗位';
comment on column T_RULE_DEFINE.validate_method
  is '规则验证方式(F规则函数 E规则引擎)';
comment on column T_RULE_DEFINE.rule_class
  is '规则类型(从字典中选取类型)';
alter table T_RULE_DEFINE
  add constraint PK_RULE_DEFINE primary key (RULE_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE20150302
prompt ====================================
prompt
create table T_RULE_DEFINE20150302
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE201560120
prompt =====================================
prompt
create table T_RULE_DEFINE201560120
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE20160114
prompt ====================================
prompt
create table T_RULE_DEFINE20160114
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE201601142
prompt =====================================
prompt
create table T_RULE_DEFINE201601142
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE20160115
prompt ====================================
prompt
create table T_RULE_DEFINE20160115
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE201601152
prompt =====================================
prompt
create table T_RULE_DEFINE201601152
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE201601153
prompt =====================================
prompt
create table T_RULE_DEFINE201601153
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE201601161049
prompt ========================================
prompt
create table T_RULE_DEFINE201601161049
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE20160118
prompt ====================================
prompt
create table T_RULE_DEFINE20160118
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE20160517
prompt ====================================
prompt
create table T_RULE_DEFINE20160517
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DEFINE20160531
prompt ====================================
prompt
create table T_RULE_DEFINE20160531
(
  ver_id     NUMBER(9) not null,
  rule_id    NUMBER(9) not null,
  rule_name  VARCHAR2(200) not null,
  rule_type  VARCHAR2(1) not null,
  auto_yn    VARCHAR2(1) not null,
  hand_yn    VARCHAR2(1) not null,
  mode_yn    VARCHAR2(1) not null,
  fun_code   VARCHAR2(200),
  valid_flag VARCHAR2(1) not null,
  idx        NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_types   VARCHAR2(500),
  rank_nos   VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DS
prompt ========================
prompt
create table T_RULE_DS
(
  ds_name     VARCHAR2(100) not null,
  ds_sql      VARCHAR2(100) not null,
  ds_desc     VARCHAR2(200) not null,
  ds_type     VARCHAR2(20) not null,
  module_flag VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  ds_flag     VARCHAR2(1) default 'N',
  ds_sub_type VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_DS
  is '规则数据源表';
comment on column T_RULE_DS.ds_name
  is 'DS名称';
comment on column T_RULE_DS.ds_sql
  is 'DSSQL文件';
comment on column T_RULE_DS.ds_desc
  is 'DS说明';
comment on column T_RULE_DS.ds_type
  is 'DS分类';
comment on column T_RULE_DS.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_RULE_DS.oper
  is '操作人';
comment on column T_RULE_DS.op_time
  is '操作时间';
comment on column T_RULE_DS.remarks
  is '备注';
comment on column T_RULE_DS.oper_ip
  is 'IP地址';
comment on column T_RULE_DS.oper_host
  is '主机名';
comment on column T_RULE_DS.ds_flag
  is 'DS属性(N辅助Y动态加载)';
comment on column T_RULE_DS.ds_sub_type
  is 'DS子类型，细分为人员证照类(A)、航班调整类(B)等';
alter table T_RULE_DS
  add constraint PK_RULE_DATASET primary key (DS_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DS_COL
prompt ============================
prompt
create table T_RULE_DS_COL
(
  ds_name   VARCHAR2(100) not null,
  col_code  VARCHAR2(100) not null,
  col_name  VARCHAR2(50),
  col_yn    VARCHAR2(1) default 'Y' not null,
  col_group VARCHAR2(100),
  col_idx   NUMBER(3),
  col_width NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_DS_COL
  is '数据源列明细表';
comment on column T_RULE_DS_COL.ds_name
  is 'DS名称';
comment on column T_RULE_DS_COL.col_code
  is '列';
comment on column T_RULE_DS_COL.col_name
  is '列名称';
comment on column T_RULE_DS_COL.col_yn
  is '列是否显示';
comment on column T_RULE_DS_COL.col_group
  is '列分组';
comment on column T_RULE_DS_COL.col_idx
  is '顺序';
comment on column T_RULE_DS_COL.col_width
  is '列显示宽度';
alter table T_RULE_DS_COL
  add constraint PK_T_RULE_DS_COL primary key (DS_NAME, COL_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DS_COL_BAK
prompt ================================
prompt
create table T_RULE_DS_COL_BAK
(
  ds_name   VARCHAR2(100) not null,
  col_code  VARCHAR2(100) not null,
  col_name  VARCHAR2(50),
  col_yn    VARCHAR2(1) not null,
  col_group VARCHAR2(100),
  col_idx   NUMBER(3),
  col_width NUMBER(3)
)
tablespace CEACREW
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DS_PARAM
prompt ==============================
prompt
create table T_RULE_DS_PARAM
(
  ds_name    VARCHAR2(100) not null,
  param_name VARCHAR2(100) not null,
  param_bind VARCHAR2(20) not null,
  param_type VARCHAR2(1),
  param_desc VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_DS_PARAM
  is '数据源参数表';
comment on column T_RULE_DS_PARAM.ds_name
  is 'DS名称';
comment on column T_RULE_DS_PARAM.param_name
  is '参数名称';
comment on column T_RULE_DS_PARAM.param_bind
  is '绑定变量';
comment on column T_RULE_DS_PARAM.param_type
  is '参数类型(S字符I数值D日期)';
comment on column T_RULE_DS_PARAM.param_desc
  is '参数说明';
comment on column T_RULE_DS_PARAM.oper
  is '操作人';
comment on column T_RULE_DS_PARAM.op_time
  is '操作时间';
comment on column T_RULE_DS_PARAM.remarks
  is '备注';
comment on column T_RULE_DS_PARAM.oper_ip
  is 'IP地址';
comment on column T_RULE_DS_PARAM.oper_host
  is '主机名';
alter table T_RULE_DS_PARAM
  add constraint PK_DATASET_PARAM primary key (DS_NAME, PARAM_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_DS_PARAM_BAK
prompt ==================================
prompt
create table T_RULE_DS_PARAM_BAK
(
  ds_name    VARCHAR2(100) not null,
  param_name VARCHAR2(100) not null,
  param_bind VARCHAR2(20) not null,
  param_type VARCHAR2(1),
  param_desc VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_FUN
prompt =========================
prompt
create table T_RULE_FUN
(
  fun_code     VARCHAR2(200) not null,
  fun_name     VARCHAR2(200) not null,
  fun_desc     VARCHAR2(200),
  fun_content  VARCHAR2(4000) not null,
  fun_type     VARCHAR2(1),
  module_flag  VARCHAR2(1) not null,
  fun_flag     VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fun_content2 VARCHAR2(4000),
  fun_content3 VARCHAR2(4000),
  fun_content4 VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_FUN
  is '规则定义的函数';
comment on column T_RULE_FUN.fun_code
  is '函数代码';
comment on column T_RULE_FUN.fun_name
  is '函数名称';
comment on column T_RULE_FUN.fun_desc
  is '函数说明';
comment on column T_RULE_FUN.fun_content
  is '函数内容';
comment on column T_RULE_FUN.fun_type
  is '函数类型(L联班P联线A排班)';
comment on column T_RULE_FUN.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_RULE_FUN.fun_flag
  is '函数标志(A验证函数B公共函数)';
comment on column T_RULE_FUN.oper
  is '操作人';
comment on column T_RULE_FUN.op_time
  is '操作时间';
comment on column T_RULE_FUN.remarks
  is '备注';
comment on column T_RULE_FUN.oper_ip
  is 'IP地址';
comment on column T_RULE_FUN.oper_host
  is '主机名';
comment on column T_RULE_FUN.fun_content2
  is '函数内容';
comment on column T_RULE_FUN.fun_content3
  is '函数内容';
comment on column T_RULE_FUN.fun_content4
  is '函数内容';
alter table T_RULE_FUN
  add constraint PK_RULE_BODY primary key (FUN_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_FUN20150302
prompt =================================
prompt
create table T_RULE_FUN20150302
(
  fun_code     VARCHAR2(200) not null,
  fun_name     VARCHAR2(200) not null,
  fun_desc     VARCHAR2(200),
  fun_content  VARCHAR2(4000) not null,
  fun_type     VARCHAR2(1),
  module_flag  VARCHAR2(1) not null,
  fun_flag     VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fun_content2 VARCHAR2(4000),
  fun_content3 VARCHAR2(4000),
  fun_content4 VARCHAR2(4000)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_NIGHTFLIGHT
prompt =================================
prompt
create table T_RULE_NIGHTFLIGHT
(
  nightflight NUMBER(11) not null,
  filiale     VARCHAR2(10),
  starttime   VARCHAR2(10),
  endtime     VARCHAR2(10),
  oper        VARCHAR2(20) not null,
  op_time     DATE not null,
  oper_ip     VARCHAR2(20),
  oper_host   VARCHAR2(40)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_NIGHTFLIGHT
  is '大夜航时间区间';
comment on column T_RULE_NIGHTFLIGHT.nightflight
  is '主键';
comment on column T_RULE_NIGHTFLIGHT.filiale
  is '分公司';
comment on column T_RULE_NIGHTFLIGHT.starttime
  is '大夜航的开始时间';
comment on column T_RULE_NIGHTFLIGHT.endtime
  is '大夜航的结束时间';
alter table T_RULE_NIGHTFLIGHT
  add constraint PK_NIGHTFLIGHT primary key (NIGHTFLIGHT)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_NOTINSAMEPAIRING
prompt ======================================
prompt
create table T_RULE_NOTINSAMEPAIRING
(
  notsameid     NUMBER(11),
  filiale       VARCHAR2(10) not null,
  airport_3code VARCHAR2(10) not null,
  times         NUMBER(2),
  oper          VARCHAR2(20),
  op_time       DATE,
  oper_ip       VARCHAR2(20),
  oper_host     VARCHAR2(40)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_NOTINSAMEPAIRING
  is '环内不重复出现的机场';
comment on column T_RULE_NOTINSAMEPAIRING.notsameid
  is '主键';
comment on column T_RULE_NOTINSAMEPAIRING.filiale
  is '分公司';
comment on column T_RULE_NOTINSAMEPAIRING.airport_3code
  is '机场三码';
comment on column T_RULE_NOTINSAMEPAIRING.times
  is '指定机场在环中最多可以起飞/降落的总次数';
alter table T_RULE_NOTINSAMEPAIRING
  add constraint PK_NOTINSAMEPAIRING primary key (FILIALE, AIRPORT_3CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_OVERNIGHT
prompt ===============================
prompt
create table T_RULE_OVERNIGHT
(
  overnightid   NUMBER(11) not null,
  filiale       VARCHAR2(10) not null,
  airport_3code VARCHAR2(10) not null,
  days          NUMBER not null,
  oper          VARCHAR2(20),
  op_time       DATE,
  oper_ip       VARCHAR2(20),
  oper_host     VARCHAR2(40)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_OVERNIGHT
  is '机场额定过夜天数约束表';
comment on column T_RULE_OVERNIGHT.filiale
  is '分公司';
comment on column T_RULE_OVERNIGHT.airport_3code
  is '机场三妈';
comment on column T_RULE_OVERNIGHT.days
  is '当天数==0时，表示在该机场不允许过夜；当天数>0时，表示在该机场至少需要过X夜。';
comment on column T_RULE_OVERNIGHT.oper
  is '操作人';
comment on column T_RULE_OVERNIGHT.op_time
  is '操作时间';
comment on column T_RULE_OVERNIGHT.oper_ip
  is '操作人IP';
comment on column T_RULE_OVERNIGHT.oper_host
  is '操作人主机';
alter table T_RULE_OVERNIGHT
  add constraint PK_OVERNIGHT primary key (OVERNIGHTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_PARAM
prompt ===========================
prompt
create table T_RULE_PARAM
(
  parm_id     NUMBER(6) not null,
  parm_name   VARCHAR2(300) not null,
  the_value   NUMBER(6) default 1 not null,
  module_flag VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_PARAM
  is '规则参数基准表';
comment on column T_RULE_PARAM.parm_id
  is '参数ID';
comment on column T_RULE_PARAM.parm_name
  is '参数名称';
comment on column T_RULE_PARAM.the_value
  is '默认值';
comment on column T_RULE_PARAM.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_RULE_PARAM.oper
  is '操作人';
comment on column T_RULE_PARAM.op_time
  is '操作时间';
comment on column T_RULE_PARAM.remarks
  is '备注';
comment on column T_RULE_PARAM.oper_ip
  is 'IP地址';
comment on column T_RULE_PARAM.oper_host
  is '主机名';
alter table T_RULE_PARAM
  add constraint PK_T_RULE_PARAM primary key (PARM_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_PARAM20160517
prompt ===================================
prompt
create table T_RULE_PARAM20160517
(
  parm_id     NUMBER(6) not null,
  parm_name   VARCHAR2(300) not null,
  the_value   NUMBER(6) not null,
  module_flag VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_PARAM_DETAIL
prompt ==================================
prompt
create table T_RULE_PARAM_DETAIL
(
  ver_id    NUMBER(9) not null,
  parm_id   NUMBER(6) not null,
  the_value NUMBER(6),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_PARAM_DETAIL
  is '规则参数定义表';
comment on column T_RULE_PARAM_DETAIL.ver_id
  is '版本ID';
comment on column T_RULE_PARAM_DETAIL.parm_id
  is '参数ID';
comment on column T_RULE_PARAM_DETAIL.the_value
  is '设定值';
comment on column T_RULE_PARAM_DETAIL.oper
  is '操作人';
comment on column T_RULE_PARAM_DETAIL.op_time
  is '操作时间';
comment on column T_RULE_PARAM_DETAIL.remarks
  is '备注';
comment on column T_RULE_PARAM_DETAIL.oper_ip
  is 'IP地址';
comment on column T_RULE_PARAM_DETAIL.oper_host
  is '主机名';
alter table T_RULE_PARAM_DETAIL
  add constraint PK_CCAR_PARAM primary key (VER_ID, PARM_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_PARAM_DETAIL20160517
prompt ==========================================
prompt
create table T_RULE_PARAM_DETAIL20160517
(
  ver_id    NUMBER(9) not null,
  parm_id   NUMBER(6) not null,
  the_value NUMBER(6),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_PUNCH
prompt ===========================
prompt
create table T_RULE_PUNCH
(
  idx         NUMBER(6) not null,
  pri         NUMBER(3),
  module_flag VARCHAR2(1) not null,
  filiale     VARCHAR2(4) not null,
  base        VARCHAR2(4),
  d_or_i      VARCHAR2(1),
  a_distance  VARCHAR2(4),
  td_min      DATE,
  td_max      DATE,
  td_punch    NUMBER(3),
  td_before   NUMBER(3) not null,
  flight_no   VARCHAR2(10),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  begin_date  DATE,
  end_date    DATE,
  weeks       VARCHAR2(7),
  fixed_flag  VARCHAR2(1) default 'N'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_PUNCH
  is '签到、发车(进场)定义';
comment on column T_RULE_PUNCH.idx
  is '序号';
comment on column T_RULE_PUNCH.pri
  is '优先级';
comment on column T_RULE_PUNCH.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_RULE_PUNCH.filiale
  is '分子公司';
comment on column T_RULE_PUNCH.base
  is '基地';
comment on column T_RULE_PUNCH.d_or_i
  is '国内国际';
comment on column T_RULE_PUNCH.a_distance
  is '是否长航线';
comment on column T_RULE_PUNCH.td_min
  is '时间区间(开始)';
comment on column T_RULE_PUNCH.td_max
  is '时间区间(结束)';
comment on column T_RULE_PUNCH.td_punch
  is '签到时间';
comment on column T_RULE_PUNCH.td_before
  is '进场时间';
comment on column T_RULE_PUNCH.flight_no
  is '航班号';
comment on column T_RULE_PUNCH.oper
  is '操作人';
comment on column T_RULE_PUNCH.op_time
  is '操作时间';
comment on column T_RULE_PUNCH.oper_ip
  is 'IP地址';
comment on column T_RULE_PUNCH.oper_host
  is '主机名';
comment on column T_RULE_PUNCH.begin_date
  is '开始日期';
comment on column T_RULE_PUNCH.end_date
  is '结束日期';
comment on column T_RULE_PUNCH.weeks
  is '班期';
comment on column T_RULE_PUNCH.fixed_flag
  is '是否是固定发车时间，针对货航使用。Y是N否';
alter table T_RULE_PUNCH
  add constraint PK_T_RULE_PUNCH primary key (IDX)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_VERSION
prompt =============================
prompt
create table T_RULE_VERSION
(
  ver_id      NUMBER(9) not null,
  ver_name    VARCHAR2(200) not null,
  filiale     VARCHAR2(4) not null,
  module_flag VARCHAR2(1) not null,
  valid_flag  VARCHAR2(1) default 'Y' not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_VERSION
  is '版本适用情况';
comment on column T_RULE_VERSION.ver_id
  is '版本ID';
comment on column T_RULE_VERSION.ver_name
  is '版本名称';
comment on column T_RULE_VERSION.filiale
  is '分公司';
comment on column T_RULE_VERSION.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_RULE_VERSION.valid_flag
  is '有效标志(Y/N)';
comment on column T_RULE_VERSION.oper
  is '操作人';
comment on column T_RULE_VERSION.op_time
  is '操作时间';
comment on column T_RULE_VERSION.remarks
  is '备注';
comment on column T_RULE_VERSION.oper_ip
  is 'IP地址';
comment on column T_RULE_VERSION.oper_host
  is '主机名';
alter table T_RULE_VERSION
  add constraint PK_RULE_VERSION primary key (VER_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_REST
prompt ==========================
prompt
create table T_RULE_REST
(
  ver_id      NUMBER(9) not null,
  rule_id     NUMBER(9) not null,
  rest_hours  NUMBER(6) not null,
  depa        VARCHAR2(4),
  arri        VARCHAR2(4),
  flts        VARCHAR2(500),
  module_flag VARCHAR2(1) not null,
  filiale     VARCHAR2(4) not null,
  valid_flag  VARCHAR2(1) default 'Y',
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_RULE_REST
  is '特殊休息期规则，飞某些航班之后休息期要延长';
comment on column T_RULE_REST.ver_id
  is '版本ID';
comment on column T_RULE_REST.rule_id
  is '规则ID';
comment on column T_RULE_REST.rest_hours
  is '休息期(小时)';
comment on column T_RULE_REST.depa
  is '起飞';
comment on column T_RULE_REST.arri
  is '落地';
comment on column T_RULE_REST.flts
  is '适用航班列表';
comment on column T_RULE_REST.module_flag
  is '适用模块,''F''飞行,''C''乘务,''A''空警';
comment on column T_RULE_REST.filiale
  is '适用分公司列表';
comment on column T_RULE_REST.valid_flag
  is '有效标志';
comment on column T_RULE_REST.oper
  is '操作人';
comment on column T_RULE_REST.op_time
  is '操作时间';
comment on column T_RULE_REST.remarks
  is '备注';
comment on column T_RULE_REST.oper_ip
  is 'IP地址';
comment on column T_RULE_REST.oper_host
  is '主机名';
alter table T_RULE_REST
  add constraint PK_REST_RULE primary key (RULE_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_RULE_REST
  add constraint FK_RESTPERIOD_VERSION foreign key (VER_ID)
  references T_RULE_VERSION (VER_ID);

prompt
prompt Creating table T_RULE_TWOAIRPORTNOTINSAMEDUTY
prompt =============================================
prompt
create table T_RULE_TWOAIRPORTNOTINSAMEDUTY
(
  notinsamedutyid NUMBER(11) not null,
  filiale         VARCHAR2(10) not null,
  airport_3code_1 VARCHAR2(10) not null,
  airport_3code_2 VARCHAR2(10) not null,
  oper            VARCHAR2(20),
  op_time         DATE,
  oper_ip         VARCHAR2(20),
  oper_host       VARCHAR2(40)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_RULE_TWOAIRPORTNOTINSAMEDUTY
  is '同一天不重复出现的机场表';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.filiale
  is '分公司';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.airport_3code_1
  is '机场三码';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.airport_3code_2
  is '机场三码';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.oper
  is '操作人';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.op_time
  is '操作时间';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.oper_ip
  is '操作人IP';
comment on column T_RULE_TWOAIRPORTNOTINSAMEDUTY.oper_host
  is '操作人主机';

prompt
prompt Creating table T_RULE_VERSION20150310
prompt =====================================
prompt
create table T_RULE_VERSION20150310
(
  ver_id      NUMBER(9) not null,
  ver_name    VARCHAR2(200) not null,
  filiale     VARCHAR2(4) not null,
  module_flag VARCHAR2(1) not null,
  valid_flag  VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_RULE_VERSION20160517
prompt =====================================
prompt
create table T_RULE_VERSION20160517
(
  ver_id      NUMBER(9) not null,
  ver_name    VARCHAR2(200) not null,
  filiale     VARCHAR2(4) not null,
  module_flag VARCHAR2(1) not null,
  valid_flag  VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ABNORMAL
prompt =============================
prompt
create table T_SCH_ABNORMAL
(
  msg_type    VARCHAR2(10),
  app_id      NUMBER(12) not null,
  operators   VARCHAR2(10) not null,
  start_date  DATE not null,
  end_date    DATE,
  app_status  VARCHAR2(1) default '0' not null,
  op_contents VARCHAR2(2000) not null,
  flight_date DATE,
  flight_ids  VARCHAR2(1000),
  p_codes     VARCHAR2(1000),
  msg_no      VARCHAR2(12),
  extendinfo  NVARCHAR2(100),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 361M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ABNORMAL
  is '机组不正常情况监控表';
comment on column T_SCH_ABNORMAL.msg_type
  is '消息类型';
comment on column T_SCH_ABNORMAL.app_id
  is 'ID';
comment on column T_SCH_ABNORMAL.operators
  is '起草人(登录用户)';
comment on column T_SCH_ABNORMAL.start_date
  is '起草日期';
comment on column T_SCH_ABNORMAL.end_date
  is '结束日期(null长期有效)';
comment on column T_SCH_ABNORMAL.app_status
  is '处理状态(0未处理1处理2不关注)';
comment on column T_SCH_ABNORMAL.op_contents
  is '内容';
comment on column T_SCH_ABNORMAL.flight_date
  is '航班日期';
comment on column T_SCH_ABNORMAL.flight_ids
  is '关联航班串';
comment on column T_SCH_ABNORMAL.p_codes
  is '关联人员串';
comment on column T_SCH_ABNORMAL.msg_no
  is '消息号';
comment on column T_SCH_ABNORMAL.extendinfo
  is '其它扩展消息';
comment on column T_SCH_ABNORMAL.op_time
  is '操作时间';
create index IDX_SCH_ABNORMAL_FLTDATE on T_SCH_ABNORMAL (FLIGHT_DATE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 56M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ABNORMAL
  add constraint PK_T_SCH_ABNORMAL primary key (APP_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 61M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CLAIM
prompt ==========================
prompt
create table T_SCH_CLAIM
(
  claim_id      NUMBER(9) not null,
  p_code        VARCHAR2(10) not null,
  from_date     DATE,
  to_date       DATE,
  claim_content VARCHAR2(100),
  valid_flag    VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_CLAIM
  is '机组个人特殊要求表';
comment on column T_SCH_CLAIM.claim_id
  is '要求ID';
comment on column T_SCH_CLAIM.p_code
  is '人员代码';
comment on column T_SCH_CLAIM.from_date
  is '开始日期';
comment on column T_SCH_CLAIM.to_date
  is '结束日期';
comment on column T_SCH_CLAIM.claim_content
  is '特殊要求';
comment on column T_SCH_CLAIM.valid_flag
  is '有效标志';
comment on column T_SCH_CLAIM.oper
  is '操作人';
comment on column T_SCH_CLAIM.op_time
  is '操作日期';
comment on column T_SCH_CLAIM.remarks
  is '备注';
comment on column T_SCH_CLAIM.oper_ip
  is 'IP地址';
comment on column T_SCH_CLAIM.oper_host
  is '主机名';
create index IDX_SCH_CLAIM_FROM_DATE on T_SCH_CLAIM (FROM_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_SCH_CLAIM_PCODE on T_SCH_CLAIM (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_CLAIM
  add constraint PK_CREW_CLAIM primary key (CLAIM_ID, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CONFIG
prompt ===========================
prompt
create table T_SCH_CONFIG
(
  crew_id              NUMBER(9) not null,
  crew_name            VARCHAR2(60) not null,
  crew_num             NUMBER(3),
  crew_type            VARCHAR2(1) default 'A',
  pri                  NUMBER(3) not null,
  module_flag          VARCHAR2(1) not null,
  filiale              VARCHAR2(4),
  base                 VARCHAR2(4),
  flight_com           VARCHAR2(500),
  flight_voyage        VARCHAR2(500),
  flight_code          VARCHAR2(500),
  ac_types             VARCHAR2(500),
  ac_regs              VARCHAR2(500),
  voyage_count_min     NUMBER(6),
  voyage_count_max     NUMBER(6),
  fly_hours_max        NUMBER(6),
  fly_hours_min        NUMBER(6),
  std_min              DATE,
  std_max              DATE,
  sta_min              DATE,
  sta_max              DATE,
  std_red_yn           VARCHAR2(1),
  sta_red_yn           VARCHAR2(1),
  d_or_i               VARCHAR2(1),
  icao_flag            VARCHAR2(1),
  foreign_flag         VARCHAR2(1),
  oper                 VARCHAR2(10),
  op_time              DATE,
  remarks              VARCHAR2(200),
  oper_ip              VARCHAR2(15),
  oper_host            VARCHAR2(50),
  airports             VARCHAR2(500),
  fen                  NUMBER(6),
  report_time_min      NUMBER(6),
  report_time_max      NUMBER(6),
  duty_time_min        NUMBER(6),
  duty_time_max        NUMBER(6),
  version_name         VARCHAR2(10) default 'R4',
  rest_equipment_level VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_CONFIG
  is '机组搭配定义表';
comment on column T_SCH_CONFIG.crew_id
  is '搭配方案ID';
comment on column T_SCH_CONFIG.crew_name
  is '搭配方案名称';
comment on column T_SCH_CONFIG.crew_num
  is '机组人数';
comment on column T_SCH_CONFIG.crew_type
  is '搭配方案类型：A-航班B-备份';
comment on column T_SCH_CONFIG.pri
  is '优先级';
comment on column T_SCH_CONFIG.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_SCH_CONFIG.filiale
  is '分公司';
comment on column T_SCH_CONFIG.base
  is '基地';
comment on column T_SCH_CONFIG.flight_com
  is '航班串';
comment on column T_SCH_CONFIG.flight_voyage
  is '航段中文串';
comment on column T_SCH_CONFIG.flight_code
  is '航段串';
comment on column T_SCH_CONFIG.ac_types
  is '机型串';
comment on column T_SCH_CONFIG.ac_regs
  is '飞机串';
comment on column T_SCH_CONFIG.voyage_count_min
  is '最小航段数';
comment on column T_SCH_CONFIG.voyage_count_max
  is '最大航段数';
comment on column T_SCH_CONFIG.fly_hours_max
  is '飞行时间（最大值）';
comment on column T_SCH_CONFIG.fly_hours_min
  is '飞行时间（最小值）';
comment on column T_SCH_CONFIG.std_min
  is '计划起飞时间（最小值）';
comment on column T_SCH_CONFIG.std_max
  is '计划起飞时间（最大值）';
comment on column T_SCH_CONFIG.sta_min
  is '计划落地时间（最小值）';
comment on column T_SCH_CONFIG.sta_max
  is '计划落地时间（最大值）';
comment on column T_SCH_CONFIG.std_red_yn
  is '起飞时刻跨零点';
comment on column T_SCH_CONFIG.sta_red_yn
  is '落地时刻跨零点';
comment on column T_SCH_CONFIG.d_or_i
  is '国际/国内（D:国内,I:国内,R:地区）';
comment on column T_SCH_CONFIG.icao_flag
  is 'ICAO标志';
comment on column T_SCH_CONFIG.foreign_flag
  is '外籍可飞标志';
comment on column T_SCH_CONFIG.oper
  is '操作人';
comment on column T_SCH_CONFIG.op_time
  is '操作时间';
comment on column T_SCH_CONFIG.remarks
  is '备注';
comment on column T_SCH_CONFIG.oper_ip
  is 'IP地址';
comment on column T_SCH_CONFIG.oper_host
  is '主机名';
comment on column T_SCH_CONFIG.airports
  is '机场串';
comment on column T_SCH_CONFIG.fen
  is '分值';
comment on column T_SCH_CONFIG.report_time_min
  is '最小报到时间';
comment on column T_SCH_CONFIG.report_time_max
  is '最大报到时间';
comment on column T_SCH_CONFIG.duty_time_min
  is '最小执勤期时间';
comment on column T_SCH_CONFIG.duty_time_max
  is '最大执勤期时间';
comment on column T_SCH_CONFIG.version_name
  is '版本名称 (R4版本 R5版本)';
comment on column T_SCH_CONFIG.rest_equipment_level
  is '休息设施等级维护（L1一级 L2二级 L3三级）';
alter table T_SCH_CONFIG
  add constraint PK_CREW_CONFIG primary key (CREW_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CONFIG20160518
prompt ===================================
prompt
create table T_SCH_CONFIG20160518
(
  crew_id          NUMBER(9) not null,
  crew_name        VARCHAR2(60) not null,
  crew_num         NUMBER(3),
  crew_type        VARCHAR2(1),
  pri              NUMBER(3) not null,
  module_flag      VARCHAR2(1) not null,
  filiale          VARCHAR2(4),
  base             VARCHAR2(4),
  flight_com       VARCHAR2(500),
  flight_voyage    VARCHAR2(500),
  flight_code      VARCHAR2(500),
  ac_types         VARCHAR2(500),
  ac_regs          VARCHAR2(500),
  voyage_count_min NUMBER(6),
  voyage_count_max NUMBER(6),
  fly_hours_max    NUMBER(6),
  fly_hours_min    NUMBER(6),
  std_min          DATE,
  std_max          DATE,
  sta_min          DATE,
  sta_max          DATE,
  std_red_yn       VARCHAR2(1),
  sta_red_yn       VARCHAR2(1),
  d_or_i           VARCHAR2(1),
  icao_flag        VARCHAR2(1),
  foreign_flag     VARCHAR2(1),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  airports         VARCHAR2(500),
  fen              NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CONFIG20160531
prompt ===================================
prompt
create table T_SCH_CONFIG20160531
(
  crew_id          NUMBER(9) not null,
  crew_name        VARCHAR2(60) not null,
  crew_num         NUMBER(3),
  crew_type        VARCHAR2(1),
  pri              NUMBER(3) not null,
  module_flag      VARCHAR2(1) not null,
  filiale          VARCHAR2(4),
  base             VARCHAR2(4),
  flight_com       VARCHAR2(500),
  flight_voyage    VARCHAR2(500),
  flight_code      VARCHAR2(500),
  ac_types         VARCHAR2(500),
  ac_regs          VARCHAR2(500),
  voyage_count_min NUMBER(6),
  voyage_count_max NUMBER(6),
  fly_hours_max    NUMBER(6),
  fly_hours_min    NUMBER(6),
  std_min          DATE,
  std_max          DATE,
  sta_min          DATE,
  sta_max          DATE,
  std_red_yn       VARCHAR2(1),
  sta_red_yn       VARCHAR2(1),
  d_or_i           VARCHAR2(1),
  icao_flag        VARCHAR2(1),
  foreign_flag     VARCHAR2(1),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  airports         VARCHAR2(500),
  fen              NUMBER(6)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CONFIG_DETAIL
prompt ==================================
prompt
create table T_SCH_CONFIG_DETAIL
(
  member_id  NUMBER(9) not null,
  crew_id    NUMBER(9) not null,
  pri        NUMBER(3) not null,
  place_no   NUMBER(6) not null,
  rank_no    VARCHAR2(4) not null,
  tech_nos   VARCHAR2(1000),
  tech_names VARCHAR2(1000),
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_CONFIG_DETAIL
  is '机组搭配方案岗位配置表';
comment on column T_SCH_CONFIG_DETAIL.member_id
  is '岗位配置ID';
comment on column T_SCH_CONFIG_DETAIL.crew_id
  is '搭配方案ID';
comment on column T_SCH_CONFIG_DETAIL.pri
  is '优先级';
comment on column T_SCH_CONFIG_DETAIL.place_no
  is '号位';
comment on column T_SCH_CONFIG_DETAIL.rank_no
  is '机上岗位';
comment on column T_SCH_CONFIG_DETAIL.tech_nos
  is '允许技术授权列表';
comment on column T_SCH_CONFIG_DETAIL.tech_names
  is '允许技术授权名称范围';
comment on column T_SCH_CONFIG_DETAIL.valid_flag
  is '有效标志';
comment on column T_SCH_CONFIG_DETAIL.oper
  is '操作人';
comment on column T_SCH_CONFIG_DETAIL.op_time
  is '操作时间';
comment on column T_SCH_CONFIG_DETAIL.remarks
  is '备注';
comment on column T_SCH_CONFIG_DETAIL.oper_ip
  is 'IP地址';
comment on column T_SCH_CONFIG_DETAIL.oper_host
  is '主机名';
alter table T_SCH_CONFIG_DETAIL
  add constraint PK_CREWCONF_MEMBER primary key (MEMBER_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_CONFIG_DETAIL
  add constraint PK_SCH_CONFIG_DETAIL unique (CREW_ID, PRI, PLACE_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CONFIG_DETAIL20160518
prompt ==========================================
prompt
create table T_SCH_CONFIG_DETAIL20160518
(
  member_id  NUMBER(9) not null,
  crew_id    NUMBER(9) not null,
  pri        NUMBER(3) not null,
  place_no   NUMBER(6) not null,
  rank_no    VARCHAR2(4) not null,
  tech_nos   VARCHAR2(1000),
  tech_names VARCHAR2(1000),
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_CONFLICT
prompt =============================
prompt
create table T_SCH_CONFLICT
(
  p_code     VARCHAR2(10) not null,
  p_code1    VARCHAR2(10) not null,
  conf_info  VARCHAR2(100),
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_CONFLICT
  is '人员冲突表';
comment on column T_SCH_CONFLICT.p_code
  is '人员代码';
comment on column T_SCH_CONFLICT.p_code1
  is '冲突人员代码';
comment on column T_SCH_CONFLICT.conf_info
  is '冲突说明';
comment on column T_SCH_CONFLICT.valid_flag
  is '有效标志';
comment on column T_SCH_CONFLICT.oper
  is '操作人';
comment on column T_SCH_CONFLICT.op_time
  is '操作时间';
comment on column T_SCH_CONFLICT.remarks
  is '备注';
comment on column T_SCH_CONFLICT.oper_ip
  is 'IP地址';
comment on column T_SCH_CONFLICT.oper_host
  is '主机名';
alter table T_SCH_CONFLICT
  add constraint PK_CREW_CONFLICT primary key (P_CODE, P_CODE1)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTY
prompt =========================
prompt
create table T_SCH_DUTY
(
  task_id     NUMBER(12) not null,
  task_name   VARCHAR2(200) not null,
  task_type   VARCHAR2(4) not null,
  task_status VARCHAR2(1) not null,
  start_date  DATE not null,
  end_date    DATE not null,
  valid_flag  VARCHAR2(1) default 'Y' not null,
  module_flag VARCHAR2(1) not null,
  flight_ids  VARCHAR2(200),
  flight_com  VARCHAR2(200),
  p_codes     VARCHAR2(500),
  c_names     VARCHAR2(500),
  remarks     VARCHAR2(200),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_DUTY
  is '交接班任务主表';
comment on column T_SCH_DUTY.task_id
  is '交接班ID';
comment on column T_SCH_DUTY.task_name
  is '任务名称';
comment on column T_SCH_DUTY.task_type
  is '交接班类型(字典AM)';
comment on column T_SCH_DUTY.task_status
  is '交接班状态(N公告X跟进Y完成)';
comment on column T_SCH_DUTY.start_date
  is '开始时间';
comment on column T_SCH_DUTY.end_date
  is '结束时间';
comment on column T_SCH_DUTY.valid_flag
  is '有效标志';
comment on column T_SCH_DUTY.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_SCH_DUTY.flight_ids
  is '涉及航班IDS';
comment on column T_SCH_DUTY.flight_com
  is '航班串';
comment on column T_SCH_DUTY.p_codes
  is '调整人员串';
comment on column T_SCH_DUTY.c_names
  is '调整人员名';
comment on column T_SCH_DUTY.remarks
  is '备注';
comment on column T_SCH_DUTY.oper
  is '发布人';
comment on column T_SCH_DUTY.op_time
  is '发布时间';
comment on column T_SCH_DUTY.oper_ip
  is 'IP地址';
comment on column T_SCH_DUTY.oper_host
  is '主机名';
alter table T_SCH_DUTY
  add constraint PK_T_SCH_DUTY primary key (TASK_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYINFO
prompt =============================
prompt
create table T_SCH_DUTYINFO
(
  duty_id          NUMBER(19) not null,
  flight_date      DATE,
  flight_ids       VARCHAR2(4000),
  fly_hours        NUMBER(10),
  duty_time        NUMBER(10),
  duty_time_td     DATE,
  duty_time_ta     DATE,
  rest_time        NUMBER(10),
  rest_time_td     DATE,
  rest_time_ta     DATE,
  p_code           VARCHAR2(50),
  module_flag      VARCHAR2(1),
  last_modify_time DATE,
  valid_flag       VARCHAR2(2),
  log_op_time      DATE,
  td_before        NUMBER(5),
  ta_after         NUMBER(5),
  oper             VARCHAR2(20),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  leg              NUMBER(1) default 0
)
tablespace CEACREW
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_DUTYINFO
  is '值勤期记录表';
comment on column T_SCH_DUTYINFO.duty_id
  is '值勤期标示ID，自增长';
comment on column T_SCH_DUTYINFO.flight_date
  is '值勤期第一班的开始日期';
comment on column T_SCH_DUTYINFO.flight_ids
  is '值勤期内的航段ID串';
comment on column T_SCH_DUTYINFO.fly_hours
  is '值勤期内的飞行时间';
comment on column T_SCH_DUTYINFO.duty_time
  is '值勤时间';
comment on column T_SCH_DUTYINFO.duty_time_td
  is '值勤开始时间';
comment on column T_SCH_DUTYINFO.duty_time_ta
  is '值勤结束时间';
comment on column T_SCH_DUTYINFO.rest_time
  is '值勤结束后的休息时间';
comment on column T_SCH_DUTYINFO.rest_time_td
  is '休息开始时间';
comment on column T_SCH_DUTYINFO.rest_time_ta
  is '休息结束时间';
comment on column T_SCH_DUTYINFO.p_code
  is '当前人员P_CODE';
comment on column T_SCH_DUTYINFO.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_SCH_DUTYINFO.last_modify_time
  is '最后修改时间';
comment on column T_SCH_DUTYINFO.valid_flag
  is '是否有效性';
comment on column T_SCH_DUTYINFO.log_op_time
  is '存储本次处理的最后OP_TIME';
comment on column T_SCH_DUTYINFO.td_before
  is '进场时间';
comment on column T_SCH_DUTYINFO.ta_after
  is '离场时间';
comment on column T_SCH_DUTYINFO.oper
  is '操作人';
comment on column T_SCH_DUTYINFO.oper_ip
  is 'IP地址';
comment on column T_SCH_DUTYINFO.oper_host
  is '主机名';
comment on column T_SCH_DUTYINFO.leg
  is '当天值勤期处于第几段';
create index IDX_P_CODE_FLIGHT_DATE on T_SCH_DUTYINFO (P_CODE, FLIGHT_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_DUTYINFO
  add constraint PK_T_SCH_DUTYINFO primary key (DUTY_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYINFO_EXTEN
prompt ===================================
prompt
create table T_SCH_DUTYINFO_EXTEN
(
  duty_id              NUMBER(19) not null,
  leg_num              NUMBER(5),
  rest_equipment_level VARCHAR2(10),
  sign_in_time         DATE,
  fly_hours            NUMBER(9),
  delay_overtime       VARCHAR2(2),
  oper                 VARCHAR2(20),
  op_time              DATE,
  oper_ip              VARCHAR2(15),
  oper_host            VARCHAR2(50),
  delay_time           NUMBER(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_DUTYINFO_EXTEN
  is '值勤期记录扩展表';
comment on column T_SCH_DUTYINFO_EXTEN.duty_id
  is '执勤期标示ID';
comment on column T_SCH_DUTYINFO_EXTEN.leg_num
  is '航段数';
comment on column T_SCH_DUTYINFO_EXTEN.rest_equipment_level
  is '休息设施等级维护（L1一级 L2二级 L3三级）';
comment on column T_SCH_DUTYINFO_EXTEN.sign_in_time
  is '签到时间';
comment on column T_SCH_DUTYINFO_EXTEN.fly_hours
  is '飞行时间';
comment on column T_SCH_DUTYINFO_EXTEN.delay_overtime
  is '延误超时标识(Y超时 N不超时)';
comment on column T_SCH_DUTYINFO_EXTEN.oper
  is '操作人';
comment on column T_SCH_DUTYINFO_EXTEN.op_time
  is '操作时间';
comment on column T_SCH_DUTYINFO_EXTEN.oper_ip
  is '操作IP';
comment on column T_SCH_DUTYINFO_EXTEN.oper_host
  is '操作主机';
comment on column T_SCH_DUTYINFO_EXTEN.delay_time
  is '延误时间(分钟)';

prompt
prompt Creating table T_SCH_DUTYINFO_LOG
prompt =================================
prompt
create table T_SCH_DUTYINFO_LOG
(
  intf_log_id      NUMBER(19) not null,
  duty_id          NUMBER(19) not null,
  uids             VARCHAR2(2),
  flight_date      DATE,
  flight_ids       VARCHAR2(4000),
  fly_hours        NUMBER(10),
  duty_time        NUMBER(10),
  duty_time_td     DATE,
  duty_time_ta     DATE,
  rest_time        NUMBER(10),
  rest_time_td     DATE,
  rest_time_ta     DATE,
  p_code           VARCHAR2(50),
  module_flag      VARCHAR2(1),
  last_modify_time DATE,
  valid_flag       VARCHAR2(2),
  log_op_time      DATE,
  td_before        NUMBER(5),
  ta_after         NUMBER(5),
  oper             VARCHAR2(20),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  leg              NUMBER(1)
)
tablespace CEACREW
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_DUTYINFO_LOG
  is '值勤期日志记录表';
comment on column T_SCH_DUTYINFO_LOG.intf_log_id
  is '??ID';
comment on column T_SCH_DUTYINFO_LOG.duty_id
  is '值勤期标示ID';
comment on column T_SCH_DUTYINFO_LOG.uids
  is '操作标识：I增加 U修改 D删除';
comment on column T_SCH_DUTYINFO_LOG.flight_date
  is '值勤期第一班的开始日期';
comment on column T_SCH_DUTYINFO_LOG.flight_ids
  is '值勤期内的航段ID串';
comment on column T_SCH_DUTYINFO_LOG.fly_hours
  is '值勤期内的飞行时间';
comment on column T_SCH_DUTYINFO_LOG.duty_time
  is '值勤时间';
comment on column T_SCH_DUTYINFO_LOG.duty_time_td
  is '值勤开始时间';
comment on column T_SCH_DUTYINFO_LOG.duty_time_ta
  is '值勤结束时间';
comment on column T_SCH_DUTYINFO_LOG.rest_time
  is '值勤结束后的休息时间';
comment on column T_SCH_DUTYINFO_LOG.rest_time_td
  is '??????';
comment on column T_SCH_DUTYINFO_LOG.rest_time_ta
  is '??????';
comment on column T_SCH_DUTYINFO_LOG.p_code
  is '????P_CODE';
comment on column T_SCH_DUTYINFO_LOG.module_flag
  is '??(F??C??A''??M??)';
comment on column T_SCH_DUTYINFO_LOG.last_modify_time
  is '??????';
comment on column T_SCH_DUTYINFO_LOG.valid_flag
  is '?????';
comment on column T_SCH_DUTYINFO_LOG.log_op_time
  is '?????????OP_TIME';
comment on column T_SCH_DUTYINFO_LOG.td_before
  is '????';
comment on column T_SCH_DUTYINFO_LOG.ta_after
  is '????';
comment on column T_SCH_DUTYINFO_LOG.oper
  is '???';
comment on column T_SCH_DUTYINFO_LOG.oper_ip
  is 'IP??';
comment on column T_SCH_DUTYINFO_LOG.oper_host
  is '???';
comment on column T_SCH_DUTYINFO_LOG.leg
  is '当天值勤期处于第几段';
alter table T_SCH_DUTYINFO_LOG
  add constraint PK_T_SCH_DUTYINFO_LOG primary key (INTF_LOG_ID, DUTY_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE
prompt =============================
prompt
create table T_SCH_DUTYLINE
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4) default 0,
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1) default 'N',
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  fixed_flag       VARCHAR2(1),
  td_min           DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_DUTYLINE
  is '排班任务表';
comment on column T_SCH_DUTYLINE.flight_date
  is '航班日期';
comment on column T_SCH_DUTYLINE.duty_line
  is '任务号,取任务的第一个crew_link_line';
comment on column T_SCH_DUTYLINE.flight_com
  is '航班';
comment on column T_SCH_DUTYLINE.flight_voyage
  is '航程';
comment on column T_SCH_DUTYLINE.ac_type
  is '机型';
comment on column T_SCH_DUTYLINE.ac_reg
  is '机号';
comment on column T_SCH_DUTYLINE.filiale
  is '分公司';
comment on column T_SCH_DUTYLINE.fly_hours
  is '飞行小时';
comment on column T_SCH_DUTYLINE.depa_airport
  is '发站';
comment on column T_SCH_DUTYLINE.td
  is '开始时间';
comment on column T_SCH_DUTYLINE.arri_airport
  is '到站';
comment on column T_SCH_DUTYLINE.ta
  is '结束时间';
comment on column T_SCH_DUTYLINE.td_punch
  is '签到时间';
comment on column T_SCH_DUTYLINE.td_before
  is '进场时间';
comment on column T_SCH_DUTYLINE.depart_flight_no
  is '始发航班号';
comment on column T_SCH_DUTYLINE.sch_pub_flag
  is '计划发布标志';
comment on column T_SCH_DUTYLINE.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_SCH_DUTYLINE.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_SCH_DUTYLINE.ac_type_crew
  is '机型组';
comment on column T_SCH_DUTYLINE.oper
  is '操作人';
comment on column T_SCH_DUTYLINE.op_time
  is ' 操作时间';
comment on column T_SCH_DUTYLINE.remarks
  is '备注';
comment on column T_SCH_DUTYLINE.oper_ip
  is 'IP地址';
comment on column T_SCH_DUTYLINE.oper_host
  is '主机名';
comment on column T_SCH_DUTYLINE.fixed_flag
  is '是否是固定发车时间，针对货航使用。Y是N否';
comment on column T_SCH_DUTYLINE.td_min
  is '时间区间(开始)';
create index IDX_SCH_DUTYLINE_FLTDATE on T_SCH_DUTYLINE (FLIGHT_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 38M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_SCH_DUTYLINE_OPTIME on T_SCH_DUTYLINE (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_DUTYLINE
  add constraint PK_SCH_DUTYLINE primary key (DUTY_LINE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 81M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE20150120
prompt =====================================
prompt
create table T_SCH_DUTYLINE20150120
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE20160301
prompt =====================================
prompt
create table T_SCH_DUTYLINE20160301
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE201603012
prompt ======================================
prompt
create table T_SCH_DUTYLINE201603012
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE219
prompt ================================
prompt
create table T_SCH_DUTYLINE219
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE553
prompt ================================
prompt
create table T_SCH_DUTYLINE553
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE_BAK
prompt =================================
prompt
create table T_SCH_DUTYLINE_BAK
(
  flight_date      DATE not null,
  duty_line        NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  td_punch         NUMBER(3),
  td_before        NUMBER(3),
  depart_flight_no VARCHAR2(15),
  sch_pub_flag     VARCHAR2(1),
  rec_id           NUMBER(11),
  module_flag      VARCHAR2(1),
  ac_type_crew     VARCHAR2(10),
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTYLINE_BAK1
prompt ==================================
prompt
create table T_SCH_DUTYLINE_BAK1
(
  flight_date      DATE not null,
  crew_link_line   NUMBER(11) not null,
  flight_com       VARCHAR2(100),
  flight_voyage    VARCHAR2(300),
  ac_type          VARCHAR2(10),
  ac_reg           VARCHAR2(10),
  filiale          VARCHAR2(10),
  flight_unit_code VARCHAR2(22),
  fly_hours        NUMBER(4),
  depa_airport     VARCHAR2(4),
  td               DATE not null,
  arri_airport     VARCHAR2(4),
  ta               DATE not null,
  sign_time        DATE,
  drive_time       DATE,
  last_modify_time DATE,
  depart_flight_no VARCHAR2(15),
  publish_status   VARCHAR2(1),
  rec_id           NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_DUTY_USER
prompt ==============================
prompt
create table T_SCH_DUTY_USER
(
  task_id     NUMBER(12) not null,
  user_code   VARCHAR2(10) not null,
  percent_num NUMBER(3),
  remarks     VARCHAR2(200),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  role_code   VARCHAR2(8) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_DUTY_USER
  is '交接班任务交接人表';
comment on column T_SCH_DUTY_USER.task_id
  is '交接班ID';
comment on column T_SCH_DUTY_USER.user_code
  is '交接人';
comment on column T_SCH_DUTY_USER.percent_num
  is '跟进进度';
comment on column T_SCH_DUTY_USER.remarks
  is '备注';
comment on column T_SCH_DUTY_USER.oper
  is '操作人 ';
comment on column T_SCH_DUTY_USER.op_time
  is '完成时间';
comment on column T_SCH_DUTY_USER.oper_ip
  is 'IP地址';
comment on column T_SCH_DUTY_USER.oper_host
  is '主机名';
comment on column T_SCH_DUTY_USER.role_code
  is '角色代码';
alter table T_SCH_DUTY_USER
  add constraint PK_T_SCH_DUTY_USER primary key (TASK_ID, USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_EXAMINATION
prompt ================================
prompt
create table T_SCH_EXAMINATION
(
  flight_id NUMBER(11) not null,
  p_code    VARCHAR2(10) not null,
  heath_yn  VARCHAR2(1) default 'Y',
  heathy    VARCHAR2(100),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SCH_EXAMINATION
  is '航医航前体检表';
comment on column T_SCH_EXAMINATION.flight_id
  is '航班ID';
comment on column T_SCH_EXAMINATION.p_code
  is '人员代码';
comment on column T_SCH_EXAMINATION.heath_yn
  is '体检结果(Y/N)';
comment on column T_SCH_EXAMINATION.heathy
  is '航医航前体检';
comment on column T_SCH_EXAMINATION.oper
  is '操作人';
comment on column T_SCH_EXAMINATION.op_time
  is '操作时间';
comment on column T_SCH_EXAMINATION.remarks
  is '备注';
comment on column T_SCH_EXAMINATION.oper_ip
  is 'IP地址';
comment on column T_SCH_EXAMINATION.oper_host
  is '主机名';
alter table T_SCH_EXAMINATION
  add constraint PK_HEALTHY_EXAM primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_SCH_MATCH
prompt ==========================
prompt
create table T_SCH_MATCH
(
  match_id   NUMBER(9) not null,
  p_code     VARCHAR2(10) not null,
  pri        NUMBER(3) not null,
  rank_no    VARCHAR2(4),
  tech_flag  VARCHAR2(1),
  co_rank_no VARCHAR2(4),
  tech_nos   VARCHAR2(1000),
  tech_names VARCHAR2(1000),
  start_date DATE,
  end_date   DATE,
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_MATCH
  is '个人搭配信息表';
comment on column T_SCH_MATCH.match_id
  is '序号';
comment on column T_SCH_MATCH.p_code
  is '人员代码';
comment on column T_SCH_MATCH.pri
  is '优先级';
comment on column T_SCH_MATCH.rank_no
  is '岗位代码';
comment on column T_SCH_MATCH.tech_flag
  is 'T技术配置N过夜Z夜航P培飞';
comment on column T_SCH_MATCH.co_rank_no
  is '不搭配岗位';
comment on column T_SCH_MATCH.tech_nos
  is '搭配授权';
comment on column T_SCH_MATCH.tech_names
  is '搭配授权名称';
comment on column T_SCH_MATCH.start_date
  is '开始日期';
comment on column T_SCH_MATCH.end_date
  is '结束日期';
comment on column T_SCH_MATCH.oper
  is '操作人';
comment on column T_SCH_MATCH.op_time
  is '操作时间';
comment on column T_SCH_MATCH.remarks
  is '备注';
comment on column T_SCH_MATCH.oper_ip
  is 'IP地址';
comment on column T_SCH_MATCH.oper_host
  is '主机名';
alter table T_SCH_MATCH
  add constraint PK_CREW_MATCH primary key (P_CODE, MATCH_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_PAIRDUTYINFO
prompt =================================
prompt
create table T_SCH_PAIRDUTYINFO
(
  flight_date    DATE not null,
  crew_link_line NUMBER(19) not null,
  flight_com     VARCHAR2(1000),
  flight_voyage  VARCHAR2(100),
  ac_type_crew   VARCHAR2(10),
  ac_type        VARCHAR2(10),
  ac_reg         VARCHAR2(10),
  filiale        VARCHAR2(10),
  fly_hours      NUMBER(4),
  depa_airport   VARCHAR2(4),
  td             DATE,
  ta             DATE,
  arri_airport   VARCHAR2(4),
  td_punch       NUMBER(3),
  to_before      NUMBER(3),
  ta_after       NUMBER(3),
  crew_idr5      NUMBER(9),
  duty_hours     NUMBER(4),
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SCH_PAIRDUTYINFO
  is '组环任务表(T_SCH_PAIRDUTYINFO)';
comment on column T_SCH_PAIRDUTYINFO.flight_date
  is '航班日期';
comment on column T_SCH_PAIRDUTYINFO.crew_link_line
  is '连班号';
comment on column T_SCH_PAIRDUTYINFO.flight_com
  is '航班';
comment on column T_SCH_PAIRDUTYINFO.flight_voyage
  is '航程';
comment on column T_SCH_PAIRDUTYINFO.ac_type_crew
  is '机型组';
comment on column T_SCH_PAIRDUTYINFO.ac_type
  is '机型';
comment on column T_SCH_PAIRDUTYINFO.ac_reg
  is '机号';
comment on column T_SCH_PAIRDUTYINFO.filiale
  is '分子公司';
comment on column T_SCH_PAIRDUTYINFO.fly_hours
  is '飞行小时';
comment on column T_SCH_PAIRDUTYINFO.depa_airport
  is '起飞机场';
comment on column T_SCH_PAIRDUTYINFO.td
  is '开始时间';
comment on column T_SCH_PAIRDUTYINFO.ta
  is '结束时间';
comment on column T_SCH_PAIRDUTYINFO.arri_airport
  is '到达机场';
comment on column T_SCH_PAIRDUTYINFO.td_punch
  is '签到时间';
comment on column T_SCH_PAIRDUTYINFO.to_before
  is '进场时间';
comment on column T_SCH_PAIRDUTYINFO.ta_after
  is '离场时间';
comment on column T_SCH_PAIRDUTYINFO.crew_idr5
  is '搭配方案';
comment on column T_SCH_PAIRDUTYINFO.duty_hours
  is '执勤时间';
comment on column T_SCH_PAIRDUTYINFO.oper
  is '操作人';
comment on column T_SCH_PAIRDUTYINFO.op_time
  is '操作时间';
comment on column T_SCH_PAIRDUTYINFO.remarks
  is '备注';
comment on column T_SCH_PAIRDUTYINFO.oper_ip
  is 'IP地址';
comment on column T_SCH_PAIRDUTYINFO.oper_host
  is '主机名';
alter table T_SCH_PAIRDUTYINFO
  add constraint PK_T_SCH_PAIRDUTYINFO primary key (FLIGHT_DATE, CREW_LINK_LINE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_SCH_PAIRING
prompt ============================
prompt
create table T_SCH_PAIRING
(
  flight_date            DATE not null,
  crew_link_line         NUMBER(11) not null,
  module_flag            VARCHAR2(1) not null,
  crew_pairing_line      NUMBER(11),
  flight_ids             VARCHAR2(200),
  ac_type_crew           VARCHAR2(10),
  ac_type                VARCHAR2(10),
  ac_reg                 VARCHAR2(10),
  flight_com             VARCHAR2(60),
  flight_voyage          VARCHAR2(100),
  flight_code            VARCHAR2(60),
  depa_airport           VARCHAR2(4),
  arri_airport           VARCHAR2(4),
  td_punch               NUMBER(3),
  td_before              NUMBER(3),
  td                     DATE not null,
  ta                     DATE not null,
  ta_after               NUMBER(3),
  d_or_i                 VARCHAR2(1),
  flight_type            VARCHAR2(1),
  fly_hours              NUMBER(4) default 0,
  filiale                VARCHAR2(10),
  base                   VARCHAR2(4),
  carrier                VARCHAR2(2),
  p_or_c                 VARCHAR2(1) default 'P',
  crew_id                NUMBER(9),
  flight_flag            VARCHAR2(1),
  icao_flag              VARCHAR2(1),
  foreign_flag           VARCHAR2(1),
  special_flag           VARCHAR2(1),
  fxw_id                 NUMBER(11),
  rec_id                 NUMBER(11),
  oper                   VARCHAR2(10),
  op_time                DATE,
  remarks                VARCHAR2(200),
  oper_ip                VARCHAR2(15),
  oper_host              VARCHAR2(50),
  sch_pub_flag           VARCHAR2(1) default 'N',
  dep_code               VARCHAR2(10),
  crew_pairing_line_lock VARCHAR2(1) default 'N',
  duty_line              NUMBER(11),
  cat_flag               VARCHAR2(1),
  sal_crew_link_line     NUMBER(11),
  fixed_flag             VARCHAR2(1),
  td_min                 DATE,
  crew_idr5              NUMBER(9),
  delay_type             VARCHAR2(2)
)
partition by range (FLIGHT_DATE)
(
  partition SCHPAIRING_2010 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHPAIRING_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHPAIRING_2012 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHPAIRING_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 53M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHPAIRING_2014 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHPAIRING_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 176M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHPAIRING_2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHPAIRING_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 80M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHPAIRING_2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHPAIRING_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_SCH_PAIRING
  is '????????????';
comment on column T_SCH_PAIRING.flight_date
  is '????';
comment on column T_SCH_PAIRING.crew_link_line
  is '??????';
comment on column T_SCH_PAIRING.module_flag
  is '????(F????,C????,A''????,M????)';
comment on column T_SCH_PAIRING.crew_pairing_line
  is '??????';
comment on column T_SCH_PAIRING.flight_ids
  is 'FLIGHT_ID??????/????';
comment on column T_SCH_PAIRING.ac_type_crew
  is '??????';
comment on column T_SCH_PAIRING.ac_type
  is '????';
comment on column T_SCH_PAIRING.ac_reg
  is '????';
comment on column T_SCH_PAIRING.flight_com
  is '????';
comment on column T_SCH_PAIRING.flight_voyage
  is '????';
comment on column T_SCH_PAIRING.flight_code
  is '????3????';
comment on column T_SCH_PAIRING.depa_airport
  is '????';
comment on column T_SCH_PAIRING.arri_airport
  is '????';
comment on column T_SCH_PAIRING.td_punch
  is '????????';
comment on column T_SCH_PAIRING.td_before
  is '????????';
comment on column T_SCH_PAIRING.td
  is '????????';
comment on column T_SCH_PAIRING.ta
  is '????????';
comment on column T_SCH_PAIRING.ta_after
  is '????????';
comment on column T_SCH_PAIRING.d_or_i
  is '????????';
comment on column T_SCH_PAIRING.flight_type
  is '????????';
comment on column T_SCH_PAIRING.fly_hours
  is '????????';
comment on column T_SCH_PAIRING.filiale
  is '??????';
comment on column T_SCH_PAIRING.base
  is '????';
comment on column T_SCH_PAIRING.carrier
  is '??????';
comment on column T_SCH_PAIRING.p_or_c
  is '????????';
comment on column T_SCH_PAIRING.crew_id
  is '????????';
comment on column T_SCH_PAIRING.flight_flag
  is '????????(????,????,????)';
comment on column T_SCH_PAIRING.icao_flag
  is '????ICAO????';
comment on column T_SCH_PAIRING.foreign_flag
  is '????????????';
comment on column T_SCH_PAIRING.special_flag
  is '????????????';
comment on column T_SCH_PAIRING.fxw_id
  is '??????????ID(????????????????????)';
comment on column T_SCH_PAIRING.rec_id
  is '??????????????????????????????????????????????????????????????????:seq_intf_recid_pairing_efb';
comment on column T_SCH_PAIRING.oper
  is '??????';
comment on column T_SCH_PAIRING.op_time
  is ' ????????';
comment on column T_SCH_PAIRING.remarks
  is '????';
comment on column T_SCH_PAIRING.oper_ip
  is 'IP????';
comment on column T_SCH_PAIRING.oper_host
  is '??????';
comment on column T_SCH_PAIRING.sch_pub_flag
  is '????????????(????????????????!!)';
comment on column T_SCH_PAIRING.dep_code
  is '??????????????(????????????????????)';
comment on column T_SCH_PAIRING.crew_pairing_line_lock
  is '??????';
comment on column T_SCH_PAIRING.duty_line
  is '??????';
comment on column T_SCH_PAIRING.cat_flag
  is '????CAT????';
comment on column T_SCH_PAIRING.sal_crew_link_line
  is '????crew_link_line??????????????????';
comment on column T_SCH_PAIRING.fixed_flag
  is '??????????????????????????????????Y??N??';
comment on column T_SCH_PAIRING.td_min
  is '????????(????)';
comment on column T_SCH_PAIRING.crew_idr5
  is 'R5搭配方案';
comment on column T_SCH_PAIRING.delay_type
  is '延误类型(B起飞前延误 A起飞后延误 BA起飞前和起飞后延误 )';
create index IDX_CREW_LINK_LINE on T_SCH_PAIRING (CREW_LINK_LINE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 120M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_PAIRING_DUTYLINE on T_SCH_PAIRING (DUTY_LINE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 83M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_PAIRING_FXWID on T_SCH_PAIRING (FXW_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_PAIRING_LINE on T_SCH_PAIRING (CREW_PAIRING_LINE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 158M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_PAIRING_OPTIME on T_SCH_PAIRING (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 296M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_PAIRING
  add constraint PK_T_SCH_PAIRING primary key (FLIGHT_DATE, CREW_LINK_LINE)
  using index 
  local;
alter index PK_T_SCH_PAIRING nologging;

prompt
prompt Creating table T_SCH_PAIRING20160301
prompt ====================================
prompt
create table T_SCH_PAIRING20160301
(
  flight_date            DATE not null,
  crew_link_line         NUMBER(11) not null,
  module_flag            VARCHAR2(1) not null,
  crew_pairing_line      NUMBER(11),
  flight_ids             VARCHAR2(200),
  ac_type_crew           VARCHAR2(10),
  ac_type                VARCHAR2(10),
  ac_reg                 VARCHAR2(10),
  flight_com             VARCHAR2(60),
  flight_voyage          VARCHAR2(100),
  flight_code            VARCHAR2(60),
  depa_airport           VARCHAR2(4),
  arri_airport           VARCHAR2(4),
  td_punch               NUMBER(3),
  td_before              NUMBER(3),
  td                     DATE not null,
  ta                     DATE not null,
  ta_after               NUMBER(3),
  d_or_i                 VARCHAR2(1),
  flight_type            VARCHAR2(1),
  fly_hours              NUMBER(4),
  filiale                VARCHAR2(10),
  base                   VARCHAR2(4),
  carrier                VARCHAR2(2),
  p_or_c                 VARCHAR2(1),
  crew_id                NUMBER(9),
  flight_flag            VARCHAR2(1),
  icao_flag              VARCHAR2(1),
  foreign_flag           VARCHAR2(1),
  special_flag           VARCHAR2(1),
  fxw_id                 NUMBER(11),
  rec_id                 NUMBER(11),
  oper                   VARCHAR2(10),
  op_time                DATE,
  remarks                VARCHAR2(200),
  oper_ip                VARCHAR2(15),
  oper_host              VARCHAR2(50),
  sch_pub_flag           VARCHAR2(1),
  dep_code               VARCHAR2(10),
  crew_pairing_line_lock VARCHAR2(1),
  duty_line              NUMBER(11),
  cat_flag               VARCHAR2(1),
  sal_crew_link_line     NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_PAIRING_AUTO_STATUS
prompt ========================================
prompt
create table T_SCH_PAIRING_AUTO_STATUS
(
  user_code   VARCHAR2(10) not null,
  user_name   VARCHAR2(50) not null,
  status_desc VARCHAR2(200) not null,
  status_prec NUMBER(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_PAIRING_AUTO_STATUS
  is '自动组环引擎状态表';
comment on column T_SCH_PAIRING_AUTO_STATUS.user_code
  is '操作人编码';
comment on column T_SCH_PAIRING_AUTO_STATUS.user_name
  is '操作人';
comment on column T_SCH_PAIRING_AUTO_STATUS.status_desc
  is '状态描述';
comment on column T_SCH_PAIRING_AUTO_STATUS.status_prec
  is '进度百分比';
alter table T_SCH_PAIRING_AUTO_STATUS
  add constraint PK_T_SCH_PAIRING_AUTO_STATUS primary key (USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_PUNCH
prompt ==========================
prompt
create table T_SCH_PUNCH
(
  punch_id   NUMBER(11) not null,
  work_no    VARCHAR2(10) not null,
  punch_date DATE,
  oper       VARCHAR2(20),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_PUNCH
  is '航班人员签到表';
comment on column T_SCH_PUNCH.punch_id
  is '自增ID（SEQ_PUNCH_ID）';
comment on column T_SCH_PUNCH.work_no
  is '工号';
comment on column T_SCH_PUNCH.punch_date
  is '签到时间';
comment on column T_SCH_PUNCH.oper
  is '操作人';
comment on column T_SCH_PUNCH.op_time
  is '操作日期';
comment on column T_SCH_PUNCH.remarks
  is '备注';
comment on column T_SCH_PUNCH.oper_ip
  is 'IP地址';
comment on column T_SCH_PUNCH.oper_host
  is '主机名';

prompt
prompt Creating table T_SCH_PUNCH_NOTSHOW
prompt ==================================
prompt
create table T_SCH_PUNCH_NOTSHOW
(
  crew_pairing_line NUMBER(11) not null,
  flight_date       DATE,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SCH_PUNCH_NOTSHOW
  is '航班签到取消关注：用于记录不再关注的任务环（航班）';
comment on column T_SCH_PUNCH_NOTSHOW.crew_pairing_line
  is '联线号';
comment on column T_SCH_PUNCH_NOTSHOW.flight_date
  is '任务环开始日期（航班日期）';
comment on column T_SCH_PUNCH_NOTSHOW.oper
  is '操作人';
comment on column T_SCH_PUNCH_NOTSHOW.op_time
  is ' 操作时间';
comment on column T_SCH_PUNCH_NOTSHOW.remarks
  is '备注';
comment on column T_SCH_PUNCH_NOTSHOW.oper_ip
  is 'IP地址';
comment on column T_SCH_PUNCH_NOTSHOW.oper_host
  is '主机名';

prompt
prompt Creating table T_SCH_ROSTER
prompt ===========================
prompt
create table T_SCH_ROSTER
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(325),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(325),
  adjust_yn       VARCHAR2(1) default 'N',
  backup_yn       VARCHAR2(1) default 'N',
  carry_yn        VARCHAR2(1) default 'N',
  carry_after_yn  VARCHAR2(1) default 'N',
  check_yn        VARCHAR2(1) default 'N',
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1) default 'Y',
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1) default 'Y',
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1) default 'N',
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11),
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6) default 0,
  night_days      NUMBER(2) default 0,
  modify_time     DATE,
  fly_hours1      NUMBER(6) default 0,
  fly_hours2      NUMBER(6) default 0,
  pub_time        DATE
)
partition by range (FLIGHT_DATE)
(
  partition SCHROSTER_2010 values less than (TO_DATE(' 2011-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2011 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2011
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2012 values less than (TO_DATE(' 2013-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 31M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2013 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2013
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 200M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2014 values less than (TO_DATE(' 2015-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 424M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2015 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2015
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 488M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2016 values less than (TO_DATE(' 2017-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 384M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2017 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2017
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SCHROSTER_2018 values less than (TO_DATE(' 2019-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SCHROSTER_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_SCH_ROSTER
  is '??????????????';
comment on column T_SCH_ROSTER.flight_id
  is '????ID';
comment on column T_SCH_ROSTER.flight_date
  is '????????';
comment on column T_SCH_ROSTER.p_code
  is '????????';
comment on column T_SCH_ROSTER.module_flag
  is '????(F????,C????,A''????,M????)';
comment on column T_SCH_ROSTER.auto_flag
  is '????????????,
H-????
A-????';
comment on column T_SCH_ROSTER.fjs_order
  is '????????';
comment on column T_SCH_ROSTER.rank_no
  is '????????';
comment on column T_SCH_ROSTER.ts_flag
  is '??????(????)';
comment on column T_SCH_ROSTER.check_type
  is '????????(????)';
comment on column T_SCH_ROSTER.tech_no_i
  is '????????';
comment on column T_SCH_ROSTER.tech_no_z
  is '????????';
comment on column T_SCH_ROSTER.warning_content
  is '????????????';
comment on column T_SCH_ROSTER.modify_reason
  is '????????';
comment on column T_SCH_ROSTER.adjust_yn
  is '????????(Y/N)';
comment on column T_SCH_ROSTER.backup_yn
  is '????????(Y/N)';
comment on column T_SCH_ROSTER.carry_yn
  is '????????(Y/N)';
comment on column T_SCH_ROSTER.carry_after_yn
  is '????????(Y/N)';
comment on column T_SCH_ROSTER.check_yn
  is '????????(Y/N)';
comment on column T_SCH_ROSTER.old_p_code
  is '????????????';
comment on column T_SCH_ROSTER.ver_yn
  is '????????';
comment on column T_SCH_ROSTER.ver_code
  is '????????(????)';
comment on column T_SCH_ROSTER.ver_desc
  is '????????';
comment on column T_SCH_ROSTER.heath_yn
  is '????????(Y/N)';
comment on column T_SCH_ROSTER.heathy
  is '????????';
comment on column T_SCH_ROSTER.hotel_yn
  is '????(N??????X????????????Y????????)';
comment on column T_SCH_ROSTER.oper
  is '??????';
comment on column T_SCH_ROSTER.op_time
  is '????????';
comment on column T_SCH_ROSTER.remarks
  is '????';
comment on column T_SCH_ROSTER.oper_ip
  is 'IP????';
comment on column T_SCH_ROSTER.oper_host
  is '??????';
comment on column T_SCH_ROSTER.fxw_id
  is '??????????ID(????????????????????)';
comment on column T_SCH_ROSTER.rec_id
  is '??????????????????????????????????????????????????????????????????';
comment on column T_SCH_ROSTER.hotel_id
  is '????ID';
comment on column T_SCH_ROSTER.fly_hours
  is '????????(????DOC,??????FTB)';
comment on column T_SCH_ROSTER.night_days
  is '????????(????????)';
comment on column T_SCH_ROSTER.modify_time
  is '??????????????';
comment on column T_SCH_ROSTER.fly_hours1
  is '??????????????????';
comment on column T_SCH_ROSTER.fly_hours2
  is '??????????????????';
comment on column T_SCH_ROSTER.pub_time
  is '????????';
create index IDX_ROSTER_FLTDATE on T_SCH_ROSTER (FLIGHT_DATE)
  nologging  local;
create index IDX_ROSTER_FXWID on T_SCH_ROSTER (FXW_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 32M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_ROSTER_OPTIME on T_SCH_ROSTER (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 1217M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_ROSTER_PCODE on T_SCH_ROSTER (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 266M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_ROSTER_PUBTIME on T_SCH_ROSTER (PUB_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 264M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER
  add constraint PK_ROSTER primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 274M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER
  add constraint UK_ROSTER unique (FLIGHT_ID, FJS_ORDER)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER
  add constraint FK_CREWSCH_CREW foreign key (P_CODE)
  references T_HR_CREW (P_CODE);
alter table T_SCH_ROSTER
  add constraint FK_CREWSCH_FLT foreign key (FLIGHT_ID)
  references T_FLT_SCHEDULE (FLIGHT_ID);

prompt
prompt Creating table T_SCH_ROSTER20140808
prompt ===================================
prompt
create table T_SCH_ROSTER20140808
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER201408082
prompt ====================================
prompt
create table T_SCH_ROSTER201408082
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20140812
prompt ===================================
prompt
create table T_SCH_ROSTER20140812
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20140815
prompt ===================================
prompt
create table T_SCH_ROSTER20140815
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 13M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20140820
prompt ===================================
prompt
create table T_SCH_ROSTER20140820
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20150101
prompt ===================================
prompt
create table T_SCH_ROSTER20150101
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20150306
prompt ===================================
prompt
create table T_SCH_ROSTER20150306
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 88M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20150306_DEL_SJ
prompt ==========================================
prompt
create table T_SCH_ROSTER20150306_DEL_SJ
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 576K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20150306_DEL_SJ2
prompt ===========================================
prompt
create table T_SCH_ROSTER20150306_DEL_SJ2
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER2015040101_DEL_SJ
prompt ============================================
prompt
create table T_SCH_ROSTER2015040101_DEL_SJ
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER20150401_DEL_SJ
prompt ==========================================
prompt
create table T_SCH_ROSTER20150401_DEL_SJ
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_20150504ZXL
prompt =======================================
prompt
create table T_SCH_ROSTER_20150504ZXL
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11),
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_A
prompt =============================
prompt
create table T_SCH_ROSTER_A
(
  flight_date      DATE not null,
  p_code           VARCHAR2(10) not null,
  month_fly_hours  NUMBER(9) default 0 not null,
  month3_fly_hours NUMBER(9) default 0 not null,
  year_fly_hours   NUMBER(9) default 0 not null,
  month_duty_hours NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 30
  initrans 1
  maxtrans 255
  storage
  (
    initial 27M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_A
  is '机组排班临时表';
comment on column T_SCH_ROSTER_A.flight_date
  is '航班日期';
comment on column T_SCH_ROSTER_A.p_code
  is '人员代码';
comment on column T_SCH_ROSTER_A.month_fly_hours
  is '月飞行时间';
comment on column T_SCH_ROSTER_A.month3_fly_hours
  is '3月飞行时间';
comment on column T_SCH_ROSTER_A.year_fly_hours
  is '年飞行时间';
comment on column T_SCH_ROSTER_A.month_duty_hours
  is '月执勤时间';
create index IDX_ROSTER_A_PCODE on T_SCH_ROSTER_A (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 19M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER_A
  add primary key (FLIGHT_DATE, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 17M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_AUTO_STATUS
prompt =======================================
prompt
create table T_SCH_ROSTER_AUTO_STATUS
(
  user_code   VARCHAR2(10) not null,
  user_name   VARCHAR2(50) not null,
  status_desc VARCHAR2(500) not null,
  status_prec NUMBER(3) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_AUTO_STATUS
  is '自动排班引擎状态表';
comment on column T_SCH_ROSTER_AUTO_STATUS.user_code
  is '操作人编码';
comment on column T_SCH_ROSTER_AUTO_STATUS.user_name
  is '操作人';
comment on column T_SCH_ROSTER_AUTO_STATUS.status_desc
  is '状态描述';
comment on column T_SCH_ROSTER_AUTO_STATUS.status_prec
  is '进度百分比';
alter table T_SCH_ROSTER_AUTO_STATUS
  add primary key (USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_A_626
prompt =================================
prompt
create table T_SCH_ROSTER_A_626
(
  flight_date        DATE not null,
  p_code             VARCHAR2(10) not null,
  month_fly_hours    NUMBER(9) not null,
  month3_fly_hours   NUMBER(9) not null,
  year_fly_hours     NUMBER(9) not null,
  month_arrange_days NUMBER(9) not null,
  month_duty_days    NUMBER(9) not null,
  month_backup_days  NUMBER(9) not null,
  month90_updows     NUMBER(9) not null,
  cert_no            VARCHAR2(60),
  cert_date          DATE,
  cert_no2           VARCHAR2(60),
  cert_date2         DATE,
  cert_no3           VARCHAR2(60),
  cert_date3         DATE,
  icao_no            VARCHAR2(40),
  icao_date          DATE,
  icao_class         NUMBER(2) not null,
  bord_no            VARCHAR2(40),
  bord_date          DATE,
  heal_no            VARCHAR2(40),
  heal_date          DATE,
  ldht_no            VARCHAR2(40),
  ldht_date          DATE,
  ldwk_no            VARCHAR2(40),
  ldwk_date          DATE,
  txzp_no            VARCHAR2(40),
  txzp_start_date    DATE,
  txzp_date          DATE,
  twou_no            VARCHAR2(40),
  twou_start_date    DATE,
  twou_date          DATE,
  twin_no            VARCHAR2(40),
  twin_start_date    DATE,
  twin_date          DATE,
  vitw_no            VARCHAR2(40),
  vitw_start_date    DATE,
  vitw_date          DATE,
  vitw_pass_no       VARCHAR2(200),
  viwe_no            VARCHAR2(40),
  viwe_start_date    DATE,
  viwe_date          DATE,
  viwe_pass_no       VARCHAR2(200),
  viko_no            VARCHAR2(40),
  viko_start_date    DATE,
  viko_date          DATE,
  viko_pass_no       VARCHAR2(200),
  viau_no            VARCHAR2(40),
  viau_start_date    DATE,
  viau_date          DATE,
  viau_pass_no       VARCHAR2(200),
  viam_no            VARCHAR2(40),
  viam_start_date    DATE,
  viam_date          DATE,
  viam_pass_no       VARCHAR2(200),
  vieu_no            VARCHAR2(60),
  vieu_start_date    DATE,
  vieu_date          DATE,
  vieu_pass_no       VARCHAR2(200),
  yeck_date          DATE,
  tran_date          DATE,
  trck_date          DATE,
  trda_date          DATE,
  emcy_date          DATE,
  emmi_date          DATE,
  tcrm_date          DATE,
  tice_date          DATE,
  secu_date          DATE,
  trst_date          DATE,
  etop_date          DATE,
  pola_date          DATE,
  rnp_date           DATE,
  rnav_date          DATE,
  rvsm_date          DATE,
  catii_date         DATE,
  pass_no            VARCHAR2(500),
  pass_date          DATE,
  visa_no            VARCHAR2(500),
  visa_date          DATE,
  yeck_no            VARCHAR2(500),
  tran_no            VARCHAR2(500),
  emcy_no            VARCHAR2(500),
  trda_no            VARCHAR2(500),
  pola_no            VARCHAR2(500),
  secu_no            VARCHAR2(500),
  emmi_no            VARCHAR2(500),
  tice_no            VARCHAR2(500),
  tmel_no            VARCHAR2(500),
  tcrm_no            VARCHAR2(500),
  trst_no            VARCHAR2(500),
  cati_no            VARCHAR2(500),
  cati2_no           VARCHAR2(500),
  catii_no           VARCHAR2(500),
  trvr_no            VARCHAR2(500),
  rvsm_no            VARCHAR2(500),
  trnp_no            VARCHAR2(500),
  rnav_no            VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_B
prompt =============================
prompt
create table T_SCH_ROSTER_B
(
  flight_date        DATE not null,
  p_code             VARCHAR2(10) not null,
  month_arrange_days NUMBER(9) default 0 not null,
  month_duty_days    NUMBER(9) default 0 not null,
  month_backup_days  NUMBER(9) default 0 not null,
  month90_updows     NUMBER(9) default 0 not null,
  cert_no            VARCHAR2(60),
  cert_date          DATE,
  cert_no2           VARCHAR2(60),
  cert_date2         DATE,
  cert_no3           VARCHAR2(60),
  cert_date3         DATE,
  icao_no            VARCHAR2(40),
  icao_date          DATE,
  icao_class         NUMBER(2) default 0 not null,
  bord_no            VARCHAR2(40),
  bord_date          DATE,
  heal_no            VARCHAR2(40),
  heal_date          DATE,
  ldht_no            VARCHAR2(40),
  ldht_date          DATE,
  ldwk_no            VARCHAR2(40),
  ldwk_date          DATE,
  txzp_no            VARCHAR2(40),
  txzp_start_date    DATE,
  txzp_date          DATE,
  twou_no            VARCHAR2(40),
  twou_start_date    DATE,
  twou_date          DATE,
  twin_no            VARCHAR2(40),
  twin_start_date    DATE,
  twin_date          DATE,
  vitw_no            VARCHAR2(40),
  vitw_start_date    DATE,
  vitw_date          DATE,
  vitw_pass_no       VARCHAR2(200),
  viwe_no            VARCHAR2(40),
  viwe_start_date    DATE,
  viwe_date          DATE,
  viwe_pass_no       VARCHAR2(200),
  viko_no            VARCHAR2(40),
  viko_start_date    DATE,
  viko_date          DATE,
  viko_pass_no       VARCHAR2(200),
  viau_no            VARCHAR2(40),
  viau_start_date    DATE,
  viau_date          DATE,
  viau_pass_no       VARCHAR2(200),
  viam_no            VARCHAR2(40),
  viam_start_date    DATE,
  viam_date          DATE,
  viam_pass_no       VARCHAR2(200),
  vieu_no            VARCHAR2(60),
  vieu_start_date    DATE,
  vieu_date          DATE,
  vieu_pass_no       VARCHAR2(200),
  yeck_date          DATE,
  tran_date          DATE,
  trck_date          DATE,
  trda_date          DATE,
  emcy_date          DATE,
  emmi_date          DATE,
  tcrm_date          DATE,
  tice_date          DATE,
  secu_date          DATE,
  trst_date          DATE,
  etop_date          DATE,
  pola_date          DATE,
  rnp_date           DATE,
  rnav_date          DATE,
  rvsm_date          DATE,
  catii_date         DATE,
  pass_no            VARCHAR2(500),
  pass_date          DATE,
  visa_no            VARCHAR2(500),
  visa_date          DATE,
  yeck_no            VARCHAR2(500),
  tran_no            VARCHAR2(500),
  emcy_no            VARCHAR2(500),
  trda_no            VARCHAR2(500),
  pola_no            VARCHAR2(500),
  secu_no            VARCHAR2(500),
  emmi_no            VARCHAR2(500),
  tice_no            VARCHAR2(500),
  tmel_no            VARCHAR2(500),
  tcrm_no            VARCHAR2(500),
  trst_no            VARCHAR2(500),
  cati_no            VARCHAR2(500),
  cati2_no           VARCHAR2(500),
  catii_no           VARCHAR2(500),
  trvr_no            VARCHAR2(500),
  rvsm_no            VARCHAR2(500),
  trnp_no            VARCHAR2(500),
  rnav_no            VARCHAR2(500),
  hudi_no            VARCHAR2(500),
  hudi2_no           VARCHAR2(500),
  hudii_no           VARCHAR2(500),
  hudii2_no          VARCHAR2(500),
  hud_no             VARCHAR2(500)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 216M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_B
  is '机组排班临时表';
comment on column T_SCH_ROSTER_B.flight_date
  is '航班日期';
comment on column T_SCH_ROSTER_B.p_code
  is '人员代码';
comment on column T_SCH_ROSTER_B.month_arrange_days
  is '本月排班天数';
comment on column T_SCH_ROSTER_B.month_duty_days
  is '本月不能飞天数';
comment on column T_SCH_ROSTER_B.month_backup_days
  is '本月备份天数';
comment on column T_SCH_ROSTER_B.month90_updows
  is '90天起落次数';
comment on column T_SCH_ROSTER_B.cert_no
  is '执照1';
comment on column T_SCH_ROSTER_B.cert_date
  is '执照1有效期';
comment on column T_SCH_ROSTER_B.cert_no2
  is '执照2';
comment on column T_SCH_ROSTER_B.cert_date2
  is '执照2有效期';
comment on column T_SCH_ROSTER_B.cert_no3
  is '执照3';
comment on column T_SCH_ROSTER_B.cert_date3
  is '执照3有效期';
comment on column T_SCH_ROSTER_B.icao_no
  is 'ICAO';
comment on column T_SCH_ROSTER_B.icao_date
  is 'ICAO有效期';
comment on column T_SCH_ROSTER_B.icao_class
  is 'ICAO等级';
comment on column T_SCH_ROSTER_B.bord_no
  is '登机证';
comment on column T_SCH_ROSTER_B.bord_date
  is '登机证有效期';
comment on column T_SCH_ROSTER_B.heal_no
  is '体检合格证';
comment on column T_SCH_ROSTER_B.heal_date
  is '体检合格证有效期';
comment on column T_SCH_ROSTER_B.ldht_no
  is '合同';
comment on column T_SCH_ROSTER_B.ldht_date
  is '合同有效期';
comment on column T_SCH_ROSTER_B.ldwk_no
  is '外籍工作签证';
comment on column T_SCH_ROSTER_B.ldwk_date
  is '外籍工作签证有效期';
comment on column T_SCH_ROSTER_B.txzp_no
  is '港澳通行证 ';
comment on column T_SCH_ROSTER_B.txzp_start_date
  is '港澳通行证-启用日期';
comment on column T_SCH_ROSTER_B.txzp_date
  is '港澳通行证有效期';
comment on column T_SCH_ROSTER_B.twou_no
  is '台湾通行证';
comment on column T_SCH_ROSTER_B.twou_start_date
  is '台湾通行证-启用日期';
comment on column T_SCH_ROSTER_B.twou_date
  is '台湾通行证有效期';
comment on column T_SCH_ROSTER_B.twin_no
  is '台湾地区入出境许可证';
comment on column T_SCH_ROSTER_B.twin_start_date
  is '入台证-启用日期';
comment on column T_SCH_ROSTER_B.twin_date
  is '入台证有效期';
comment on column T_SCH_ROSTER_B.vitw_no
  is '台湾类';
comment on column T_SCH_ROSTER_B.vitw_start_date
  is '台湾签证-启用日期';
comment on column T_SCH_ROSTER_B.vitw_date
  is '台湾类有效期';
comment on column T_SCH_ROSTER_B.vitw_pass_no
  is '台湾签证-护照';
comment on column T_SCH_ROSTER_B.viwe_no
  is '东南亚签证';
comment on column T_SCH_ROSTER_B.viwe_start_date
  is '东南亚签证-启用日期';
comment on column T_SCH_ROSTER_B.viwe_date
  is '东南亚签证有效期';
comment on column T_SCH_ROSTER_B.viwe_pass_no
  is '东南亚签证-护照';
comment on column T_SCH_ROSTER_B.viko_no
  is '日韩签证';
comment on column T_SCH_ROSTER_B.viko_start_date
  is '日韩签证-启用日期';
comment on column T_SCH_ROSTER_B.viko_date
  is '日韩签证有效期';
comment on column T_SCH_ROSTER_B.viko_pass_no
  is '日韩签证-护照';
comment on column T_SCH_ROSTER_B.viau_no
  is '澳洲签证';
comment on column T_SCH_ROSTER_B.viau_start_date
  is '澳洲签证-启用日期';
comment on column T_SCH_ROSTER_B.viau_date
  is '澳洲签证有效期';
comment on column T_SCH_ROSTER_B.viau_pass_no
  is '澳洲签证-护照';
comment on column T_SCH_ROSTER_B.viam_no
  is '美洲签证';
comment on column T_SCH_ROSTER_B.viam_start_date
  is '美洲签证-启用日期';
comment on column T_SCH_ROSTER_B.viam_date
  is '美洲签证有效期';
comment on column T_SCH_ROSTER_B.viam_pass_no
  is '美洲签证-护照';
comment on column T_SCH_ROSTER_B.vieu_no
  is '欧洲签证';
comment on column T_SCH_ROSTER_B.vieu_start_date
  is '欧洲签证-启用日期';
comment on column T_SCH_ROSTER_B.vieu_date
  is '欧洲签证有效期';
comment on column T_SCH_ROSTER_B.vieu_pass_no
  is '欧洲签证-护照';
comment on column T_SCH_ROSTER_B.yeck_date
  is '年度航线有效期';
comment on column T_SCH_ROSTER_B.tran_date
  is '定期复训有效期';
comment on column T_SCH_ROSTER_B.trck_date
  is '熟练检查有效期';
comment on column T_SCH_ROSTER_B.trda_date
  is '危险品有效期';
comment on column T_SCH_ROSTER_B.emcy_date
  is '应急生存训练有效期';
comment on column T_SCH_ROSTER_B.emmi_date
  is '紧急医学事件处置训练有效期';
comment on column T_SCH_ROSTER_B.tcrm_date
  is 'CRM有效期';
comment on column T_SCH_ROSTER_B.tice_date
  is '飞机防冰/除冰训练有效期';
comment on column T_SCH_ROSTER_B.secu_date
  is '保安训练有效期';
comment on column T_SCH_ROSTER_B.trst_date
  is '换季培训有效期';
comment on column T_SCH_ROSTER_B.etop_date
  is 'ETOPS有效期';
comment on column T_SCH_ROSTER_B.pola_date
  is '极地飞行有效期';
comment on column T_SCH_ROSTER_B.rnp_date
  is '导航精度有效期';
comment on column T_SCH_ROSTER_B.rnav_date
  is '区域导航';
comment on column T_SCH_ROSTER_B.rvsm_date
  is '缩小垂直间隔';
comment on column T_SCH_ROSTER_B.catii_date
  is 'CATII仪表着陆';
comment on column T_SCH_ROSTER_B.pass_no
  is '护照';
comment on column T_SCH_ROSTER_B.pass_date
  is '护照有效期';
comment on column T_SCH_ROSTER_B.visa_no
  is '签证';
comment on column T_SCH_ROSTER_B.visa_date
  is '签证有效期';
comment on column T_SCH_ROSTER_B.yeck_no
  is '机长航线检查485';
comment on column T_SCH_ROSTER_B.tran_no
  is '定期复训486';
comment on column T_SCH_ROSTER_B.emcy_no
  is '应急生存训练 401';
comment on column T_SCH_ROSTER_B.trda_no
  is '危险品 402';
comment on column T_SCH_ROSTER_B.pola_no
  is '极地飞行 400';
comment on column T_SCH_ROSTER_B.secu_no
  is '保安训练 404';
comment on column T_SCH_ROSTER_B.emmi_no
  is '紧急医学事件处置训练 405';
comment on column T_SCH_ROSTER_B.tice_no
  is '除防冰训练 407';
comment on column T_SCH_ROSTER_B.tmel_no
  is 'MEL训练 408';
comment on column T_SCH_ROSTER_B.tcrm_no
  is 'CRM 425';
comment on column T_SCH_ROSTER_B.trst_no
  is '换季培训 481';
comment on column T_SCH_ROSTER_B.cati_no
  is '仪表着陆CAT I 392';
comment on column T_SCH_ROSTER_B.cati2_no
  is '仪表着陆CAT II* 393';
comment on column T_SCH_ROSTER_B.catii_no
  is '仪表着陆CAT II 482';
comment on column T_SCH_ROSTER_B.trvr_no
  is '仪表着陆RVR  483';
comment on column T_SCH_ROSTER_B.rvsm_no
  is '缩小垂直间隔RVSM 394';
comment on column T_SCH_ROSTER_B.trnp_no
  is '导航精度RNP 395';
comment on column T_SCH_ROSTER_B.rnav_no
  is '区域导航RNP-AR 396';
comment on column T_SCH_ROSTER_B.hudi_no
  is 'HUD标准I类';
comment on column T_SCH_ROSTER_B.hudi2_no
  is 'HUD特殊I类 ';
comment on column T_SCH_ROSTER_B.hudii_no
  is 'HUD标准II类';
comment on column T_SCH_ROSTER_B.hudii2_no
  is 'HUD特殊II类';
comment on column T_SCH_ROSTER_B.hud_no
  is 'HUD';
create index IDX_ROSTER_B_PCODE on T_SCH_ROSTER_B (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 16M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER_B
  add primary key (FLIGHT_DATE, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_BAK
prompt ===============================
prompt
create table T_SCH_ROSTER_BAK
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(200),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(200),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_DOCBACK
prompt ===================================
prompt
create table T_SCH_ROSTER_DOCBACK
(
  roster_id  NUMBER(12) not null,
  flight_id  NUMBER(11),
  p_code     VARCHAR2(10),
  fly_hours  NUMBER(6) default 0,
  time_stamp DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
  );
comment on table T_SCH_ROSTER_DOCBACK
  is '备份异常表（doc取得飞行小时）';
comment on column T_SCH_ROSTER_DOCBACK.roster_id
  is '自动编号';
comment on column T_SCH_ROSTER_DOCBACK.flight_id
  is '航班编号';
comment on column T_SCH_ROSTER_DOCBACK.p_code
  is '人员编码';
comment on column T_SCH_ROSTER_DOCBACK.fly_hours
  is '飞行小时';
comment on column T_SCH_ROSTER_DOCBACK.time_stamp
  is '时间戳';
create unique index PK_ROSTER_DOCBACK on T_SCH_ROSTER_DOCBACK (ROSTER_ID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_SCH_ROSTER_DOCEXCEPTION
prompt ========================================
prompt
create table T_SCH_ROSTER_DOCEXCEPTION
(
  exception_id  NUMBER(12) not null,
  exception_msg VARCHAR2(500),
  time_stamp    DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_DOCEXCEPTION
  is '备份异常总表（doc取得飞行小时）表';
comment on column T_SCH_ROSTER_DOCEXCEPTION.exception_id
  is '自动编号';
comment on column T_SCH_ROSTER_DOCEXCEPTION.exception_msg
  is '异常信息';
comment on column T_SCH_ROSTER_DOCEXCEPTION.time_stamp
  is '时间戳';
create unique index PK_ROSTER_DOCEXCEPTION on T_SCH_ROSTER_DOCEXCEPTION (EXCEPTION_ID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_FENS
prompt ================================
prompt
create table T_SCH_ROSTER_FENS
(
  flight_id   NUMBER(11) not null,
  flight_date DATE,
  p_code      VARCHAR2(10) not null,
  fens        NUMBER(6,2),
  fly_hours   NUMBER(6,2),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 112M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_FENS
  is '航前预计算疲劳值';
comment on column T_SCH_ROSTER_FENS.flight_id
  is '航班ID';
comment on column T_SCH_ROSTER_FENS.flight_date
  is '航班日期';
comment on column T_SCH_ROSTER_FENS.p_code
  is '人员编码';
comment on column T_SCH_ROSTER_FENS.fens
  is '预计算疲劳值';
comment on column T_SCH_ROSTER_FENS.fly_hours
  is '飞行时间';
comment on column T_SCH_ROSTER_FENS.op_time
  is '更新时间';
alter table T_SCH_ROSTER_FENS
  add constraint PK_ROSTER_FENS primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 88M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_FENS_FXW
prompt ====================================
prompt
create table T_SCH_ROSTER_FENS_FXW
(
  flight_id   NUMBER(11) not null,
  flight_date DATE,
  p_code      VARCHAR2(10) not null,
  fenskind    VARCHAR2(20),
  fens        NUMBER(6,2),
  op_time     DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 345M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_FENS_FXW
  is '航前预计算疲劳值';
comment on column T_SCH_ROSTER_FENS_FXW.flight_id
  is '航班ID';
comment on column T_SCH_ROSTER_FENS_FXW.flight_date
  is '航班日期';
comment on column T_SCH_ROSTER_FENS_FXW.p_code
  is '人员编码';
comment on column T_SCH_ROSTER_FENS_FXW.fenskind
  is '疲劳种类';
comment on column T_SCH_ROSTER_FENS_FXW.fens
  is '预计算疲劳值';
comment on column T_SCH_ROSTER_FENS_FXW.op_time
  is '更新时间';

prompt
prompt Creating table T_SCH_ROSTER_HOURS
prompt =================================
prompt
create table T_SCH_ROSTER_HOURS
(
  id            NUMBER(6),
  basic_info_id VARCHAR2(10),
  work_no       VARCHAR2(10),
  id_no         VARCHAR2(20),
  fly_hours     NUMBER(8),
  exp_hours     NUMBER(8),
  p_code        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
  );
comment on table T_SCH_ROSTER_HOURS
  is '飞行员20130101之前的所有飞行时间';
comment on column T_SCH_ROSTER_HOURS.id
  is '主键ID ';
comment on column T_SCH_ROSTER_HOURS.basic_info_id
  is '飞行网人员ID';
comment on column T_SCH_ROSTER_HOURS.work_no
  is '工号';
comment on column T_SCH_ROSTER_HOURS.id_no
  is '身份证号码';
comment on column T_SCH_ROSTER_HOURS.fly_hours
  is '飞行时间';
comment on column T_SCH_ROSTER_HOURS.exp_hours
  is '经历时间';
comment on column T_SCH_ROSTER_HOURS.p_code
  is '机组排班人员编码';

prompt
prompt Creating table T_SCH_ROSTER_JW_MOBIL
prompt ====================================
prompt
create table T_SCH_ROSTER_JW_MOBIL
(
  p_code     VARCHAR2(10),
  user_name  VARCHAR2(50),
  mobil_no   VARCHAR2(16),
  crew_owner VARCHAR2(50),
  valid_flag VARCHAR2(10),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  remarks    VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_JW_MOBIL
  is '机务发送短信号码表';
comment on column T_SCH_ROSTER_JW_MOBIL.p_code
  is '飞行员代码';
comment on column T_SCH_ROSTER_JW_MOBIL.user_name
  is '姓名';
comment on column T_SCH_ROSTER_JW_MOBIL.mobil_no
  is '手机号码';
comment on column T_SCH_ROSTER_JW_MOBIL.crew_owner
  is '执飞单位';
comment on column T_SCH_ROSTER_JW_MOBIL.valid_flag
  is '有效标志';
comment on column T_SCH_ROSTER_JW_MOBIL.oper
  is '操作人';
comment on column T_SCH_ROSTER_JW_MOBIL.op_time
  is '操作时间';
comment on column T_SCH_ROSTER_JW_MOBIL.oper_ip
  is 'IP地址';
comment on column T_SCH_ROSTER_JW_MOBIL.oper_host
  is '主机名';
comment on column T_SCH_ROSTER_JW_MOBIL.remarks
  is '备注';

prompt
prompt Creating table T_SCH_ROSTER_LOG
prompt ===============================
prompt
create table T_SCH_ROSTER_LOG
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) default 'N' not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 62M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_LOG
  is '排班调整日志表';
comment on column T_SCH_ROSTER_LOG.log_id
  is '日志ID';
comment on column T_SCH_ROSTER_LOG.flight_id
  is '航班ID';
comment on column T_SCH_ROSTER_LOG.flight_date
  is '航班日期';
comment on column T_SCH_ROSTER_LOG.flight_info
  is '航班信息';
comment on column T_SCH_ROSTER_LOG.fjs_order
  is '机上位置';
comment on column T_SCH_ROSTER_LOG.rank_no
  is '机上岗位';
comment on column T_SCH_ROSTER_LOG.old_p_code
  is '原来人员';
comment on column T_SCH_ROSTER_LOG.p_code
  is '新排人员';
comment on column T_SCH_ROSTER_LOG.modify_type
  is '操作类型';
comment on column T_SCH_ROSTER_LOG.modify_reason
  is '修改原因';
comment on column T_SCH_ROSTER_LOG.notify_flag
  is '通知标志';
comment on column T_SCH_ROSTER_LOG.oper
  is '操作人';
comment on column T_SCH_ROSTER_LOG.op_time
  is '操作时间';
comment on column T_SCH_ROSTER_LOG.remarks
  is '备注';
comment on column T_SCH_ROSTER_LOG.oper_ip
  is 'IP地址';
comment on column T_SCH_ROSTER_LOG.oper_host
  is '主机名';
create index IDX_SCH_ROSTER_LOG_FLTID on T_SCH_ROSTER_LOG (FLIGHT_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 21M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_SCH_ROSTER_LOG_OPTIME on T_SCH_ROSTER_LOG (OP_TIME)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 22M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER_LOG
  add constraint PK_CREW_SCHEDULE_LOG primary key (LOG_ID, FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 29M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_LOG20160108
prompt =======================================
prompt
create table T_SCH_ROSTER_LOG20160108
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_LOG201601082
prompt ========================================
prompt
create table T_SCH_ROSTER_LOG201601082
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_LOG201601083
prompt ========================================
prompt
create table T_SCH_ROSTER_LOG201601083
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_LOG20160201
prompt =======================================
prompt
create table T_SCH_ROSTER_LOG20160201
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_LOGHIS
prompt ==================================
prompt
create table T_SCH_ROSTER_LOGHIS
(
  log_id        NUMBER(11) not null,
  flight_id     NUMBER(11) not null,
  flight_date   DATE not null,
  flight_info   VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) default 'N' not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 66624K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_ROSTER_LOGHIS
  is '排班调整日志历史表';
comment on column T_SCH_ROSTER_LOGHIS.log_id
  is '日志ID';
comment on column T_SCH_ROSTER_LOGHIS.flight_id
  is '航班ID';
comment on column T_SCH_ROSTER_LOGHIS.flight_date
  is '航班日期';
comment on column T_SCH_ROSTER_LOGHIS.flight_info
  is '航班信息';
comment on column T_SCH_ROSTER_LOGHIS.fjs_order
  is '机上位置';
comment on column T_SCH_ROSTER_LOGHIS.rank_no
  is '机上岗位';
comment on column T_SCH_ROSTER_LOGHIS.old_p_code
  is '原来人员';
comment on column T_SCH_ROSTER_LOGHIS.p_code
  is '新排人员';
comment on column T_SCH_ROSTER_LOGHIS.modify_type
  is '操作类型';
comment on column T_SCH_ROSTER_LOGHIS.modify_reason
  is '修改原因';
comment on column T_SCH_ROSTER_LOGHIS.notify_flag
  is '通知标志';
comment on column T_SCH_ROSTER_LOGHIS.oper
  is '操作人';
comment on column T_SCH_ROSTER_LOGHIS.op_time
  is '操作时间';
comment on column T_SCH_ROSTER_LOGHIS.remarks
  is '备注';
comment on column T_SCH_ROSTER_LOGHIS.oper_ip
  is 'IP地址';
comment on column T_SCH_ROSTER_LOGHIS.oper_host
  is '主机名';
create index IDX_OP_TIME on T_SCH_ROSTER_LOGHIS (OP_TIME)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_SCH_ROSTER_LOGHIS_FLTID on T_SCH_ROSTER_LOGHIS (FLIGHT_ID)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SCH_ROSTER_LOGHIS
  add constraint PK_CREW_SCHEDULE_LOGHIS primary key (LOG_ID, FLIGHT_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 600M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_ROSTER_TEMP
prompt ================================
prompt
create table T_SCH_ROSTER_TEMP
(
  flight_id       NUMBER(11) not null,
  flight_date     DATE,
  p_code          VARCHAR2(10) not null,
  module_flag     VARCHAR2(1) not null,
  auto_flag       VARCHAR2(1),
  fjs_order       NUMBER(4) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(60),
  check_type      VARCHAR2(12),
  tech_no_i       VARCHAR2(4),
  tech_no_z       VARCHAR2(4),
  warning_content VARCHAR2(1000),
  modify_reason   VARCHAR2(50),
  adjust_yn       VARCHAR2(1),
  backup_yn       VARCHAR2(1),
  carry_yn        VARCHAR2(1),
  carry_after_yn  VARCHAR2(1),
  check_yn        VARCHAR2(1),
  old_p_code      VARCHAR2(10),
  ver_yn          VARCHAR2(1),
  ver_code        VARCHAR2(10),
  ver_desc        VARCHAR2(200),
  heath_yn        VARCHAR2(1),
  heathy          VARCHAR2(200),
  hotel_yn        VARCHAR2(1),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  fxw_id          NUMBER(11),
  rec_id          NUMBER(11) not null,
  hotel_id        NUMBER(11),
  fly_hours       NUMBER(6),
  night_days      NUMBER(2),
  modify_time     DATE,
  fly_hours1      NUMBER(6),
  fly_hours2      NUMBER(6),
  pub_time        DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 11M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_SCH_ROSTER_TEMP.pub_time
  is '发布时间';

prompt
prompt Creating table T_SCH_SIGN_IN_TIME
prompt =================================
prompt
create table T_SCH_SIGN_IN_TIME
(
  flight_id         NUMBER(11) not null,
  flight_date       DATE not null,
  p_code            VARCHAR2(10) not null,
  sign_in_time      DATE not null,
  module_flag       VARCHAR2(1) not null,
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  plan_sign_in_time DATE,
  plan_leaving_time DATE,
  leaving_time      DATE
)
tablespace CEACREW
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_SIGN_IN_TIME
  is '飞行员签到表';
comment on column T_SCH_SIGN_IN_TIME.flight_id
  is '航班ID';
comment on column T_SCH_SIGN_IN_TIME.flight_date
  is '航班日期';
comment on column T_SCH_SIGN_IN_TIME.p_code
  is '人员编号';
comment on column T_SCH_SIGN_IN_TIME.sign_in_time
  is '实际签到时间';
comment on column T_SCH_SIGN_IN_TIME.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_SCH_SIGN_IN_TIME.oper
  is '操作人';
comment on column T_SCH_SIGN_IN_TIME.op_time
  is '操作时间';
comment on column T_SCH_SIGN_IN_TIME.remarks
  is '备注';
comment on column T_SCH_SIGN_IN_TIME.oper_ip
  is 'IP地址';
comment on column T_SCH_SIGN_IN_TIME.oper_host
  is '主机名';
comment on column T_SCH_SIGN_IN_TIME.plan_sign_in_time
  is '计划签到时间';
comment on column T_SCH_SIGN_IN_TIME.plan_leaving_time
  is '计划离场时间';
comment on column T_SCH_SIGN_IN_TIME.leaving_time
  is '实际离场时间';
alter table T_SCH_SIGN_IN_TIME
  add constraint PK_T_SCH_SIGN_IN_TIME primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_SNAPSHOT
prompt =============================
prompt
create table T_SCH_SNAPSHOT
(
  module_flag       VARCHAR2(1) default 'F' not null,
  flight_id         NUMBER(11) not null,
  flight_date       DATE,
  carrier           VARCHAR2(2),
  flight_no         VARCHAR2(15),
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  td                DATE,
  ta                DATE,
  d_or_i            VARCHAR2(1) default 'D',
  flight_type       VARCHAR2(1),
  ac_type           VARCHAR2(10),
  ac_reg            VARCHAR2(10),
  is_manual         VARCHAR2(1) default '0',
  flight_flag       VARCHAR2(1),
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  dep_bay           VARCHAR2(20),
  arr_bay           VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 288M
    next 1M
    minextents 1
    maxextents unlimited
  )
nologging;
comment on table T_SCH_SNAPSHOT
  is '航班计划快照表(用于排班)';
comment on column T_SCH_SNAPSHOT.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_SCH_SNAPSHOT.flight_id
  is '航班ID';
comment on column T_SCH_SNAPSHOT.flight_date
  is '航班日期';
comment on column T_SCH_SNAPSHOT.carrier
  is '承运人';
comment on column T_SCH_SNAPSHOT.flight_no
  is '航班号';
comment on column T_SCH_SNAPSHOT.departure_airport
  is '起飞机场';
comment on column T_SCH_SNAPSHOT.arrival_airport
  is '到达机场';
comment on column T_SCH_SNAPSHOT.td
  is '起飞时间';
comment on column T_SCH_SNAPSHOT.ta
  is '到达时间';
comment on column T_SCH_SNAPSHOT.d_or_i
  is '国际/国内(D国内I国内R地区)';
comment on column T_SCH_SNAPSHOT.flight_type
  is '航班性质';
comment on column T_SCH_SNAPSHOT.ac_type
  is '机型';
comment on column T_SCH_SNAPSHOT.ac_reg
  is '机号';
comment on column T_SCH_SNAPSHOT.is_manual
  is '新增((0MM导入1手工新增W外单位)';
comment on column T_SCH_SNAPSHOT.flight_flag
  is '航班标记(A正常B备份C本场D搭机)';
comment on column T_SCH_SNAPSHOT.oper
  is '操作人';
comment on column T_SCH_SNAPSHOT.op_time
  is '操作时间';
comment on column T_SCH_SNAPSHOT.remarks
  is '备注';
comment on column T_SCH_SNAPSHOT.oper_ip
  is 'IP地址';
comment on column T_SCH_SNAPSHOT.oper_host
  is '主机名';
comment on column T_SCH_SNAPSHOT.dep_bay
  is '起飞机场停机位';
comment on column T_SCH_SNAPSHOT.arr_bay
  is '到达机场停机位';
alter table T_SCH_SNAPSHOT
  add constraint PK_FLT_SNAPSHOT primary key (FLIGHT_ID, MODULE_FLAG)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 88M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_STOPBIT
prompt ============================
prompt
create table T_SCH_STOPBIT
(
  flight_id    NUMBER(11) not null,
  app_id       NUMBER(12) not null,
  msg_type     VARCHAR2(10) not null,
  success_flag CHAR(1) default 'N' not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_STOPBIT
  is '航班停机位机号机位变更中间表';
comment on column T_SCH_STOPBIT.flight_id
  is '航班ID';
comment on column T_SCH_STOPBIT.app_id
  is 't_sch_abnormal 表主键ID';
comment on column T_SCH_STOPBIT.msg_type
  is '消息类型  64:机号机型    80:停机位';
comment on column T_SCH_STOPBIT.success_flag
  is '成功标记(Y)';
alter table T_SCH_STOPBIT
  add constraint PK_T_SCH_STOPBIT primary key (FLIGHT_ID, MSG_TYPE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_TEACHING
prompt =============================
prompt
create table T_SCH_TEACHING
(
  p_code     VARCHAR2(10) not null,
  p_code1    VARCHAR2(10) not null,
  start_date DATE not null,
  end_date   DATE not null,
  accom_hrs  NUMBER(5),
  accom_uds  NUMBER(5),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_TEACHING
  is '教员带飞定义';
comment on column T_SCH_TEACHING.p_code
  is '人员代码（教员）';
comment on column T_SCH_TEACHING.p_code1
  is '人员代码（学员）';
comment on column T_SCH_TEACHING.start_date
  is '开始日期';
comment on column T_SCH_TEACHING.end_date
  is '结束日期';
comment on column T_SCH_TEACHING.accom_hrs
  is '带飞小时';
comment on column T_SCH_TEACHING.accom_uds
  is '带飞起落';
comment on column T_SCH_TEACHING.oper
  is '操作人';
comment on column T_SCH_TEACHING.op_time
  is '操作时间';
comment on column T_SCH_TEACHING.remarks
  is '备注';
comment on column T_SCH_TEACHING.oper_ip
  is 'IP地址';
comment on column T_SCH_TEACHING.oper_host
  is '主机名';
alter table T_SCH_TEACHING
  add constraint PK_STUDENT_INSPECT primary key (P_CODE, P_CODE1, START_DATE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_TEMP
prompt =========================
prompt
create table T_SCH_TEMP
(
  temp_no     NUMBER(9) not null,
  temp_name   VARCHAR2(64) not null,
  ac_types    VARCHAR2(200),
  status      VARCHAR2(1),
  module_flag VARCHAR2(1),
  filiale     VARCHAR2(4),
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_TEMP
  is '连飞模板号表';
comment on column T_SCH_TEMP.temp_no
  is '模板号';
comment on column T_SCH_TEMP.temp_name
  is '模板名称';
comment on column T_SCH_TEMP.ac_types
  is '适用机型';
comment on column T_SCH_TEMP.status
  is '状态';
comment on column T_SCH_TEMP.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_SCH_TEMP.filiale
  is '分公司';
comment on column T_SCH_TEMP.oper
  is '操作人';
comment on column T_SCH_TEMP.op_time
  is '操作时间';
comment on column T_SCH_TEMP.remarks
  is '备注';
comment on column T_SCH_TEMP.oper_ip
  is 'IP地址';
comment on column T_SCH_TEMP.oper_host
  is '主机名';
alter table T_SCH_TEMP
  add constraint PK_PAIRING_TMPL primary key (TEMP_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_TEMP_DETAIL
prompt ================================
prompt
create table T_SCH_TEMP_DETAIL
(
  night_id   NUMBER(11) not null,
  temp_no    NUMBER(9),
  pri        NUMBER(3),
  start_date DATE not null,
  end_date   DATE,
  weeks      VARCHAR2(7),
  day1       VARCHAR2(200),
  day2       VARCHAR2(200),
  day3       VARCHAR2(200),
  day4       VARCHAR2(200),
  day5       VARCHAR2(200),
  day6       VARCHAR2(200),
  day7       VARCHAR2(200),
  op_time    DATE,
  oper       VARCHAR2(10),
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  l_or_p     VARCHAR2(1),
  ismerge    NUMBER(1) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_TEMP_DETAIL
  is '连飞模板信息表';
comment on column T_SCH_TEMP_DETAIL.night_id
  is '过夜连线ID';
comment on column T_SCH_TEMP_DETAIL.temp_no
  is '模板号';
comment on column T_SCH_TEMP_DETAIL.pri
  is '优先级';
comment on column T_SCH_TEMP_DETAIL.start_date
  is '开始日期';
comment on column T_SCH_TEMP_DETAIL.end_date
  is '结束日期';
comment on column T_SCH_TEMP_DETAIL.weeks
  is '过夜班期';
comment on column T_SCH_TEMP_DETAIL.day1
  is '第一天';
comment on column T_SCH_TEMP_DETAIL.day2
  is '第二天';
comment on column T_SCH_TEMP_DETAIL.day3
  is '第三天';
comment on column T_SCH_TEMP_DETAIL.day4
  is '第四天';
comment on column T_SCH_TEMP_DETAIL.day5
  is '第五天';
comment on column T_SCH_TEMP_DETAIL.day6
  is '第六天';
comment on column T_SCH_TEMP_DETAIL.day7
  is '第七天';
comment on column T_SCH_TEMP_DETAIL.op_time
  is '操作时间';
comment on column T_SCH_TEMP_DETAIL.oper
  is '操作人';
comment on column T_SCH_TEMP_DETAIL.remarks
  is '备注';
comment on column T_SCH_TEMP_DETAIL.oper_ip
  is 'IP地址';
comment on column T_SCH_TEMP_DETAIL.oper_host
  is '主机名';
comment on column T_SCH_TEMP_DETAIL.l_or_p
  is '模板针对联班还是联线(L-联班, P-联线,其它-联班联线)';
comment on column T_SCH_TEMP_DETAIL.ismerge
  is '合并任务环的标志（1-合并，0-不合并）';
alter table T_SCH_TEMP_DETAIL
  add constraint PK_TMPL_DETAIL primary key (NIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SCH_TEMP_SPLIT
prompt ===============================
prompt
create table T_SCH_TEMP_SPLIT
(
  night_id     NUMBER(11) not null,
  temp_no      NUMBER(9),
  pri          NUMBER(3),
  start_date   DATE not null,
  end_date     DATE,
  weeks        VARCHAR2(7),
  pos          VARCHAR2(1),
  flight_no    VARCHAR2(20),
  depa_airport VARCHAR2(20),
  arri_airport VARCHAR2(20),
  op_time      DATE,
  oper         VARCHAR2(10),
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  l_or_p       VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SCH_TEMP_SPLIT
  is '连飞模板信息表';
comment on column T_SCH_TEMP_SPLIT.night_id
  is '过夜连线ID';
comment on column T_SCH_TEMP_SPLIT.temp_no
  is '模板号';
comment on column T_SCH_TEMP_SPLIT.pri
  is '优先级';
comment on column T_SCH_TEMP_SPLIT.start_date
  is '开始日期';
comment on column T_SCH_TEMP_SPLIT.end_date
  is '结束日期';
comment on column T_SCH_TEMP_SPLIT.weeks
  is '过夜班期';
comment on column T_SCH_TEMP_SPLIT.pos
  is '拆分模式';
comment on column T_SCH_TEMP_SPLIT.flight_no
  is '航班号';
comment on column T_SCH_TEMP_SPLIT.depa_airport
  is '发站';
comment on column T_SCH_TEMP_SPLIT.arri_airport
  is '到站';
comment on column T_SCH_TEMP_SPLIT.op_time
  is '操作时间';
comment on column T_SCH_TEMP_SPLIT.oper
  is '操作人';
comment on column T_SCH_TEMP_SPLIT.remarks
  is '备注';
comment on column T_SCH_TEMP_SPLIT.oper_ip
  is 'IP地址';
comment on column T_SCH_TEMP_SPLIT.oper_host
  is '主机名';
alter table T_SCH_TEMP_SPLIT
  add constraint PK_TMPL_SPLIT primary key (NIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SELFSERVICEPRINT_RATE
prompt ======================================
prompt
create table T_SELFSERVICEPRINT_RATE
(
  keyid                  VARCHAR2(32) not null,
  everyday               DATE,
  filiale                VARCHAR2(4),
  ac_type_crew           VARCHAR2(10),
  flight_mission_sum     INTEGER,
  self_service_print_sum INTEGER
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SELFSERVICEPRINT_RATE
  add primary key (KEYID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SEQ_LIST
prompt =========================
prompt
create table T_SEQ_LIST
(
  idx        NUMBER(3) not null,
  seq_name   VARCHAR2(100),
  table_name VARCHAR2(100),
  col_name   VARCHAR2(100)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SEQ_LIST
  is '序列表';
comment on column T_SEQ_LIST.idx
  is '序号';
comment on column T_SEQ_LIST.seq_name
  is 'Sequence名称';
comment on column T_SEQ_LIST.table_name
  is '表名';
comment on column T_SEQ_LIST.col_name
  is '字段名';
alter table T_SEQ_LIST
  add primary key (IDX)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SM_HAND
prompt ========================
prompt
create table T_SM_HAND
(
  fltdate           DATE,
  fltno             VARCHAR2(15),
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  std               DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SM_HAND_BAK
prompt ============================
prompt
create table T_SM_HAND_BAK
(
  fltdate           DATE,
  fltno             VARCHAR2(15),
  departure_airport VARCHAR2(4),
  arrival_airport   VARCHAR2(4),
  std               DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_CARRY
prompt ==========================
prompt
create table T_SVC_CARRY
(
  flight_id   NUMBER(11) not null,
  flight_date DATE,
  p_code      VARCHAR2(10) not null,
  module_flag VARCHAR2(1),
  carry_time  DATE,
  carry_code  VARCHAR2(10),
  publish_yn  VARCHAR2(1),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 960K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_SVC_CARRY
  is '接车管理';
comment on column T_SVC_CARRY.flight_id
  is '航班ID';
comment on column T_SVC_CARRY.flight_date
  is '航班日期';
comment on column T_SVC_CARRY.p_code
  is '人员代码';
comment on column T_SVC_CARRY.module_flag
  is '模块(F飞行,C乘务,A''空警,M机务)';
comment on column T_SVC_CARRY.carry_time
  is '接车时间';
comment on column T_SVC_CARRY.carry_code
  is '接车编码';
comment on column T_SVC_CARRY.publish_yn
  is '发布标志';
comment on column T_SVC_CARRY.oper
  is '操作人';
comment on column T_SVC_CARRY.op_time
  is '操作时间';
comment on column T_SVC_CARRY.oper_ip
  is 'IP地址';
comment on column T_SVC_CARRY.oper_host
  is '主机名';
alter table T_SVC_CARRY
  add constraint PK_SVC_CARRY primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_CUSTOM
prompt ===========================
prompt
create table T_SVC_CUSTOM
(
  flight_id         NUMBER(11) not null,
  flight_date       DATE not null,
  flight_no         VARCHAR2(10) not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  std               DATE not null,
  carrier           VARCHAR2(2),
  p_or_c            VARCHAR2(1),
  ac_type           VARCHAR2(10),
  ac_reg            VARCHAR2(10),
  psngr_num         NUMBER(3),
  trans_num         NUMBER(3),
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 36M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_SVC_CUSTOM.flight_id
  is '航班ID';
comment on column T_SVC_CUSTOM.flight_date
  is '航班日期';
comment on column T_SVC_CUSTOM.flight_no
  is '航班号';
comment on column T_SVC_CUSTOM.departure_airport
  is '起飞机场';
comment on column T_SVC_CUSTOM.arrival_airport
  is '到达机场';
comment on column T_SVC_CUSTOM.std
  is '计划起飞时间';
comment on column T_SVC_CUSTOM.carrier
  is '承运人';
comment on column T_SVC_CUSTOM.p_or_c
  is '客货标志';
comment on column T_SVC_CUSTOM.ac_type
  is '机型';
comment on column T_SVC_CUSTOM.ac_reg
  is '机号';
comment on column T_SVC_CUSTOM.psngr_num
  is '出入境旅客人数';
comment on column T_SVC_CUSTOM.trans_num
  is '转机旅客人数';
comment on column T_SVC_CUSTOM.oper
  is '操作人';
comment on column T_SVC_CUSTOM.op_time
  is '操作时间';
comment on column T_SVC_CUSTOM.remarks
  is '备注';
comment on column T_SVC_CUSTOM.oper_ip
  is 'IP地址';
comment on column T_SVC_CUSTOM.oper_host
  is '主机名';
alter table T_SVC_CUSTOM
  add constraint PK_CUSTOM_APPLY primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_CUSTOM_DETAIL
prompt ==================================
prompt
create table T_SVC_CUSTOM_DETAIL
(
  flight_id            NUMBER(11) not null,
  idx                  NUMBER(4) not null,
  p_code               VARCHAR2(10),
  c_name               VARCHAR2(50),
  e_name               VARCHAR2(160),
  rank_no              VARCHAR2(10),
  passport_no          VARCHAR2(20),
  passport_type        VARCHAR2(10),
  passport_expire_date DATE,
  nation               VARCHAR2(10),
  sex                  VARCHAR2(2),
  birth_date           DATE,
  birth_addr           VARCHAR2(100),
  visa_type            VARCHAR2(10),
  visa_no              VARCHAR2(20),
  visa_grant_date      DATE,
  visa_expire_date     DATE,
  oper                 VARCHAR2(10),
  op_time              DATE,
  remarks              VARCHAR2(200),
  oper_ip              VARCHAR2(15),
  oper_host            VARCHAR2(50),
  rec_id               NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 168M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SVC_CUSTOM_DETAIL
  is '航班出入境明细表';
comment on column T_SVC_CUSTOM_DETAIL.flight_id
  is '航班ID';
comment on column T_SVC_CUSTOM_DETAIL.idx
  is '序号';
comment on column T_SVC_CUSTOM_DETAIL.p_code
  is '人员代码';
comment on column T_SVC_CUSTOM_DETAIL.c_name
  is '中文姓名';
comment on column T_SVC_CUSTOM_DETAIL.e_name
  is '英文姓名';
comment on column T_SVC_CUSTOM_DETAIL.rank_no
  is '机上岗位';
comment on column T_SVC_CUSTOM_DETAIL.passport_no
  is '护照号码';
comment on column T_SVC_CUSTOM_DETAIL.passport_type
  is '护照类型';
comment on column T_SVC_CUSTOM_DETAIL.passport_expire_date
  is '护照有效期';
comment on column T_SVC_CUSTOM_DETAIL.nation
  is '国籍';
comment on column T_SVC_CUSTOM_DETAIL.sex
  is '性别';
comment on column T_SVC_CUSTOM_DETAIL.birth_date
  is '出生日期';
comment on column T_SVC_CUSTOM_DETAIL.birth_addr
  is '出生地';
comment on column T_SVC_CUSTOM_DETAIL.visa_type
  is '签证类型';
comment on column T_SVC_CUSTOM_DETAIL.visa_no
  is '签证号码';
comment on column T_SVC_CUSTOM_DETAIL.visa_grant_date
  is '签注日期';
comment on column T_SVC_CUSTOM_DETAIL.visa_expire_date
  is '签证到期日期';
comment on column T_SVC_CUSTOM_DETAIL.oper
  is '操作人';
comment on column T_SVC_CUSTOM_DETAIL.op_time
  is '操作时间';
comment on column T_SVC_CUSTOM_DETAIL.remarks
  is '备注';
comment on column T_SVC_CUSTOM_DETAIL.oper_ip
  is 'IP地址';
comment on column T_SVC_CUSTOM_DETAIL.oper_host
  is '主机名';
comment on column T_SVC_CUSTOM_DETAIL.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
create index IDX_CUST_DETAIL_OPTIME on T_SVC_CUSTOM_DETAIL (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 96M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SVC_CUSTOM_DETAIL
  add constraint PK_CUSTAPP_DETAIL primary key (FLIGHT_ID, IDX)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 29M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_CUSTOM_DETAIL_DEL
prompt ======================================
prompt
create table T_SVC_CUSTOM_DETAIL_DEL
(
  flight_id            NUMBER(11) not null,
  idx                  NUMBER(4) not null,
  p_code               VARCHAR2(10),
  c_name               VARCHAR2(50),
  e_name               VARCHAR2(160),
  rank_no              VARCHAR2(10),
  passport_no          VARCHAR2(20),
  passport_type        VARCHAR2(10),
  passport_expire_date DATE,
  nation               VARCHAR2(10),
  sex                  VARCHAR2(2),
  birth_date           DATE,
  birth_addr           VARCHAR2(100),
  visa_type            VARCHAR2(10),
  visa_no              VARCHAR2(20),
  visa_grant_date      DATE,
  visa_expire_date     DATE,
  oper                 VARCHAR2(10),
  op_time              DATE,
  remarks              VARCHAR2(200),
  oper_ip              VARCHAR2(15),
  oper_host            VARCHAR2(50),
  rec_id               NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB
prompt ========================
prompt
create table T_SVC_FTB
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6) default 0,
  grnd_hours    NUMBER(6) default 0,
  night_hours   NUMBER(6) default 0,
  totl_hours    NUMBER(6) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11) not null,
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
partition by range (TAKEOFF_TIME)
(
  partition SVCFTB_2010 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTB_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 128K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTB_2012 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTB_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 72M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTB_2014 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTB_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 208M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTB_2016 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTB_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 80M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTB_2018 values less than (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTB_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_SVC_FTB
  is '??????????????';
comment on column T_SVC_FTB.ftb_no
  is '??????????';
comment on column T_SVC_FTB.flight_id
  is '????ID';
comment on column T_SVC_FTB.taxi_out_time
  is '????????';
comment on column T_SVC_FTB.takeoff_time
  is '????????';
comment on column T_SVC_FTB.landing_time
  is '????????';
comment on column T_SVC_FTB.taxi_in_time
  is '????????';
comment on column T_SVC_FTB.air_hours
  is '????????';
comment on column T_SVC_FTB.grnd_hours
  is '????????';
comment on column T_SVC_FTB.night_hours
  is '????????';
comment on column T_SVC_FTB.totl_hours
  is '??????';
comment on column T_SVC_FTB.oper
  is '??????';
comment on column T_SVC_FTB.op_time
  is '????????';
comment on column T_SVC_FTB.remarks
  is '????';
comment on column T_SVC_FTB.oper_ip
  is 'IP????';
comment on column T_SVC_FTB.oper_host
  is '??????';
comment on column T_SVC_FTB.is_icao
  is '????????????????';
comment on column T_SVC_FTB.rec_id
  is '??????????????????????????????????????????????????????????????????';
comment on column T_SVC_FTB.old_fuel
  is '??????';
comment on column T_SVC_FTB.new_fuel
  is '??????';
comment on column T_SVC_FTB.left_fuel
  is '??????';
create index IDX_FTB_OPTIME on T_SVC_FTB (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 153M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SVC_FTB
  add constraint PK_FTB primary key (FLIGHT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 96M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SVC_FTB
  add constraint FK_FTB_FLTSCH foreign key (FLIGHT_ID)
  references T_FLT_SCHEDULE (FLIGHT_ID);

prompt
prompt Creating table T_SVC_FTB20140805
prompt ================================
prompt
create table T_SVC_FTB20140805
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6),
  grnd_hours    NUMBER(6),
  night_hours   NUMBER(6),
  totl_hours    NUMBER(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11) not null,
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB20141203
prompt ================================
prompt
create table T_SVC_FTB20141203
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6),
  grnd_hours    NUMBER(6),
  night_hours   NUMBER(6),
  totl_hours    NUMBER(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11) not null,
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB20141223
prompt ================================
prompt
create table T_SVC_FTB20141223
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6),
  grnd_hours    NUMBER(6),
  night_hours   NUMBER(6),
  totl_hours    NUMBER(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11) not null,
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB20160624
prompt ================================
prompt
create table T_SVC_FTB20160624
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6),
  grnd_hours    NUMBER(6),
  night_hours   NUMBER(6),
  totl_hours    NUMBER(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11) not null,
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_CK_20160623
prompt ====================================
prompt
create table T_SVC_FTB_CK_20160623
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6),
  grnd_hours    NUMBER(6),
  night_hours   NUMBER(6),
  totl_hours    NUMBER(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11) not null,
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL
prompt ===============================
prompt
create table T_SVC_FTB_DETAIL
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6) default 0,
  exp_hours     NUMBER(6) default 0,
  left_hours    NUMBER(6) default 0,
  left_updowns  NUMBER(3) default 0,
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6) default 0,
  right_updowns NUMBER(3) default 0,
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6) default 0,
  left_teach    NUMBER(6) default 0,
  right_night   NUMBER(6) default 0,
  right_teach   NUMBER(6) default 0,
  left_downs    NUMBER(3) default 0,
  right_downs   NUMBER(3) default 0
)
partition by range (FLIGHT_DATE)
(
  partition SVCFTBDETAIL_2010 values less than (TO_DATE(' 2011-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2010
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2011 values less than (TO_DATE(' 2012-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2011
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2012 values less than (TO_DATE(' 2013-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2012
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 26M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2013 values less than (TO_DATE(' 2014-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2013
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 120M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2014 values less than (TO_DATE(' 2015-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2014
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 232M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2015 values less than (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2015
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 248M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2016 values less than (TO_DATE(' 2017-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2016
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 184M
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2017 values less than (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2017
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    ),
  partition SVCFTBDETAIL_2018 values less than (TO_DATE(' 2019-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    tablespace SVCFTBDETAIL_2018
    pctfree 10
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 1M
      minextents 1
      maxextents unlimited
    )
);
comment on table T_SVC_FTB_DETAIL
  is '????????????????';
comment on column T_SVC_FTB_DETAIL.ftb_no
  is '??????????';
comment on column T_SVC_FTB_DETAIL.flight_id
  is '????ID';
comment on column T_SVC_FTB_DETAIL.p_code
  is '????????';
comment on column T_SVC_FTB_DETAIL.fly_hours
  is '????????';
comment on column T_SVC_FTB_DETAIL.exp_hours
  is '????????';
comment on column T_SVC_FTB_DETAIL.left_hours
  is '????????';
comment on column T_SVC_FTB_DETAIL.left_updowns
  is '????????????';
comment on column T_SVC_FTB_DETAIL.left_op_manu
  is '??????/??????????????PF/PNFPM';
comment on column T_SVC_FTB_DETAIL.right_hours
  is '????????';
comment on column T_SVC_FTB_DETAIL.right_updowns
  is '????????????';
comment on column T_SVC_FTB_DETAIL.right_op_manu
  is '??????/????????(??)';
comment on column T_SVC_FTB_DETAIL.oper
  is '??????';
comment on column T_SVC_FTB_DETAIL.op_time
  is '????????';
comment on column T_SVC_FTB_DETAIL.remarks
  is '????';
comment on column T_SVC_FTB_DETAIL.oper_ip
  is 'IP????';
comment on column T_SVC_FTB_DETAIL.oper_host
  is '??????';
comment on column T_SVC_FTB_DETAIL.rec_id
  is '??????????????????????????????????????????????????????????????????';
comment on column T_SVC_FTB_DETAIL.flight_date
  is '????????????????????????????????';
comment on column T_SVC_FTB_DETAIL.left_night
  is '????????????';
comment on column T_SVC_FTB_DETAIL.left_teach
  is '????????????';
comment on column T_SVC_FTB_DETAIL.right_night
  is '????????????';
comment on column T_SVC_FTB_DETAIL.right_teach
  is '????????????';
comment on column T_SVC_FTB_DETAIL.left_downs
  is '????????????';
comment on column T_SVC_FTB_DETAIL.right_downs
  is '????????????';
create index IDX_FTB_DETAIL_OPTIME on T_SVC_FTB_DETAIL (OP_TIME)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 360M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SVC_FTB_DETAIL
  add constraint PK_FTB_DETAIL primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 272M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL20140805
prompt =======================================
prompt
create table T_SVC_FTB_DETAIL20140805
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL20141121
prompt =======================================
prompt
create table T_SVC_FTB_DETAIL20141121
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL20141223
prompt =======================================
prompt
create table T_SVC_FTB_DETAIL20141223
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL20160623
prompt =======================================
prompt
create table T_SVC_FTB_DETAIL20160623
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL20160624
prompt =======================================
prompt
create table T_SVC_FTB_DETAIL20160624
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL_HIS
prompt ===================================
prompt
create table T_SVC_FTB_DETAIL_HIS
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  p_code        VARCHAR2(10),
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11),
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3),
  ftb_log_id    VARCHAR2(36)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SVC_FTB_DETAIL_HIS
  is '任务书回收明细 历史';

prompt
prompt Creating table T_SVC_FTB_DETAIL_LEFT_M
prompt ======================================
prompt
create table T_SVC_FTB_DETAIL_LEFT_M
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL_LEFT_M_2
prompt ========================================
prompt
create table T_SVC_FTB_DETAIL_LEFT_M_2
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL_RIGHT_M
prompt =======================================
prompt
create table T_SVC_FTB_DETAIL_RIGHT_M
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL_RIGHT_M_2
prompt =========================================
prompt
create table T_SVC_FTB_DETAIL_RIGHT_M_2
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_DETAIL_RIGHT_M_3
prompt =========================================
prompt
create table T_SVC_FTB_DETAIL_RIGHT_M_3
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11) not null,
  p_code        VARCHAR2(10) not null,
  fly_hours     NUMBER(6),
  exp_hours     NUMBER(6),
  left_hours    NUMBER(6),
  left_updowns  NUMBER(3),
  left_op_manu  VARCHAR2(6),
  right_hours   NUMBER(6),
  right_updowns NUMBER(3),
  right_op_manu VARCHAR2(6),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  rec_id        NUMBER(11) not null,
  flight_date   DATE,
  left_night    NUMBER(6),
  left_teach    NUMBER(6),
  right_night   NUMBER(6),
  right_teach   NUMBER(6),
  left_downs    NUMBER(3),
  right_downs   NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_FTB_HIS
prompt ============================
prompt
create table T_SVC_FTB_HIS
(
  ftb_no        VARCHAR2(12),
  flight_id     NUMBER(11),
  taxi_out_time DATE,
  takeoff_time  DATE,
  landing_time  DATE,
  taxi_in_time  DATE,
  air_hours     NUMBER(6) default 0,
  grnd_hours    NUMBER(6) default 0,
  night_hours   NUMBER(6) default 0,
  totl_hours    NUMBER(6) default 0,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_icao       VARCHAR2(1),
  rec_id        NUMBER(11),
  old_fuel      NUMBER(9),
  new_fuel      NUMBER(9),
  left_fuel     NUMBER(9),
  ftb_log_id    VARCHAR2(36)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SVC_FTB_HIS
  is '任务书回收主 历史';
comment on column T_SVC_FTB_HIS.ftb_no
  is '任务书编号';

prompt
prompt Creating table T_SVC_FTB_LIMIT
prompt ==============================
prompt
create table T_SVC_FTB_LIMIT
(
  filiale      VARCHAR2(4) not null,
  flight_date  DATE not null,
  update_stand NUMBER(5) default 0,
  update_num   NUMBER(5) default 0,
  remarks      VARCHAR2(200),
  oper         VARCHAR2(10),
  op_time      DATE,
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SVC_FTB_LIMIT
  is '任务书修改次数限制表';
comment on column T_SVC_FTB_LIMIT.filiale
  is '分公司';
comment on column T_SVC_FTB_LIMIT.flight_date
  is '航班日期';
comment on column T_SVC_FTB_LIMIT.update_stand
  is '修改标准';
comment on column T_SVC_FTB_LIMIT.update_num
  is '修改次数';
comment on column T_SVC_FTB_LIMIT.remarks
  is '备注';
comment on column T_SVC_FTB_LIMIT.oper
  is '操作人';
comment on column T_SVC_FTB_LIMIT.op_time
  is '操作时间';
comment on column T_SVC_FTB_LIMIT.oper_ip
  is 'IP地址';
comment on column T_SVC_FTB_LIMIT.oper_host
  is '主机名';
alter table T_SVC_FTB_LIMIT
  add constraint PK_T_SVC_FTB_LIMIT primary key (FILIALE, FLIGHT_DATE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_HOTEL
prompt ==========================
prompt
create table T_SVC_HOTEL
(
  hotel_id       NUMBER(11) not null,
  hotel_name     VARCHAR2(50) not null,
  airport        VARCHAR2(4) not null,
  price          VARCHAR2(50),
  tel            VARCHAR2(15),
  drive          NUMBER(3),
  fax            VARCHAR2(30),
  contact_person VARCHAR2(15),
  contact_tel    VARCHAR2(15),
  default_yn     VARCHAR2(1),
  parking_yn     VARCHAR2(1),
  service_yn     VARCHAR2(1),
  valid_flag     VARCHAR2(1) default 'Y',
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SVC_HOTEL
  is '酒店基本信息表';
comment on column T_SVC_HOTEL.hotel_id
  is '酒店ID';
comment on column T_SVC_HOTEL.hotel_name
  is '酒店名称';
comment on column T_SVC_HOTEL.airport
  is '城市机场';
comment on column T_SVC_HOTEL.price
  is '酒店价格';
comment on column T_SVC_HOTEL.tel
  is '酒店电话';
comment on column T_SVC_HOTEL.drive
  is '预计车程,时间(分钟)';
comment on column T_SVC_HOTEL.fax
  is '酒店传真';
comment on column T_SVC_HOTEL.contact_person
  is '联系人';
comment on column T_SVC_HOTEL.contact_tel
  is '联系电话';
comment on column T_SVC_HOTEL.default_yn
  is '是否首选酒店';
comment on column T_SVC_HOTEL.parking_yn
  is '是否可进内场';
comment on column T_SVC_HOTEL.service_yn
  is '有无保障中心';
comment on column T_SVC_HOTEL.valid_flag
  is '有效标志';
comment on column T_SVC_HOTEL.oper
  is '操作人';
comment on column T_SVC_HOTEL.op_time
  is '操作时间';
comment on column T_SVC_HOTEL.remarks
  is '备注';
comment on column T_SVC_HOTEL.oper_ip
  is 'IP地址';
comment on column T_SVC_HOTEL.oper_host
  is '主机名';
alter table T_SVC_HOTEL
  add constraint PK_HOTEL primary key (HOTEL_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_HOTEL_ARRANGE
prompt ==================================
prompt
create table T_SVC_HOTEL_ARRANGE
(
  flight_id NUMBER(11) not null,
  p_code    VARCHAR2(10) not null,
  hotel_id  NUMBER(9) not null,
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SVC_HOTEL_ARRANGE
  is '机组酒店安排表';
comment on column T_SVC_HOTEL_ARRANGE.flight_id
  is '航班ID';
comment on column T_SVC_HOTEL_ARRANGE.p_code
  is '人员代码';
comment on column T_SVC_HOTEL_ARRANGE.hotel_id
  is '酒店ID';
comment on column T_SVC_HOTEL_ARRANGE.oper
  is '操作人';
comment on column T_SVC_HOTEL_ARRANGE.op_time
  is '操作时间';
comment on column T_SVC_HOTEL_ARRANGE.remarks
  is '备注';
comment on column T_SVC_HOTEL_ARRANGE.oper_ip
  is 'IP地址';
comment on column T_SVC_HOTEL_ARRANGE.oper_host
  is '主机名';
alter table T_SVC_HOTEL_ARRANGE
  add constraint PK_HOTEL_ARRANGE primary key (FLIGHT_ID, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_SVC_HOTEL_ARRANGE
  add constraint FK_HOTELARRANGE_HOTEL foreign key (HOTEL_ID)
  references T_SVC_HOTEL (HOTEL_ID);

prompt
prompt Creating table T_SVC_RECORD
prompt ===========================
prompt
create table T_SVC_RECORD
(
  step_id   NUMBER(11) not null,
  flight_id NUMBER(11) not null,
  step_type VARCHAR2(4) not null,
  step_yn   VARCHAR2(1) default 'Y' not null,
  step_desc VARCHAR2(200),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1569664K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SVC_RECORD
  is '任务流程节点操作记录表';
comment on column T_SVC_RECORD.step_id
  is '操作ID';
comment on column T_SVC_RECORD.flight_id
  is '航班ID';
comment on column T_SVC_RECORD.step_type
  is '处理节点';
comment on column T_SVC_RECORD.step_yn
  is '节点处理标志(Y/N)';
comment on column T_SVC_RECORD.step_desc
  is '节点处理说明';
comment on column T_SVC_RECORD.oper
  is '操作人';
comment on column T_SVC_RECORD.op_time
  is '操作时间';
comment on column T_SVC_RECORD.remarks
  is '备注';
comment on column T_SVC_RECORD.oper_ip
  is 'IP地址';
comment on column T_SVC_RECORD.oper_host
  is '主机名';
create index IDX_SVC_RECORD_FLTID on T_SVC_RECORD (FLIGHT_ID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 416M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_SVC_RECORD
  add constraint PK_PROC_RECORD primary key (STEP_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 585M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_STEP
prompt =========================
prompt
create table T_SVC_STEP
(
  step_type   VARCHAR2(4) not null,
  ref_stand   VARCHAR2(5) not null,
  ref_value   NUMBER(5) default 120 not null,
  module_flag VARCHAR2(1) not null,
  filiale     VARCHAR2(4) not null,
  valid_flag  VARCHAR2(1) default 'Y' not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_SVC_STEP
  is '任务流程节点设置表';
comment on column T_SVC_STEP.step_type
  is '操作类型0缺省1已提交2已审核3已发布4任务书打印5生成出入境单6起飞报7任务书已回收';
comment on column T_SVC_STEP.ref_stand
  is 'STD-计划起飞时间STA-计划落地时间ETD-预计起飞时间ETA-预计落地时间ATD-实际起飞时间ATA-实际落地时间';
comment on column T_SVC_STEP.ref_value
  is '分钟(-之前+之后)';
comment on column T_SVC_STEP.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_SVC_STEP.filiale
  is '分公司';
comment on column T_SVC_STEP.valid_flag
  is '有效标志(Y/N)';
comment on column T_SVC_STEP.oper
  is '操作人';
comment on column T_SVC_STEP.op_time
  is '操作时间';
comment on column T_SVC_STEP.remarks
  is '备注';
comment on column T_SVC_STEP.oper_ip
  is 'IP地址';
comment on column T_SVC_STEP.oper_host
  is '主机名';
alter table T_SVC_STEP
  add constraint PK_SVC_STEP primary key (STEP_TYPE, FILIALE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_STEP20140603
prompt =================================
prompt
create table T_SVC_STEP20140603
(
  step_type   VARCHAR2(4) not null,
  ref_stand   VARCHAR2(5) not null,
  ref_value   NUMBER(5) not null,
  module_flag VARCHAR2(1) not null,
  filiale     VARCHAR2(4) not null,
  valid_flag  VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_STEP20140911
prompt =================================
prompt
create table T_SVC_STEP20140911
(
  step_type   VARCHAR2(4) not null,
  ref_stand   VARCHAR2(5) not null,
  ref_value   NUMBER(5) not null,
  module_flag VARCHAR2(1) not null,
  filiale     VARCHAR2(4) not null,
  valid_flag  VARCHAR2(1) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SVC_TAXITIME_SOURCE
prompt ====================================
prompt
create table T_SVC_TAXITIME_SOURCE
(
  flight_id          NUMBER(11) not null,
  xb_turnon          DATE,
  xb_block_on_time   DATE,
  qar_taxi_out_time  DATE,
  qar_taxi_in_time   DATE,
  efb_taxi_out_time  DATE,
  efb_taxi_in_time   DATE,
  acars_takeoff_time DATE,
  acars_landing_time DATE,
  qar_takeoff_time   DATE,
  qar_landing_time   DATE,
  efb_takeoff_time   DATE,
  efb_landing_time   DATE,
  ftb_log_id         VARCHAR2(36)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_SVC_TAXITIME_SOURCE
  is '任务书自动回收标准滑入滑出时间计算依据';
comment on column T_SVC_TAXITIME_SOURCE.flight_id
  is '航班ID';
comment on column T_SVC_TAXITIME_SOURCE.xb_turnon
  is '现保开车时间';
comment on column T_SVC_TAXITIME_SOURCE.xb_block_on_time
  is '现保上轮档时间';
comment on column T_SVC_TAXITIME_SOURCE.qar_taxi_out_time
  is 'QAR滑出时间';
comment on column T_SVC_TAXITIME_SOURCE.qar_taxi_in_time
  is 'QAR滑入时间';
comment on column T_SVC_TAXITIME_SOURCE.efb_taxi_out_time
  is 'EFB滑出时间';
comment on column T_SVC_TAXITIME_SOURCE.efb_taxi_in_time
  is 'EFB滑入时间';
comment on column T_SVC_TAXITIME_SOURCE.acars_takeoff_time
  is 'ACARS起飞时间';
comment on column T_SVC_TAXITIME_SOURCE.acars_landing_time
  is 'ACARS落地时间';
comment on column T_SVC_TAXITIME_SOURCE.qar_takeoff_time
  is 'QAR起飞时间';
comment on column T_SVC_TAXITIME_SOURCE.qar_landing_time
  is 'QAR落地时间';
comment on column T_SVC_TAXITIME_SOURCE.efb_takeoff_time
  is 'EFB起飞时间';
comment on column T_SVC_TAXITIME_SOURCE.efb_landing_time
  is 'EFB落地时间';

prompt
prompt Creating table T_SYS_DEPT
prompt =========================
prompt
create table T_SYS_DEPT
(
  dept_code   VARCHAR2(16) not null,
  dept_name   VARCHAR2(50),
  dept_leader VARCHAR2(20),
  phone       VARCHAR2(30),
  address     VARCHAR2(100),
  valid_flag  VARCHAR2(1) not null,
  parent_code VARCHAR2(16),
  filiale     VARCHAR2(4),
  idx         NUMBER(3),
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_DEPT
  is '部门表';
comment on column T_SYS_DEPT.dept_code
  is '部门代码';
comment on column T_SYS_DEPT.dept_name
  is '部门名称';
comment on column T_SYS_DEPT.dept_leader
  is '部门领导';
comment on column T_SYS_DEPT.phone
  is '电话';
comment on column T_SYS_DEPT.address
  is '地址';
comment on column T_SYS_DEPT.valid_flag
  is '有效标志';
comment on column T_SYS_DEPT.parent_code
  is '父部门编码';
comment on column T_SYS_DEPT.filiale
  is '分公司';
comment on column T_SYS_DEPT.idx
  is '排序号';
comment on column T_SYS_DEPT.oper
  is '操作人';
comment on column T_SYS_DEPT.op_time
  is '操作时间';
comment on column T_SYS_DEPT.remarks
  is '备注';
comment on column T_SYS_DEPT.oper_ip
  is 'IP地址';
comment on column T_SYS_DEPT.oper_host
  is '主机名';
alter table T_SYS_DEPT
  add constraint PK_DEPT primary key (DEPT_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_MENU_CTRL
prompt ==============================
prompt
create table T_SYS_MENU_CTRL
(
  menu_tag      VARCHAR2(100) not null,
  form_ctl_name VARCHAR2(100) not null,
  form_ctl_desc VARCHAR2(100),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_MENU_CTRL
  is '系统窗口控件表,按钮级控权';
comment on column T_SYS_MENU_CTRL.menu_tag
  is '菜单编码';
comment on column T_SYS_MENU_CTRL.form_ctl_name
  is '窗口控件名称';
comment on column T_SYS_MENU_CTRL.form_ctl_desc
  is '说明';
comment on column T_SYS_MENU_CTRL.oper
  is '操作人';
comment on column T_SYS_MENU_CTRL.op_time
  is '操作时间';
comment on column T_SYS_MENU_CTRL.remarks
  is '备注';
comment on column T_SYS_MENU_CTRL.oper_ip
  is 'IP地址';
comment on column T_SYS_MENU_CTRL.oper_host
  is '主机名';
alter table T_SYS_MENU_CTRL
  add constraint PK_CTRL_FUNC primary key (MENU_TAG, FORM_CTL_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_MENU_FUNC
prompt ==============================
prompt
create table T_SYS_MENU_FUNC
(
  menu_tag        VARCHAR2(100) not null,
  menu_text       VARCHAR2(100),
  parent_menu_tag VARCHAR2(100),
  form_name       VARCHAR2(100),
  idx             NUMBER(4),
  image_name      VARCHAR2(100),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  order_n         NUMBER(4),
  module_flag     VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_MENU_FUNC
  is '系统功能菜单表';
comment on column T_SYS_MENU_FUNC.menu_tag
  is '菜单编码';
comment on column T_SYS_MENU_FUNC.menu_text
  is '菜单名称';
comment on column T_SYS_MENU_FUNC.parent_menu_tag
  is '父菜单编码';
comment on column T_SYS_MENU_FUNC.form_name
  is '窗口名称';
comment on column T_SYS_MENU_FUNC.idx
  is '显示顺序';
comment on column T_SYS_MENU_FUNC.image_name
  is '图片名称';
comment on column T_SYS_MENU_FUNC.oper
  is '操作人';
comment on column T_SYS_MENU_FUNC.op_time
  is '操作时间';
comment on column T_SYS_MENU_FUNC.remarks
  is '备注';
comment on column T_SYS_MENU_FUNC.oper_ip
  is 'IP地址';
comment on column T_SYS_MENU_FUNC.oper_host
  is '主机名';
comment on column T_SYS_MENU_FUNC.order_n
  is '菜单顺序';
comment on column T_SYS_MENU_FUNC.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
alter table T_SYS_MENU_FUNC
  add constraint PK_MENU_FUNC primary key (MENU_TAG)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_MENU_FUNC_BAK
prompt ==================================
prompt
create table T_SYS_MENU_FUNC_BAK
(
  menu_tag        VARCHAR2(100) not null,
  menu_text       VARCHAR2(100),
  parent_menu_tag VARCHAR2(100),
  form_name       VARCHAR2(100),
  idx             NUMBER(4),
  image_name      VARCHAR2(100),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  order_n         NUMBER(4),
  module_flag     VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_QUESTION
prompt =============================
prompt
create table T_SYS_QUESTION
(
  question_id NUMBER(12) not null,
  title       VARCHAR2(200) not null,
  question    VARCHAR2(2000) not null,
  anwser      VARCHAR2(2000),
  anwser_flag VARCHAR2(1) default 'N',
  u_codes_q   VARCHAR2(10) not null,
  u_name_q    VARCHAR2(20) not null,
  u_phone_q   VARCHAR2(100),
  u_codes_a   VARCHAR2(10),
  u_name_a    VARCHAR2(20),
  time_q      DATE,
  time_a      DATE,
  valid_flag  VARCHAR2(1) default 'Y'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_QUESTION
  is '意见和建议表';
comment on column T_SYS_QUESTION.question_id
  is '问题ID';
comment on column T_SYS_QUESTION.title
  is '问题标题';
comment on column T_SYS_QUESTION.question
  is '问题内容';
comment on column T_SYS_QUESTION.anwser
  is '答复内容';
comment on column T_SYS_QUESTION.anwser_flag
  is '答复状态';
comment on column T_SYS_QUESTION.u_codes_q
  is '提问人';
comment on column T_SYS_QUESTION.u_name_q
  is '提问人名字';
comment on column T_SYS_QUESTION.u_phone_q
  is '提问人电话';
comment on column T_SYS_QUESTION.u_codes_a
  is '答复人';
comment on column T_SYS_QUESTION.u_name_a
  is '答复人名字';
comment on column T_SYS_QUESTION.time_q
  is '提问时间';
comment on column T_SYS_QUESTION.time_a
  is '答复时间';
comment on column T_SYS_QUESTION.valid_flag
  is '删除标记';
alter table T_SYS_QUESTION
  add constraint PK_SYS_QUESTION primary key (QUESTION_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE
prompt =========================
prompt
create table T_SYS_ROLE
(
  role_code   VARCHAR2(8) not null,
  role_name   VARCHAR2(50) not null,
  idx         NUMBER(4),
  master_yn   VARCHAR2(1) default 'N',
  filiale     VARCHAR2(4),
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  module_flag VARCHAR2(1)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_ROLE
  is '角色表';
comment on column T_SYS_ROLE.role_code
  is '角色代码';
comment on column T_SYS_ROLE.role_name
  is '角色名称';
comment on column T_SYS_ROLE.idx
  is '排列顺序';
comment on column T_SYS_ROLE.master_yn
  is '是否带班(Y/N)';
comment on column T_SYS_ROLE.filiale
  is '分公司';
comment on column T_SYS_ROLE.oper
  is '操作人';
comment on column T_SYS_ROLE.op_time
  is '操作时间';
comment on column T_SYS_ROLE.remarks
  is '备注';
comment on column T_SYS_ROLE.oper_ip
  is 'IP地址';
comment on column T_SYS_ROLE.oper_host
  is '主机名';
comment on column T_SYS_ROLE.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
alter table T_SYS_ROLE
  add constraint PK_SYS_ROLE primary key (ROLE_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_AUTH
prompt ==============================
prompt
create table T_SYS_ROLE_AUTH
(
  role_code   VARCHAR2(8) not null,
  auth_type   VARCHAR2(4) not null,
  auth_values VARCHAR2(60) not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_ROLE_AUTH
  is '角色机组数据控权表';
comment on column T_SYS_ROLE_AUTH.role_code
  is '角色代码';
comment on column T_SYS_ROLE_AUTH.auth_type
  is '数据类型(A承运人B分公司C机型)';
comment on column T_SYS_ROLE_AUTH.auth_values
  is '对应值';
comment on column T_SYS_ROLE_AUTH.oper
  is '操作人';
comment on column T_SYS_ROLE_AUTH.op_time
  is '操作时间';
comment on column T_SYS_ROLE_AUTH.remarks
  is '备注';
comment on column T_SYS_ROLE_AUTH.oper_ip
  is 'IP地址';
comment on column T_SYS_ROLE_AUTH.oper_host
  is '主机名';
alter table T_SYS_ROLE_AUTH
  add constraint PK_CREWAUTH primary key (ROLE_CODE, AUTH_TYPE, AUTH_VALUES)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_CTRL
prompt ==============================
prompt
create table T_SYS_ROLE_CTRL
(
  role_code     VARCHAR2(8) not null,
  menu_tag      VARCHAR2(100) not null,
  form_ctl_name VARCHAR2(100) not null,
  enable_yn     VARCHAR2(1) default 'Y' not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 11M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_ROLE_CTRL
  is '角色功能按钮控权表';
comment on column T_SYS_ROLE_CTRL.role_code
  is '角色代码';
comment on column T_SYS_ROLE_CTRL.menu_tag
  is '菜单编码';
comment on column T_SYS_ROLE_CTRL.form_ctl_name
  is '窗口控件名称';
comment on column T_SYS_ROLE_CTRL.enable_yn
  is '能否操纵';
comment on column T_SYS_ROLE_CTRL.oper
  is '操作人';
comment on column T_SYS_ROLE_CTRL.op_time
  is '操作时间';
comment on column T_SYS_ROLE_CTRL.remarks
  is '备注';
comment on column T_SYS_ROLE_CTRL.oper_ip
  is 'IP地址';
comment on column T_SYS_ROLE_CTRL.oper_host
  is '主机名';
alter table T_SYS_ROLE_CTRL
  add constraint PK_T_SYS_ROLE_CTRL primary key (ROLE_CODE, MENU_TAG, FORM_CTL_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_CTRL_MU
prompt =================================
prompt
create table T_SYS_ROLE_CTRL_MU
(
  role_code     VARCHAR2(8) not null,
  menu_tag      VARCHAR2(100) not null,
  form_ctl_name VARCHAR2(100) not null,
  enable_yn     VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_CTRL_TMP
prompt ==================================
prompt
create table T_SYS_ROLE_CTRL_TMP
(
  role_code     VARCHAR2(8) not null,
  menu_tag      VARCHAR2(100) not null,
  form_ctl_name VARCHAR2(100) not null,
  enable_yn     VARCHAR2(1) not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 896K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_FUNC
prompt ==============================
prompt
create table T_SYS_ROLE_FUNC
(
  role_code VARCHAR2(8) not null,
  menu_tag  VARCHAR2(100) not null,
  enable_yn VARCHAR2(1) default 'Y',
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_ROLE_FUNC
  is '角色功能菜单控权表';
comment on column T_SYS_ROLE_FUNC.role_code
  is '角色代码';
comment on column T_SYS_ROLE_FUNC.menu_tag
  is '菜单编码';
comment on column T_SYS_ROLE_FUNC.enable_yn
  is '能否操纵';
comment on column T_SYS_ROLE_FUNC.oper
  is '操作人';
comment on column T_SYS_ROLE_FUNC.op_time
  is '操作时间';
comment on column T_SYS_ROLE_FUNC.remarks
  is '备注';
comment on column T_SYS_ROLE_FUNC.oper_ip
  is 'IP地址';
comment on column T_SYS_ROLE_FUNC.oper_host
  is '主机名';
alter table T_SYS_ROLE_FUNC
  add constraint PK_USR_FUNC primary key (MENU_TAG, ROLE_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_FUNC_TMP
prompt ==================================
prompt
create table T_SYS_ROLE_FUNC_TMP
(
  role_code VARCHAR2(8) not null,
  menu_tag  VARCHAR2(100) not null,
  enable_yn VARCHAR2(1),
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_ROLE_TMP
prompt =============================
prompt
create table T_SYS_ROLE_TMP
(
  role_code     VARCHAR2(8) not null,
  role_name     VARCHAR2(50) not null,
  idx           NUMBER(4),
  master_yn     VARCHAR2(1),
  filiale       VARCHAR2(4),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  module_flag   VARCHAR2(1),
  new_role_code VARCHAR2(8)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_UNIT
prompt =========================
prompt
create table T_SYS_UNIT
(
  role_code   VARCHAR2(8) not null,
  up_unit_id  NUMBER(12) not null,
  unit_id     NUMBER(12) not null,
  unit_name   VARCHAR2(50) not null,
  unit_phone  VARCHAR2(100),
  unit_desc   VARCHAR2(200),
  filiale     VARCHAR2(4),
  module_flag VARCHAR2(1),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  remarks     VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_UNIT
  is '席位表';
comment on column T_SYS_UNIT.role_code
  is '角色代码';
comment on column T_SYS_UNIT.up_unit_id
  is '父席位ID';
comment on column T_SYS_UNIT.unit_id
  is '席位ID';
comment on column T_SYS_UNIT.unit_name
  is '席位名称';
comment on column T_SYS_UNIT.unit_phone
  is '席位电话';
comment on column T_SYS_UNIT.unit_desc
  is '席位说明';
comment on column T_SYS_UNIT.filiale
  is '分公司';
comment on column T_SYS_UNIT.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_SYS_UNIT.oper
  is '操作人';
comment on column T_SYS_UNIT.op_time
  is '操作时间';
comment on column T_SYS_UNIT.oper_ip
  is 'IP地址';
comment on column T_SYS_UNIT.oper_host
  is '主机名';
comment on column T_SYS_UNIT.remarks
  is '备注';
alter table T_SYS_UNIT
  add constraint PK_T_SYS_UNIT primary key (UNIT_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_UNIT_AUTH
prompt ==============================
prompt
create table T_SYS_UNIT_AUTH
(
  unit_id     NUMBER(12) not null,
  auth_type   VARCHAR2(4) not null,
  auth_values VARCHAR2(60) not null,
  remarks     VARCHAR2(200),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 12M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_UNIT_AUTH
  is '席位权限表';
comment on column T_SYS_UNIT_AUTH.unit_id
  is '席位ID';
comment on column T_SYS_UNIT_AUTH.auth_type
  is '数据类型(D排班部门E行政部门F飞机)';
comment on column T_SYS_UNIT_AUTH.auth_values
  is '对应值';
comment on column T_SYS_UNIT_AUTH.remarks
  is '备注';
comment on column T_SYS_UNIT_AUTH.oper
  is '操作人';
comment on column T_SYS_UNIT_AUTH.op_time
  is '操作时间';
comment on column T_SYS_UNIT_AUTH.oper_ip
  is 'IP地址';
comment on column T_SYS_UNIT_AUTH.oper_host
  is '主机名';
alter table T_SYS_UNIT_AUTH
  add constraint PK_T_SYS_UNIT_AUTH primary key (UNIT_ID, AUTH_TYPE, AUTH_VALUES)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_UNIT_AUTH20140714
prompt ======================================
prompt
create table T_SYS_UNIT_AUTH20140714
(
  unit_id     NUMBER(12) not null,
  auth_type   VARCHAR2(4) not null,
  auth_values VARCHAR2(60) not null,
  remarks     VARCHAR2(200),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 9M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_UNIT_COLUMN
prompt ================================
prompt
create table T_SYS_UNIT_COLUMN
(
  unit_id     NUMBER(12) not null,
  table_name  VARCHAR2(50) not null,
  column_name VARCHAR2(50) not null,
  enable_yn   VARCHAR2(1),
  oper        VARCHAR2(20),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_UNIT_COLUMN
  is '席位数据控权表';
comment on column T_SYS_UNIT_COLUMN.unit_id
  is '席位ID';
comment on column T_SYS_UNIT_COLUMN.table_name
  is '表名';
comment on column T_SYS_UNIT_COLUMN.column_name
  is '列名';
comment on column T_SYS_UNIT_COLUMN.enable_yn
  is '可用(Y/N)';
comment on column T_SYS_UNIT_COLUMN.oper
  is '操作人';
comment on column T_SYS_UNIT_COLUMN.op_time
  is '操作时间';
comment on column T_SYS_UNIT_COLUMN.remarks
  is '备注';
comment on column T_SYS_UNIT_COLUMN.oper_ip
  is 'IP地址';
comment on column T_SYS_UNIT_COLUMN.oper_host
  is '主机名';
alter table T_SYS_UNIT_COLUMN
  add constraint PK_T_SYS_UNIT_COLUMNS primary key (UNIT_ID, TABLE_NAME, COLUMN_NAME)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_UNIT_TMP
prompt =============================
prompt
create table T_SYS_UNIT_TMP
(
  role_code   VARCHAR2(8) not null,
  up_unit_id  NUMBER(12) not null,
  unit_id     NUMBER(12) not null,
  unit_name   VARCHAR2(50) not null,
  unit_phone  VARCHAR2(100),
  unit_desc   VARCHAR2(200),
  filiale     VARCHAR2(4),
  module_flag VARCHAR2(1),
  oper        VARCHAR2(10),
  op_time     DATE,
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  remarks     VARCHAR2(200),
  new_unit_id NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_UNIT_USER
prompt ==============================
prompt
create table T_SYS_UNIT_USER
(
  unit_id   NUMBER(12) not null,
  user_code VARCHAR2(10) not null,
  u_desc    VARCHAR2(200)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_UNIT_USER
  is '席位人员关系表';
comment on column T_SYS_UNIT_USER.unit_id
  is '席位ID';
comment on column T_SYS_UNIT_USER.user_code
  is '用户代码';
comment on column T_SYS_UNIT_USER.u_desc
  is '描述';
alter table T_SYS_UNIT_USER
  add constraint PK_T_SYS_UNIT_USER primary key (UNIT_ID, USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_USER
prompt =========================
prompt
create table T_SYS_USER
(
  user_code        VARCHAR2(10) not null,
  user_name        VARCHAR2(50) not null,
  e_name           VARCHAR2(100),
  dept_code        VARCHAR2(16) not null,
  py_abbr          VARCHAR2(4),
  sex              VARCHAR2(1) default 'M',
  phone            VARCHAR2(100),
  passwords        VARCHAR2(20) not null,
  pass_modify_date DATE,
  pass_valid_date  DATE,
  valid_flag       VARCHAR2(1) default 'Y',
  valid_date       DATE,
  oper             VARCHAR2(10),
  op_time          DATE,
  remarks          VARCHAR2(200),
  oper_ip          VARCHAR2(15),
  oper_host        VARCHAR2(50),
  e_mail           VARCHAR2(30),
  accesstype       VARCHAR2(3),
  p_code           VARCHAR2(10),
  b2e_name         VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_USER
  is '用户信息表';
comment on column T_SYS_USER.user_code
  is '用户代码';
comment on column T_SYS_USER.user_name
  is '姓名';
comment on column T_SYS_USER.e_name
  is '英文姓名';
comment on column T_SYS_USER.dept_code
  is '部门编码';
comment on column T_SYS_USER.py_abbr
  is '拼音简称';
comment on column T_SYS_USER.sex
  is '性别(F女M男)';
comment on column T_SYS_USER.phone
  is '电话';
comment on column T_SYS_USER.passwords
  is '密码';
comment on column T_SYS_USER.pass_modify_date
  is '密码修改日期';
comment on column T_SYS_USER.pass_valid_date
  is '密码失效日期';
comment on column T_SYS_USER.valid_flag
  is '有效标志';
comment on column T_SYS_USER.valid_date
  is '无效时间';
comment on column T_SYS_USER.oper
  is '操作人';
comment on column T_SYS_USER.op_time
  is '操作时间';
comment on column T_SYS_USER.remarks
  is '备注';
comment on column T_SYS_USER.oper_ip
  is 'IP地址';
comment on column T_SYS_USER.oper_host
  is '主机名';
comment on column T_SYS_USER.e_mail
  is 'Email';
comment on column T_SYS_USER.accesstype
  is '连接方式(0内网1外网)';
comment on column T_SYS_USER.p_code
  is '飞行员代码';
comment on column T_SYS_USER.b2e_name
  is 'B2E的账号';
alter table T_SYS_USER
  add constraint PK_USER primary key (USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_USER_DESKTOP
prompt =================================
prompt
create table T_SYS_USER_DESKTOP
(
  user_code  VARCHAR2(10) not null,
  menu_tag   VARCHAR2(100) not null,
  xpos       NUMBER(5),
  ypos       NUMBER(5),
  image_name VARCHAR2(100),
  oper       VARCHAR2(20),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_USER_DESKTOP
  is '用户桌面设置';
comment on column T_SYS_USER_DESKTOP.user_code
  is '用户代码';
comment on column T_SYS_USER_DESKTOP.menu_tag
  is '菜单编码';
comment on column T_SYS_USER_DESKTOP.xpos
  is '水平位置';
comment on column T_SYS_USER_DESKTOP.ypos
  is '垂直位置';
comment on column T_SYS_USER_DESKTOP.image_name
  is '图片名称';
comment on column T_SYS_USER_DESKTOP.oper
  is '操作人';
comment on column T_SYS_USER_DESKTOP.op_time
  is '操作时间';
comment on column T_SYS_USER_DESKTOP.remarks
  is '备注';
comment on column T_SYS_USER_DESKTOP.oper_ip
  is 'IP地址';
comment on column T_SYS_USER_DESKTOP.oper_host
  is '主机名';
alter table T_SYS_USER_DESKTOP
  add constraint PK_USR_DESKTOP primary key (MENU_TAG, USER_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_USER_HIS
prompt =============================
prompt
create table T_SYS_USER_HIS
(
  user_code   VARCHAR2(10) not null,
  module_flag VARCHAR2(1) not null,
  login_date  DATE,
  login_yn    VARCHAR2(1) default 'N',
  login_num   NUMBER(10) default 0,
  oper        VARCHAR2(60),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  unit_id     NUMBER(12),
  port        VARCHAR2(10),
  file_port   VARCHAR2(10),
  accesstype  VARCHAR2(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_USER_HIS
  is '用户登录系统情况';
comment on column T_SYS_USER_HIS.user_code
  is '用户代码';
comment on column T_SYS_USER_HIS.module_flag
  is '模块(F飞行C乘务A''空警)';
comment on column T_SYS_USER_HIS.login_date
  is '登录时间';
comment on column T_SYS_USER_HIS.login_yn
  is '登录状态(Y/N)';
comment on column T_SYS_USER_HIS.login_num
  is '登录次数';
comment on column T_SYS_USER_HIS.oper
  is '操作人';
comment on column T_SYS_USER_HIS.op_time
  is '操作时间';
comment on column T_SYS_USER_HIS.remarks
  is '备注';
comment on column T_SYS_USER_HIS.oper_ip
  is 'IP地址';
comment on column T_SYS_USER_HIS.oper_host
  is '主机名';
comment on column T_SYS_USER_HIS.unit_id
  is '席位';
comment on column T_SYS_USER_HIS.port
  is '消息内容接收端口';
comment on column T_SYS_USER_HIS.file_port
  is '文件接收端口';
comment on column T_SYS_USER_HIS.accesstype
  is '连接方式(0内网1外网)';
alter table T_SYS_USER_HIS
  add constraint PK_T_SYS_USER_HIS primary key (USER_CODE, MODULE_FLAG)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_USER_ROLE
prompt ==============================
prompt
create table T_SYS_USER_ROLE
(
  user_code VARCHAR2(10) not null,
  role_code VARCHAR2(8) not null,
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_SYS_USER_ROLE
  is '用户角色关系表';
comment on column T_SYS_USER_ROLE.user_code
  is '用户代码';
comment on column T_SYS_USER_ROLE.role_code
  is '角色代码';
comment on column T_SYS_USER_ROLE.oper
  is '操作人';
comment on column T_SYS_USER_ROLE.op_time
  is '操作时间';
comment on column T_SYS_USER_ROLE.remarks
  is '备注';
comment on column T_SYS_USER_ROLE.oper_ip
  is 'IP地址';
comment on column T_SYS_USER_ROLE.oper_host
  is '主机名';
alter table T_SYS_USER_ROLE
  add constraint PK_USR_ROLE primary key (USER_CODE, ROLE_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_SYS_USER_ROLE20140714
prompt ======================================
prompt
create table T_SYS_USER_ROLE20140714
(
  user_code VARCHAR2(10) not null,
  role_code VARCHAR2(8) not null,
  oper      VARCHAR2(10),
  op_time   DATE,
  remarks   VARCHAR2(200),
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS
prompt ================================
prompt
create table T_TECH_AUTH_ETOPS
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) default 'E',
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1) default 'Y',
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_AUTH_ETOPS
  is 'ETOPS资格(区域分类)国际航线单飞';
comment on column T_TECH_AUTH_ETOPS.p_code
  is '人员代码';
comment on column T_TECH_AUTH_ETOPS.aera_code
  is 'ETPOPS区域(字典)';
comment on column T_TECH_AUTH_ETOPS.ac_type
  is '机型';
comment on column T_TECH_AUTH_ETOPS.rank_no
  is '放飞岗位';
comment on column T_TECH_AUTH_ETOPS.first_date
  is '首次飞行日期';
comment on column T_TECH_AUTH_ETOPS.last_date
  is '最近经历日期';
comment on column T_TECH_AUTH_ETOPS.valid_flag
  is '有效标志';
comment on column T_TECH_AUTH_ETOPS.remarks
  is '备注';
comment on column T_TECH_AUTH_ETOPS.oper
  is '操作人';
comment on column T_TECH_AUTH_ETOPS.op_time
  is '操作时间';
comment on column T_TECH_AUTH_ETOPS.oper_ip
  is 'IP地址';
comment on column T_TECH_AUTH_ETOPS.oper_host
  is '主机名';
alter table T_TECH_AUTH_ETOPS
  add primary key (P_CODE, AERA_CODE, AC_TYPE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20140615
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20140615
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20140901
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20140901
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141014
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141014
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141028
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141028
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141104
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141104
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141113
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141113
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141120
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141120
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141127
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141127
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141202
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141202
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141212
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141212
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20141218
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20141218
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20150507
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20150507
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_ETOPS20160621
prompt ========================================
prompt
create table T_TECH_AUTH_ETOPS20160621
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  rank_no    VARCHAR2(4),
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO
prompt ================================
prompt
create table T_TECH_AUTH_RADIO
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1) default 'Y',
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_AUTH_RADIO
  is '报务航线放飞表';
comment on column T_TECH_AUTH_RADIO.p_code
  is '人员代码';
comment on column T_TECH_AUTH_RADIO.aera_code
  is '报务区域(字典)';
comment on column T_TECH_AUTH_RADIO.rank_no
  is '放飞岗位：R表示的 是报务
；C 是机长单飞的';
comment on column T_TECH_AUTH_RADIO.first_date
  is '首次飞行日期';
comment on column T_TECH_AUTH_RADIO.last_date
  is '最近经历日期';
comment on column T_TECH_AUTH_RADIO.valid_flag
  is '有效标志';
comment on column T_TECH_AUTH_RADIO.oper
  is '操作人';
comment on column T_TECH_AUTH_RADIO.op_time
  is '操作时间';
comment on column T_TECH_AUTH_RADIO.remarks
  is '备注';
comment on column T_TECH_AUTH_RADIO.oper_ip
  is 'IP地址';
comment on column T_TECH_AUTH_RADIO.oper_host
  is '主机名';
comment on column T_TECH_AUTH_RADIO.ac_type
  is '机型';
alter table T_TECH_AUTH_RADIO
  add constraint PK_RADIO_AUTH primary key (P_CODE, AERA_CODE, RANK_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20140615
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20140615
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20140901
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20140901
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141014
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141014
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141028
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141028
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141104
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141104
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141113
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141113
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141120
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141120
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141127
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141127
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141202
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141202
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141212
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141212
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20141218
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20141218
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO20150507
prompt ========================================
prompt
create table T_TECH_AUTH_RADIO20150507
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RADIO_20141120
prompt =========================================
prompt
create table T_TECH_AUTH_RADIO_20141120
(
  p_code     VARCHAR2(10) not null,
  aera_code  VARCHAR2(10) not null,
  rank_no    VARCHAR2(4) not null,
  first_date DATE,
  last_date  DATE,
  valid_flag VARCHAR2(1),
  oper       VARCHAR2(10),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  ac_type    VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP
prompt ==============================
prompt
create table T_TECH_AUTH_RNP
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1) default 'Y',
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20) default 'ALL' not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_AUTH_RNP
  is 'RNP放飞表';
comment on column T_TECH_AUTH_RNP.p_code
  is '人员代码';
comment on column T_TECH_AUTH_RNP.airport_code
  is '机场四码';
comment on column T_TECH_AUTH_RNP.tech_type
  is '放飞类型RNP/RNPAR';
comment on column T_TECH_AUTH_RNP.rank_no
  is '放飞岗位';
comment on column T_TECH_AUTH_RNP.first_date
  is '首次飞行日期';
comment on column T_TECH_AUTH_RNP.last_date
  is '最近经历日期';
comment on column T_TECH_AUTH_RNP.valid_flag
  is '有效标志';
comment on column T_TECH_AUTH_RNP.oper
  is '操作人';
comment on column T_TECH_AUTH_RNP.op_time
  is '操作时间';
comment on column T_TECH_AUTH_RNP.remarks
  is '备注';
comment on column T_TECH_AUTH_RNP.oper_ip
  is 'IP地址';
comment on column T_TECH_AUTH_RNP.oper_host
  is '主机名';
comment on column T_TECH_AUTH_RNP.ac_type
  is '机型,rnpar跟机型有关';
alter table T_TECH_AUTH_RNP
  add constraint PK_TECH_AUTH_RNP primary key (P_CODE, AIRPORT_CODE, TECH_TYPE, AC_TYPE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 192K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20140615
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20140615
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20140901
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20140901
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141014
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141014
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141028
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141028
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141104
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141104
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141113
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141113
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141120
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141120
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141127
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141127
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141202
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141202
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141212
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141212
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20141218
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20141218
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20150507
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20150507
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20150522
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20150522
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20160704
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20160704
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP20170715
prompt ======================================
prompt
create table T_TECH_AUTH_RNP20170715
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_RNP_DELETE
prompt =====================================
prompt
create table T_TECH_AUTH_RNP_DELETE
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  tech_type    VARCHAR2(10) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL
prompt ==================================
prompt
create table T_TECH_AUTH_SPECIAL
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1) default 'Y',
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(15) not null,
  kind         VARCHAR2(2) not null,
  fgw_id       VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_AUTH_SPECIAL
  is '特殊机场放飞表';
comment on column T_TECH_AUTH_SPECIAL.p_code
  is '人员代码';
comment on column T_TECH_AUTH_SPECIAL.airport_code
  is '机场四码';
comment on column T_TECH_AUTH_SPECIAL.rank_no
  is '放飞岗位';
comment on column T_TECH_AUTH_SPECIAL.first_date
  is '首次飞行日期';
comment on column T_TECH_AUTH_SPECIAL.last_date
  is '最近经历日期';
comment on column T_TECH_AUTH_SPECIAL.valid_flag
  is '有效标志';
comment on column T_TECH_AUTH_SPECIAL.oper
  is '操作人';
comment on column T_TECH_AUTH_SPECIAL.op_time
  is '操作时间';
comment on column T_TECH_AUTH_SPECIAL.remarks
  is '备注';
comment on column T_TECH_AUTH_SPECIAL.oper_ip
  is 'IP地址';
comment on column T_TECH_AUTH_SPECIAL.oper_host
  is '主机名';
comment on column T_TECH_AUTH_SPECIAL.ac_type
  is '机型';
comment on column T_TECH_AUTH_SPECIAL.kind
  is '类型,特殊机场1,一般高原2,二类是3，三类是4';
comment on column T_TECH_AUTH_SPECIAL.fgw_id
  is 'FRMS_ID';
alter table T_TECH_AUTH_SPECIAL
  add constraint PK_TECH_AUTH_SPECIAL primary key (P_CODE, AC_TYPE, AIRPORT_CODE, KIND)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20140615
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20140615
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20140901
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20140901
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141014
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141014
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141028
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141028
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141104
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141104
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141113
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141113
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141120
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141120
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141127
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141127
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141202
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141202
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141212
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141212
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20141218
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20141218
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20150506
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20150506
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20150507
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20150507
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20170301
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20170301
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20170331
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20170331
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20170615
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20170615
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(15),
  kind         VARCHAR2(2),
  fgw_id       VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL20171102
prompt ==========================================
prompt
create table T_TECH_AUTH_SPECIAL20171102
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(15),
  kind         VARCHAR2(2),
  fgw_id       VARCHAR2(15)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL_20150506
prompt ===========================================
prompt
create table T_TECH_AUTH_SPECIAL_20150506
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL_TMP
prompt ======================================
prompt
create table T_TECH_AUTH_SPECIAL_TMP
(
  p_code    VARCHAR2(15),
  ac_type   VARCHAR2(15),
  airport   VARCHAR2(15),
  last_date DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_AUTH_SPECIAL_ZHP
prompt ======================================
prompt
create table T_TECH_AUTH_SPECIAL_ZHP
(
  p_code       VARCHAR2(10) not null,
  airport_code VARCHAR2(4) not null,
  rank_no      VARCHAR2(4) not null,
  first_date   DATE,
  last_date    DATE,
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  ac_type      VARCHAR2(15) not null,
  kind         VARCHAR2(10) not null,
  fgw_id       VARCHAR2(15) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 2M
    next 8K
    minextents 1
    maxextents unlimited
  );
alter table T_TECH_AUTH_SPECIAL_ZHP
  add constraint PK_TECH_AUTH_SPECIAL1 primary key (P_CODE, AIRPORT_CODE, RANK_NO, AC_TYPE, KIND, FGW_ID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 704K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_CAT
prompt =========================
prompt
create table T_TECH_CAT
(
  p_code       VARCHAR2(10) not null,
  t_tech_i     VARCHAR2(10) not null,
  qlf_code     VARCHAR2(10) not null,
  crewopauthid VARCHAR2(15),
  oper         VARCHAR2(10),
  op_host      VARCHAR2(30),
  op_time      DATE,
  valid_flag   VARCHAR2(5)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on column T_TECH_CAT.p_code
  is '人员代码';
comment on column T_TECH_CAT.t_tech_i
  is '公司授权代码';
comment on column T_TECH_CAT.qlf_code
  is '资质代码';
comment on column T_TECH_CAT.crewopauthid
  is 'FRMS资质ID';
comment on column T_TECH_CAT.oper
  is '操作人';
comment on column T_TECH_CAT.op_host
  is '操作主机名';
comment on column T_TECH_CAT.op_time
  is '操作时间';
comment on column T_TECH_CAT.valid_flag
  is '有效性';

prompt
prompt Creating table T_TECH_INFO
prompt ==========================
prompt
create table T_TECH_INFO
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) default 'Y' not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_INFO
  is '飞行员技术授权表';
comment on column T_TECH_INFO.p_code
  is '人员代码';
comment on column T_TECH_INFO.ac_type
  is '机型';
comment on column T_TECH_INFO.tech_no_i
  is '公司授权代码';
comment on column T_TECH_INFO.tech_no_i_date
  is '公司授权日期';
comment on column T_TECH_INFO.tech_no_z
  is '技术授权代码';
comment on column T_TECH_INFO.tech_no_z_date
  is '技术授权日期';
comment on column T_TECH_INFO.valid_flag
  is '有效标志';
comment on column T_TECH_INFO.ac_short_types
  is '短机型串A319/A320/A321/等';
comment on column T_TECH_INFO.remarks
  is '备注';
comment on column T_TECH_INFO.oper
  is '操作人';
comment on column T_TECH_INFO.op_time
  is '操作时间';
comment on column T_TECH_INFO.oper_ip
  is 'IP地址';
comment on column T_TECH_INFO.oper_host
  is '主机名';
comment on column T_TECH_INFO.stage
  is '阶段（针对副驾驶阶段）';
create index IDX_AC_TYPE on T_TECH_INFO (AC_TYPE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 320K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_TECH_NO_I on T_TECH_INFO (TECH_NO_I)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 384K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TECH_INFO
  add constraint PK_CREW_AUTH primary key (P_CODE, AC_TYPE, TECH_NO_I)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20140615
prompt ==================================
prompt
create table T_TECH_INFO20140615
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20140901
prompt ==================================
prompt
create table T_TECH_INFO20140901
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141014
prompt ==================================
prompt
create table T_TECH_INFO20141014
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141028
prompt ==================================
prompt
create table T_TECH_INFO20141028
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141104
prompt ==================================
prompt
create table T_TECH_INFO20141104
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141113
prompt ==================================
prompt
create table T_TECH_INFO20141113
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141120
prompt ==================================
prompt
create table T_TECH_INFO20141120
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141127
prompt ==================================
prompt
create table T_TECH_INFO20141127
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141202
prompt ==================================
prompt
create table T_TECH_INFO20141202
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141212
prompt ==================================
prompt
create table T_TECH_INFO20141212
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20141218
prompt ==================================
prompt
create table T_TECH_INFO20141218
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20150203
prompt ==================================
prompt
create table T_TECH_INFO20150203
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_INFO20150203
  is '同步FRMS小机型备份';

prompt
prompt Creating table T_TECH_INFO20150507
prompt ==================================
prompt
create table T_TECH_INFO20150507
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20150604
prompt ==================================
prompt
create table T_TECH_INFO20150604
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20150703
prompt ==================================
prompt
create table T_TECH_INFO20150703
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO20160317
prompt ==================================
prompt
create table T_TECH_INFO20160317
(
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no_i      VARCHAR2(4) not null,
  tech_no_i_date DATE,
  tech_no_z      VARCHAR2(4),
  tech_no_z_date DATE,
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  remarks        VARCHAR2(200),
  oper           VARCHAR2(10),
  op_time        DATE,
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  fxw_id         NUMBER(11),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO_HIS
prompt ==============================
prompt
create table T_TECH_INFO_HIS
(
  tech_his_id    NUMBER(11) not null,
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no        VARCHAR2(4) not null,
  tech_info      VARCHAR2(100),
  start_date     DATE not null,
  end_date       DATE,
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  valid_flag     VARCHAR2(1) default 'Y' not null,
  ac_short_types VARCHAR2(100),
  up_tech_no     VARCHAR2(4),
  fly_hours      NUMBER(6),
  exp_hours      NUMBER(6),
  up_downs       NUMBER(6),
  df_hours       NUMBER(6),
  df_updowns     NUMBER(6),
  data_flag      VARCHAR2(1) default 'A',
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_INFO_HIS
  is '飞行员技术授权历史表';
comment on column T_TECH_INFO_HIS.tech_his_id
  is '授权历史ID';
comment on column T_TECH_INFO_HIS.p_code
  is '人员代码';
comment on column T_TECH_INFO_HIS.ac_type
  is '机型';
comment on column T_TECH_INFO_HIS.tech_no
  is '授权代码(公司/排班)';
comment on column T_TECH_INFO_HIS.tech_info
  is '授权信息';
comment on column T_TECH_INFO_HIS.start_date
  is '授权开始日期';
comment on column T_TECH_INFO_HIS.end_date
  is '授权结束日期';
comment on column T_TECH_INFO_HIS.oper
  is '操作人';
comment on column T_TECH_INFO_HIS.op_time
  is '操作时间';
comment on column T_TECH_INFO_HIS.remarks
  is '备注(转升授权) ';
comment on column T_TECH_INFO_HIS.oper_ip
  is 'IP地址';
comment on column T_TECH_INFO_HIS.oper_host
  is '主机名';
comment on column T_TECH_INFO_HIS.valid_flag
  is 'N还没转Y转升成功';
comment on column T_TECH_INFO_HIS.ac_short_types
  is '短机型串A319/A320/A321/等';
comment on column T_TECH_INFO_HIS.up_tech_no
  is '授权代码(公司/排班)';
comment on column T_TECH_INFO_HIS.fly_hours
  is '飞行时间';
comment on column T_TECH_INFO_HIS.exp_hours
  is '经历时间';
comment on column T_TECH_INFO_HIS.up_downs
  is '起降次数';
comment on column T_TECH_INFO_HIS.df_hours
  is '单飞时间';
comment on column T_TECH_INFO_HIS.df_updowns
  is '单飞起降';
comment on column T_TECH_INFO_HIS.data_flag
  is '数据来源:H手工A自动';
comment on column T_TECH_INFO_HIS.stage
  is '阶段（针对副驾驶阶段）';
create index IDX_P_CODE_AC_TYPE on T_TECH_INFO_HIS (P_CODE, AC_TYPE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 832K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TECH_INFO_HIS
  add constraint PK_CREWAUTH_LOG primary key (TECH_HIS_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 448K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO_HIS20141121
prompt ======================================
prompt
create table T_TECH_INFO_HIS20141121
(
  tech_his_id    NUMBER(11) not null,
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no        VARCHAR2(4) not null,
  tech_info      VARCHAR2(100),
  start_date     DATE not null,
  end_date       DATE,
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  up_tech_no     VARCHAR2(4),
  fly_hours      NUMBER(6),
  exp_hours      NUMBER(6),
  up_downs       NUMBER(6),
  df_hours       NUMBER(6),
  df_updowns     NUMBER(6),
  data_flag      VARCHAR2(1),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO_HIS20141121_BAK
prompt ==========================================
prompt
create table T_TECH_INFO_HIS20141121_BAK
(
  tech_his_id    NUMBER(11) not null,
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no        VARCHAR2(4) not null,
  tech_info      VARCHAR2(100),
  start_date     DATE not null,
  end_date       DATE,
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  up_tech_no     VARCHAR2(4),
  fly_hours      NUMBER(6),
  exp_hours      NUMBER(6),
  up_downs       NUMBER(6),
  df_hours       NUMBER(6),
  df_updowns     NUMBER(6),
  data_flag      VARCHAR2(1),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_INFO_HIS20150203
prompt ======================================
prompt
create table T_TECH_INFO_HIS20150203
(
  tech_his_id    NUMBER(11) not null,
  p_code         VARCHAR2(10) not null,
  ac_type        VARCHAR2(10) not null,
  tech_no        VARCHAR2(4) not null,
  tech_info      VARCHAR2(100),
  start_date     DATE not null,
  end_date       DATE,
  oper           VARCHAR2(10),
  op_time        DATE,
  remarks        VARCHAR2(200),
  oper_ip        VARCHAR2(15),
  oper_host      VARCHAR2(50),
  valid_flag     VARCHAR2(1) not null,
  ac_short_types VARCHAR2(100),
  up_tech_no     VARCHAR2(4),
  fly_hours      NUMBER(6),
  exp_hours      NUMBER(6),
  up_downs       NUMBER(6),
  df_hours       NUMBER(6),
  df_updowns     NUMBER(6),
  data_flag      VARCHAR2(1),
  stage          VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_INFO_HIS20150203
  is '同步FRMS小机型备份';

prompt
prompt Creating table T_TECH_QLF
prompt =========================
prompt
create table T_TECH_QLF
(
  parent_code VARCHAR2(20) not null,
  qlf_code    VARCHAR2(20) not null,
  qlf_name    VARCHAR2(60) not null,
  qlf_desc    VARCHAR2(100),
  qlf_flag    VARCHAR2(1) default 'Y',
  valid_days  NUMBER(3) default 6,
  remind_days NUMBER(3) default 30,
  ac_type_yn  VARCHAR2(1),
  module_flag VARCHAR2(1) not null,
  valid_flag  VARCHAR2(1) default 'Y' not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  train_type  VARCHAR2(1) default '1' not null,
  valid_type  VARCHAR2(1),
  idx         NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_QLF
  is '资质子等级表
';
comment on column T_TECH_QLF.parent_code
  is '父编码';
comment on column T_TECH_QLF.qlf_code
  is '资质(CAT-I,CAT-II)';
comment on column T_TECH_QLF.qlf_name
  is '资质名称';
comment on column T_TECH_QLF.qlf_desc
  is '资质描述';
comment on column T_TECH_QLF.qlf_flag
  is '资质标志(Y是N否)';
comment on column T_TECH_QLF.valid_days
  is '有效期(天)';
comment on column T_TECH_QLF.remind_days
  is '提前提醒天数';
comment on column T_TECH_QLF.ac_type_yn
  is '是否机型相关';
comment on column T_TECH_QLF.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_TECH_QLF.valid_flag
  is '有效标志';
comment on column T_TECH_QLF.oper
  is '操作人';
comment on column T_TECH_QLF.op_time
  is '操作时间';
comment on column T_TECH_QLF.remarks
  is '备注';
comment on column T_TECH_QLF.oper_ip
  is 'IP地址';
comment on column T_TECH_QLF.oper_host
  is '主机名';
comment on column T_TECH_QLF.train_type
  is '1模拟机2理论3本场4航班';
comment on column T_TECH_QLF.valid_type
  is '0资质1资格(有效期)';
comment on column T_TECH_QLF.idx
  is '资质等级';
alter table T_TECH_QLF
  add constraint PK_QLF_RANK primary key (QLF_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION
prompt ==================================
prompt
create table T_TECH_QULIFICATION
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_QULIFICATION
  is '人员特殊资质管理 ';
comment on column T_TECH_QULIFICATION.qlf_id
  is '资质记录ID';
comment on column T_TECH_QULIFICATION.p_code
  is '人员代码';
comment on column T_TECH_QULIFICATION.qlf_code
  is '资质等级，如：CAT-I,CAT-II';
comment on column T_TECH_QULIFICATION.ac_types
  is '机型';
comment on column T_TECH_QULIFICATION.check_date
  is '签注日期';
comment on column T_TECH_QULIFICATION.over_date
  is '结束日期';
comment on column T_TECH_QULIFICATION.valid_flag
  is '有效标志';
comment on column T_TECH_QULIFICATION.oper
  is '操作人';
comment on column T_TECH_QULIFICATION.op_time
  is '操作时间';
comment on column T_TECH_QULIFICATION.remarks
  is '备注';
comment on column T_TECH_QULIFICATION.oper_ip
  is 'IP地址';
comment on column T_TECH_QULIFICATION.oper_host
  is '主机名';
comment on column T_TECH_QULIFICATION.basic_month
  is '训练基准月';
comment on column T_TECH_QULIFICATION.basic_month2
  is '训练基准月2';
comment on column T_TECH_QULIFICATION.fgw_id
  is '飞管网ID';
create index IDX_TECHQLF_PCODE_QLFCODE on T_TECH_QULIFICATION (P_CODE, QLF_CODE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 8K
    minextents 1
    maxextents unlimited
  );
alter table T_TECH_QULIFICATION
  add constraint PK_QULIFICATION primary key (QLF_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 3M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20140615
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20140615
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20140901
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20140901
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141014
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141014
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141028
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141028
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141104
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141104
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141113
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141113
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141119
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141119
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141120
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141120
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141127
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141127
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141202
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141202
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141212
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141212
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20141218
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20141218
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20150507
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20150507
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160126
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20160126
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160128
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20160128
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160202
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20160202
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160203
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20160203
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160203_01
prompt =============================================
prompt
create table T_TECH_QULIFICATION20160203_01
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160318
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20160318
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION20160506
prompt ==========================================
prompt
create table T_TECH_QULIFICATION20160506
(
  qlf_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  qlf_code     VARCHAR2(20) not null,
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2),
  fgw_id       NUMBER(12)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TECH_QULIFICATION_HIS
prompt ======================================
prompt
create table T_TECH_QULIFICATION_HIS
(
  p_code       VARCHAR2(10),
  qlf_code     VARCHAR2(20),
  ac_types     VARCHAR2(100),
  check_date   DATE,
  over_date    DATE,
  valid_flag   VARCHAR2(1) default 'Y',
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(250),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  fxw_id       NUMBER(11),
  basic_month  VARCHAR2(2),
  basic_month2 VARCHAR2(2)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_QULIFICATION_HIS
  is '人员特殊资质历史表';
comment on column T_TECH_QULIFICATION_HIS.p_code
  is '人员代码';
comment on column T_TECH_QULIFICATION_HIS.qlf_code
  is '资质等级，如：CAT-I,CAT-II';
comment on column T_TECH_QULIFICATION_HIS.ac_types
  is '机型';
comment on column T_TECH_QULIFICATION_HIS.check_date
  is '签注日期';
comment on column T_TECH_QULIFICATION_HIS.over_date
  is '结束日期';
comment on column T_TECH_QULIFICATION_HIS.valid_flag
  is '有效标志';
comment on column T_TECH_QULIFICATION_HIS.oper
  is '操作人';
comment on column T_TECH_QULIFICATION_HIS.op_time
  is '操作时间';
comment on column T_TECH_QULIFICATION_HIS.remarks
  is '备注';
comment on column T_TECH_QULIFICATION_HIS.oper_ip
  is 'IP地址';
comment on column T_TECH_QULIFICATION_HIS.oper_host
  is '主机名';
comment on column T_TECH_QULIFICATION_HIS.fxw_id
  is '飞行网ID';
comment on column T_TECH_QULIFICATION_HIS.basic_month
  is '训练基准月';
comment on column T_TECH_QULIFICATION_HIS.basic_month2
  is '训练基准月2';

prompt
prompt Creating table T_TECH_UP_PERSON
prompt ===============================
prompt
create table T_TECH_UP_PERSON
(
  up_id      NUMBER(12) not null,
  p_code     VARCHAR2(10) not null,
  ac_type    VARCHAR2(10) not null,
  cur_tech   VARCHAR2(4) not null,
  up_tech    VARCHAR2(4) not null,
  fly_hours  NUMBER(6) default 0,
  pf         NUMBER(6) default 0,
  pnf        NUMBER(6) default 0,
  valid_flag VARCHAR2(1) default 'Y',
  remarks    VARCHAR2(200),
  oper       VARCHAR2(10),
  op_time    DATE,
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50),
  exp_hours  NUMBER(6) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
  );
comment on table T_TECH_UP_PERSON
  is '个人升级特殊要求';
comment on column T_TECH_UP_PERSON.up_id
  is '升级ID';
comment on column T_TECH_UP_PERSON.p_code
  is '人员代码';
comment on column T_TECH_UP_PERSON.ac_type
  is '机型';
comment on column T_TECH_UP_PERSON.cur_tech
  is '当前授权';
comment on column T_TECH_UP_PERSON.up_tech
  is '升级授权';
comment on column T_TECH_UP_PERSON.fly_hours
  is '需要飞行时间';
comment on column T_TECH_UP_PERSON.pf
  is '主操作';
comment on column T_TECH_UP_PERSON.pnf
  is '辅助操作';
comment on column T_TECH_UP_PERSON.valid_flag
  is '有效标志';
comment on column T_TECH_UP_PERSON.remarks
  is '备注';
comment on column T_TECH_UP_PERSON.oper
  is '操作人';
comment on column T_TECH_UP_PERSON.op_time
  is '操作时间';
comment on column T_TECH_UP_PERSON.oper_ip
  is 'IP地址';
comment on column T_TECH_UP_PERSON.oper_host
  is '主机名';
comment on column T_TECH_UP_PERSON.exp_hours
  is '需要经验时间';
alter table T_TECH_UP_PERSON
  add constraint PK_T_TECH_UP_PERSON primary key (UP_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_TECH_UP_PERSON
  add constraint FK_T_TECH_U_REFERENCE_T_HR_CRE foreign key (P_CODE)
  references T_HR_CREW (P_CODE);

prompt
prompt Creating table T_TECH_UP_STANDARD
prompt =================================
prompt
create table T_TECH_UP_STANDARD
(
  ac_type   VARCHAR2(10) default 'ALL' not null,
  cur_tech  VARCHAR2(4) not null,
  up_tech   VARCHAR2(4) not null,
  fly_hours NUMBER(6) default 0,
  pf        NUMBER(6) default 0,
  pnf       NUMBER(6) default 0,
  remarks   VARCHAR2(200),
  oper      VARCHAR2(10),
  op_time   DATE,
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50),
  exp_hours NUMBER(6) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TECH_UP_STANDARD
  is '技术升级标准表';
comment on column T_TECH_UP_STANDARD.ac_type
  is '机型(ALL默认全部机型)';
comment on column T_TECH_UP_STANDARD.cur_tech
  is '当前授权';
comment on column T_TECH_UP_STANDARD.up_tech
  is '升级授权';
comment on column T_TECH_UP_STANDARD.fly_hours
  is '需要飞行时间';
comment on column T_TECH_UP_STANDARD.pf
  is '主操作';
comment on column T_TECH_UP_STANDARD.pnf
  is '辅助操作';
comment on column T_TECH_UP_STANDARD.remarks
  is '备注';
comment on column T_TECH_UP_STANDARD.oper
  is '操作人';
comment on column T_TECH_UP_STANDARD.op_time
  is '操作时间';
comment on column T_TECH_UP_STANDARD.oper_ip
  is 'IP地址';
comment on column T_TECH_UP_STANDARD.oper_host
  is '主机名';
alter table T_TECH_UP_STANDARD
  add constraint PK_T_TECH_UP_STANDARD primary key (AC_TYPE, CUR_TECH, UP_TECH)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TMP_FLIGHTRISK
prompt ===============================
prompt
create table T_TMP_FLIGHTRISK
(
  pflightid    NUMBER(11) not null,
  pflightname  VARCHAR2(15),
  flight_date  DATE not null,
  std          DATE not null,
  takeoffrv    NUMBER(4,1),
  landingrv    NUMBER(4,1),
  cruiserv     NUMBER(4,1),
  ptgairportid VARCHAR2(4),
  plgairportid VARCHAR2(4),
  color        VARCHAR2(20),
  rowindex     NUMBER(2),
  updatedate   DATE,
  updateman    VARCHAR2(20),
  createdate   DATE,
  createman    VARCHAR2(20),
  leadtime     DATE,
  et_date      DATE,
  et_time      VARCHAR2(10),
  aplaneid     VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_FLIGHTDATE on T_TMP_FLIGHTRISK (FLIGHT_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TMP_FLIGHTRISK
  add constraint PK_PFLIGHTID primary key (PFLIGHTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TMP_FLIGHTRISKTOP5
prompt ===================================
prompt
create table T_TMP_FLIGHTRISKTOP5
(
  pflightid        NUMBER(11),
  pfraiteminstname VARCHAR2(100),
  rvmemo           VARCHAR2(200),
  activetype       VARCHAR2(20),
  taaction         VARCHAR2(150),
  topn             NUMBER(2),
  pfraiteminstid   VARCHAR2(50) not null,
  leadtime         DATE,
  state            NUMBER(1) default 0,
  replycontent     VARCHAR2(500),
  replytime        DATE,
  replyname        VARCHAR2(20),
  rv               VARCHAR2(40),
  rvstatus         VARCHAR2(20),
  rvparams         VARCHAR2(20)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_TMP_FLIGHTRISKTOP5.state
  is '状态 0为尚未处理 1为已处理';
comment on column T_TMP_FLIGHTRISKTOP5.replycontent
  is '处理内容';
comment on column T_TMP_FLIGHTRISKTOP5.replytime
  is '处理时间';
comment on column T_TMP_FLIGHTRISKTOP5.replyname
  is '处理人';
alter table T_TMP_FLIGHTRISKTOP5
  add constraint PK_PFRAITEMINSTID primary key (PFRAITEMINSTID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TMP_HUD
prompt ========================
prompt
create table T_TMP_HUD
(
  reqister      VARCHAR2(20),
  factory       VARCHAR2(50),
  f_code        VARCHAR2(10),
  column_6      VARCHAR2(20),
  s_operation   VARCHAR2(150),
  note          VARCHAR2(150),
  quality       VARCHAR2(20),
  ac_owner      VARCHAR2(50),
  oper          VARCHAR2(20),
  op_time       DATE,
  remarks       VARCHAR2(20),
  oper_ip       VARCHAR2(20),
  oper_host     VARCHAR2(20),
  expiry        DATE,
  itemid        VARCHAR2(36),
  revision      VARCHAR2(10),
  state         VARCHAR2(10),
  effectivedate VARCHAR2(10),
  hid           VARCHAR2(36) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on column T_TMP_HUD.reqister
  is '登记号';
comment on column T_TMP_HUD.factory
  is '制造厂/型号/系列号';
comment on column T_TMP_HUD.f_code
  is '出厂号';
comment on column T_TMP_HUD.column_6
  is '运行依据';
comment on column T_TMP_HUD.s_operation
  is '特殊运行';
comment on column T_TMP_HUD.note
  is '备注';
comment on column T_TMP_HUD.expiry
  is '到期时间';
comment on column T_TMP_HUD.itemid
  is '运规itemid guid';
comment on column T_TMP_HUD.revision
  is '版本 修订号，排序的时候转Int，新建项目的时候更新';
comment on column T_TMP_HUD.state
  is 'FSOP 系统控制提交审批的状态 工作区中的状态，进入到归档区后该字段为2 0：草稿 01：终稿 1：提交 2：局方签字 3：退回 6：退回修改后再次提交 4：双方签字';
comment on column T_TMP_HUD.effectivedate
  is 'FSOP系统产生的数据：生效日期';
create index IDX_TMP_HUB_S_OPERATION on T_TMP_HUD (S_OPERATION)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 512K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TMP_HUD
  add constraint T_TMP_HUD_PK_HID primary key (HID)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 640K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_COURSE
prompt ==========================
prompt
create table T_TR_COURSE
(
  parent_code  VARCHAR2(10) not null,
  course_code  VARCHAR2(10) not null,
  course_name  VARCHAR2(50) not null,
  course_ename VARCHAR2(100),
  course_desc  VARCHAR2(500),
  module_flag  VARCHAR2(1) not null,
  valid_flag   VARCHAR2(1) default 'Y' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_COURSE
  is '培训类别表,如：转机型、升等';
comment on column T_TR_COURSE.parent_code
  is '父编码';
comment on column T_TR_COURSE.course_code
  is '课程编码';
comment on column T_TR_COURSE.course_name
  is '课程名称';
comment on column T_TR_COURSE.course_ename
  is '课程英文名称';
comment on column T_TR_COURSE.course_desc
  is '课程描述';
comment on column T_TR_COURSE.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_TR_COURSE.valid_flag
  is '有效标志';
comment on column T_TR_COURSE.oper
  is '操作人';
comment on column T_TR_COURSE.op_time
  is '操作时间';
comment on column T_TR_COURSE.remarks
  is '备注';
comment on column T_TR_COURSE.oper_ip
  is 'IP地址';
comment on column T_TR_COURSE.oper_host
  is '主机名';
alter table T_TR_COURSE
  add constraint PK_TRAIN_CLS primary key (COURSE_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_DDO
prompt =======================
prompt
create table T_TR_DDO
(
  ddo_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  ddo_code     VARCHAR2(10) not null,
  ddo_add_code VARCHAR2(4),
  td           DATE not null,
  ta           DATE not null,
  remind_days  NUMBER(3) default 1,
  ddo_person   VARCHAR2(10),
  ddo_date     DATE,
  rest_reason  VARCHAR2(100),
  rest_person  VARCHAR2(10),
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(20),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_DDO
  is '停飞表';
comment on column T_TR_DDO.ddo_id
  is '停飞ID';
comment on column T_TR_DDO.p_code
  is '人员代码';
comment on column T_TR_DDO.ddo_code
  is '原因代码';
comment on column T_TR_DDO.ddo_add_code
  is '疗养地点编号';
comment on column T_TR_DDO.td
  is '开始时间';
comment on column T_TR_DDO.ta
  is '结束时间';
comment on column T_TR_DDO.remind_days
  is '提前提醒天数';
comment on column T_TR_DDO.ddo_person
  is '批准人';
comment on column T_TR_DDO.ddo_date
  is '批准时间';
comment on column T_TR_DDO.rest_reason
  is '复飞原因';
comment on column T_TR_DDO.rest_person
  is '复飞批准人';
comment on column T_TR_DDO.valid_flag
  is '有效标志(Y/N)';
comment on column T_TR_DDO.oper
  is '操作人';
comment on column T_TR_DDO.op_time
  is '操作日期';
comment on column T_TR_DDO.remarks
  is '备注';
comment on column T_TR_DDO.oper_ip
  is 'IP地址';
comment on column T_TR_DDO.oper_host
  is '主机名';
create index IDX_TR_DDO_PCODE on T_TR_DDO (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_TR_DDO_TD on T_TR_DDO (TD)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TR_DDO
  add constraint PK_CREW_ONLEAVE primary key (DDO_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_DDO_1MIN
prompt ============================
prompt
create table T_TR_DDO_1MIN
(
  c_name       VARCHAR2(60) not null,
  ddo_id       NUMBER(11) not null,
  p_code       VARCHAR2(10) not null,
  ddo_code     VARCHAR2(10) not null,
  ddo_add_code VARCHAR2(4),
  td           DATE not null,
  ta           DATE not null,
  remind_days  NUMBER(3),
  ddo_person   VARCHAR2(10),
  ddo_date     DATE,
  rest_reason  VARCHAR2(100),
  rest_person  VARCHAR2(10),
  valid_flag   VARCHAR2(1),
  oper         VARCHAR2(8),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_DDO_LOG
prompt ===========================
prompt
create table T_TR_DDO_LOG
(
  ddo_log_id NUMBER(11) not null,
  ddo_id     NUMBER(11),
  p_code     VARCHAR2(10),
  ddo_code   VARCHAR2(10),
  td         DATE,
  ta         DATE,
  operate    VARCHAR2(8),
  flag       VARCHAR2(1),
  oper       VARCHAR2(8),
  op_time    DATE,
  remarks    VARCHAR2(200),
  oper_ip    VARCHAR2(15),
  oper_host  VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_DDO_LOG
  is '停飞日志表';
comment on column T_TR_DDO_LOG.ddo_log_id
  is 'ID,由seq_tr_ddo_log生成';
comment on column T_TR_DDO_LOG.ddo_id
  is '外键ID';
comment on column T_TR_DDO_LOG.p_code
  is '人员ID';
comment on column T_TR_DDO_LOG.ddo_code
  is '原因代码';
comment on column T_TR_DDO_LOG.td
  is '开始时间';
comment on column T_TR_DDO_LOG.ta
  is '结束时间';
comment on column T_TR_DDO_LOG.operate
  is '操作人';
comment on column T_TR_DDO_LOG.flag
  is '添加(I)或删除(D)标识';
comment on column T_TR_DDO_LOG.oper
  is '操作人';
comment on column T_TR_DDO_LOG.op_time
  is '操作时间';
comment on column T_TR_DDO_LOG.remarks
  is '备注';
comment on column T_TR_DDO_LOG.oper_ip
  is 'IP地址';
comment on column T_TR_DDO_LOG.oper_host
  is '主机名';
alter table T_TR_DDO_LOG
  add constraint PK_TR_DDO_LOG primary key (DDO_LOG_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_DDO_PLAN
prompt ============================
prompt
create table T_TR_DDO_PLAN
(
  dep_code    VARCHAR2(10) not null,
  flight_date DATE not null,
  a001_num    NUMBER(9) default 0,
  c001_num    NUMBER(9) default 0,
  d001_num    NUMBER(9) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_TR_DDO_PLAN
  is '休假计划限制表';
comment on column T_TR_DDO_PLAN.dep_code
  is '部门代码';
comment on column T_TR_DDO_PLAN.flight_date
  is '日期';
comment on column T_TR_DDO_PLAN.a001_num
  is '机长计划人数';
comment on column T_TR_DDO_PLAN.c001_num
  is '副驾计划人数';
comment on column T_TR_DDO_PLAN.d001_num
  is '其他计划人数';
alter table T_TR_DDO_PLAN
  add constraint PK_T_TR_DDO_PLAN primary key (DEP_CODE, FLIGHT_DATE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_TR_DUTY
prompt ========================
prompt
create table T_TR_DUTY
(
  flight_date DATE not null,
  p_code      VARCHAR2(10) not null,
  duty_code   VARCHAR2(10) not null,
  td          DATE not null,
  ta          DATE not null,
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_TR_DUTY
  is '人员值班表';
comment on column T_TR_DUTY.flight_date
  is '值班日期';
comment on column T_TR_DUTY.p_code
  is '人员代码';
comment on column T_TR_DUTY.duty_code
  is '值班类型代码';
comment on column T_TR_DUTY.td
  is '开始时间';
comment on column T_TR_DUTY.ta
  is '结束时间';
comment on column T_TR_DUTY.oper
  is '操作人';
comment on column T_TR_DUTY.op_time
  is '操作时间';
comment on column T_TR_DUTY.remarks
  is '备注';
comment on column T_TR_DUTY.oper_ip
  is 'IP地址';
comment on column T_TR_DUTY.oper_host
  is '主机名';
alter table T_TR_DUTY
  add constraint PK_CREW_ONDUTY primary key (FLIGHT_DATE, P_CODE, DUTY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
alter table T_TR_DUTY
  add constraint FK_CREWONDUTY_CREW foreign key (P_CODE)
  references T_HR_CREW (P_CODE);
alter table T_TR_DUTY
  add constraint FK_CREWONDUTY_DUTYTYPE foreign key (DUTY_CODE)
  references T_BAS_DUTY (DUTY_CODE);

prompt
prompt Creating table T_TR_FXWSIMU
prompt ===========================
prompt
create table T_TR_FXWSIMU
(
  spaid          VARCHAR2(100) not null,
  assigndate     DATE,
  suitid         VARCHAR2(100),
  pilotid        VARCHAR2(100),
  clerkcode      VARCHAR2(100),
  pilotname      VARCHAR2(100),
  idcard         VARCHAR2(100),
  simtype        VARCHAR2(100),
  traincom       VARCHAR2(100),
  begintime      VARCHAR2(20),
  endtime        VARCHAR2(20),
  lastmodifytime DATE,
  p_code         VARCHAR2(100),
  ac_type        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_FXWSIMU
  is '模拟机占位信息(按时间段)';
comment on column T_TR_FXWSIMU.spaid
  is '编号';
comment on column T_TR_FXWSIMU.assigndate
  is '模拟机日期';
comment on column T_TR_FXWSIMU.suitid
  is '场次ID';
comment on column T_TR_FXWSIMU.pilotid
  is '人员ID';
comment on column T_TR_FXWSIMU.clerkcode
  is '人员代码';
comment on column T_TR_FXWSIMU.pilotname
  is '人员姓名';
comment on column T_TR_FXWSIMU.idcard
  is '身份证号';
comment on column T_TR_FXWSIMU.simtype
  is '教员/学员';
comment on column T_TR_FXWSIMU.traincom
  is '训练场地';
comment on column T_TR_FXWSIMU.begintime
  is '开始时间';
comment on column T_TR_FXWSIMU.endtime
  is '结束时间';
comment on column T_TR_FXWSIMU.lastmodifytime
  is '最后修改日期';
comment on column T_TR_FXWSIMU.p_code
  is '对应机组排班人员代码';
comment on column T_TR_FXWSIMU.ac_type
  is '机型';
alter table T_TR_FXWSIMU
  add primary key (SPAID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 4M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_FXWSIMU_DELTA
prompt =================================
prompt
create table T_TR_FXWSIMU_DELTA
(
  assigndate     DATE not null,
  suitid         VARCHAR2(100) not null,
  pilotid        VARCHAR2(100) not null,
  clerkcode      VARCHAR2(100),
  pilotname      VARCHAR2(100),
  idcard         VARCHAR2(100),
  simtype        VARCHAR2(100),
  traincom       VARCHAR2(100),
  begintime      VARCHAR2(20),
  endtime        VARCHAR2(20),
  lastmodifytime DATE,
  p_code         VARCHAR2(100),
  poption        VARCHAR2(10),
  ac_type        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_FXWSIMU_DELTA
  is '模拟机占位信息(按增量)';
comment on column T_TR_FXWSIMU_DELTA.assigndate
  is '模拟机日期';
comment on column T_TR_FXWSIMU_DELTA.suitid
  is '场次ID';
comment on column T_TR_FXWSIMU_DELTA.pilotid
  is '人员ID';
comment on column T_TR_FXWSIMU_DELTA.clerkcode
  is '人员代码';
comment on column T_TR_FXWSIMU_DELTA.pilotname
  is '人员姓名';
comment on column T_TR_FXWSIMU_DELTA.idcard
  is '身份证号';
comment on column T_TR_FXWSIMU_DELTA.simtype
  is '教员/学员';
comment on column T_TR_FXWSIMU_DELTA.traincom
  is '训练场地';
comment on column T_TR_FXWSIMU_DELTA.begintime
  is '开始时间';
comment on column T_TR_FXWSIMU_DELTA.endtime
  is '结束时间';
comment on column T_TR_FXWSIMU_DELTA.lastmodifytime
  is '最后修改日期';
comment on column T_TR_FXWSIMU_DELTA.p_code
  is '对应机组排班人员代码';
comment on column T_TR_FXWSIMU_DELTA.poption
  is '位置（编号）';
comment on column T_TR_FXWSIMU_DELTA.ac_type
  is '机型';
alter table T_TR_FXWSIMU_DELTA
  add constraint PK_FXWSIMU_DELTA primary key (ASSIGNDATE, SUITID, PILOTID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 768K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_FXWSIMU_DELTA222
prompt ====================================
prompt
create table T_TR_FXWSIMU_DELTA222
(
  assigndate     DATE,
  suitid         VARCHAR2(100),
  pilotid        VARCHAR2(100),
  clerkcode      VARCHAR2(100),
  pilotname      VARCHAR2(100),
  idcard         VARCHAR2(100),
  simtype        VARCHAR2(100),
  traincom       VARCHAR2(100),
  begintime      VARCHAR2(20),
  endtime        VARCHAR2(20),
  lastmodifytime DATE,
  p_code         VARCHAR2(100),
  poption        VARCHAR2(10),
  ac_type        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_FXWSIMU_HIS
prompt ===============================
prompt
create table T_TR_FXWSIMU_HIS
(
  tr_fxw_logid   NUMBER(11) not null,
  assigndate     DATE not null,
  suitid         VARCHAR2(100) not null,
  pilotid        VARCHAR2(100) not null,
  clerkcode      VARCHAR2(100),
  pilotname      VARCHAR2(100),
  idcard         VARCHAR2(100),
  simtype        VARCHAR2(100),
  traincom       VARCHAR2(100),
  begintime      VARCHAR2(20),
  endtime        VARCHAR2(20),
  lastmodifytime DATE,
  p_code         VARCHAR2(100),
  poption        VARCHAR2(10),
  ac_type        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64M
    next 8K
    minextents 1
  );
comment on table T_TR_FXWSIMU_HIS
  is '模拟机占位信息日志详细表';
comment on column T_TR_FXWSIMU_HIS.tr_fxw_logid
  is '日志ID';
comment on column T_TR_FXWSIMU_HIS.assigndate
  is '模拟机日期';
comment on column T_TR_FXWSIMU_HIS.suitid
  is '场次ID';
comment on column T_TR_FXWSIMU_HIS.pilotid
  is '人员ID';
comment on column T_TR_FXWSIMU_HIS.clerkcode
  is '人员代码';
comment on column T_TR_FXWSIMU_HIS.pilotname
  is '人员姓名';
comment on column T_TR_FXWSIMU_HIS.idcard
  is '身份证号';
comment on column T_TR_FXWSIMU_HIS.simtype
  is '教员/学员';
comment on column T_TR_FXWSIMU_HIS.traincom
  is '训练场地';
comment on column T_TR_FXWSIMU_HIS.begintime
  is '开始时间';
comment on column T_TR_FXWSIMU_HIS.endtime
  is '结束时间';
comment on column T_TR_FXWSIMU_HIS.lastmodifytime
  is '最后修改日期';
comment on column T_TR_FXWSIMU_HIS.p_code
  is '对应机组排班人员代码';
comment on column T_TR_FXWSIMU_HIS.poption
  is '编号';
comment on column T_TR_FXWSIMU_HIS.ac_type
  is '机型';
create unique index PK_DATE_SUITID_PILOTID_TRLOGID on T_TR_FXWSIMU_HIS (ASSIGNDATE, SUITID, PILOTID, TR_FXW_LOGID)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64M
    next 1M
    minextents 1
  );
alter table T_TR_FXWSIMU_HIS
  add constraint PK_FXWSIMU_HIS primary key (ASSIGNDATE, SUITID, PILOTID, TR_FXW_LOGID);

prompt
prompt Creating table T_TR_FXWSIMU_LOG
prompt ===============================
prompt
create table T_TR_FXWSIMU_LOG
(
  tr_fxw_logid NUMBER(11) not null,
  start_date   DATE,
  end_date     DATE,
  proc_cnt     NUMBER(9),
  proc_result  VARCHAR2(500),
  err_msg      VARCHAR2(500),
  time_stamp   DATE
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );
comment on table T_TR_FXWSIMU_LOG
  is '模拟机占位信息日志表';
comment on column T_TR_FXWSIMU_LOG.tr_fxw_logid
  is '日志Id';
comment on column T_TR_FXWSIMU_LOG.start_date
  is '开始时间';
comment on column T_TR_FXWSIMU_LOG.end_date
  is '结束时间';
comment on column T_TR_FXWSIMU_LOG.proc_cnt
  is '数据记录数';
comment on column T_TR_FXWSIMU_LOG.proc_result
  is '处理结果';
comment on column T_TR_FXWSIMU_LOG.err_msg
  is '日志类型';
comment on column T_TR_FXWSIMU_LOG.time_stamp
  is '时间戳';
alter table T_TR_FXWSIMU_LOG
  add primary key (TR_FXW_LOGID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_TR_FXWSIMU_PEKD
prompt ================================
prompt
create table T_TR_FXWSIMU_PEKD
(
  spaid          VARCHAR2(100),
  assigndate     DATE,
  suitid         VARCHAR2(100),
  pilotid        VARCHAR2(100),
  clerkcode      VARCHAR2(100),
  pilotname      VARCHAR2(100),
  idcard         VARCHAR2(100),
  simtype        VARCHAR2(100),
  traincom       VARCHAR2(100),
  begintime      VARCHAR2(20),
  endtime        VARCHAR2(20),
  lastmodifytime DATE,
  p_code         VARCHAR2(100),
  ac_type        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_FXWSIMU_PEKDA
prompt =================================
prompt
create table T_TR_FXWSIMU_PEKDA
(
  spaid          VARCHAR2(100),
  assigndate     DATE,
  suitid         VARCHAR2(100),
  pilotid        VARCHAR2(100),
  clerkcode      VARCHAR2(100),
  pilotname      VARCHAR2(100),
  idcard         VARCHAR2(100),
  simtype        VARCHAR2(100),
  traincom       VARCHAR2(100),
  begintime      VARCHAR2(20),
  endtime        VARCHAR2(20),
  lastmodifytime DATE,
  p_code         VARCHAR2(100),
  ac_type        VARCHAR2(10)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_TR_GRND_DUTY
prompt =============================
prompt
create table T_TR_GRND_DUTY
(
  flight_date DATE not null,
  user_code   VARCHAR2(10) not null,
  duty_code   VARCHAR2(10) not null,
  td          DATE not null,
  ta          DATE not null,
  duty_rec    VARCHAR2(300),
  oper        VARCHAR2(10),
  op_time     DATE,
  remarks     VARCHAR2(200),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_GRND_DUTY
  is '地面人员值班表';
comment on column T_TR_GRND_DUTY.flight_date
  is '值班日期';
comment on column T_TR_GRND_DUTY.user_code
  is '地面值班人员';
comment on column T_TR_GRND_DUTY.duty_code
  is '值班类型';
comment on column T_TR_GRND_DUTY.td
  is '开始时间';
comment on column T_TR_GRND_DUTY.ta
  is '结束时间';
comment on column T_TR_GRND_DUTY.duty_rec
  is '值班说明';
comment on column T_TR_GRND_DUTY.oper
  is '操作人';
comment on column T_TR_GRND_DUTY.op_time
  is '操作时间';
comment on column T_TR_GRND_DUTY.remarks
  is '备注';
comment on column T_TR_GRND_DUTY.oper_ip
  is 'IP地址';
comment on column T_TR_GRND_DUTY.oper_host
  is '主机名';
alter table T_TR_GRND_DUTY
  add constraint PK_GRND_DUTY primary key (FLIGHT_DATE, USER_CODE, DUTY_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 256K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_GRND_DUTY_BRANCH
prompt ====================================
prompt
create table T_TR_GRND_DUTY_BRANCH
(
  p_code      VARCHAR2(10) not null,
  branch_code VARCHAR2(10) not null,
  td          DATE not null,
  ta          DATE not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_GRND_DUTY_BRANCH
  is '地面人员占位值班部门';
comment on column T_TR_GRND_DUTY_BRANCH.p_code
  is '人员代码';
comment on column T_TR_GRND_DUTY_BRANCH.branch_code
  is '值班部门代码(行政部门)';
comment on column T_TR_GRND_DUTY_BRANCH.td
  is '开始时间';
comment on column T_TR_GRND_DUTY_BRANCH.ta
  is '结束时间';

prompt
prompt Creating table T_TR_HOLIDAY_CONF
prompt ================================
prompt
create table T_TR_HOLIDAY_CONF
(
  svc_years NUMBER(3) not null,
  holi_days NUMBER(3)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_TR_HOLIDAY_CONF
  is '人员休假配置表';
comment on column T_TR_HOLIDAY_CONF.svc_years
  is '工作年限';
comment on column T_TR_HOLIDAY_CONF.holi_days
  is '假期天数';
alter table T_TR_HOLIDAY_CONF
  add constraint PK_HOLIDAY_CONF primary key (SVC_YEARS)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_TR_HOLI_GROUP
prompt ==============================
prompt
create table T_TR_HOLI_GROUP
(
  group_code VARCHAR2(4) not null,
  tech_no    VARCHAR2(4) not null,
  remark     VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_HOLI_GROUP
  is '人员休假分组';
comment on column T_TR_HOLI_GROUP.group_code
  is '组编号';
comment on column T_TR_HOLI_GROUP.tech_no
  is '技术等级';
comment on column T_TR_HOLI_GROUP.remark
  is '备注';
alter table T_TR_HOLI_GROUP
  add constraint PK_TR_HOLI_GROUP primary key (TECH_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_PLAN
prompt =============================
prompt
create table T_TR_HOLI_PLAN
(
  dep_code    VARCHAR2(10) not null,
  stop_date   DATE not null,
  rank_no     VARCHAR2(4) not null,
  block_day   NUMBER(6) default 0,
  plan_day    NUMBER(6) default 0,
  argb        NUMBER(9),
  block_day3  NUMBER(6),
  branch_code VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_HOLI_PLAN
  is '部门休假规划';
comment on column T_TR_HOLI_PLAN.dep_code
  is '部门';
comment on column T_TR_HOLI_PLAN.stop_date
  is '休假日期';
comment on column T_TR_HOLI_PLAN.rank_no
  is '技术分类';
comment on column T_TR_HOLI_PLAN.block_day
  is '区间';
comment on column T_TR_HOLI_PLAN.plan_day
  is '计划总天数';
comment on column T_TR_HOLI_PLAN.argb
  is '用户自定义颜色';
comment on column T_TR_HOLI_PLAN.block_day3
  is '区间3';
comment on column T_TR_HOLI_PLAN.branch_code
  is '行政部门';
alter table T_TR_HOLI_PLAN
  add constraint PK_TR_HOLI_PLAN primary key (DEP_CODE, STOP_DATE, RANK_NO)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_SCH
prompt ============================
prompt
create table T_TR_HOLI_SCH
(
  block_id    NUMBER(9) default 0 not null,
  dep_code    VARCHAR2(10),
  stop_date   DATE not null,
  rank_no     VARCHAR2(4) not null,
  start_date  DATE not null,
  end_date    DATE not null,
  remark      VARCHAR2(60),
  p_code      VARCHAR2(8),
  notify_flag VARCHAR2(1),
  row_id      NUMBER(6),
  block_kind  VARCHAR2(8),
  filiale     VARCHAR2(4) not null,
  op_time     DATE,
  oper        VARCHAR2(10),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50),
  branch_code VARCHAR2(50),
  tech_no_z   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_HOLI_SCH
  is '休假计划';
comment on column T_TR_HOLI_SCH.block_id
  is '区间id';
comment on column T_TR_HOLI_SCH.dep_code
  is '部门';
comment on column T_TR_HOLI_SCH.stop_date
  is '休假日期';
comment on column T_TR_HOLI_SCH.rank_no
  is '技术分类';
comment on column T_TR_HOLI_SCH.start_date
  is '计划开始日期';
comment on column T_TR_HOLI_SCH.end_date
  is '计划结束日期';
comment on column T_TR_HOLI_SCH.remark
  is '备注';
comment on column T_TR_HOLI_SCH.p_code
  is '分配人员';
comment on column T_TR_HOLI_SCH.notify_flag
  is 'Y/N生效标志';
comment on column T_TR_HOLI_SCH.row_id
  is '行id';
comment on column T_TR_HOLI_SCH.block_kind
  is '休假类型';
comment on column T_TR_HOLI_SCH.filiale
  is '所属分公司';
comment on column T_TR_HOLI_SCH.op_time
  is '操作时间';
comment on column T_TR_HOLI_SCH.oper
  is '操作人';
comment on column T_TR_HOLI_SCH.oper_ip
  is '操作IP';
comment on column T_TR_HOLI_SCH.oper_host
  is '主机名';
comment on column T_TR_HOLI_SCH.branch_code
  is '行政部门';
comment on column T_TR_HOLI_SCH.tech_no_z
  is '排班授权';
create index IDX_TR_HOLI_PCODE on T_TR_HOLI_SCH (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index IDX_TR_HOLI_SCH_START_DATE on T_TR_HOLI_SCH (START_DATE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TR_HOLI_SCH
  add constraint PK_TR_HOLI_SCH primary key (BLOCK_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_SCH20150820
prompt ====================================
prompt
create table T_TR_HOLI_SCH20150820
(
  block_id    NUMBER(9) not null,
  dep_code    VARCHAR2(10),
  stop_date   DATE not null,
  rank_no     VARCHAR2(4) not null,
  start_date  DATE not null,
  end_date    DATE not null,
  remark      VARCHAR2(60),
  p_code      VARCHAR2(8),
  notify_flag VARCHAR2(1),
  row_id      NUMBER(6),
  block_kind  VARCHAR2(8),
  filiale     VARCHAR2(4) not null,
  op_time     DATE,
  oper        VARCHAR2(10),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_SCH201508202
prompt =====================================
prompt
create table T_TR_HOLI_SCH201508202
(
  block_id    NUMBER(9) not null,
  dep_code    VARCHAR2(10),
  stop_date   DATE not null,
  rank_no     VARCHAR2(4) not null,
  start_date  DATE not null,
  end_date    DATE not null,
  remark      VARCHAR2(60),
  p_code      VARCHAR2(8),
  notify_flag VARCHAR2(1),
  row_id      NUMBER(6),
  block_kind  VARCHAR2(8),
  filiale     VARCHAR2(4) not null,
  op_time     DATE,
  oper        VARCHAR2(10),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_SCH20150825
prompt ====================================
prompt
create table T_TR_HOLI_SCH20150825
(
  block_id    NUMBER(9) not null,
  dep_code    VARCHAR2(10),
  stop_date   DATE not null,
  rank_no     VARCHAR2(4) not null,
  start_date  DATE not null,
  end_date    DATE not null,
  remark      VARCHAR2(60),
  p_code      VARCHAR2(8),
  notify_flag VARCHAR2(1),
  row_id      NUMBER(6),
  block_kind  VARCHAR2(8),
  filiale     VARCHAR2(4) not null,
  op_time     DATE,
  oper        VARCHAR2(10),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_SCH20151230
prompt ====================================
prompt
create table T_TR_HOLI_SCH20151230
(
  block_id    NUMBER(9) not null,
  dep_code    VARCHAR2(10),
  stop_date   DATE not null,
  rank_no     VARCHAR2(4) not null,
  start_date  DATE not null,
  end_date    DATE not null,
  remark      VARCHAR2(60),
  p_code      VARCHAR2(8),
  notify_flag VARCHAR2(1),
  row_id      NUMBER(6),
  block_kind  VARCHAR2(8),
  filiale     VARCHAR2(4) not null,
  op_time     DATE,
  oper        VARCHAR2(10),
  oper_ip     VARCHAR2(15),
  oper_host   VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_HOLI_STD
prompt ============================
prompt
create table T_TR_HOLI_STD
(
  p_code    VARCHAR2(8) not null,
  stop_date DATE not null,
  plan_day  NUMBER(6) default 0
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_HOLI_STD
  is '休假资格';
comment on column T_TR_HOLI_STD.p_code
  is '人员编码';
comment on column T_TR_HOLI_STD.stop_date
  is '年度';
comment on column T_TR_HOLI_STD.plan_day
  is '年度休假天数';
alter table T_TR_HOLI_STD
  add constraint PK_TR_HOLI_STD primary key (P_CODE, STOP_DATE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 2M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_LEADDUTY
prompt ============================
prompt
create table T_TR_LEADDUTY
(
  duty_id   NUMBER not null,
  p_code    VARCHAR2(10) not null,
  duty_date DATE not null,
  remarks   VARCHAR2(200),
  oper      VARCHAR2(10),
  op_time   DATE,
  oper_ip   VARCHAR2(15),
  oper_host VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );
comment on table T_TR_LEADDUTY
  is '领导值班表';
comment on column T_TR_LEADDUTY.duty_id
  is '自增ID(SEQ_TR_DUTY_ID)';
comment on column T_TR_LEADDUTY.p_code
  is '人员P_CODE';
comment on column T_TR_LEADDUTY.duty_date
  is '值班日期';
comment on column T_TR_LEADDUTY.remarks
  is '备注';
comment on column T_TR_LEADDUTY.oper
  is '操作人';
comment on column T_TR_LEADDUTY.op_time
  is '操作时间';
comment on column T_TR_LEADDUTY.oper_ip
  is 'IP地址';
comment on column T_TR_LEADDUTY.oper_host
  is '主机名';
alter table T_TR_LEADDUTY
  add constraint PK_LEAD_DUTY primary key (P_CODE, DUTY_DATE)
  using index 
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
  );

prompt
prompt Creating table T_TR_PAIRING
prompt ===========================
prompt
create table T_TR_PAIRING
(
  train_line   NUMBER(10) not null,
  course_code  VARCHAR2(10) not null,
  subject_code VARCHAR2(10) not null,
  train_hours  NUMBER(6) default 0 not null,
  actype_yn    VARCHAR2(1) default 'N' not null,
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_PAIRING
  is '训练课程科目设置表';
comment on column T_TR_PAIRING.train_line
  is '训练环LINE';
comment on column T_TR_PAIRING.course_code
  is '课程编码';
comment on column T_TR_PAIRING.subject_code
  is '科目编码';
comment on column T_TR_PAIRING.train_hours
  is '计划课时(分钟)';
comment on column T_TR_PAIRING.actype_yn
  is '是否绑定机型';
comment on column T_TR_PAIRING.oper
  is '操作人';
comment on column T_TR_PAIRING.op_time
  is '操作时间';
comment on column T_TR_PAIRING.remarks
  is '备注';
comment on column T_TR_PAIRING.oper_ip
  is 'IP地址';
comment on column T_TR_PAIRING.oper_host
  is '主机名';
alter table T_TR_PAIRING
  add constraint PK_TRAIN_SUBJECT primary key (TRAIN_LINE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_PLAN
prompt ========================
prompt
create table T_TR_PLAN
(
  train_id      NUMBER(11) not null,
  train_date    DATE not null,
  train_line    NUMBER(10),
  train_desc    VARCHAR2(1000),
  td            DATE not null,
  ta            DATE not null,
  train_hours   NUMBER(6) default 0 not null,
  simu_code     VARCHAR2(10) not null,
  ac_type_crew  VARCHAR2(30),
  qlf_rank_code VARCHAR2(20),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_from_fxw   VARCHAR2(1) default 'N',
  fxw_suitid    VARCHAR2(60),
  filiale       VARCHAR2(80) default 'MU/'
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 8K
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_PLAN
  is '训练计划表';
comment on column T_TR_PLAN.train_id
  is '训练ID';
comment on column T_TR_PLAN.train_date
  is '训练日期';
comment on column T_TR_PLAN.train_line
  is '训练环LINE';
comment on column T_TR_PLAN.train_desc
  is '模拟机场次说明';
comment on column T_TR_PLAN.td
  is '开始时间';
comment on column T_TR_PLAN.ta
  is '结束时间';
comment on column T_TR_PLAN.train_hours
  is '实际课时(分钟)';
comment on column T_TR_PLAN.simu_code
  is '设施(地点)编码';
comment on column T_TR_PLAN.ac_type_crew
  is '机型组';
comment on column T_TR_PLAN.qlf_rank_code
  is '资质等级，如：CAT-I,CAT-II';
comment on column T_TR_PLAN.oper
  is '操作人';
comment on column T_TR_PLAN.op_time
  is '操作时间';
comment on column T_TR_PLAN.remarks
  is '备注';
comment on column T_TR_PLAN.oper_ip
  is 'IP地址';
comment on column T_TR_PLAN.oper_host
  is '主机名';
comment on column T_TR_PLAN.is_from_fxw
  is '是否从飞行网导入';
comment on column T_TR_PLAN.fxw_suitid
  is '对应飞行网的场次ID';
comment on column T_TR_PLAN.filiale
  is '分子公司';
create index IDX_TR_TRAIN_DATE on T_TR_PLAN (TRAIN_DATE)
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 5M
    next 8K
    minextents 1
    maxextents unlimited
  );
alter table T_TR_PLAN
  add constraint PK_TRAIN_PLAN primary key (TRAIN_ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 7M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_PLAN20150326
prompt ================================
prompt
create table T_TR_PLAN20150326
(
  train_id      NUMBER(11) not null,
  train_date    DATE not null,
  train_line    NUMBER(10),
  train_desc    VARCHAR2(1000),
  td            DATE not null,
  ta            DATE not null,
  train_hours   NUMBER(6) not null,
  simu_code     VARCHAR2(10) not null,
  ac_type_crew  VARCHAR2(30),
  qlf_rank_code VARCHAR2(20),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_from_fxw   VARCHAR2(1),
  fxw_suitid    VARCHAR2(60),
  filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_PLAN20150327
prompt ================================
prompt
create table T_TR_PLAN20150327
(
  train_id      NUMBER(11) not null,
  train_date    DATE not null,
  train_line    NUMBER(10),
  train_desc    VARCHAR2(1000),
  td            DATE not null,
  ta            DATE not null,
  train_hours   NUMBER(6) not null,
  simu_code     VARCHAR2(10) not null,
  ac_type_crew  VARCHAR2(30),
  qlf_rank_code VARCHAR2(20),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_from_fxw   VARCHAR2(1),
  fxw_suitid    VARCHAR2(60),
  filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_PLAN_SIMU_CODE
prompt ==================================
prompt
create table T_TR_PLAN_SIMU_CODE
(
  train_id      NUMBER(11) not null,
  train_date    DATE not null,
  train_line    NUMBER(10),
  train_desc    VARCHAR2(1000),
  td            DATE not null,
  ta            DATE not null,
  train_hours   NUMBER(6) not null,
  simu_code     VARCHAR2(10) not null,
  ac_type_crew  VARCHAR2(30),
  qlf_rank_code VARCHAR2(20),
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50),
  is_from_fxw   VARCHAR2(1),
  fxw_suitid    VARCHAR2(60),
  filiale       VARCHAR2(4)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SCHEDULE
prompt ============================
prompt
create table T_TR_SCHEDULE
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) default 0 not null,
  train_flag      NUMBER(11) default 0 not null,
  train_result_yn VARCHAR2(1) default 'Y',
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1) default 'N',
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_SCHEDULE
  is '训练排班表';
comment on column T_TR_SCHEDULE.train_id
  is '训练ID';
comment on column T_TR_SCHEDULE.train_date
  is '训练日期';
comment on column T_TR_SCHEDULE.p_code
  is '人员';
comment on column T_TR_SCHEDULE.fjs_order
  is '序号';
comment on column T_TR_SCHEDULE.rank_no
  is '学员、教练员、检查员';
comment on column T_TR_SCHEDULE.ts_flag
  is '兼职(字典)';
comment on column T_TR_SCHEDULE.atd
  is '实际开始时间';
comment on column T_TR_SCHEDULE.ata
  is '实际结束时间';
comment on column T_TR_SCHEDULE.train_hours
  is '实际课时(分钟)';
comment on column T_TR_SCHEDULE.train_flag
  is '训练标志(0正常1补训)';
comment on column T_TR_SCHEDULE.train_result_yn
  is '合格否(Y/N)';
comment on column T_TR_SCHEDULE.train_result
  is '教员评语';
comment on column T_TR_SCHEDULE.instructor
  is '教员';
comment on column T_TR_SCHEDULE.oper
  is '经办人';
comment on column T_TR_SCHEDULE.op_time
  is '操作时间';
comment on column T_TR_SCHEDULE.remarks
  is '备注';
comment on column T_TR_SCHEDULE.oper_ip
  is 'IP地址';
comment on column T_TR_SCHEDULE.oper_host
  is '主机名';
comment on column T_TR_SCHEDULE.is_from_fxw
  is '是否从飞行网导入';
comment on column T_TR_SCHEDULE.updowns
  is '起落次数';
comment on column T_TR_SCHEDULE.rec_id
  is '能唯一标识本条记录。用于记录删除日志，并同步给飞行网，以便增量同步';
comment on column T_TR_SCHEDULE.seat
  is '左座(C)/右座(F)';
comment on column T_TR_SCHEDULE.table_name
  is '飞行培训的表名';
comment on column T_TR_SCHEDULE.table_id
  is '飞行培训的表中对应的主键值';
create index IDX_TR_SCHEDULE_PCODE on T_TR_SCHEDULE (P_CODE)
  tablespace CEACREW_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 11M
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table T_TR_SCHEDULE
  add constraint PK_TRAIN_SCHEDULE primary key (TRAIN_ID, P_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 24M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SCHEDULE20150321
prompt ====================================
prompt
create table T_TR_SCHEDULE20150321
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) not null,
  train_flag      NUMBER(11) not null,
  train_result_yn VARCHAR2(1),
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1),
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SCHEDULE20150326
prompt ====================================
prompt
create table T_TR_SCHEDULE20150326
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) not null,
  train_flag      NUMBER(11) not null,
  train_result_yn VARCHAR2(1),
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1),
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SCHEDULE20150327
prompt ====================================
prompt
create table T_TR_SCHEDULE20150327
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) not null,
  train_flag      NUMBER(11) not null,
  train_result_yn VARCHAR2(1),
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1),
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SCHEDULE_LOG
prompt ================================
prompt
create table T_TR_SCHEDULE_LOG
(
  log_id        NUMBER(11) not null,
  train_id      NUMBER(11) not null,
  train_date    DATE not null,
  train_info    VARCHAR2(200),
  fjs_order     NUMBER(4),
  rank_no       VARCHAR2(4) not null,
  old_p_code    VARCHAR2(10),
  p_code        VARCHAR2(10),
  modify_type   VARCHAR2(1) not null,
  train_type    VARCHAR2(3),
  modify_reason VARCHAR2(50),
  notify_flag   VARCHAR2(1) default 'N' not null,
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 8M
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_SCHEDULE_LOG
  is '模拟机排班日志表';
comment on column T_TR_SCHEDULE_LOG.log_id
  is '日志ID';
comment on column T_TR_SCHEDULE_LOG.train_id
  is '课程/科目ID';
comment on column T_TR_SCHEDULE_LOG.train_date
  is '课程/科目日期';
comment on column T_TR_SCHEDULE_LOG.train_info
  is '课程/科目信息';
comment on column T_TR_SCHEDULE_LOG.fjs_order
  is '机上位置';
comment on column T_TR_SCHEDULE_LOG.rank_no
  is '机上岗位';
comment on column T_TR_SCHEDULE_LOG.old_p_code
  is '原来人员';
comment on column T_TR_SCHEDULE_LOG.p_code
  is '新排人员';
comment on column T_TR_SCHEDULE_LOG.modify_type
  is '操作类型(I:新增,U:更新,D:删除)';
comment on column T_TR_SCHEDULE_LOG.train_type
  is '训练类型';
comment on column T_TR_SCHEDULE_LOG.modify_reason
  is '修改原因';
comment on column T_TR_SCHEDULE_LOG.notify_flag
  is '通知标志';
comment on column T_TR_SCHEDULE_LOG.oper
  is '操作人';
comment on column T_TR_SCHEDULE_LOG.op_time
  is '操作时间';
comment on column T_TR_SCHEDULE_LOG.remarks
  is '备注';
comment on column T_TR_SCHEDULE_LOG.oper_ip
  is 'IP地址';
comment on column T_TR_SCHEDULE_LOG.oper_host
  is '主机名';

prompt
prompt Creating table T_TR_SCHEDULE_PEKD
prompt =================================
prompt
create table T_TR_SCHEDULE_PEKD
(
  train_id        NUMBER(11) not null,
  train_date      DATE not null,
  p_code          VARCHAR2(10) not null,
  fjs_order       NUMBER(3) not null,
  rank_no         VARCHAR2(4) not null,
  ts_flag         VARCHAR2(1),
  atd             DATE,
  ata             DATE,
  train_hours     NUMBER(6) not null,
  train_flag      NUMBER(11) not null,
  train_result_yn VARCHAR2(1),
  train_result    VARCHAR2(100),
  instructor      VARCHAR2(10),
  oper            VARCHAR2(10),
  op_time         DATE,
  remarks         VARCHAR2(200),
  oper_ip         VARCHAR2(15),
  oper_host       VARCHAR2(50),
  is_from_fxw     VARCHAR2(1),
  updowns         NUMBER(3),
  rec_id          NUMBER(11),
  seat            VARCHAR2(1),
  sim_type        VARCHAR2(4),
  table_name      VARCHAR2(60),
  table_id        VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SIMULATOR
prompt =============================
prompt
create table T_TR_SIMULATOR
(
  country_code VARCHAR2(10) not null,
  simu_code    VARCHAR2(10) not null,
  simu_name    VARCHAR2(60) not null,
  simu_ename   VARCHAR2(100),
  simu_hours   NUMBER(6) default 240 not null,
  simu_address VARCHAR2(100),
  train_type   VARCHAR2(10) default '1' not null,
  simu_yn      VARCHAR2(1) default 'Y' not null,
  ac_type_crew VARCHAR2(10),
  tel          VARCHAR2(30),
  oper         VARCHAR2(10),
  op_time      DATE,
  remarks      VARCHAR2(200),
  oper_ip      VARCHAR2(15),
  oper_host    VARCHAR2(50),
  leader       VARCHAR2(60)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_SIMULATOR
  is '培训设施资源表';
comment on column T_TR_SIMULATOR.country_code
  is '国家';
comment on column T_TR_SIMULATOR.simu_code
  is '设施编码';
comment on column T_TR_SIMULATOR.simu_name
  is '设施名称';
comment on column T_TR_SIMULATOR.simu_ename
  is '设施英文名称';
comment on column T_TR_SIMULATOR.simu_hours
  is '标准课时(分钟)';
comment on column T_TR_SIMULATOR.simu_address
  is '设施地址';
comment on column T_TR_SIMULATOR.train_type
  is '1模拟机2理论3本场4航班';
comment on column T_TR_SIMULATOR.simu_yn
  is '是否本公司资源(Y/N)';
comment on column T_TR_SIMULATOR.ac_type_crew
  is '排班机型组';
comment on column T_TR_SIMULATOR.tel
  is '联系电话';
comment on column T_TR_SIMULATOR.oper
  is '操作人';
comment on column T_TR_SIMULATOR.op_time
  is '操作时间';
comment on column T_TR_SIMULATOR.remarks
  is '备注';
comment on column T_TR_SIMULATOR.oper_ip
  is 'IP地址';
comment on column T_TR_SIMULATOR.oper_host
  is '主机名';
comment on column T_TR_SIMULATOR.leader
  is '联系人';
alter table T_TR_SIMULATOR
  add constraint PK_SIMU_ORG primary key (SIMU_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_TR_SUBJECT
prompt ===========================
prompt
create table T_TR_SUBJECT
(
  subject_code  VARCHAR2(10) not null,
  subject_name  VARCHAR2(50) not null,
  subject_ename VARCHAR2(100),
  subject_desc  VARCHAR2(500),
  train_type    VARCHAR2(1) default '1' not null,
  qlf_type_code VARCHAR2(10),
  argb          NUMBER(9),
  remind_yn     VARCHAR2(1) default 'N',
  remind_days   NUMBER(3) default 0,
  check_yn      VARCHAR2(1) default 'N',
  module_flag   VARCHAR2(1) not null,
  fly_hours     NUMBER(5),
  up_downs      NUMBER(5),
  valid_flag    VARCHAR2(1) default 'Y',
  oper          VARCHAR2(10),
  op_time       DATE,
  remarks       VARCHAR2(200),
  oper_ip       VARCHAR2(15),
  oper_host     VARCHAR2(50)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_TR_SUBJECT
  is '训练科目表';
comment on column T_TR_SUBJECT.subject_code
  is '科目编码';
comment on column T_TR_SUBJECT.subject_name
  is '科目名称';
comment on column T_TR_SUBJECT.subject_ename
  is '科目英文名称';
comment on column T_TR_SUBJECT.subject_desc
  is '科目描述';
comment on column T_TR_SUBJECT.train_type
  is '1模拟机2理论3本场4航班';
comment on column T_TR_SUBJECT.qlf_type_code
  is '资质类别代码';
comment on column T_TR_SUBJECT.argb
  is '用户自定义颜色';
comment on column T_TR_SUBJECT.remind_yn
  is '是否自动提醒';
comment on column T_TR_SUBJECT.remind_days
  is '提前提醒天数';
comment on column T_TR_SUBJECT.check_yn
  is '是否签注';
comment on column T_TR_SUBJECT.module_flag
  is '模块(F飞行C乘务A''空警M机务)';
comment on column T_TR_SUBJECT.fly_hours
  is '训练时长';
comment on column T_TR_SUBJECT.up_downs
  is '起落次数';
comment on column T_TR_SUBJECT.valid_flag
  is '有效标志';
comment on column T_TR_SUBJECT.oper
  is '操作人';
comment on column T_TR_SUBJECT.op_time
  is '操作时间';
comment on column T_TR_SUBJECT.remarks
  is '备注';
comment on column T_TR_SUBJECT.oper_ip
  is 'IP地址';
comment on column T_TR_SUBJECT.oper_host
  is '主机名';
alter table T_TR_SUBJECT
  add constraint PK_SUBJECT primary key (SUBJECT_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_VERSON_INFOMATION
prompt ==================================
prompt
create table T_VERSON_INFOMATION
(
  id        VARCHAR2(20) not null,
  versonnum VARCHAR2(20),
  issuedate DATE,
  remarks   CLOB
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_VERSON_INFOMATION
  is '版本信息表';
comment on column T_VERSON_INFOMATION.id
  is '序列';
comment on column T_VERSON_INFOMATION.versonnum
  is '版本号';
comment on column T_VERSON_INFOMATION.issuedate
  is '版本发布日期';
comment on column T_VERSON_INFOMATION.remarks
  is '描述';
alter table T_VERSON_INFOMATION
  add constraint T_VERSON_INFOMATION_PK primary key (ID)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table T_WARN
prompt =====================
prompt
create table T_WARN
(
  ds_name   VARCHAR2(100) not null,
  role_code VARCHAR2(8) not null,
  warn_days NUMBER(3) default 30 not null,
  warn_type VARCHAR2(1) default 'Y' not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table T_WARN
  is '提醒设置表';
comment on column T_WARN.ds_name
  is 'DS名称';
comment on column T_WARN.role_code
  is '角色代码';
comment on column T_WARN.warn_days
  is '提醒天数';
comment on column T_WARN.warn_type
  is '提醒类型(Y自动N手工)';
alter table T_WARN
  add constraint PK_T_WARN primary key (DS_NAME, ROLE_CODE)
  using index 
  tablespace CEACREW_IDX
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 128K
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table V_FTB20150414
prompt ============================
prompt
create table V_FTB20150414
(
  ftb_no           VARCHAR2(12),
  flight_id        NUMBER(11) not null,
  totl_hours       NUMBER,
  taxi_out_time    DATE,
  takeoff_time     DATE,
  landing_time     DATE,
  taxi_in_time     DATE,
  grnd_hours       NUMBER,
  air_hours        NUMBER,
  night_hours      NUMBER,
  is_icao          VARCHAR2(1),
  last_modify_time DATE,
  old_fuel         NUMBER,
  new_fuel         NUMBER,
  left_fuel        NUMBER,
  rec_id           NUMBER(11) not null
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 1M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating table WRONG_1
prompt ======================
prompt
create table WRONG_1
(
  rank_no           VARCHAR2(4) not null,
  flight_date       DATE not null,
  departure_airport VARCHAR2(4) not null,
  arrival_airport   VARCHAR2(4) not null,
  std               DATE not null,
  days              NUMBER,
  n_date            DATE,
  b_date            DATE,
  laiyuan           VARCHAR2(7),
  p_code            VARCHAR2(600),
  airport           VARCHAR2(6),
  log_id            NUMBER(12),
  table_name        VARCHAR2(50),
  key_values        VARCHAR2(300),
  chg_columns       VARCHAR2(2000),
  chg_values        VARCHAR2(4000),
  uids              VARCHAR2(1),
  module_flag       VARCHAR2(1),
  oper              VARCHAR2(10),
  op_time           DATE,
  remarks           VARCHAR2(200),
  oper_ip           VARCHAR2(15),
  oper_host         VARCHAR2(50),
  flight_leg_id     NUMBER(11)
)
tablespace CEACREW_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 5M
    next 1M
    minextents 1
    maxextents unlimited
  );

prompt
prompt Creating sequence PRF_FLIGHT_APPLY_GUID
prompt =======================================
prompt
create sequence PRF_FLIGHT_APPLY_GUID
minvalue 1
maxvalue 9999999999999999999999999999
start with 421
increment by 1
cache 20;

prompt
prompt Creating sequence PRF_FLIGHT_LOCK_GUID
prompt ======================================
prompt
create sequence PRF_FLIGHT_LOCK_GUID
minvalue 1
maxvalue 9999999999999999999999999999
start with 121
increment by 1
cache 20;

prompt
prompt Creating sequence SEP_PRF_HILIDAY_SCHPLAN
prompt =========================================
prompt
create sequence SEP_PRF_HILIDAY_SCHPLAN
minvalue 1
maxvalue 9999999999999999999999999999
start with 721
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_AIRCRAFT_LOG_ID
prompt =====================================
prompt
create sequence SEQ_AIRCRAFT_LOG_ID
minvalue 1
maxvalue 99999999999
start with 63221
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_AIRCRAFT_LOG_ID_TEST
prompt ==========================================
prompt
create sequence SEQ_AIRCRAFT_LOG_ID_TEST
minvalue 1
maxvalue 9999999999
start with 61
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_AOC_BLOCK_ID
prompt ==================================
prompt
create sequence SEQ_AOC_BLOCK_ID
minvalue 1
maxvalue 9999999999
start with 408883
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_ATTENDANCE_ID
prompt ===================================
prompt
create sequence SEQ_ATTENDANCE_ID
minvalue 1
maxvalue 99999999999
start with 304406
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_BACK_ID
prompt =============================
prompt
create sequence SEQ_BACK_ID
minvalue 1
maxvalue 99999999999
start with 1673
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_BASE_ENTRYTIME_ID
prompt =======================================
prompt
create sequence SEQ_BASE_ENTRYTIME_ID
minvalue 1
maxvalue 99999999
start with 121
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_CARES_NEWOPS_LOGID
prompt ========================================
prompt
create sequence SEQ_CARES_NEWOPS_LOGID
minvalue 1
maxvalue 99999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_CEAFTC_LOG_ID
prompt ===================================
prompt
create sequence SEQ_CEAFTC_LOG_ID
minvalue 1
maxvalue 9999999999
start with 17447412
increment by 1
cache 100;

prompt
prompt Creating sequence SEQ_CK_FOC_LOG_ID
prompt ===================================
prompt
create sequence SEQ_CK_FOC_LOG_ID
minvalue 1
maxvalue 99999999999
start with 17241
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_COURSE_DETAIL_ID
prompt ======================================
prompt
create sequence SEQ_COURSE_DETAIL_ID
minvalue 1
maxvalue 99999999999
start with 1183
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_COURSE_ID
prompt ===============================
prompt
create sequence SEQ_COURSE_ID
minvalue 1
maxvalue 9999999999
start with 998
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_CREW_ID
prompt =============================
prompt
create sequence SEQ_CREW_ID
minvalue 1
maxvalue 99999999999
start with 2299
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_CREW_LINK_LINE
prompt ====================================
prompt
create sequence SEQ_CREW_LINK_LINE
minvalue 1
maxvalue 99999999999
start with 10694681
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_CREW_MEMBER_ID
prompt ====================================
prompt
create sequence SEQ_CREW_MEMBER_ID
minvalue 1
maxvalue 99999999999
start with 4183
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_CREW_PAIRING_LINE
prompt =======================================
prompt
create sequence SEQ_CREW_PAIRING_LINE
minvalue 1
maxvalue 99999999999
start with 5505551
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DOCTOR_MONITOR_ID
prompt =======================================
prompt
create sequence SEQ_DOCTOR_MONITOR_ID
minvalue 1
maxvalue 99999999999
start with 1052
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DOCTOR_PCODE
prompt ==================================
prompt
create sequence SEQ_DOCTOR_PCODE
minvalue 1
maxvalue 9999999999
start with 1026
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DOCTOR_RECORD_ID
prompt ======================================
prompt
create sequence SEQ_DOCTOR_RECORD_ID
minvalue 1
maxvalue 99999999999
start with 5728
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DOCTOR_TERM_ID
prompt ====================================
prompt
create sequence SEQ_DOCTOR_TERM_ID
minvalue 1
maxvalue 99999999999
start with 266
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DOC_ID
prompt ============================
prompt
create sequence SEQ_DOC_ID
minvalue 1
maxvalue 99999999999
start with 107241
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DOC_LOG_ID
prompt ================================
prompt
create sequence SEQ_DOC_LOG_ID
minvalue 1
maxvalue 99999999999
start with 408637
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DS_CALL_LOGS
prompt ==================================
prompt
create sequence SEQ_DS_CALL_LOGS
minvalue 1
maxvalue 9999999999
start with 10500222
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DS_FUNCTION
prompt =================================
prompt
create sequence SEQ_DS_FUNCTION
minvalue 1
maxvalue 999999
start with 618
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DS_LOG
prompt ============================
prompt
create sequence SEQ_DS_LOG
minvalue 1
maxvalue 99999999999
start with 56601968
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_DUTY_TYPE_ID
prompt ==================================
prompt
create sequence SEQ_DUTY_TYPE_ID
minvalue 1
maxvalue 9999999999
start with 461
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_FLIGHT_ID
prompt ===============================
prompt
create sequence SEQ_FLIGHT_ID
minvalue 1
maxvalue 99999999999
start with 6953596
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_FLT_ACREG
prompt ===============================
prompt
create sequence SEQ_FLT_ACREG
minvalue 1
maxvalue 999999999999999999999999999
start with 813321
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_FLT_ADJUST
prompt ================================
prompt
create sequence SEQ_FLT_ADJUST
minvalue 1
maxvalue 99999999999
start with 34451168
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_FLT_FEN_ID
prompt ================================
prompt
create sequence SEQ_FLT_FEN_ID
minvalue 1
maxvalue 999999999
start with 52
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_FLT_FILIALE_ID
prompt ====================================
prompt
create sequence SEQ_FLT_FILIALE_ID
minvalue 1
maxvalue 99999999999
start with 15299
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_FLT_LOG
prompt =============================
prompt
create sequence SEQ_FLT_LOG
minvalue 1
maxvalue 999999999999999999999999999
start with 1676347
increment by 1
cache 100;

prompt
prompt Creating sequence SEQ_FLT_UNIFIED
prompt =================================
prompt
create sequence SEQ_FLT_UNIFIED
minvalue 1
maxvalue 999999999999999999999999999
start with 21
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_GUN_ID
prompt ============================
prompt
create sequence SEQ_GUN_ID
minvalue 1
maxvalue 9999
start with 5665
increment by 1
cache 20
cycle;

prompt
prompt Creating sequence SEQ_HOLIDAY_ID
prompt ================================
prompt
create sequence SEQ_HOLIDAY_ID
minvalue 1
maxvalue 99999999999
start with 111
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_HR_FINERID
prompt ================================
prompt
create sequence SEQ_HR_FINERID
minvalue 1
maxvalue 99999999999
start with 13421
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_HR_PCODE
prompt ==============================
prompt
create sequence SEQ_HR_PCODE
minvalue 1
maxvalue 9999999999
start with 21595
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTEGRALCYCLE_ID
prompt ======================================
prompt
create sequence SEQ_INTEGRALCYCLE_ID
minvalue 1
maxvalue 9999999999
start with 305
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_DELLOG
prompt =================================
prompt
create sequence SEQ_INTF_DELLOG
minvalue 1
maxvalue 99999999999
start with 20291958
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_FGW_LINE_ID
prompt ======================================
prompt
create sequence SEQ_INTF_FGW_LINE_ID
minvalue 10000000000
maxvalue 999999999999999999
start with 10000012269
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_CUSTDETAIL
prompt ===========================================
prompt
create sequence SEQ_INTF_RECID_CUSTDETAIL
minvalue 1
maxvalue 99999999999
start with 4222124
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_BOARDDELTA
prompt ===============================================
prompt
create sequence SEQ_INTF_RECID_FGW_BOARDDELTA
minvalue 1
maxvalue 99999999999
start with 6158
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_CREWDELTA
prompt ==============================================
prompt
create sequence SEQ_INTF_RECID_FGW_CREWDELTA
minvalue 1
maxvalue 99999999999
start with 27919
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_LICENSE
prompt ============================================
prompt
create sequence SEQ_INTF_RECID_FGW_LICENSE
minvalue 1
maxvalue 99999999999
start with 65734
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_LINEDELTA
prompt ==============================================
prompt
create sequence SEQ_INTF_RECID_FGW_LINEDELTA
minvalue 1
maxvalue 99999999999
start with 11619
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_PASSPORT
prompt =============================================
prompt
create sequence SEQ_INTF_RECID_FGW_PASSPORT
minvalue 1
maxvalue 99999999999
start with 23048
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_PASSREPORT
prompt ===============================================
prompt
create sequence SEQ_INTF_RECID_FGW_PASSREPORT
minvalue 1
maxvalue 999999999
start with 2146
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_QLFDELTA
prompt =============================================
prompt
create sequence SEQ_INTF_RECID_FGW_QLFDELTA
minvalue 1
maxvalue 99999999999
start with 161067
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_TECHDELTA
prompt ==============================================
prompt
create sequence SEQ_INTF_RECID_FGW_TECHDELTA
minvalue 1
maxvalue 99999999999
start with 46661
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_TRANSDELTA
prompt ===============================================
prompt
create sequence SEQ_INTF_RECID_FGW_TRANSDELTA
minvalue 1
maxvalue 999999999999
start with 5040
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FGW_VISA
prompt =========================================
prompt
create sequence SEQ_INTF_RECID_FGW_VISA
minvalue 1
maxvalue 99999999999
start with 17360
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FTB
prompt ====================================
prompt
create sequence SEQ_INTF_RECID_FTB
minvalue 1
maxvalue 99999999999
start with 2812189
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_FTBDETAIL
prompt ==========================================
prompt
create sequence SEQ_INTF_RECID_FTBDETAIL
minvalue 1
maxvalue 99999999999
start with 6950248
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_KQ_CHECKINDELTA
prompt ================================================
prompt
create sequence SEQ_INTF_RECID_KQ_CHECKINDELTA
minvalue 1
maxvalue 99999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_PAIRING
prompt ========================================
prompt
create sequence SEQ_INTF_RECID_PAIRING
minvalue 1
maxvalue 99999999999
start with 1668092
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_INTF_RECID_PAIRING_EFB
prompt ============================================
prompt
create sequence SEQ_INTF_RECID_PAIRING_EFB
minvalue 1
maxvalue 99999999999
start with 1671257
increment by 1
cache 500;

prompt
prompt Creating sequence SEQ_INTF_RECID_ROSTER
prompt =======================================
prompt
create sequence SEQ_INTF_RECID_ROSTER
minvalue 1
maxvalue 99999999999
start with 14029317
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_LICENSE_ID
prompt ================================
prompt
create sequence SEQ_LICENSE_ID
minvalue 1
maxvalue 99999999999
start with 94753
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_LOG_ID
prompt ============================
prompt
create sequence SEQ_LOG_ID
minvalue 1
maxvalue 99999999999
start with 198089109
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MAINT_LOG_ID
prompt ==================================
prompt
create sequence SEQ_MAINT_LOG_ID
minvalue 1
maxvalue 99999999999
start with 567555
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MEDI_FLIGHTHEALTH_ID
prompt ==========================================
prompt
create sequence SEQ_MEDI_FLIGHTHEALTH_ID
minvalue 1
maxvalue 99999999999
start with 37
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MEDI_HEALTH_ID
prompt ====================================
prompt
create sequence SEQ_MEDI_HEALTH_ID
minvalue 1
maxvalue 9999999999999999999999999999
start with 821
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MEDI_MONITOR_ED
prompt =====================================
prompt
create sequence SEQ_MEDI_MONITOR_ED
minvalue 1
maxvalue 9999999999999999999999999999
start with 81
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MEDI_MONITOR_EF
prompt =====================================
prompt
create sequence SEQ_MEDI_MONITOR_EF
minvalue 1
maxvalue 9999999999999999999999999999
start with 41
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MEDI_MONITOR_VI
prompt =====================================
prompt
create sequence SEQ_MEDI_MONITOR_VI
minvalue 1
maxvalue 9999999999999999999999999999
start with 41
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MEDI_PRINT_ID
prompt ===================================
prompt
create sequence SEQ_MEDI_PRINT_ID
minvalue 1
maxvalue 99999999999
start with 146
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MM_LOGID
prompt ==============================
prompt
create sequence SEQ_MM_LOGID
minvalue 1
maxvalue 9999999999
start with 357743
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MM_LOG_ID
prompt ===============================
prompt
create sequence SEQ_MM_LOG_ID
minvalue 1
maxvalue 99999999999
start with 485046
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MM_MESSAGE_ID
prompt ===================================
prompt
create sequence SEQ_MM_MESSAGE_ID
minvalue 1
maxvalue 99999999999
start with 3302
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MORCS_DUTYTIME_ID
prompt =======================================
prompt
create sequence SEQ_MORCS_DUTYTIME_ID
minvalue 0
maxvalue 9999999999999999999999999999
start with 3605083
increment by 1
cache 150;

prompt
prompt Creating sequence SEQ_MSG_EMAIL_ID
prompt ==================================
prompt
create sequence SEQ_MSG_EMAIL_ID
minvalue 1
maxvalue 99999999999
start with 84
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MSG_GROUP_ID
prompt ==================================
prompt
create sequence SEQ_MSG_GROUP_ID
minvalue 1
maxvalue 99999999999
start with 87
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MSG_INFO_ID
prompt =================================
prompt
create sequence SEQ_MSG_INFO_ID
minvalue 1
maxvalue 99999999999
start with 1727
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MSG_NO
prompt ============================
prompt
create sequence SEQ_MSG_NO
minvalue 1
maxvalue 999999999999
start with 373418
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MSG_REV_ID
prompt ================================
prompt
create sequence SEQ_MSG_REV_ID
minvalue 1
maxvalue 99999999999
start with 13075
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_MSG_TYPE_ID
prompt =================================
prompt
create sequence SEQ_MSG_TYPE_ID
minvalue 1
maxvalue 9999999999
start with 272
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PAIRING_CREW_LOG_ID
prompt =========================================
prompt
create sequence SEQ_PAIRING_CREW_LOG_ID
minvalue 1
maxvalue 9999999999
start with 5007
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PLAN_CHANGE_FLTSCH
prompt ========================================
prompt
create sequence SEQ_PLAN_CHANGE_FLTSCH
minvalue 1
maxvalue 9999999999999999999999999999
start with 61
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PLAN_DIRECTORY
prompt ====================================
prompt
create sequence SEQ_PLAN_DIRECTORY
minvalue 1
maxvalue 99999999999
start with 67
increment by 1
nocache;

prompt
prompt Creating sequence SEQ_PLAN_FLTCHANGE
prompt ====================================
prompt
create sequence SEQ_PLAN_FLTCHANGE
minvalue 1
maxvalue 999999999999999999999999999
start with 101
increment by 1
cache 100;

prompt
prompt Creating sequence SEQ_PLAN_ID
prompt =============================
prompt
create sequence SEQ_PLAN_ID
minvalue 0
maxvalue 99999999999
start with 621
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PLAN_POLICYDEFINTIONS
prompt ===========================================
prompt
create sequence SEQ_PLAN_POLICYDEFINTIONS
minvalue 1
maxvalue 9999999999999999999999999999
start with 1
increment by 1
cache 100;

prompt
prompt Creating sequence SEQ_PLAN_RULE_PACKAGES
prompt ========================================
prompt
create sequence SEQ_PLAN_RULE_PACKAGES
minvalue 1
maxvalue 9999999999999999999999999999
start with 1
increment by 1
cache 100;

prompt
prompt Creating sequence SEQ_PRF_APPRAISALID
prompt =====================================
prompt
create sequence SEQ_PRF_APPRAISALID
minvalue 1
maxvalue 9999999999
start with 4445
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_FLIGHT_APPLY
prompt ======================================
prompt
create sequence SEQ_PRF_FLIGHT_APPLY
minvalue 1
maxvalue 9999999999999999999999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_FLIGHT_APPLY_APPID
prompt ============================================
prompt
create sequence SEQ_PRF_FLIGHT_APPLY_APPID
minvalue 1
maxvalue 9999999999
start with 1581
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_HOLIDAY_BUY
prompt =====================================
prompt
create sequence SEQ_PRF_HOLIDAY_BUY
minvalue 1
maxvalue 9999999999999999999999999999
start with 221
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_HOLIDAY_SALE
prompt ======================================
prompt
create sequence SEQ_PRF_HOLIDAY_SALE
minvalue 1
maxvalue 9999999999999999999999999999
start with 261
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_LOCK_ID
prompt =================================
prompt
create sequence SEQ_PRF_LOCK_ID
minvalue 1
maxvalue 9999999999
start with 481
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_OCCUPIED
prompt ==================================
prompt
create sequence SEQ_PRF_OCCUPIED
minvalue 1
maxvalue 9999999999999999999999999999
start with 10161
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_RECORD
prompt ================================
prompt
create sequence SEQ_PRF_RECORD
minvalue 1
maxvalue 9999999999
start with 175048
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_PRF_SCORES
prompt ================================
prompt
create sequence SEQ_PRF_SCORES
minvalue 1
maxvalue 9999999999
start with 333960
increment by 1
cache 50;

prompt
prompt Creating sequence SEQ_QLF_CODE_ID
prompt =================================
prompt
create sequence SEQ_QLF_CODE_ID
minvalue 1
maxvalue 99999999999
start with 817
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_QLF_ID
prompt ============================
prompt
create sequence SEQ_QLF_ID
minvalue 1
maxvalue 99999999999
start with 272011
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_ROLE_ID
prompt =============================
prompt
create sequence SEQ_ROLE_ID
minvalue 1
maxvalue 99999999
start with 882
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_ROSTER_DOCBACK_ID
prompt =======================================
prompt
create sequence SEQ_ROSTER_DOCBACK_ID
minvalue 1
maxvalue 999999999
start with 21583850
increment by 1
cache 100;

prompt
prompt Creating sequence SEQ_ROSTER_DOCEXC_ID
prompt ======================================
prompt
create sequence SEQ_ROSTER_DOCEXC_ID
minvalue 1
maxvalue 999999999
start with 4089
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RPT_FLIGHTRATING_ID
prompt =========================================
prompt
create sequence SEQ_RPT_FLIGHTRATING_ID
minvalue 1
maxvalue 99999999999
start with 81
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_AIRPORTRESTTIME
prompt ==========================================
prompt
create sequence SEQ_RULE_AIRPORTRESTTIME
minvalue 1
maxvalue 99999999999
start with 23
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_FUN_ID
prompt =================================
prompt
create sequence SEQ_RULE_FUN_ID
minvalue 1
maxvalue 999999
start with 1109
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_ID
prompt =============================
prompt
create sequence SEQ_RULE_ID
minvalue 1
maxvalue 99999999999
start with 3446
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_NIGHTFLIGHT
prompt ======================================
prompt
create sequence SEQ_RULE_NIGHTFLIGHT
minvalue 1
maxvalue 99999999999
start with 25
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_NOTINSAMEPAIRING
prompt ===========================================
prompt
create sequence SEQ_RULE_NOTINSAMEPAIRING
minvalue 1
maxvalue 99999999999
start with 46
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_OVERNIGHT
prompt ====================================
prompt
create sequence SEQ_RULE_OVERNIGHT
minvalue 1
maxvalue 99999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_PACKAGE
prompt ==================================
prompt
create sequence SEQ_RULE_PACKAGE
minvalue 1
maxvalue 9999999999
start with 21
increment by 1
cache 20
order;

prompt
prompt Creating sequence SEQ_RULE_PUNCH_ID
prompt ===================================
prompt
create sequence SEQ_RULE_PUNCH_ID
minvalue 1
maxvalue 999999
start with 1381
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_RULE_TWOAIRNOTINSAMEDUTY
prompt ==============================================
prompt
create sequence SEQ_RULE_TWOAIRNOTINSAMEDUTY
minvalue 1
maxvalue 99999999999
start with 43
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SCH_ABNORMAL_ID
prompt =====================================
prompt
create sequence SEQ_SCH_ABNORMAL_ID
minvalue 1
maxvalue 99999999999
start with 47569069
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SCH_DUTY_ID
prompt =================================
prompt
create sequence SEQ_SCH_DUTY_ID
minvalue 1
maxvalue 99999999999
start with 384
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SCH_NIGHT_ID
prompt ==================================
prompt
create sequence SEQ_SCH_NIGHT_ID
minvalue 1
maxvalue 99999999999
start with 6138
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SCH_TEMP_ID
prompt =================================
prompt
create sequence SEQ_SCH_TEMP_ID
minvalue 1
maxvalue 99999999999
start with 1253
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SMS_ID
prompt ============================
prompt
create sequence SEQ_SMS_ID
minvalue 1
maxvalue 99999999999
start with 3054957
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SPECIAL_AIRPORT_ID
prompt ========================================
prompt
create sequence SEQ_SPECIAL_AIRPORT_ID
minvalue 1
maxvalue 99999999999
start with 5599
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SSIM_ID
prompt =============================
prompt
create sequence SEQ_SSIM_ID
minvalue 1
maxvalue 99999999999
start with 1301
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SSIM_MESSAGE_ID
prompt =====================================
prompt
create sequence SEQ_SSIM_MESSAGE_ID
minvalue 1
maxvalue 9999999999
start with 246
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SSM_ID
prompt ============================
prompt
create sequence SEQ_SSM_ID
minvalue 1
maxvalue 99999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_STEP_ID
prompt =============================
prompt
create sequence SEQ_STEP_ID
minvalue 1
maxvalue 99999999999
start with 17469622
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_STUDENT
prompt =============================
prompt
create sequence SEQ_STUDENT
minvalue 1
maxvalue 9999999999999999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SUBJECT_ID
prompt ================================
prompt
create sequence SEQ_SUBJECT_ID
minvalue 1
maxvalue 9999999999
start with 1199
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SYS_QUESTION
prompt ==================================
prompt
create sequence SEQ_SYS_QUESTION
minvalue 1
maxvalue 999999999999
start with 57
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_SYS_UNIT_ID
prompt =================================
prompt
create sequence SEQ_SYS_UNIT_ID
minvalue 1
maxvalue 99999999999
start with 1357
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T2001SAP_LOG_ID
prompt =====================================
prompt
create sequence SEQ_T2001SAP_LOG_ID
minvalue 1
maxvalue 9999999999999999999999999999
start with 81
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T8101_MSG_NO
prompt ==================================
prompt
create sequence SEQ_T8101_MSG_NO
minvalue 10000000
maxvalue 99999999
start with 13332281
increment by 1
nocache
cycle;

prompt
prompt Creating sequence SEQ_TECH_HIS_ID
prompt =================================
prompt
create sequence SEQ_TECH_HIS_ID
minvalue 1
maxvalue 99999999999
start with 27370
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TECH_UP_ID
prompt ================================
prompt
create sequence SEQ_TECH_UP_ID
minvalue 1
maxvalue 999999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TMP_IMP_ID
prompt ================================
prompt
create sequence SEQ_TMP_IMP_ID
minvalue 1
maxvalue 999999999
start with 281
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TOKEN_RECORD
prompt ==================================
prompt
create sequence SEQ_TOKEN_RECORD
minvalue 1
maxvalue 99999999999
start with 1637
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TRAIN_ID
prompt ==============================
prompt
create sequence SEQ_TRAIN_ID
minvalue 1
maxvalue 99999999999
start with 2354531
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TRANSFER_ID
prompt =================================
prompt
create sequence SEQ_TRANSFER_ID
minvalue 1
maxvalue 99999999999
start with 94619
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TR_DDO_LOG
prompt ================================
prompt
create sequence SEQ_TR_DDO_LOG
minvalue 1
maxvalue 99999999999
start with 4316
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TR_DUTY_ID
prompt ================================
prompt
create sequence SEQ_TR_DUTY_ID
minvalue 1
maxvalue 999999999999
start with 13
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TR_FXW_LOGID
prompt ==================================
prompt
create sequence SEQ_TR_FXW_LOGID
minvalue 1
maxvalue 99999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TR_FXW_SPAID
prompt ==================================
prompt
create sequence SEQ_TR_FXW_SPAID
minvalue 1
maxvalue 99999999999999
start with 1832945
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TR_SCH_ID
prompt ===============================
prompt
create sequence SEQ_TR_SCH_ID
minvalue 1
maxvalue 999999999
start with 929
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_TR_SCH_RECID
prompt ==================================
prompt
create sequence SEQ_TR_SCH_RECID
minvalue 1
maxvalue 99999999999
start with 6824117
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T_FLT_ACREGHIS_ID
prompt =======================================
prompt
create sequence SEQ_T_FLT_ACREGHIS_ID
minvalue 1
maxvalue 9999999999999999999999999999
start with 796253
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T_INTF_LOG
prompt ================================
prompt
create sequence SEQ_T_INTF_LOG
minvalue 1
maxvalue 999999999999999999
start with 61
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T_PRF_FLIGHT_APPLY
prompt ========================================
prompt
create sequence SEQ_T_PRF_FLIGHT_APPLY
minvalue 1
maxvalue 9999999999999999999999999999
start with 1
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T_PRF_HOLIDAY_PLAN
prompt ========================================
prompt
create sequence SEQ_T_PRF_HOLIDAY_PLAN
minvalue 1
maxvalue 9999999999999999999999999999
start with 221
increment by 1
cache 20;

prompt
prompt Creating sequence SEQ_T_SCH_DUTYINFO
prompt ====================================
prompt
create sequence SEQ_T_SCH_DUTYINFO
minvalue 1
maxvalue 9999999999999999999
start with 1585
increment by 1
cache 50;

prompt
prompt Creating sequence SEQ_VERSION_ID
prompt ================================
prompt
create sequence SEQ_VERSION_ID
minvalue 1
maxvalue 99999999999
start with 380
increment by 1
cache 20;

prompt
prompt Creating synonym SEQ_DDO_ID
prompt ===========================
prompt
create or replace synonym SEQ_DDO_ID
  for SEQ_TR_SCH_RECID;

prompt
prompt Creating synonym V_CARES_FLIGHT_NEW
prompt ===================================
prompt
create or replace synonym V_CARES_FLIGHT_NEW
  for V_CARES_FLIGHT_NEW@ENGINEER;

prompt
prompt Creating synonym V_INTF_CARES_NEWOPS
prompt ====================================
prompt
create or replace synonym V_INTF_CARES_NEWOPS
  for ENGINEER.V_INTF_CARES_NEWOPS@ENGINEER;

prompt
prompt Creating synonym V_INTF_FOIS_FILIALE
prompt ====================================
prompt
create or replace synonym V_INTF_FOIS_FILIALE
  for V_INTF_TELE_FILIALE;

prompt
prompt Creating synonym V_INTF_FOIS_PARTIME
prompt ====================================
prompt
create or replace synonym V_INTF_FOIS_PARTIME
  for V_INTF_TELE_PARTIME;

prompt
prompt Creating synonym V_INTF_FOIS_RANK
prompt =================================
prompt
create or replace synonym V_INTF_FOIS_RANK
  for V_INTF_TELE_RANK;

prompt
prompt Creating view TR_VIEW
prompt =====================
prompt
create or replace force view tr_view as
select n.flight_id,
        p.p_code,
        p.cert_type,
        p.pass_id,
        p.visa_id,
        p.pass_no,
        p.issue_date,
        n.flight_date,
        n.departure_airport,
        n.arrival_airport
   from (select *
           from (select l.cert_type, (l2.cert_type) A_type, t.*
                   from t_flt_schedule t
                   left join t_hr_cert_limit l
                     on l.airport_code = t.departure_airport
                   left join t_hr_cert_limit l2
                     on l2.airport_code = t.arrival_airport) r
          where r.cert_type is not null
             or A_type is not null) n
   left join (
              select w.pass_id,
                      w.visa_id,
                      w.cert_type,
                      w.pass_no,
                      w.issue_date,
                      t.*
                from t_sch_roster t
                left join (select pass_id,
                                  to_char('') visa_id,
                                  p_code,
                                  cert_type,
                                  pass_no,
                                  issue_date
                             from t_hr_passport
                           union
                           select passport_id,
                                  to_char(visa_id),
                                  p_code,
                                  cert_type,
                                  visa_no,
                                  over_date
                             from t_hr_visa) w
                  on w.p_code = t.p_code) p
     on p.flight_id = n.flight_id
    and p.cert_type = n.cert_type;

prompt
prompt Creating type STRAGG_TYPE
prompt =========================
prompt
create or replace type stragg_type as object
(
  string varchar2(4000),

  static function ODCIAggregateInitialize
    ( sctx in out stragg_type )
    return number ,

  member function ODCIAggregateIterate
    ( self  in out stragg_type ,
      value in     varchar2
    ) return number ,

  member function ODCIAggregateTerminate
    ( self        in  stragg_type,
      returnvalue out varchar2,
      flags in number
    ) return number ,

  member function ODCIAggregateMerge
    ( self in out stragg_type,
      ctx2 in     stragg_type
    ) return number
)
/

prompt
prompt Creating function STRAGG
prompt ========================
prompt
create or replace function stragg
  ( input varchar2 )
  return varchar2
  deterministic
  parallel_enable
  aggregate using stragg_type
;
/

prompt
prompt Creating view V_ACTYPE_TECHZ
prompt ============================
prompt
create or replace force view v_actype_techz as
select aa.p_code,min(TECH_RANK) TECH_RANK,min(idx) idx,
        stragg(Distinct ac_TypesTechz) ac_TypesTechz,stragg(Distinct ac_FlyTypesTech) ac_FlyTypesTech

 from (
     select aa.p_code,bb.idx,TECH_RANK,
            aa.ac_type||bb.tech_name ac_TypesTechz,decode(aa.tech_no_z,'','',aa.ac_type||'-'||aa.tech_no_z ||' ') ac_FlyTypesTech
       from t_tech_info aa,t_bas_tech bb,t_hr_crew cc,t_hr_dept dd
      Where aa.tech_no_i = bb.tech_no
        and aa.valid_flag = 'Y'
        and bb.tech_type ='A'
        And bb.module_flag='F'
        And aa.p_code =cc.p_code
        And cc.dep_code =dd.dep_code
        --And aa.AC_TYPE =dd.Ac_Type_Crew
     ) aa

 Group by aa.p_code
;

prompt
prompt Creating view V_ACTYPE_TECHZ_ABOVEC2
prompt ====================================
prompt
create or replace force view v_actype_techz_abovec2 as
select aa.p_code,min(TECH_RANK) TECH_RANK,min(idx) idx,
        stragg(Distinct ac_TypesTechz) ac_TypesTechz,stragg(Distinct ac_FlyTypesTech) ac_FlyTypesTech

 from (
     select aa.p_code,bb.idx,ee.TECH_RANK,
            aa.ac_type||ee.tech_name ac_TypesTechz,decode(aa.tech_no_z,'','',aa.ac_type||'-'||aa.tech_no_z ||' ') ac_FlyTypesTech
       from t_tech_info aa,t_bas_tech bb,t_hr_crew cc,t_hr_dept dd,t_bas_tech ee
      Where aa.tech_no_i = ee.tech_no
        and aa.tech_no_z = bb.tech_no
        and aa.valid_flag = 'Y'
        and bb.tech_type ='A'
        And bb.module_flag='F'
        And aa.p_code =cc.p_code
        And cc.dep_code =dd.dep_code
        --And bb.In_Ex='Z'
        AND bb.idx <=14
        --And aa.AC_TYPE =dd.Ac_Type_Crew
     ) aa

 Group by aa.p_code
;

prompt
prompt Creating view V_CK_PUB_CREW_CREW
prompt ================================
prompt
create or replace force view v_ck_pub_crew_crew as
select /*????????????????????????????*/
        a.p_code,
        case
          when c.is_ground = 'Y' and work_no is null then --??????????????????G + p_code
           'G' || a.p_code
          else
           a.work_no
        end as work_no, /*????*/
        a.c_name, /*????*/
        a.py_abbr, /*????*/
        a.e_first_name, /*??????*/
        a.e_name, /*??????*/
        a.birth_date, /*????*/
        a.sex, /*????*/
        a.id_no, /*????????*/
        a.filiale, /*??????????????*/
        case
          when a.dep_code = 'EA10011012' then --????????
            a.branch_code
          else
            replace(a.dep_code,'EAJN','EA08')
        end as dep_code, /*????????,????????*/
        c.is_ground, /*????????????*/
        a.home_filiale as temp_filiale, /*????????????,??????????????????????temp_unit_code*/
        a.post_duty, /*????????*/
        a.post_rank, /*????????*/
        a.work_date, /*????????????*/
        a.college, /*????????*/
        a.en_date, /*????????*/
        a.grad_date, /*????????*/
        (select bm_name
           from t_bas_dict
          where parent_code = 'AC'
            and bm_code = a.culture) as culture, /*????????*/
        a.speciality, /*????????*/
        '5201' work_type, /*????????????????????????????????????(5201)??????(5202)??????(5203)*/
        a.address, /*????????*/
        a.phone, /*????????*/
        a.office_tel, /*??????????*/
        a.mobil_no, /*????*/
        a.tall, /*????*/
        a.mate_yn, /*????????*/
        a.party_date, /*????????*/
        (select country_name from t_bas_country where country_code = a.native) as native, /*????*/
        (select upper(country_3code)
           from t_bas_country
          where country_code = a.native) as en_native, /*????????*/
        (select bm_name
           from t_bas_dict
          where parent_code = 'AA'
            and bm_code = a.party) as party, /*????????*/
        a.weight, /*????*/
        a.enter_date, /*??????????*/
        a.born_in, /*??????????*/
        a.e_born_in, /*??????????*/
        a.en_address, /*????????????*/
        replace(a.branch_code,'EAJN','EA08') as branch_code, /*????????*/
        a.valid_flag, /*????????*/
        f.cert_no board_no, /*????????*/
        a.icao_cls as icao_eng, /*ICAO????*/
        a.icao_chk_date as icao_check_date, /*ICAO????????????*/
        a.icao_valid_date as icao_over_date, /*ICAO????????????*/
        /*a.healthlevel??hlcode,\*????????????*\*/
        (select d.bm_name
           from t_bas_dict d
          where d.parent_code = 'HL'
            and d.bm_code = a.healthlevel) hlname, /*????????????*/
        a.fxw_id,  /*??????ID*/
        a.module_flag, /*???????? F??????,M????????*/
        c.dep_name
   from t_hr_crew a,
        t_hr_dept c,
        (select e.p_code, e.cert_no, e.op_time
           from t_hr_cert e
          where e.cert_type = 'BORD'
            and e.valid_flag = 'Y') f
  where a.dep_code = c.dep_code(+)
    and a.p_code = f.p_code(+)
   /* 20160727 ??????????????and (a.filiale='CK' or a.home_filiale='CK')*/
;

prompt
prompt Creating view V_CK_PUB_CREW_CUSTOM
prompt ==================================
prompt
create or replace force view v_ck_pub_crew_custom as
select a.flight_id,a.mm_leg_id mm_leg_id,a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,h.ac_type_crew,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        d.p_code,e.c_name, upper(e.e_first_name) e_first_name,upper(e.e_name) e_name,e.birth_date,e.sex,
        f.country_name native_c,f.country_3code native_e,
        d.fjs_order,d.rank_no,
        d.ts_flag,
        substr(d.ts_flag,0,4) ts_flag4,
        case
          when d.rank_no = 'A001' and d.fjs_order = 1 then '????????'
          when d.rank_no = 'A001' and d.fjs_order <> 1 then '????????'
          else g.rank_name
        end as rank_name,
        Nvl(g.rank_ename,'F/E') rank_ename,
        decode(Nvl(g.rank_ename,'F/E'),'CAPT','CPT','F/O','FOR','F/E','F/E','FOR') rank_ename_us,
        (select Max('Y') from t_tech_qulification where p_code = d.p_code And (qlf_code = 392 or qlf_code = 483) and ac_types = h.ac_type_crew and valid_flag = 'Y') rvr,
        (select Max('Y') from t_tech_qulification where p_code = d.p_code And qlf_code = 395 and valid_flag = 'Y') rnp_apch,
        (select Max('Y') from t_tech_auth_rnp xx where  xx.p_code = d.p_code And xx.tech_type = 396 and xx.valid_flag = 'Y' And (xx.airport_code = a.departure_airport Or xx.airport_code =a.arrival_airport) ) rnp_ar,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 743 and ac_types = h.ac_type_crew and valid_flag = 'Y') NewCapt/*??????*/,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 393 and ac_types = h.ac_type_crew and valid_flag = 'Y') catIIarisk,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 482 and ac_types = h.ac_type_crew and valid_flag = 'Y') catII,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 741 and ac_types = h.ac_type_crew and valid_flag = 'Y') catIII,
        (select Max('Y') from t_tech_auth_etops where p_code= d.p_code And ac_type =h.ac_type_crew and valid_flag = 'Y') etops,
        (select Max( case qlf_code when '392' then 'CATI' when '483' then 'RVR' when '743' then 'NEWC' when '393' then 'CATII*' when '482' then 'CATII' when '741' then 'CATIII' else '' end)
          from t_tech_qulification where p_code= d.p_code And qlf_code in (392,483,743,393,482,741) and ac_types = h.ac_type_crew and valid_flag = 'Y') vor,
        d.tech_no_i tech_no,
        x.p_code pass_Pcode,
        x.passport_no,
        (select Max(xa.check_date) from t_hr_passport xa
        Where xa.p_code = x.p_code and xa.pass_no = Trim(x.passport_no)
        and  xa.cert_type =x.passport_type and xa.valid_flag='Y' ) passport_Check_date,
        x.passport_expire_date,x.visa_no,x.visa_grant_date,x.visa_expire_date,
        (select max(upper(hug.en_born_in)) from t_hr_passport hug where hug.pass_no=x.passport_no and hug.p_code=x.p_code and
        hug.valid_flag='Y' and hug.cert_type=x.passport_type) en_born_in,/*????????????????*/
        (select hug_l.license_no from t_hr_license hug_l
                where hug_l.p_code=d.p_code and hug_l.ac_types=h.ac_type_crew
                and hug_l.valid_flag='Y') license_no,/*??????*/
        e.mobil_no,/*????????*/
        (select hug_t.tech_name from t_bas_tech hug_t
                where hug_t.in_ex='I' and hug_t.tech_no=d.tech_no_i) tech_name,/*????????????????*/
        f.country_code,/*??????????*/
        (select count(*) from t_hr_license hug_ll
                where hug_ll.p_code=d.p_code and hug_ll.valid_flag='Y') license_count, /*????????*/
        e.id_no /*??????????*/
   from t_flt_schedule a, t_sch_pairing b, t_sch_roster d,t_hr_crew e,
        t_bas_country f,t_bas_rank g,t_bas_fleet h,t_svc_custom_detail x
  where a.crew_link_line = b.crew_link_line
    and a.flight_id = d.flight_id
    and d.p_code = e.p_code
    and a.ac_type = h.ac_type
    and e.native = f.country_code(+)
    and d.rank_no = g.rank_no(+)
    and d.flight_id =x.flight_id(+)
    And d.p_code =x.p_code(+)
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and a.flight_flag <> 'D'
    and a.sch_pub_flag = 'Y' and b.module_flag='F'
    and (a.crew_owner = 'CK' or a.stew_owner = 'CK' or a.plce_owner = 'CK' or
        a.mant_owner = 'CK')
 Union All
 select a.flight_id,a.mm_leg_id mm_leg_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,h.ac_type_crew,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        d.p_code,e.c_name, upper(e.e_first_name) e_first_name,upper(e.e_name) e_name,e.birth_date,e.sex,
        f.country_name native_c,f.country_3code native_e,
        99 fjs_order,
        case when d.rank_no='M001' then 'M001' else 'S004' end rank_no,
        d.ts_flag,
        substr(d.ts_flag,0,4) ts_flag4,
        case when d.rank_no='M001' then '????????' else '????????' end rank_name,
        case when d.rank_no='M001' then 'F/E' else 'F/O' end rank_ename,
        case when d.rank_no='M001' then 'F/E' else 'FOR' end rank_ename_us,
        null rvr,
        null rnp_apch,
        null rnp_ar,
        null NewCapt,
        null catIIarisk,
        null catII,
        null catIII,
        null etops,
        '' vor,
        d.tech_no_i tech_no,
        x.p_code pass_Pcode,
        x.passport_no,
        (select Max(xa.check_date) from t_hr_passport xa
        Where xa.p_code = x.p_code and xa.pass_no = Trim(x.passport_no)
        and  xa.cert_type =x.passport_type and xa.valid_flag='Y' ) passport_Check_date,
        x.passport_expire_date,x.visa_no,x.visa_grant_date,x.visa_expire_date,
        (select max(upper(hug.en_born_in)) from t_hr_passport hug where hug.pass_no=x.passport_no and hug.p_code=x.p_code and
        hug.valid_flag='Y' and hug.cert_type=x.passport_type) en_born_in,/*????????????????*/
        (select hug_l.license_no from t_hr_license hug_l
                where hug_l.p_code=d.p_code and hug_l.ac_types=h.ac_type_crew
                and hug_l.valid_flag='Y') license_no,/*??????*/
        e.mobil_no,/*????????*/
        (select hug_t.tech_name from t_bas_tech hug_t
                where hug_t.in_ex='I' and hug_t.tech_no=d.tech_no_i) tech_name,/*????????????????*/
        f.country_code,/*??????????*/
        (select count(*) from t_hr_license hug_ll
                where hug_ll.p_code=d.p_code and hug_ll.valid_flag='Y') license_count,/*????????*/
        e.id_no /*??????????*/
   from t_flt_schedule a,t_sch_pairing b,t_flt_schedule v, t_sch_roster d,t_hr_crew e,
        t_bas_country f,t_bas_fleet h,t_svc_custom_detail x
  where a.crew_link_line = b.crew_link_line
    and v.flight_id = d.flight_id
    and d.p_code = e.p_code
    and a.ac_type = h.ac_type
    and e.native = f.country_code(+)
    and a.flight_id = x.flight_id
    And d.p_code = x.p_code(+)
    and v.flight_id_ref = a.flight_id
    and v.flight_id_ref is not null
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and v.flight_flag = 'D'
    and a.sch_pub_flag = 'Y'  and b.module_flag='F'
    and (a.crew_owner = 'CK' or a.stew_owner = 'CK' or a.plce_owner = 'CK' or
        a.mant_owner = 'CK')Union All
 select a.flight_id,a.mm_leg_id mm_leg_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,h.ac_type_crew,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        d.p_code,e.c_name, upper(e.e_first_name) e_first_name,upper(e.e_name) e_name,e.birth_date,e.sex,
        f.country_name native_c,f.country_3code native_e,
        99 fjs_order,
        case when d.rank_no='M001' then 'M001' else 'S004' end rank_no,
        d.ts_flag,
        substr(d.ts_flag,0,4) ts_flag4,
        case when d.rank_no='M001' then '????????' else '????????' end rank_name,
        case when d.rank_no='M001' then 'F/E' else 'F/O' end rank_ename,
        case when d.rank_no='M001' then 'F/E' else 'FOR' end rank_ename_us,
        null rvr,
        null rnp_apch,
        null rnp_ar,
        null NewCapt,
        null catIIarisk,
        null catII,
        null catIII,
        null etops,
        '' vor,
        d.tech_no_i tech_no,
        x.p_code pass_Pcode,
        x.passport_no,
        (select Max(xa.check_date) from t_hr_passport xa
        Where xa.p_code = x.p_code and xa.pass_no = Trim(x.passport_no)
        and  xa.cert_type =x.passport_type and xa.valid_flag='Y' ) passport_Check_date,
        x.passport_expire_date,x.visa_no,x.visa_grant_date,x.visa_expire_date,
        (select max(upper(hug.en_born_in)) from t_hr_passport hug where hug.pass_no=x.passport_no and hug.p_code=x.p_code and
        hug.valid_flag='Y' and hug.cert_type=x.passport_type) en_born_in,/*????????????????*/
        (select hug_l.license_no from t_hr_license hug_l
                where hug_l.p_code=d.p_code and hug_l.ac_types=h.ac_type_crew
                and hug_l.valid_flag='Y') license_no,/*??????*/
        e.mobil_no,/*????????*/
        (select hug_t.tech_name from t_bas_tech hug_t
                where hug_t.in_ex='I' and hug_t.tech_no=d.tech_no_i) tech_name,/*????????????????*/
        f.country_code,/*??????????*/
        (select count(*) from t_hr_license hug_ll
                where hug_ll.p_code=d.p_code and hug_ll.valid_flag='Y') license_count,/*????????*/
        e.id_no /*??????????*/
   from t_flt_schedule a,t_sch_pairing b,t_flt_schedule v, t_sch_roster d,t_hr_crew e,
        t_bas_country f,t_bas_fleet h,t_svc_custom_detail x
  where a.crew_link_line = b.crew_link_line
    and v.flight_id = d.flight_id
    and d.p_code = e.p_code
    and a.ac_type = h.ac_type
    and e.native = f.country_code(+)
    and d.flight_id = x.flight_id
    And d.p_code = x.p_code(+)
    and v.flight_id_ref = a.flight_id
    and v.flight_id_ref is not null
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and v.flight_flag = 'D'
    and a.sch_pub_flag = 'Y'  and b.module_flag='F'
    and (a.crew_owner = 'CK' or a.stew_owner = 'CK' or a.plce_owner = 'CK' or
        a.mant_owner = 'CK');

prompt
prompt Creating view V_CK_PUB_DEPT
prompt ===========================
prompt
create or replace force view v_ck_pub_dept as
select a.dep_code /*????????*/,
        a.dep_name/*????????*/,
        a.leader/*??????*/,
        a.tel/*????????*/,
        a.filiale/*????????*/,
        a.base/*????*/,
        a.valid_flag/*????????*/,
        a.module_flag/*????(F????,C????,A'????,M????)*/,
        a.remarks/*????*/,
        a.ac_type_crew/*????????(????)*/,
        a.is_ground/*Y????????C????D????F??????*/
   from t_hr_dept a
 /* 20160727 ?????????????? where a.filiale = 'CK'*/
  order by a.filiale, a.dep_code;

prompt
prompt Creating view V_CK_PUB_FLTSCH
prompt =============================
prompt
create or replace force view v_ck_pub_fltsch as
select a.flight_id,
        a.mm_leg_id mm_leg_id,
        a.flight_date,
        a.flight_no,
        a.departure_airport,
        (select e.airport_4code
           from t_bas_airport e
          where e.airport_3code = a.departure_airport) departure_airport4,
        (select e.chinese_abbr
           from t_bas_airport e
          where e.airport_3code = a.departure_airport) departure_airport_abbr,
        a.arrival_airport,
        (select f.airport_4code
           from t_bas_airport f
          where f.airport_3code = a.arrival_airport) arrival_airport4,
        (select f.chinese_abbr
           from t_bas_airport f
          where f.airport_3code = a.arrival_airport) arrival_airport_abbr,
        decode(a.flight_type,
               'A' /*????*/,
               'B' /*????*/,
               'C' /*????*/,
               'C',
               'E' /*????*/,
               'Z' /*????*/,
               'F' /*????*/,
               'F',
               'G' /*????*/,
               'G',
               'H' /*????*/,
               'J' /*????*/,
               'I' /*????*/,
               'T' /*????*/,
               'J' /*????*/,
               'N' /*????*/,
               'K' /*????*/,
               'X' /*????*/,
               'O' /*????*/,
               'O' /*????*/,
               'P' /*????*/,
               'D' /*????*/,
               'T' /*????*/,
               'S' /*????*/,
               'V' /*????*/,
               'V',
               'W' /*??????????*/,
               'Z' /*????*/,
               'A' /*????*/,
               a.flight_type) flight_type,
        a.std,
        a.atd,
        a.sta,
        a.ata,
        a.ac_reg,
        a.ac_type,
        a.d_or_i,
        a.crew_link_line,
        a.crew_owner,
        (select c.c_name
           from t_sch_roster b, t_hr_crew c
          where b.rank_no = 'A001'
            and b.fjs_order = 1
            and b.flight_id = a.flight_id
            and b.p_code = c.p_code
            and c.module_flag = 'F') c_name /*????????????*/,
        (select c.e_first_name || ' ' || c.e_name
           from t_sch_roster b, t_hr_crew c
          where b.rank_no = 'A001'
            and b.fjs_order = 1
            and b.flight_id = a.flight_id
            and b.p_code = c.p_code
            and c.module_flag = 'F') e_name /*????????????*/,
        case when a.sch_pub_flag<>'Y' then 0 else (select count(*)
           from t_sch_roster b
          where b.rank_no not in ('M001', 'S001', 'S002', 'S003', 'S004')
            and b.flight_id = a.flight_id) end  fly_count /*????????????*/,
        case when a.sch_pub_flag<>'Y' then 0 else (select count(*)
           from t_sch_roster b
          where b.rank_no in ('M001', 'S001', 'S002', 'S003', 'S004')
            and b.flight_id = a.flight_id) end sj_count /*??????????????????*/,
        case when a.sch_pub_flag<>'Y' then 0 else (select count(*)
           from t_sch_roster b, t_flt_schedule d
          where b.flight_id = d.flight_id
            and d.flight_id_ref = a.flight_id
            and d.flight_id_ref is not null) end sj_v_count /*??????????????????*/,
            a.flg_cs /*???????? C ???? D ????*/,
            a.flg_vr /*????,???????? R???? V ????*/,
            a.flg_patch/*??????????????????*/
   from t_flt_schedule a
  where (a.crew_owner = 'CK' or a.stew_owner = 'CK' or a.plce_owner = 'CK' or
        a.mant_owner = 'CK')
    and a.flight_flag <> 'D';

prompt
prompt Creating view V_CK_PUB_FTB
prompt ==========================
prompt
create or replace force view v_ck_pub_ftb as
select /*??????????????*/
        d.mm_leg_id mm_leg_id,/*FOC????????ID*/
        c.flight_id,/*????ID*/
        c.FTB_NO  ,/*??????????*/
        d.flight_date,
        d.flight_no,
        d.departure_airport,
        (select e.airport_4code
           from t_bas_airport e
          where e.airport_3code = d.departure_airport) departure_airport4,
        (select e.chinese_abbr
           from t_bas_airport e
          where e.airport_3code = d.departure_airport) departure_airport_abbr,
        d.arrival_airport,
        (select f.airport_4code
           from t_bas_airport f
          where f.airport_3code = d.arrival_airport) arrival_airport4,
        (select f.chinese_abbr
           from t_bas_airport f
          where f.airport_3code = d.arrival_airport) arrival_airport_abbr,
        decode(d.flight_type,
               'A' /*????*/,
               'B' /*????*/,
               'C' /*????*/,
               'C',
               'E' /*????*/,
               'Z' /*????*/,
               'F' /*????*/,
               'F',
               'G' /*????*/,
               'G',
               'H' /*????*/,
               'J' /*????*/,
               'I' /*????*/,
               'T' /*????*/,
               'J' /*????*/,
               'N' /*????*/,
               'K' /*????*/,
               'X' /*????*/,
               'O' /*????*/,
               'O' /*????*/,
               'P' /*????*/,
               'D' /*????*/,
               'T' /*????*/,
               'S' /*????*/,
               'V' /*????*/,
               'V',
               'W' /*??????????*/,
               'Z' /*????*/,
               'A' /*????*/,
               d.flight_type) flight_type,
        d.std,
        d.ac_type,
        d.ac_reg,
        d.d_or_i,
        c.taxi_out_time  ,/*????????*/
        c.takeoff_time  ,/*????????*/
        c.landing_time  ,/*????????*/
        c.taxi_in_time  ,/*  ????????*/
        nvl(c.air_hours,0)  air_hours,/*????????*/
        nvl(c.grnd_hours,0)grnd_hours  ,/*????????*/
        nvl(c.night_hours,0)  night_hours,/*????????*/
        nvl(c.totl_hours,0) totl_hours  ,/*??????*/
        c.is_icao  ,/*????????????????*/
        nvl(c.old_fuel,0) old_fuel,/*??????*/
        nvl(c.new_fuel,0) new_fuel,/*??????*/
        nvl(c.left_fuel,0) left_fuel  /*??????*/
   from  t_svc_ftb c,t_flt_schedule d
  where  c.flight_id=d.flight_id
  and (d.crew_owner = 'CK' or d.stew_owner = 'CK' or d.plce_owner = 'CK' or
        d.mant_owner = 'CK');

prompt
prompt Creating view V_CK_PUB_PAIRING
prompt ==============================
prompt
create or replace force view v_ck_pub_pairing as
select a.flight_date,/*????*/
        a.crew_link_line,/*??????*/
        a.module_flag,/*????F????,C????,A'????,M????*/
        a.crew_pairing_line,/*??????*/
        a.flight_ids,/*flight_id ??????/????*/
        a.ac_type_crew,/*??????*/
        a.ac_type,/*????*/
        a.ac_reg,/*????*/
        a.flight_com,/*????*/
        a.flight_voyage,/*????*/
        a.flight_code,/*????3????*/
        a.depa_airport,/*????*/
        a.arri_airport,/*????*/
        a.td_punch,/*????????*/
        a.td_before,/*????????*/
        a.td,/*????????*/
        a.ta,/*????????*/
        a.ta_after,/*????????*/
        a.d_or_i,/*????????*/
        a.flight_type,/*????????*/
        a.fly_hours,/*????????*/
        a.filiale,/*??????*/
        a.base,/*????*/
        a.carrier,/*??????*/
        a.p_or_c,/*????????*/
        a.crew_id,/*????????*/
        a.flight_flag,/*????????(????,????,????)*/
        a.icao_flag,/*????ICAO????*/
        a.foreign_flag,/*????????????*/
        a.special_flag, /*????????????*/
        a.dep_code,/*??????????????(????????????????????)*/
        a.duty_line,/*??????*/
        a.cat_flag/*????CAT????*/
   from t_sch_pairing a where a.filiale='CK';

prompt
prompt Creating view V_CK_PUB_RANK
prompt ===========================
prompt
CREATE OR REPLACE FORCE VIEW V_CK_PUB_RANK AS
SELECT RANK_NO /*????????*/,
      RANK_NAME /*????????*/,
      RANK_ENAME /*??????????*/,
      IDX /*????*/,
      MODULE_FLAG /*????(F????C????A'????M????)*/,
      VALID_FLAG /*????????*/,
      REMARKS /*????*/
 from t_bas_rank a
 order by a.rank_no;

prompt
prompt Creating view V_CK_PUB_TASK_PRINT
prompt =================================
prompt
CREATE OR REPLACE FORCE VIEW V_CK_PUB_TASK_PRINT AS
SELECT ROWNUM AS rownumid, abcd."PRINT_FLAG",abcd."STATUS",abcd."DEP_NAME",abcd."FLIGHT_DATE",abcd."TD",abcd."FLIGHT_NO",abcd."FLIGHT_VOYAGE",abcd."AC_TYPE",abcd."AC_TYPE_LONG",abcd."AC_REG",abcd."FTB_NO",abcd."LINE",abcd."CREW_PAIRING_LINE",abcd."CREW_LINK_LINE",abcd."FILIALENAME",abcd."DEP_CODE"
   FROM (SELECT DISTINCT 'false' AS print_flag,
                         CASE b.ftb_prn_flag
                           WHEN 'N'
                           --'??????'
                            THEN
                            CASE NVL(b.ftb_no, '0')
                              WHEN '0' THEN
                               '5' --'??????'
                              ELSE
                               '1'
                            END
                           WHEN 'Y' --'??????'
                            THEN
                            CASE b.ftb_rec_flag
                              WHEN 'Y' THEN
                               '4' --'??????'
                              ELSE
                               '3'
                            END
                           WHEN 'X' --'??????'
                            THEN
                            '2'
                           ELSE
                            '1'
                         END AS status,
                         f.dep_name,
                         TO_CHAR(a.flight_date, 'yyyy-MM-dd') flight_date,
                         a.td,
                         a.carrier || a.flight_com AS flight_no,
                         a.flight_voyage,
                         a.ac_type,
                         e.ac_type_long,
                         a.ac_reg,
                         b.ftb_no,
                         a.duty_line AS line,
                         a.crew_pairing_line,
                         a.crew_link_line,
                         d.filiale_name AS filialename,
                         a.dep_code
           FROM t_sch_pairing  a,
                t_flt_schedule b,
                t_bas_filiale  d,
                t_bas_fleet    e,
                t_hr_dept      f,
                t_flt_schedule g
          WHERE a.crew_link_line = b.crew_link_line
            AND a.filiale = d.filiale(+)
            AND a.ac_type = e.ac_type(+)
            AND a.dep_code = f.dep_code(+)
            AND A.CREW_LINK_LINE = G.CREW_LINK_LINE
            AND A.Filiale='CK'
               /*    AND a.duty_line IN
               (SELECT duty_line
                  FROM t_sch_dutyline
                 WHERE flight_date = TO_DATE(:flightdate, 'yyyy/mm/dd') {1})*/
           /* AND (b.flight_flag IN ('A', 'C') or
                (b.flight_flag = 'D' and
                (select s.crew_owner
                     from t_flt_schedule s
                    where s.flight_id = g.flight_id_ref) not in ({3})))*/
         /* AND a.ac_type IN ({0}) {2}*/
          ORDER BY dep_code, crew_pairing_line, line, td, status) abcd
;

prompt
prompt Creating view V_CK_PUB_TECH
prompt ===========================
prompt
create or replace force view v_ck_pub_tech as
select a.p_code /*????????*/,
        b.c_name /*????*/,
        b.work_no /*????*/,
        b.py_abbr /*????????*/,
        b.module_flag /*???????? F ??????,M????????*/,
        a.ac_type /*??????*/,
        a.tech_no_i /*????????????*/,
        (select c.tech_name
           from t_bas_tech c
          where c.in_ex = 'I'
            and c.tech_no = a.tech_no_i) tech_no_i_name /*????????????*/,
            (select c.tech_rank
           from t_bas_tech c
          where c.in_ex = 'I'
            and c.tech_no = a.tech_no_i) i_tech_rank /*???????????? (A??????B????C????F??????S????J??????R??????)*/,
        trunc(a.tech_no_i_date) tech_no_i_date/*????????????*/,
        a.tech_no_z /*????????*/,
        (select d.tech_name
           from t_bas_tech d
          where d.in_ex = 'Z'
            and d.tech_no = a.tech_no_z) tech_no_z_name /*????????????*/,
            (select d.tech_rank
           from t_bas_tech d
          where d.in_ex = 'Z'
            and d.tech_no = a.tech_no_z) z_tech_rank /*???????????? (A??????B????C????F??????S????J??????R??????)*/,
        trunc(a.tech_no_z_date) tech_no_z_date/*????????????*/,
        a.ac_short_types /*????????A319/A320/A321/??*/,
        a.valid_flag /*????????*/
   from t_tech_info a, v_ck_pub_crew_crew b
  where a.p_code = b.p_code
  and a.valid_flag='Y';

prompt
prompt Creating view V_CUST_PASSPORT
prompt =============================
prompt
create or replace force view v_cust_passport as
select a."PASS_ID",
        a."P_CODE",
        a."CERT_TYPE",
        a."PASS_FLAG",
        a."PASS_NO",
        a."COUNTRY_CODE",
        a."ISSUE_AGENCY",
        a."ISSUE_DATE",
        a."CHECK_DATE",
        a."OVER_DATE",
        a."EN_ADDR",
        a."EN_BORN_IN",
        a."CH_BORN_IN",
        a."VALID_FLAG",
        a."OPER",
        a."OP_TIME",
        a."REMARKS",
        a."OPER_IP",
        a."OPER_HOST",
        a."FXW_ID",
        case
          when b.visa_no is null then
           1
          else
           2
        end as idx
   from t_hr_passport a left join t_hr_visa b
     on b.cert_type = 'AMVI'
    and a.pass_id = b.passport_id(+);

prompt
prompt Creating view V_CUST_SPECIAL
prompt ============================
prompt
create or replace force view v_cust_special as
select distinct a.duty_line, d.native
   from t_sch_dutyline a, t_sch_pairing b, t_flt_schedule c, t_bas_airport d
  where a.duty_line = b.duty_line
    and b.crew_link_line = c.crew_link_line
    and (c.plan_departure = d.airport_3code or
        c.plan_arrival = d.airport_3code)
    and d.cert_yn = 'Y';

prompt
prompt Creating function F_MAX
prompt =======================
prompt
create or replace function f_max(p_date1 date, p_date2 date) return date
as
/*??????????????????????*/
begin
  if nvl(p_date1, to_date('1900-01-01','yyyy-mm-dd')) > nvl(p_date2, to_date('1900-01-01','yyyy-mm-dd')) then
     return p_date1;
   else
     return p_date2;
   end if;
end;
/

prompt
prompt Creating view V_FLT20150415
prompt ===========================
prompt
create or replace force view v_flt20150415 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    --and a.flight_date >= b.flt_syn_date
                   and a.flight_date>=date'2014-01-01' /*and
                                                    (a.flight_date<(case when b.filiale='CTU' then date'2014-5-1' end)
                                                    or a.flight_date<(case when b.filiale='KHN' then date'2014-3-1' end)
                                                    or a.flight_date<(case when b.filiale='NGB' then date'2014-6-1' end)
                                                    or a.flight_date<(case when b.filiale='NKG' then date'2014-4-1' end)
                                                    or a.flight_date<(case when b.filiale='PEK' then date'2014-4-1' end)
                                                    or a.flight_date<(case when b.filiale='WUH' then date'2014-5-1' end))*/

                )
     /*     or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )
 */       )
 union all
 --??????(??????)????
 select a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'V' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                 /*   and b.flight_date >= t.tsk_syn_date*/
                  and  b.flight_date>=date'2014-01-01'/* and
                                                    (b.flight_date<(case when t.filiale='CTU' then date'2014-5-1' end)
                                                    or b.flight_date<(case when t.filiale='KHN' then date'2014-3-1' end)
                                                    or b.flight_date<(case when t.filiale='NGB' then date'2014-6-1' end)
                                                    or b.flight_date<(case when t.filiale='NKG' then date'2014-4-1' end)
                                                    or b.flight_date<(case when t.filiale='PEK' then date'2014-4-1' end)
                                                    or b.flight_date<(case when t.filiale='WUH' then date'2014-5-1' end))*/
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                   and b.flight_date>=date'2014-01-01' /*and
                                                    (b.flight_date<(case when t.filiale='CTU' then date'2014-5-1' end)
                                                    or b.flight_date<(case when t.filiale='KHN' then date'2014-3-1' end)
                                                    or b.flight_date<(case when t.filiale='NGB' then date'2014-6-1' end)
                                                    or b.flight_date<(case when t.filiale='NKG' then date'2014-4-1' end)
                                                    or b.flight_date<(case when t.filiale='PEK' then date'2014-4-1' end)
                                                    or b.flight_date<(case when t.filiale='WUH' then date'2014-5-1' end))*/
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'J' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
         /*           and b.flight_date >= t.tsk_syn_date*/
          and b.flight_date>=date'2014-01-01' /*and
                                                    (b.flight_date<(case when t.filiale='KHN' then date'2014-03-01' end)
                                                    or b.flight_date<(case when t.filiale='CTU' then date'2014-5-1' end)
                                                    or b.flight_date<(case when t.filiale='KHN' then date'2014-3-1' end)
                                                    or b.flight_date<(case when t.filiale='NGB' then date'2014-6-1' end)
                                                    or b.flight_date<(case when t.filiale='NKG' then date'2014-4-1' end)
                                                    or b.flight_date<(case when t.filiale='PEK' then date'2014-4-1' end)
                                                    or b.flight_date<(case when t.filiale='WUH' then date'2014-5-1' end))*/

                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
              /*      and a.flight_date >= t.tsk_syn_date*/
                 and   a.flight_date>=date'2014-01-01'/* and
                                                    (a.flight_date<(case when t.filiale='KHN' then date'2014-03-01' end)
                                                    or a.flight_date<(case when t.filiale='CTU' then date'2014-5-1' end)
                                                    or a.flight_date<(case when t.filiale='KHN' then date'2014-3-1' end)
                                                    or a.flight_date<(case when t.filiale='NGB' then date'2014-6-1' end)
                                                    or a.flight_date<(case when t.filiale='NKG' then date'2014-4-1' end)
                                                    or a.flight_date<(case when t.filiale='PEK' then date'2014-4-1' end)
                                                    or a.flight_date<(case when t.filiale='WUH' then date'2014-5-1' end))*/

                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
               /*     and a.flight_date >= b.flt_syn_date*/
                and a.flight_date>=date'2014-01-01'/* and
                                                    (a.flight_date<(case when b.filiale='CTU' then date'2014-5-1' end)
                                                    or a.flight_date<(case when b.filiale='KHN' then date'2014-3-1' end)
                                                    or a.flight_date<(case when b.filiale='NGB' then date'2014-6-1' end)
                                                    or a.flight_date<(case when b.filiale='NKG' then date'2014-4-1' end)
                                                    or a.flight_date<(case when b.filiale='PEK' then date'2014-4-1' end)
                                                    or a.flight_date<(case when b.filiale='WUH' then date'2014-5-1' end))*/

                )
        /*  or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*/
        )
;

prompt
prompt Creating view V_FM_QAR_HR_CREW
prompt ==============================
prompt
create or replace force view v_fm_qar_hr_crew as
select a.p_code,/*??????????*/
        a.work_no,/*??????????*/
        a.c_name,/*??????????*/
        a.id_no,/*??????????*/
        a.module_flag,/*????(F????C????A'????M????)*/
        a.py_abbr,/*??????????*/
        a.dep_code,/*????????*/
        a.branch_code,/*????????*/
        a.birth_date, /*????????*/
        round(months_between(sysdate,birth_date)/12) as age,/*??????????*/
        a.hr_type,/*????????(0????1??????2????3????)*/
        nvl(a.post_duty,'??????') post_duty,/*???????? ??????????*/
        a.filiale,/*????????*/
        a.valid_flag,/*????????(y/n)*/
        a.op_time /*????????????*/
   from t_hr_crew a
   where a.filiale='FM';

prompt
prompt Creating view V_FM_CREWSCH
prompt ==========================
prompt
create or replace force view v_fm_crewsch as
select /*????????????????????????*/
        a.flight_id,  /*????ID*/
        a.flight_date,/*????????*/
        b.flight_no,/*??????*/
        b.departure_airport,/*????????*/
        b.arrival_airport,/*????????*/
        b.std,/*????????????*/
        b.ata,/*????????????*/
        a.p_code,    /*????????*/
        g.c_name,/*????????*/
        g.py_abbr,/*????????*/
        g.work_no,/*????????*/
        a.rank_no,   /*????????,S004????????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(b.op_time,f_max(c.op_time,f_max(d.op_time,g.op_time)))) as last_modify_time, /*????????????*/
        a.rec_id /*????ID*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,v_fm_qar_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and f.filiale = d.filiale
    and f.is_online = 'Y'
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and d.flight_date >= to_date('20130823','yyyymmdd') /*12.20??????????????,????????????12.20????????????????????????????????2013.3.1*/
 union
 select --??????????
        b.flight_id_ref as flight_id,  --????ID
        b.flight_date, --????????
        b.flight_no,/*??????*/
        b.departure_airport,/*????????*/
        b.arrival_airport,/*????????*/
        b.std,/*????????????*/
        b.ata,/*????????????*/
        a.p_code,    /*????????*/
        g.c_name,/*????????*/
        g.py_abbr,/*????????*/
        g.work_no,/*????????*/
        'S004' as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID??
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,f_max(d.op_time,g.op_time))))) as last_modify_time, --????????????
        a.rec_id --????ID
   from t_sch_roster a,t_flt_schedule b,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,v_fm_qar_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and f.filiale = d.filiale
    and f.is_online = 'Y'
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and d.flight_date >= to_date('20130823','yyyymmdd')
;

prompt
prompt Creating view V_FM_DDO
prompt ======================
prompt
create or replace force view v_fm_ddo as
select a.ddo_id,/*????????*/
        a.ddo_code,/*??????????*/
        (select c.ddo_name from t_bas_ddo c where c.ddo_code = a.ddo_code) ddo_name,/*????????????*/
        b.work_no,/*????????????*/
        b.c_name,/*????????????*/
        trunc(a.td) ddo_date,/*????????*/
        a.td,/*????????????*/
        a.ta,/*????????????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_ddo a, v_fm_qar_hr_crew b
  where a.p_code = b.p_code
  order by a.td;

prompt
prompt Creating view V_FM_FBC_ROSTER
prompt =============================
prompt
create or replace force view v_fm_fbc_roster as
select c.duty_line, /*????????ID*/
        c.crew_link_line, /*????ID*/
        a.flight_id, /*????????ID*/
        a.flight_date,/*????????*/
        c.flight_date task_date,/*????????*/
        b.departure_airport, /*????????*/
        b.arrival_airport, /*????????*/
        d.p_code, /*??????ID*/
        d.work_no, /*??????????*/
        d.c_name, /*??????????*/
        d.py_abbr, /*??????????*/
        a.rank_no, /*????????*/
        a.fjs_order,/*????????*/
        (select e.rank_name from t_bas_rank e where e.rank_no = a.rank_no) rank_name, /*????????*/
        a.rec_id, /*????ID,????????????????*/
        f_max(f_max(a.op_time,b.op_time),c.op_time) last_modify_time, /*????????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        c.op_time c_op_time
   from t_sch_roster     a,
        t_flt_schedule   b,
        t_sch_pairing    c,
        v_fm_qar_hr_crew d
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and a.p_code = d.p_code
    and b.sch_pub_flag='Y' /*??????????????????????????????????????????????*/
    and c.duty_line is not null/*??????????????????????????????????????*/
    order by a.flight_id,a.fjs_order;

prompt
prompt Creating view V_FM_FBC_ROSTER20140531
prompt =====================================
prompt
create or replace force view v_fm_fbc_roster20140531 as
select c.duty_line, /*????????ID*/
        c.crew_link_line, /*????ID*/
        a.flight_id, /*????????ID*/
        a.flight_date,/*????????*/
        c.flight_date task_date,/*????????*/
        b.departure_airport, /*????????*/
        b.arrival_airport, /*????????*/
        d.p_code, /*??????ID*/
        d.work_no, /*??????????*/
        d.c_name, /*??????????*/
        d.py_abbr, /*??????????*/
        a.rank_no, /*????????*/
        a.fjs_order,/*????????*/
        (select e.rank_name from t_bas_rank e where e.rank_no = a.rank_no) rank_name, /*????????*/
        b.sch_pub_flag,/*????????*/
        b.op_time b_op_time,
        a.rec_id, /*????ID,????????????????*/
        a.op_time last_modify_time /*????????????*/
   from t_sch_roster     a,
        t_flt_schedule   b,
        t_sch_pairing    c,
        v_fm_qar_hr_crew d
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and a.p_code = d.p_code
    and c.duty_line is not null/*??????????????????????????????????????*/
    order by a.flight_id,a.fjs_order;

prompt
prompt Creating view V_FM_FBC_TASK
prompt ===========================
prompt
create or replace force view v_fm_fbc_task as
select a.duty_line, /*????????id*/
        c.crew_link_line, /*????id*/
        a.filiale, /*????????*/
        a.flight_com, /*????????*/
        a.flight_voyage, /*????*/
        a.flight_date, /*????????*/
        a.depa_airport, /*????????*/
        (select b.airport_4code
           from t_bas_airport b
          where b.airport_3code = a.depa_airport) depa_airport4, /*????????*/
        c.d_or_i, /*????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        a.rec_id, /*????ID,????????????????*/
        (select ','||wmsys.wm_concat(f.work_no)||','
           from t_sch_roster d, t_hr_crew f
          where d.flight_id in
                (select e.flight_id
                   from t_flt_schedule e
                  where e.crew_link_line = c.crew_link_line)
            and d.p_code = f.p_code) work_nos, /*????????*/
        f_max(a.op_time,c.op_time) last_modify_time /*????????????*/
   from t_sch_dutyline a, t_sch_pairing c
  where a.duty_line = c.duty_line
 and a.filiale='FM';

prompt
prompt Creating view V_FM_FBC_TASK20140531
prompt ===================================
prompt
create or replace force view v_fm_fbc_task20140531 as
select a.duty_line, /*????????id*/
        c.crew_link_line, /*????id*/
        a.filiale, /*????????*/
        a.flight_com, /*????????*/
        a.flight_voyage, /*????*/
        a.flight_date, /*????????*/
        a.depa_airport, /*????????*/
        (select b.airport_4code
           from t_bas_airport b
          where b.airport_3code = a.depa_airport) depa_airport4, /*????????*/
        c.d_or_i, /*????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        a.rec_id, /*????ID,????????????????*/
        (select ','||wmsys.wm_concat(f.work_no)||','
           from t_sch_roster d, t_hr_crew f
          where d.flight_id in
                (select e.flight_id
                   from t_flt_schedule e
                  where e.crew_link_line = c.crew_link_line)
            and d.p_code = f.p_code) work_nos, /*????????*/
        a.op_time last_modify_time /*????????????*/
   from t_sch_dutyline a, t_sch_pairing c
  where a.duty_line = c.duty_line
 and a.filiale='FM';

prompt
prompt Creating view V_FM_QAR_HR_BRANCH
prompt ================================
prompt
create or replace force view v_fm_qar_hr_branch as
select a.branch_code,
        a.branch_name,
        a.leader,
        a.tel,
        a.filiale,
        a.base,
        a.valid_flag,
        a.module_flag,
        a.ac_type_crew
   from t_hr_branch a
  where a.branch_code like 'EA17%'
  order by a.branch_code;

prompt
prompt Creating view V_FM_QAR_HR_CREW_TECH
prompt ===================================
prompt
create or replace force view v_fm_qar_hr_crew_tech as
select a.p_code,/*??????????*/
        b.ac_type,/*????????????CODE*/
        b.tech_no_i tech_no,/*????????????CODE*/
        (select c.tech_name from t_bas_tech c where c.tech_no=b.tech_no_i and c.in_ex='I') tech_name,/*????????????????*/
        /*(select sum(d.exp_hours) from v_fm_qar_hr_crew_exp_hours d where d.p_code=a.p_code and d.ac_type_crew=b.ac_type)*/ 0 exp_hours,/*??????????????*/
        f_max(a.op_time,b.op_time) last_modify_time/*????????????*/
   from v_fm_qar_hr_crew a,t_tech_info b
  where a.p_code=b.p_code;

prompt
prompt Creating view V_FM_QAR_HR_DEPT
prompt ==============================
prompt
create or replace force view v_fm_qar_hr_dept as
select a.dep_code,
        a.dep_name,
        a.leader,
        a.tel,
        a.filiale,
        a.base,
        a.valid_flag,
        a.module_flag,
        a.ac_type_crew,
        a.is_ground
   from t_hr_dept a
  where a.dep_code like 'EA17%'
  order by a.dep_code;

prompt
prompt Creating view V_FXW_PRF_APPLYRECORD
prompt ===================================
prompt
create or replace force view v_fxw_prf_applyrecord as
select '????????' as ApplyType, /* ????????*/
        fa.apply_time,
        hc.WORK_NO,
       (replace(wm_concat(e.flight_no ||'/'|| to_char(e.flight_date,'yyyy-mm-dd')),',',' ; '))   content,
        case fa.apply_flag
          when 'Y' then
           '????'
          else
           fa.fail_content
        end Resualt,
        fa.ver_flag,--????
        fa.fail_content,--??????????????
        fa.apply_flag apply_result,-- N Y X
        fa.remarks,--????????
        0 crew_link_line,
        0 flight_id
     from t_prf_flight_apply fa, t_hr_crew hc, t_flt_schedule e
     where fa.flight_id=e.flight_id and fa.p_code=hc.p_code
     group by hc.work_no,fa.apply_time,fa.ver_flag, fa.apply_flag,fa.fail_content , fa.apply_flag, fa.Remarks
 union all
 select '????????' as ApplyType,
        pa.apply_time,
        hc.WORK_NO,
        case to_char(pa.type)
          when '0' then
           '??????'
          else
           (select remarks_2  from t_prf_param where prftype_id='1004' and parm_name =pa.ddo_code) || '-' || pp.remarks
        end || '/' || to_char(pa.td, 'yyyy-mm-dd') || '??' ||
        to_char(pa.ta, 'yyyy-mm-dd')  content,
        case pa.apply_result
          when 'Y' then
           '????'
          else
           pa.fail_content
        end Resualt,
        pa.ver_flag,--????
        pa.fail_content,--??????????????
        pa.apply_result,-- N Y X
        pa.remarks,--????????
        0 crew_link_line,
        0 flight_id
   from t_prf_appraisal pa
   left join t_hr_crew hc
     on pa.p_code = hc.p_code
   left join t_prf_param pp
     on pa.ddo_code = pp.parm_name
 union all
 select '????????' as ApplyType,
        l.lock_date as apply_time,
        hc.work_no,
       replace(wm_concat(e.flight_no ||'/'|| to_char(e.flight_date,'yyyy-mm-dd')),',',' ; ') content,
       decode(l.app_status,'1','????','2',l.change_reason,'') Resualt,
        'Y'  ver_Flag,--????????
        l.reason Fall_content,--????????????
        decode(l.app_status,1,'Y',2,'N','X')  apply_result,--????????
        l.Remarks,
        0 crew_link_line,
        0 flight_id
     from t_prf_sch_lock l, t_hr_crew hc, t_flt_schedule e
     where l.flight_id=e.flight_id and l.p_code=hc.p_code
     group by hc.work_no,l.lock_date,l.app_status,l.reason , l.change_reason, l.Remarks
;

prompt
prompt Creating view V_FXW_PRF_ATTENDANCE
prompt ==================================
prompt
create or replace force view v_fxw_prf_attendance as
select p.parm_name parm_id,/* ???????????? */
        p.remarks parm_name/* ???????????? */
   from t_prf_param p where parent_id='1016' and valid_flag='Y'and p.remarks is not null;

prompt
prompt Creating view V_FXW_PRF_FLIGHTLOCK
prompt ==================================
prompt
create or replace force view v_fxw_prf_flightlock as
select /*??????????????????????????????????*/
  h.work_no, /*????*/
  a.p_code, /*????????*/
  a.flight_id,
  a.flight_date, /*????????*/
  s.flight_no, /*??????*/
  s.plan_departure, /*??????????*/
  s.plan_arrival, /*??????????*/
  a.flight_date task_date, /*????????*/
  --p.flight_voyage, /*????????*/
  (select ba.chinese_name from t_bas_airport ba where ba.airport_3code= s.plan_departure) ||'-'|| (select ba.chinese_name from t_bas_airport ba where ba.airport_3code= s.plan_arrival)  flight_voyage ,
  a.fly_hours, /*????????*/
  s.std, /*????????????*/
  s.sta, /*????????????*/
  a.op_time as last_modify_time,
  (select abs(the_value) from t_prf_param where parm_id = 45) as SCORES,
  case sl.app_status
    when '1' then
     'N'
    else
     'Y'
  end as STATUS
 --a.depart_flight_no/*??????????*/
 --decode(a.sch_pub_flag,'X','N',a.sch_pub_flag) publish_status,
   from t_sch_roster a, t_hr_crew h,t_flt_schedule s,t_prf_sch_lock sl
    where a.p_code = h.p_code
      --and h.work_no='11420'
     and a.flight_id = s.flight_id
     and a.flight_id = sl.flight_id(+)
    and s.sch_pub_flag='Y'
    and a.p_code = sl.p_code(+)
    order by s.STD
    --and s.flight_date>sysdate
 /*select \*??????????????????????????????????*\
        h.work_no,\*????*\
        a.p_code,\*????????*\
        a.flight_id,
        a.flight_date,\*????????*\
        s.flight_no,\*??????*\
        s.plan_departure,\*??????????*\
        s.plan_arrival,\*??????????*\
        a.flight_date task_date, \*????????*\
        p.flight_voyage,  \*????????*\
        a.fly_hours,  \*????????*\
        s.std,  \*????????????*\
        s.sta,  \*????????????*\
        a.op_time as last_modify_time,
          (select abs(the_value) from t_prf_param where parm_id=45) as SCORES,
        case sl.app_status when  '1' then 'N'  else 'Y' end as STATUS
        --a.depart_flight_no\*??????????*\
        --decode(a.sch_pub_flag,'X','N',a.sch_pub_flag) publish_status,
   from t_sch_roster a left join t_hr_crew h on a.p_code=h.p_code  left join t_flt_schedule s  on a.flight_id=s.flight_id left join t_sch_pairing p on s.crew_link_line=p.crew_link_line left join t_prf_sch_lock sl on a.flight_id =sl.flight_id and a.p_code=sl.p_code;*/
;

prompt
prompt Creating view V_FXW_PRF_TASKAPPLY
prompt =================================
prompt
create or replace force view v_fxw_prf_taskapply as
select /*????????????????????????????????*/
        s.flight_id,
       s.flight_date,/*????????*/
        s.flight_no,/*??????*/
        s.plan_departure,/*??????????*/
        s.plan_arrival,/*??????????*/
        s.flight_date task_date, /*????????*/
        --a.crew_link_line,
        a.crew_pairing_line,
        a.flight_ids,
        a.flight_com,  /*??????????*/
        a.flight_voyage,  /*????????*/
        a.ac_type,  /*????*/
        a.ac_reg,   /*????*/
        a.filiale, /*??????*/
        a.dep_code as flight_unit_code,
        a.fly_hours,  /*????????*/
        a.depa_airport, /*????????*/
        a.td,  /*????????????*/
        a.arri_airport,  /*??????*/
        a.ta,  /*????????????*/
        a.td - nvl(a.td_punch/(24*60),0) as sign_time, /*????????*/
        a.td - nvl(a.td_before/(24*60),0) as drive_time,  /*????????*/
        a.op_time as last_modify_time,
         (select abs(the_value) from t_prf_param where parm_id=43) as SCORES
        --a.depart_flight_no/*??????????*/
        --decode(a.sch_pub_flag,'X','N',a.sch_pub_flag) publish_status,
   from t_sch_pairing a,t_bas_filiale f,t_flt_schedule s
  where a.filiale = f.filiale
  and a.crew_link_line=s.crew_link_line
    and f.tsk_syn_date is not null
    and nvl(s.flg_cs,'A') not in ('C','D')
    and s.flight_flag='A'
    and a.flight_date >= f.tsk_syn_date
;

prompt
prompt Creating view V_FXW_PRF_TASKINFO
prompt ================================
prompt
create or replace force view v_fxw_prf_taskinfo as
select p.flight_date,
        p.crew_link_line,
        p.crew_pairing_line,
        p.ac_type_crew,
        p.flight_com,
        p.flight_voyage,
        p.fly_hours
   from t_sch_pairing p;

prompt
prompt Creating view V_INTF_CEAFTC_DDO
prompt ===============================
prompt
create or replace force view v_intf_ceaftc_ddo as
select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.c_name,/*????????*/
        c.id_no,/*??????????????*/
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        (select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        a.remarks, /*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code(+)
    and (c.filiale = d.filiale or c.home_filiale = d.filiale)
    and d.tsk_syn_date is not null
    and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.c_name,/*????????*/
        c.id_no,/*??????????????*/
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        (select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        a.remark,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale or c.home_filiale=d.filiale)
    and d.tsk_syn_date is not null
    and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.c_name,/*????????*/
        c.id_no,/*??????????????*/
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        decode(h.train_type,1,'KMG_MNJZW' || '_' || d.ac_type_crew,2,'KMG_LLZW' || '_' || d.ac_type_crew,'KMG_MNJZW' || '_' || d.ac_type_crew) ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || d.ac_type_crew || ']' ddo_name, /*????????*/
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' ||
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and (c.filiale = 'KMG' or c.filiale = 'FM')
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+)
    and (a.is_from_fxw is null or a.is_from_fxw = 'N');

prompt
prompt Creating view V_INTF_CEAFTC_DELLOG
prompt ==================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_CEAFTC_DELLOG AS
SELECT LOG_ID,
        TAB_CODE,
        REC_ID,
        DEL_TIME
   FROM T_INTF_DEL_LOG
   where TAB_CODE in('TRDDO','CREWSCH');

prompt
prompt Creating view V_INTF_CEAFTC_LOCALTRAIN
prompt ======================================
prompt
create or replace force view v_intf_ceaftc_localtrain as
select b.filiale_name as crew_owner,/*????????????*/
        a.flight_date, /*????????*/
        a.flight_no, /*??????*/
        (select e.chinese_name
           from t_bas_airport e
          where e.airport_3code = a.departure_airport) dep_chinese_name, /*????????????????*/
        (select e.chinese_name
           from t_bas_airport e
          where e.airport_3code = a.arrival_airport) arr_chinese_name, /*????????????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        d.p_code, /*????*/
        d.c_name, /*????*/
        d.id_no, /*??????????*/
        (select g.filiale_name from t_bas_filiale g where g.filiale=d.filiale) filiale_name, /*????????????????*/
        (select f.rank_name from t_bas_rank f where f.rank_no = c.rank_no) rank_name, /*????????*/
        c.rec_id,/*????ID????????????*/
         /*f_max(a.op_time, c.op_time) last_modify_time ????????????*/
        c.op_time last_modify_time /*????????????*/
   from t_flt_schedule a, t_bas_filiale b, t_sch_roster c, t_hr_crew d
  where /*a.flight_flag = 'C'
    and  */a.sch_pub_flag = 'Y' and
    a.crew_owner = b.filiale
    and b.flt_syn_date is not null
    and a.flight_date >= b.flt_syn_date
    and a.flight_id = c.flight_id
    and c.p_code = d.p_code;

prompt
prompt Creating view V_INTF_CEAFTC_PERSON_SCHEDULE
prompt ===========================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_CEAFTC_PERSON_SCHEDULE AS
SELECT s.flight_date FROM_DATE,
        s.flight_date TO_DATE,L.crew_id,
        t.ac_type,
        t.ac_reg,
        t.flight_no  FLIGHT_COM,
        Nvl(a.chinese_abbr,'?')||Nvl(b.chinese_abbr,'?') FLIGHT_VOYAGE,
        t.flight_id flight_id,
        t.crew_link_line crew_link_line,
        t.fly_hours FLY_HOURS,
        Nvl(a.car_time,115) car_time,
        t.std - (nvl(a.in_time,75)/(24*60)) time_to_port,
        t.STD TD,
        t.STA TA,
        Nvl(t.atd,Nvl(t.etd,t.std)) Atd,
        Nvl(t.ata,Nvl(t.eta,t.sta)) Ata,
        t.sta + (nvl(b.out_time,30)/(24*60)) time_from_port,
        t.departure_airport,
        t.arrival_airport,
        h.filiale,--  t.crew_owner filiale,
        trim(t.flight_no)||chr(13)||chr(10)||Nvl(a.chinese_abbr,'?')||Nvl(b.chinese_abbr,'?') REASON,
        s.p_code P_CODE,
        h.c_name C_NAME,
        h.id_no ID_NO,
        s.modify_reason,
        null as ddo_code,
        s.rank_no rank_no,
        s.module_flag MODULE_FLAG,
        Nvl(t.flight_flag,'A')  SCHEDULE_TYPE,
        --Decode(s.rank_no,'S001','D','S002','D','S004','D', Nvl(t.flight_flag,'A')) SCHEDULE_TYPE,
        'Y' VALID_FLAG,
        t.REMARKS,
        '' OPERNAME,
        t.op_time opertime,
        h.work_no
     FROM t_flt_schedule t, t_sch_roster s,t_sch_pairing L,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE ( t.flight_id = s.flight_id ) And t.crew_link_line =L.crew_link_line
      AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F' /*And t.flight_flag <>'D' */
 Union
 --************
 --A???? B???? C???? D???? F?????? J????
 --????????????  E
 select f2.train_date, f2.train_date,-1 crew_id,
        null,null,
        'SI-',
        f5.subject_name,
        f1.train_id,f1.train_id,
        f2.train_hours,0,
        --f1.td time_to_port,
        f2.atd time_to_port,
        --f1.td,f1.ta,
        f2.atd,f2.ata,
        f2.atd,f2.ata,
        --f1.ta time_from_port,
        f2.ata time_from_port,
        p.home_base,p.home_base,p.filiale,
        'SI-'||f4.course_name||'-'||f5.subject_name,
        f2.p_code,
        p.c_name C_NAME,
        p.id_no ID_NO,
        null,null,f2.rank_no,
        p.module_flag,
        'E' SCHEDULE_TYPE,
        'Y',
        DECODE(f2.is_from_fxw,'Y','????????????????','C','??????????????????', f2.REMARKS) as REMARKS,
        u.user_name OPERNAME,
        f2.op_time opertime,
        p.work_no
   from t_tr_plan f1, t_tr_schedule f2,
        T_TR_PAIRING f3,
        t_tr_course f4,t_tr_subject f5,
        t_hr_crew p,t_sys_user u
  Where f1.train_id = f2.train_id
    --and f1.train_date = f2.train_date
    and f1.train_line = f3.train_line
    and f3.course_code = f4.course_code
    and f3.subject_code = f5.subject_code
    AND F2.P_CODE=P.P_CODE AND p.module_flag='F'
    And f2.oper =u.user_code(+)
 Union
 --H ???? ???? T
 select Trunc(tt.td),
        Trunc(tt.ta),-1 crew_id,
         null,null,
        'TF-',
        t1.ddo_name,
        tt.ddo_id,
        tt.ddo_id,
        0,0,
        tt.td time_to_port,
        tt.td,
        tt.ta,
        tt.td,
        tt.ta,
        tt.ta time_from_port,
        p.home_base,
        p.home_base,
        p.filiale,
        'TF-'||t1.ddo_name||' '||tt.remarks,
        tt.p_code,
        p.c_name C_NAME,
        p.id_no ID_NO,
        t1.ddo_type,
        t1.ddo_code,
        null,
        p.module_flag,
        Decode(t1.ddo_type,5,'H','T'),
        tt.VALID_FLAG VALID_FLAG,
        tt.REMARKS,
        u.user_name OPERNAME,
        tt.op_time opertime,
        p.work_no
 from t_tr_ddo tt,t_bas_ddo t1,t_hr_crew p,t_sys_user u
 Where tt.ddo_code = t1.ddo_code
   And tt.p_code = p.p_code and p.module_flag='F'
   And tt.oper =u.user_code(+)
 UNION All
 select Trunc(tt.start_date),
        Trunc(tt.end_date),-1 crew_id,
        null,null,
        'TF-',
        '????',
        tt.BLOCK_ID,
        tt.BLOCK_ID,
        0,0,
        tt.start_date time_to_port,
        tt.start_date,
        tt.end_date,
        tt.start_date,
        tt.end_date,
        tt.end_date time_from_port,
        p.home_base,
        p.home_base,
        p.filiale,
        'TF-????'||' '||tt.remark,
        tt.p_code,
        p.c_name C_NAME,
        p.id_no ID_NO,
        null,
         '-1',--null
        null,
        p.module_flag,
        'T',
        'Y' VALID_FLAG,
        tt.remark,
        u.user_name OPERNAME,
        tt.OP_TIME opertime,
        p.work_no
 from T_TR_HOLI_SCH tt,t_hr_crew p,t_sys_user u
 Where  tt.p_code = p.p_code and p.module_flag='F'
        And tt.oper =u.user_code(+)
 UNION
 --J ????
 select t.start_date,
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),-1 crew_id,
        '',
        '',
        'J-',
        '????????????',
        TRANS_ID,
        TRANS_ID,
        0,
        0,
        t.start_date,
        t.start_date,
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),
        t.start_date,
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),
        p.home_base,
        p.home_base,
        p.Filiale,
        'J-????',
        t.p_code,
        p.c_name C_NAME,
        p.id_no ID_NO,
        '',
        '',
        '',
        p.module_flag,
        'J' SCHEDULE_TYPE,
        'Y',
        '????????????',
        u.user_name,
        t.op_time,
        p.work_no
   from t_hr_transfer t, t_hr_crew p,t_sys_user u
  where t.p_code = p.p_code
    and p.module_flag = 'F'
    and t.state = 'TR01'
    And t.oper =u.user_code(+)

 UNION
 --N????????
 select Trunc(N1.FROM_DATE),
        Trunc(n1.to_date),-1 crew_id,
        null,null,
        'RE-',
        nvl(n1.claim_content,'No Reason'),
        n1.claim_id,
        n1.claim_id,
        0,0,
        n1.from_date,
        n1.from_date,
        n1.to_date,
        n1.from_date,
        n1.to_date,
        n1.to_date,
        p.home_base,
        p.home_base,
        p.filiale,
        'RE-'||nvl(n1.claim_content,'No Reason'),
        n1.p_code,
        p.c_name C_NAME,
        p.id_no ID_NO,
        null,null,null,
         p.module_flag,
        'N',
        n1.valid_flag,
        n1.REMARKS,
        '' OPERNAME,
        n1.op_time opertime,
        p.work_no
 from t_sch_claim n1,t_hr_crew p
 Where n1.p_code= p.p_code and p.module_flag='F'
;

prompt
prompt Creating view V_INTF_DOC_CREWSCH
prompt ================================
prompt
create or replace force view v_intf_doc_crewsch as
select a.carrier as airlinecode, /*??????*/
        a.flight_no as flightnumber, /*??????*/
        a.departure_airport as departurerport, /*????????*/
        a.arrival_airport as arrivalairport, /*????????*/
        a.std as scheduledeparturedateandtime, /*????????????*/
        b.p_code as pilot_id, /*??????????*/
        trim(nvl(c.e_first_name,' ') || ' ' || nvl(c.e_name,' ')) as nameenglish, /*??????*/
        c.c_name as namechinese, /*??????*/
        b.rank_no as post, /*????????*/
        b.ts_flag as part_time_post /*????*/
   from t_flt_schedule a, t_sch_roster b, t_hr_crew c
  where a.flight_id = b.flight_id
    and b.p_code = c.p_code;

prompt
prompt Creating view V_INTF_DOC_CREWTECH
prompt =================================
prompt
create or replace force view v_intf_doc_crewtech as
select a.p_code polit_id, /*??????ID*/
        a.ac_type, /*????*/
        a.tech_no_i technical_standard, /*????????????*/
        b.tech_name standard_name/*????????????*/
   from t_tech_info a,t_bas_tech b
  where a.tech_no_i = b.tech_no(+);

prompt
prompt Creating view V_INTF_DOC_DUTY
prompt =============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_DOC_DUTY AS
SELECT T.P_CODE,
        T.DUTY_DATE,
        T.REMARKS,
        to_char(t.op_time, 'yyyy-mm-dd hh24:mi:ss') last_modify_time
   FROM T_TR_LEADDUTY T;

prompt
prompt Creating view V_INTF_DOC_ETOPS
prompt ==============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_DOC_ETOPS AS
SELECT A.P_CODE,
        A.AERA_CODE,
        B.Bm_Name,
        A.AC_TYPE,
        A.FIRST_DATE,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.REMARKS,
        A.OP_TIME last_modify_time
   FROM T_TECH_AUTH_ETOPS A, T_BAS_DICT B
  WHERE B.PARENT_CODE = 'ETOP'
    and A.AERA_CODE = B.BM_CODE;

prompt
prompt Creating view V_INTF_DOC_PILOT
prompt ==============================
prompt
create or replace force view v_intf_doc_pilot as
select a.p_code as pilot_id,  /*??????????*/
        a.filiale as org_code, /*??????????*/
        b.filiale_name as org_name, /*??????????*/
        a.c_name as pilot_name, /*????*/
        a.e_first_name as eng_surname, /*??????*/
        a.e_name as eng_name, /*??????*/
        a.post_rank as execute_level, /*????????*/
        a.work_no as clerk_code /*????*/
   from t_hr_crew a, t_bas_filiale b
  where a.filiale = b.filiale(+)
    and a.valid_flag = 'Y';

prompt
prompt Creating view V_INTF_DOC_RADIO
prompt ==============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_DOC_RADIO AS
SELECT A.P_CODE,
        A.AERA_CODE,
        B.BM_NAME,
        A.FIRST_DATE,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.OP_TIME LAST_MODIFY_TIME,
        A.REMARKS,
        A.AC_TYPE
   FROM T_TECH_AUTH_RADIO A, T_BAS_DICT B
  WHERE A.Rank_No='R' and B.PARENT_CODE = 'RADI'
    AND A.AERA_CODE = B.BM_CODE;

prompt
prompt Creating view V_INTF_DOC_RNP
prompt ============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_DOC_RNP AS
SELECT A.P_CODE,
        A.AIRPORT_CODE,
        B.CHINESE_NAME,
        DECODE(A.TECH_TYPE, '395', 'RNPAPCH', 'RNPAR') TECH_TYPENAME,
        A.RANK_NO,
        C.RANK_NAME,
        A.FIRST_DATE,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.OP_TIME LAST_MODIFY_TIME,
        A.REMARKS
   FROM T_TECH_AUTH_RNP A, T_BAS_AIRPORT B, T_BAS_RANK C
  WHERE A.AIRPORT_CODE = B.AIRPORT_3CODE
    AND A.RANK_NO = C.RANK_NO;

prompt
prompt Creating view V_INTF_DOC_ROSTERCOUNT
prompt ====================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_DOC_ROSTERCOUNT AS
SELECT FLIGHT_DATE,
        a.P_CODE,
        w.work_no,
        w.dep_code,
        MONTH_FLY_HOURS,
        MONTH3_FLY_HOURS,
        YEAR_FLY_HOURS
   FROM T_SCH_ROSTER_A a,t_hr_crew w
   where a.p_code=w.p_code;

prompt
prompt Creating view V_INTF_DOC_SPECIAL
prompt ================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_DOC_SPECIAL AS
SELECT A.P_CODE,
        A.AIRPORT_CODE,
        B.CHINESE_NAME,
        A.RANK_NO,
        C.RANK_NAME,
        A.FIRST_DATE,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.OP_TIME LAST_MODIFY_TIME,
        A.REMARKS
   FROM T_TECH_AUTH_SPECIAL A, T_BAS_AIRPORT B, T_BAS_RANK C
  WHERE A.AIRPORT_CODE = B.AIRPORT_3CODE
    AND A.RANK_NO = C.RANK_NO;

prompt
prompt Creating view V_INTF_EFB_AIRLINES
prompt =================================
prompt
create or replace force view v_intf_efb_airlines as
select nes.airline_type,
        nes.departure_airport,
        nes.arrival_airport,
        nes.flight_com,
        nes.op_time last_modify_time
   from t_bas_airlines nes;

prompt
prompt Creating view V_INTF_EFB_CREWSCH
prompt ================================
prompt
create or replace force view v_intf_efb_crewsch as
select /*??EFB??????????????????*/
        a.flight_id,  /*????ID*/
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        c.crew_link_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,c.op_time))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        c.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b.op_time b1_op_time,
        c.op_time c_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
         a.fly_hours,
         decode(b.d_or_i,'D','N','Y') is_inter
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and a.module_flag!='M' /*???????????? 2015-08-28*/
 union all
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        nvl(b1.mm_leg_id,b1.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        c.crew_link_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,c.op_time)))) as last_modify_time, --????????????
        a.rec_id, --????ID
        c.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
         a.fly_hours,
         decode(b.d_or_i,'D','N','Y') is_inter
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and b1.sch_pub_flag ='Y' /*???????????????????????????? 2015-08-13 zhp*/
    and a.module_flag!='M'  /*???????????? 2015-08-28*/
 union all
 select --??????????????????)
        b.flight_id,  --????ID
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        c.crew_link_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,c.op_time)))) as last_modify_time, --????????????
        a.rec_id, --????ID
        c.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
         a.fly_hours,
        decode(b.d_or_i,'D','N','Y') is_inter
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and b1.flight_id = b.flight_id_ref
    and a.module_flag!='M' /*???????????? 2015-08-28*/
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b1.flight_date >= t.tsk_syn_date
                )
;

prompt
prompt Creating view V_INTF_EFB_FLTSCH
prompt ===============================
prompt
create or replace force view v_intf_efb_fltsch as
select /*??EFB????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        (select eet.ac_type_long from t_bas_fleet eet where eet.ac_type=a.ac_type) ac_type_long,
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.crew_link_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        decode(a.d_or_i,'D','N','Y') is_inter /*???????????? 2015-09-11 */
   from t_flt_schedule a,t_sch_pairing p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
 union all
 --??????(??????)????
 select a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        (select eet.ac_type_long from t_bas_fleet eet where eet.ac_type=a.ac_type) ac_type_long,
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'V' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.crew_link_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line,  /*??????*/
        decode(a.d_or_i,'D','N','Y') is_inter /*???????????? 2015-09-11 */
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        t_sch_pairing p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        (select eet.ac_type_long from t_bas_fleet eet where eet.ac_type=a.ac_type) ac_type_long,
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'J' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.crew_link_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line,  /*??????*/
        decode(a.d_or_i,'D','N','Y') is_inter /*???????????? 2015-09-11 */
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        t_sch_pairing p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        (select eet.ac_type_long from t_bas_fleet eet where eet.ac_type=a.ac_type) ac_type_long,
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.crew_link_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
         decode(a.d_or_i,'D','N','Y') is_inter /*???????????? 2015-09-11 */
   from t_flt_schedule a,
        t_sch_pairing p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
;

prompt
prompt Creating view V_INTF_EFB_TASK
prompt =============================
prompt
create or replace force view v_intf_efb_task as
select /*??EFB????????????????,????????????????????????????????????*/
        a.flight_date, /*????????*/
        a.crew_link_line, /*????ID*/
        a.flight_com,  /*??????????*/
        a.flight_voyage,  /*????????*/
        a.ac_type,  /*????*/
        a.ac_reg,   /*????*/
        a.filiale, /*??????*/
        nvl(a.dep_code,f.fxw_code || '01') FLIGHT_UNIT_CODE,
        a.fly_hours,  /*????????*/
        a.depa_airport, /*????????*/
        a.td,  /*????????????*/
        a.arri_airport,  /*??????*/
        a.ta,  /*????????????*/
        a.td - nvl(a.td_punch/(24*60),0) as sign_time, /*????????*/
        a.td - nvl(a.td_before/(24*60),0) as drive_time,  /*????????*/
        a.op_time as last_modify_time,
        a.flight_flag,/*????????*/
        --a.depart_flight_no,/*??????????*/
        (select decode(min(fs.sch_pub_flag),'X','N',min(fs.sch_pub_flag))
           from t_flt_schedule fs,t_sch_pairing sp
          where sp.duty_line = a.duty_line
            and sp.crew_link_line = fs.crew_link_line
            and (fs.flg_cs is null or fs.flg_cs <> 'C' and fs.flg_cs <> 'D')
        ) as publish_status,
        --decode(a.sch_pub_flag,'X','N',a.sch_pub_flag) publish_status,
        a.rec_id, /*????ID*/
        (select (select ied.actualaircraftproperty from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=ule.flight_id) from t_flt_schedule ule where ule.flight_id=(case
          when instr(a.flight_ids, '/') > 0 then
           substr(a.flight_ids, 1, instr(a.flight_ids, '/') - 1)
          else
           a.flight_ids
        end)) ac_owner,
        (select (select ied.actualcrewproperty from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=ule.flight_id) from t_flt_schedule ule where ule.flight_id=(case
          when instr(a.flight_ids, '/') > 0 then
           substr(a.flight_ids, 1, instr(a.flight_ids, '/') - 1)
          else
           a.flight_ids
        end)) crew_owner,
        (select (select ied.actualcabinproperty from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=ule.flight_id) from t_flt_schedule ule where ule.flight_id=(case
          when instr(a.flight_ids, '/') > 0 then
           substr(a.flight_ids, 1, instr(a.flight_ids, '/') - 1)
          else
           a.flight_ids
        end)) stew_owner,
        nvl2((select ied.flightinfoid
                 from t_intf_yxw_unified_flt ied
                where ied.flight_id = (select ule.flight_id from t_flt_schedule ule where ied.ispassed=1 and ule.flight_id=(case
          when instr(a.flight_ids, '/') > 0 then
           substr(a.flight_ids, 1, instr(a.flight_ids, '/') - 1)
          else
           a.flight_ids
        end))),
               'Y',
               'N') is_unity,
          (select (select ied.operater from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=ule.flight_id) from t_flt_schedule ule where ule.flight_id=(case
          when instr(a.flight_ids, '/') > 0 then
           substr(a.flight_ids, 1, instr(a.flight_ids, '/') - 1)
          else
           a.flight_ids
        end)) carrier
   from t_sch_pairing a,t_bas_filiale f
  where a.filiale = f.filiale
    and f.tsk_syn_date is not null
    and a.flight_date >= f.tsk_syn_date
;

prompt
prompt Creating view V_INTF_ELC_CREWSCH
prompt ================================
prompt
create or replace force view v_intf_elc_crewsch as
select /*??????????????????????????????,????????????????????????,????????????????*/
        case a.ac_owner
          when 'HFE' then 'EA01'
          when 'PEK' then 'EA15'
          when 'CTU' then 'EA16'
          when 'KMG' then 'EA13'
          when 'LHW' then 'EA02'
          when 'KN' then 'EA04'
          when 'KHN' then 'EA06'
          when 'NKG' then 'EA05'
          when 'NGB' then 'EA07'
          when 'TAO' then 'EA08'
          when 'MU' then 'EA10'
          when 'FM' then 'EA17'
          when 'SJW' then 'EA03'
          when 'TYN' then 'EA09'
          when 'WUH' then 'EA11'
          when 'SIA' then 'EA12'
          else a.ac_owner
        end as org_code, /*????????????*/
        a.crew_link_line as aero_task_no,  /*??????????*/
        --a.stew_link_line as cabin_task_no, /*??????????*/
        a.flight_id as flight_plan_id, /*????ID*/
        a.flight_date, /*????????*/
        a.flight_no,/*??????*/
        a.departure_airport as depart_port_code3, /*????????????*/
        a.arrival_airport as arrival_port_code3, /*????????????*/
        case b.rank_no
          when 'A001' then '5001' /*????*/
          when 'B001' then '5009' /*????????*/
          when 'C001' then '5003' /*??????????*/
          when 'C002' then '5008' /*??????????*/
          when 'D001' then '5004' /*??????*/
          when 'E001' then '5005' /*??????*/
          when 'F001' then '5007' /*??????*/
          when 'S001' then '5006'
          when 'S002' then '5006'
          when 'S003' then '5006'
          when 'M001' then '5006' /*????????*/
          else b.rank_no
        end as post, /*????????*/
        case b.rank_no
          when 'A001'
             then 'CA'
          when 'B001'
             then 'FO'
          when 'C001'
             then 'FO'
          when 'C002'
             then 'FO'
          when 'D001'
             then 'FE'
          when 'E001'
             then 'RO'
          when 'F001'
             then 'SE'
          when 'M001'
             then 'FE'
          else NULL
        end as rank, /*????ICAO????*/
        count(*) as sum
   from t_flt_schedule a,t_sch_roster b,t_hr_crew c
  where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and (a.d_or_i = 'R' or a.d_or_i = 'D')
    and a.flight_id = b.flight_id
    and c.p_code = b.p_code
  group by a.ac_owner,a.crew_link_line,a.flight_id,a.flight_date,a.flight_no,
           a.departure_airport,a.arrival_airport,b.rank_no
;

prompt
prompt Creating view V_INTF_FGW_BOARDING
prompt =================================
prompt
create or replace force view v_intf_fgw_boarding as
select cert.cert_id,
        cert.p_code,
        cert.cert_type,
        cert.cert_no,
        cert.country_code,
        cert.issue_agency,
        cert.issue_date,
        cert.check_date,
        cert.over_date,
        cert.valid_flag,
        cert.op_time as last_modify_time
   from t_hr_cert cert,t_hr_crew t2
   where cert.p_code=t2.p_code
   and t2.module_flag='F'
   and t2.filiale in (select t3.filiale from t_bas_filiale t3 where t3.is_online='Y');

prompt
prompt Creating view V_INTF_FGW_CERT_SPECIAL
prompt =====================================
prompt
create or replace force view v_intf_fgw_cert_special as
select ts.cert_type,
        nvl(rt.fgw_id, rt.pass_id) cert_id,
        ts.p_code,
        ts.country_code,
        ts.valid_flag,
        ts.remarks,
        ts.op_time last_modify_time
   from t_hr_cert_specail ts, t_hr_passport rt, t_hr_crew tc
  where ts.cert_id = rt.pass_id
    and ts.p_code = tc.p_code
    and tc.module_flag = 'F'
    and tc.filiale in
        (select e.filiale from t_bas_filiale e where e.is_online = 'Y');

prompt
prompt Creating view V_INTF_FGW_CREW
prompt =============================
prompt
create or replace force view v_intf_fgw_crew as
select /*????????????????????????????*/
  a.p_code,
  case
    when c.is_ground = 'Y' and work_no is null then --??????????????????G + p_code
     'G' || a.p_code
    else
     a.work_no
  end as work_no, /*????*/
  a.c_name, /*????*/
  a.py_abbr, /*????*/
  a.e_first_name, /*??????*/
  a.e_name, /*??????*/
  a.birth_date, /*????*/
  a.sex, /*????*/
  a.id_no, /*????????*/
  a.filiale, /*??????????????*/
  case
    when a.dep_code = 'EA10011012' then --????????
     a.branch_code
    else
     replace(a.dep_code,'EAJN','EA08')
  end as dep_code, /*????????,????????*/
  c.is_ground, /*????????????*/
  a.home_filiale as temp_filiale, /*????????????,??????????????????????temp_unit_code*/
  a.post_duty, /*????????*/
  a.post_rank, /*????????*/
  a.work_date, /*????????????*/
  a.college, /*????????*/
  a.en_date, /*????????*/
  a.grad_date, /*????????*/
  a.culture, /*????????*/
  a.speciality, /*????????*/
  '5201' work_type, /*????????????????????????????????????(5201)??????(5202)??????(5203)*/
  a.address, /*????????*/
  a.phone, /*????????*/
  a.office_tel, /*??????????*/
  a.mobil_no, /*????*/
  a.tall, /*????*/
  a.mate_yn, /*????????*/
  a.party_date, /*????????*/
  a.native, /*????*/
  (select upper(country_3code)
     from t_bas_country
    where country_code = a.native) as en_native, /*????????*/
  a.party, /*????????*/
  a.weight, /*????*/
  a.enter_date, /*??????????*/
  a.born_in, /*??????????*/
  a.e_born_in, /*??????????*/
  a.en_address, /*????????????*/
  replace(a.branch_code,'EAJN','EA08') as branch_code, /*????????*/
  a.valid_flag, /*????????*/
  /*a.healthlevel??hlcode,\*????????????*\*/
  a.healthlevel as hlname, /*????????????*/
  a.blood_type,
  a.abroad_date,
  a.e_mail,
  a.fax,
  a.FLY_DATE,
  a.OPER_IP,
  a.NEWFLY_YN,
  a.OPER,
  a.MOBIL_NO2,
  a.mobil_no3,
  a.NATION,
  a.CARRY_CODE,
  a.CARRY_CODE2,
  a.family,
  a.COMMENTARY,
  a.MODULE_FLAG,
  a.HR_TYPE,
  a.ZIP_NO,
  a.ID_TYPE,
  a.HR_STATUS,
  a.fxw_id,
  a.home_base,
  a.smoke_yn,
  a.op_time last_modify_time
   from t_hr_crew a,
        t_hr_dept c
  where a.dep_code = c.dep_code(+)
    and a.module_flag = 'F'
    and nvl(c.is_ground,'N')!='Y' /*??????????????,????????????????????*/
    and (a.filiale in
        (select filiale from t_bas_filiale where is_online = 'Y'))
;

prompt
prompt Creating view V_INTF_FGW_DDO
prompt ============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FGW_DDO AS
SELECT s.rec_id ddo_id,
        h.p_code,
        h.work_no,
        h.c_name,
        h.fxw_id,
        h.filiale,
        (select d.filiale_name from t_bas_filiale d where d.filiale=h.filiale) filiale_name,
        (select d.fxw_code from t_bas_filiale d where d.filiale=h.filiale) org_code,
        Nvl(t.atd,Nvl(t.etd,t.std)) td,
        Nvl(t.ata,Nvl(t.eta,t.sta)) ta,
        'hb' cate,
        '????' cate_name,
        'FlightSchedule' ddo_code,
        a.chinese_name || '-' || b.chinese_name ddo_name,
        t.flight_no,
        t.REMARKS,
        t.op_time last_modify_time
     FROM t_flt_schedule t, t_sch_roster s,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE ( t.flight_id = s.flight_id )
      AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F'
  union all
 select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        (select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        'kq' cate,
        decode(b.DDO_TYPE,'5','????-????','????-????') cate_name,
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        '' flight_no,
        a.remarks, /*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code(+)
    and (c.filiale = d.filiale or c.home_filiale = d.filiale)
    and d.tsk_syn_date is not null
    and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        (select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'kq' cate,
        '????' cate_name,
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        '' flight_no,
        a.remark,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale or c.home_filiale=d.filiale)
    and d.tsk_syn_date is not null
    and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.filiale_name,
        e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        'mnj' cate,
        '??????' cate_name,
        decode(h.train_type,1,'MNJZW' || '_' || d.ac_type_crew,2,'LLZW' || '_' || d.ac_type_crew,'MNJZW' || '_' || d.ac_type_crew) ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || d.ac_type_crew || ']' ddo_name, /*????????*/
        '' flight_no,
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' ||
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+)
   /* and (a.is_from_fxw is null or a.is_from_fxw = 'N'); */;

prompt
prompt Creating view V_INTF_FGW_DDO_DELLOG
prompt ===================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FGW_DDO_DELLOG AS
SELECT LOG_ID,
        TAB_CODE,
        REC_ID,
        DEL_TIME last_modify_time
   FROM T_INTF_DEL_LOG
   where tab_code in ('TRSCHEDULE','TRDDO');

prompt
prompt Creating view V_INTF_FGW_ETOPS
prompt ==============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FGW_ETOPS AS
SELECT A.P_CODE,/*????????????:ETOPS????????*/
        A.AERA_CODE,
        B.Bm_Name,
        A.AC_TYPE,
        A.FIRST_DATE,
        DECODE(A.RANK_NO, 'E', 'ETOPS') RANK_NO,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.REMARKS,
        A.OP_TIME last_modify_time
   FROM T_TECH_AUTH_ETOPS A, T_BAS_DICT B
  WHERE B.PARENT_CODE = 'ETOP'
    and A.AERA_CODE = B.BM_CODE;

prompt
prompt Creating view V_INTF_FGW_LICENSE
prompt ================================
prompt
create or replace force view v_intf_fgw_license as
select a.LICENSE_ID,
        a.P_CODE,
        a.CERT_TYPE,
        a.LICENSE_NO,
        a.COUNTRY_CODE,
        a.ISSUE_AGENCY,
        a.ISSUE_DATE,
        a.CHECK_DATE,
        a.OVER_DATE,
        a.AC_TYPES,
        a.ICAO_CLASS,
        a.ICAO_ISSUE_DATE,
        a.ICAO_CHECK_DATE,
        a.ICAO_OVER_DATE,
        a.VALID_FLAG,
        a.OPER,
        f_max(a.OP_TIME,d.op_time) last_modify_time, /*??????????????*/
        a.REMARKS,
        a.OPER_IP,
        a.OPER_HOST,
        a.LICENSE_FLAG,
        a.BASIC_MONTH,
        a.BASIC_MONTH2,
        a.NEXT_MONITOR_YN,
        a.NEXT_MONITOR_TEACHER_YN,
        a.NEXT_TEACHER_LIMIT,
        a.TEACHER_YN,
        a.END_DATE,
        a.TEACHER_START_DATE,
        a.TEACHER_END_DATE,
        a.SIMU_CODE,
        b.filiale,
        d.check_date c_check_date,
        d.over_date c_over_date,
        a.ac_type_yn
   from t_hr_license a, t_hr_crew b,t_bas_filiale c,(select * from t_tech_qulification tn where tn.qlf_code='485' and tn.valid_flag='Y') d
    /*485??????Y??????P_Code,ac_typs???????????? 2014-09-11*/
  where a.p_code = b.p_code
  and b.filiale=c.FILIALE
  and a.p_code=d.p_code(+)
  and c.is_online='Y'
  order by p_code;

prompt
prompt Creating function FN_GETPLANTAILNO
prompt ==================================
prompt
create or replace function fn_getplantailno(crew_line_lines in varchar2) return varchar2 is
  Result varchar2(100);
begin
   select wm_concat(tail_no) into Result from (select distinct ule.ac_reg tail_no
   from t_flt_schedule ule,
        (             with a as (select crew_line_lines ||'/' crew_link_line
                                   from dual)
          select regexp_substr(crew_link_line, '[^/]+', 1, rownum) crew_link_line
            from a
          connect by rownum <=
                     length(regexp_replace(crew_link_line, '[^/]+'))) ule1
           where ule.crew_link_line = ule1.crew_link_line);
  return(Result);
end fn_getplantailno;
/

prompt
prompt Creating view V_INTF_FGW_LINECHECK
prompt ==================================
prompt
create or replace force view v_intf_fgw_linecheck as
select phaseinsp_id,
       pilot_id,
       pilot_pcode,
       inspector_id,
       inspector_pcode,
       trichkid,
       actypecode,
       reqbegdate,
       reqenddate,
       oper,
       oper_ip,
       oper_host,
       last_modify_time,
       crew_link_line,
       insp_line,
       is_arrange,
       flight_date,
       tail_no
  from (select phaseinsp_id,
               pilot_id,
               pilot_pcode,
               inspector_id,
               insp_pilotid_frms,
               inspector_pcode,
               trichkid,
               actypecode,
               reqbegdate,
               reqenddate,
               oper,
               oper_ip,
               oper_host,
               fn_getmaxtime(line.crew_link_line, line.op_time) last_modify_time,
               crew_link_line,
               FLIGHT_COM insp_line,
               decode(instr(nvl(fn_getIsArrange(line.crew_link_line,
                                            line.check_yn),'#'),
                            'Y'),
                      0,
                      'N',
                      /*(case
                        when line.check_yn = 'N' and line.crew_link_line is not null and
                             line.insp_pilotid_frms != line.inspector_id then
                         'Y'
                        else
                         'Y'
                      end)*/'Y') is_arrange,
               fn_getminflightdate(line.crew_link_line) flight_date,
               fn_getplantailno(line.crew_link_line) tail_no,
               check_yn
          from t_intf_fgw_line line
         where (line.op_time <> line.last_modify_time and line.validity='Y')
            or line.trichkid = '3014') line
 where (instr(line.is_arrange, 'Y') > 0 or
       (line.check_yn = 'N' and line.crew_link_line is null));

prompt
prompt Creating view V_INTF_FGW_LINECHECK_ALL
prompt ======================================
prompt
create or replace force view v_intf_fgw_linecheck_all as
select line."PHASEINSP_ID",
        line."PILOT_ID",
        line."PILOT_PCODE",
        line."INSPECTOR_ID",
        line."INSPECTOR_PCODE",
        line."TRICHKID",
        line."ACTYPECODE",
        line."REQBEGDATE",
        line."REQENDDATE",
        line."OPER",
        line."OPER_IP",
        line."OPER_HOST",
        line."LAST_MODIFY_TIME",
        line."CREW_LINK_LINE",
        line."INSP_LINE",
        line."IS_ARRANGE",
        ing.flight_date
   from (select distinct t1.PHASEINSP_ID,
                         t1.PILOT_ID,
                         t1.PILOT_pcode,
                         t1.INSPECTOR_ID,
                         t1.INSPECTOR_pcode,
                         t1.TRICHKID,
                         t1.ACTYPECODE,
                         t1.REQBEGDATE,
                         t1.REQENDDATE,
                         t1.OPER,
                         t1.OPER_IP,
                         t1.OPER_HOST,
                         t1.OP_TIME last_modify_time,
                         t1.CREW_LINK_LINE,
                         t1.FLIGHT_COM INSP_LINE, /*????????*/
                         decode(t1.check_yn || t2.sch_pub_flag,
                                'YY',
                                'Y',
                                'N') is_arrange
           from T_INTF_FGW_LINE t1
           left join t_flt_schedule t2
             on t1.crew_link_line = t2.crew_link_line
          ) line
   left join t_sch_pairing ing
     on line.crew_link_line = ing.crew_link_line;

prompt
prompt Creating view V_INTF_FGW_PASSPORT
prompt =================================
prompt
create or replace force view v_intf_fgw_passport as
select /*??????????????????????????*/
         nvl(a.fgw_id,a.pass_id) pass_id,/*????ID*/
         a.p_code,/*????????*/
         a.cert_type,/*????????(????/????/??????????)*/
         a.pass_flag,/*????????(0????????1????????)*/
         a.pass_no,/*????????*/
         a.country_code,/*????????(????CN)*/
         c.country_name,/*????????????*/
         a.issue_agency,/*????????*/
         a.issue_date,/*????????*/
         a.check_date,/*????????*/
         a.over_date,/*????????*/
         a.en_addr,/*????????*/
         a.en_born_in,/*??????????*/
         a.ch_born_in,/*??????????*/
         a.valid_flag, /*????????(Y????,N??????,X????)*/
         a.op_time last_modify_time,/*????????????*/
         a.remarks,/*????*/
         a.fxw_id
    from t_hr_passport a,t_hr_crew b,t_bas_country c
   where a.p_code = b.p_code
     and b.module_flag = 'F'
     and b.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
     and a.country_code = c.country_code(+);

prompt
prompt Creating view V_INTF_FGW_QLF
prompt ============================
prompt
create or replace force view v_intf_fgw_qlf as
select /*????????????????*/ t.qlf_code, t.qlf_name
   from t_tech_qlf t
  where t.qlf_flag = 'Y'
    and t.module_flag = 'F'
    and t.valid_flag = 'Y';

prompt
prompt Creating view V_INTF_FGW_QULIFICATION
prompt =====================================
prompt
create or replace force view v_intf_fgw_qulification as
select /*????????????????????????*/
 distinct qf.p_code,
          qf.ac_type,
          qf.qlf_id,
          qf.qlf_code,
          qf.qlf_date,
          qf.qlf_overdate,
          qf.weather_code,
          qf.tech_code,
          qf.valid_flag,
          qf.last_modify_time
   from (select distinct qlf.p_code,
                         qlf.ac_type,
                         qlf.qlf_id,
                         qlf.qlf_code,
                         qlf.qlf_date,
                         qlf.qlf_overdate,
                         weather.weather_code,
                         tech.tech_code,
                         qlf.valid_flag,
                         f_max(tech.tech_op_time, qlf.qlf_op_time) as last_modify_time
           from (select a.p_code,
                        a.qlf_id,
                        case
                          when (select count(ql.qlf_code)
                                  from t_tech_qlf ql
                                 where ql.qlf_code = q.qlf_code
                                   and ql.parent_code = '391') > 0 then
                           '391'
                          else
                           q.qlf_code
                        end qlf_code,
                        q.qlf_code as qlfoo,
                        a.ac_types as ac_type,
                        q.valid_flag,
                        check_date as qlf_date,
                        over_date as qlf_overdate,
                        f_max(a.op_time, q.op_time) as qlf_op_time
                   from t_tech_qulification a, t_tech_qlf q
                  where a.qlf_code = q.qlf_code
                    and a.valid_flag = 'Y') qlf
           left join (select q.parent_code, q.qlf_code as weather_code
                       from t_tech_qlf q
                      where q.parent_code = '391') weather on qlf.qlf_code =
                                                              weather.parent_code
                                                          and qlf.qlfoo =
                                                              weather.weather_code
           left join (select p_code,
                            ac_type,
                            tech_no_i as tech_code,
                            tech_no_i_date as tech_date,
                            f_max(a.op_time, b.op_time) as tech_op_time
                       from t_tech_info a, t_bas_tech b
                      where a.tech_no_i = b.tech_no
                        and b.tech_type = 'A'
                        and a.valid_flag = 'Y') tech on tech.p_code =
                                                        qlf.p_code
                                                    and tech.ac_type =
                                                        qlf.ac_type) qf where qlf_code!=485;

prompt
prompt Creating view V_INTF_FGW_RADIO_C
prompt ================================
prompt
create or replace force view v_intf_fgw_radio_c as
select /*????????????:????????????(CADI)*/
         a.p_code, /*????????*/
         b.fxw_id,/*??????????ID*/
         /*??????FRMS,????????TAI,????????T*/
         decode(a.aera_code,'T','TAI',a.aera_code) aera_code, /*????????????????*/
        (select d.bm_name
           from t_bas_dict d
          where d.bm_code = a.aera_code
            and d.parent_code = decode(a.rank_no, 'R', 'RADI', 'C', 'CADI')) aera_name, /*????????????*/
        DECODE(A.RANK_NO, 'R', 'RT-RADIO','C','RT-PIC-SIN') RANK_NO, /*????????*/
        a.first_date, /*????????????*/
        a.last_date, /*????????????*/
        a.valid_flag, /*????????*/
        a.op_time last_modify_time, /*????????????*/
        a.remarks, /*????*/
        a.ac_type /*????*/
   from t_tech_auth_radio a, t_hr_crew b, t_bas_filiale c
  where a.p_code = b.p_code
    and b.module_flag = 'F'
    and b.filiale = c.filiale
    and c.is_online = 'Y'
    and a.rank_no = 'C';

prompt
prompt Creating view V_INTF_FGW_RADIO_R
prompt ================================
prompt
create or replace force view v_intf_fgw_radio_r as
select /*????????????:????????????(RADI)*/
         a.p_code, /*????????*/
         b.fxw_id,/*??????????ID*/
         a.aera_code, /*????????????*/
        (select d.bm_name
           from t_bas_dict d
          where d.bm_code = a.aera_code
            and d.parent_code = decode(a.rank_no, 'R', 'RADI', 'C', 'CADI')) aera_name, /*????????????*/
        DECODE(A.RANK_NO, 'R', 'RT-RADIO','C','RT-PIC-SIN') RANK_NO, /*????????*/
        a.first_date, /*????????????*/
        a.last_date, /*????????????*/
        a.valid_flag, /*????????*/
        a.op_time last_modify_time, /*????????????*/
        a.remarks, /*????*/
        a.ac_type /*????*/
   from t_tech_auth_radio a, t_hr_crew b, t_bas_filiale c
  where a.p_code = b.p_code
    and b.module_flag = 'F'
    and b.filiale = c.filiale
    and c.is_online = 'Y'
    and a.rank_no = 'R';

prompt
prompt Creating view V_INTF_FGW_RNP
prompt ============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FGW_RNP AS
SELECT/*????????????:RNPAR*/
        A.P_CODE,
        A.AIRPORT_CODE,
        B.CHINESE_NAME,
        DECODE(A.TECH_TYPE, '396', 'RNPAR','395','RNPAPCH') TECH_TYPENAME,
        A.RANK_NO,
        C.RANK_NAME,
        A.FIRST_DATE,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.OP_TIME LAST_MODIFY_TIME,
        A.REMARKS
   FROM T_TECH_AUTH_RNP A, T_BAS_AIRPORT B, T_BAS_RANK C
  WHERE A.AIRPORT_CODE = B.AIRPORT_3CODE
    AND A.RANK_NO = C.RANK_NO;

prompt
prompt Creating view V_INTF_FGW_SPECIAL
prompt ================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FGW_SPECIAL AS
SELECT  /*????????????:??????????*/
        A.P_CODE,
        A.AIRPORT_CODE,
        B.CHINESE_NAME,
        decode(b.a_cls,'CLS6','Y','N') IsHighLand,
        'SPE' as Rank_type,
        A.Rank_No,
        C.RANK_NAME,
        A.FIRST_DATE,
        A.LAST_DATE,
        A.VALID_FLAG,
        A.OP_TIME LAST_MODIFY_TIME,
        A.REMARKS
   FROM T_TECH_AUTH_SPECIAL A, T_BAS_AIRPORT B, T_BAS_RANK C
  WHERE A.AIRPORT_CODE = B.AIRPORT_3CODE
    AND A.RANK_NO = C.RANK_NO;

prompt
prompt Creating view V_INTF_FGW_QLFBYPCODE
prompt ===================================
prompt
create or replace force view v_intf_fgw_qlfbypcode as
select '1003' qlf_code,null weather_code, P_CODE, AC_TYPE, null AIRPORT_CODE,AERA_CODE, null CHECK_DATE,null OVER_DATE,VALID_FLAG, FIRST_DATE,LAST_DATE,LAST_MODIFY_TIME
   from v_intf_fgw_etops
 union all
 select decode(TECH_TYPENAME,'RNPAR','1001','RNPAPCH','1019',TECH_TYPENAME) qlf_code,null weather_code, P_CODE, null AC_TYPE,AIRPORT_CODE,null AERA_CODE,null CHECK_DATE,null OVER_DATE, VALID_FLAG, FIRST_DATE,LAST_DATE, LAST_MODIFY_TIME
   from v_intf_fgw_rnp
 union all
 select '1004' qlf_code,null weather_code, P_CODE, null AC_TYPE,AIRPORT_CODE,null AERA_CODE,null CHECK_DATE,null OVER_DATE, VALID_FLAG, FIRST_DATE,LAST_DATE,LAST_MODIFY_TIME
 from v_intf_fgw_special
 where ISHIGHLAND = 'N'
 union all
 select '1006' qlf_code,null weather_code, P_CODE, null AC_TYPE,AIRPORT_CODE,null AERA_CODE,null CHECK_DATE,null OVER_DATE, VALID_FLAG, FIRST_DATE,LAST_DATE, LAST_MODIFY_TIME
 from v_intf_fgw_special
 where ISHIGHLAND = 'Y'
 union all
 select '1011' qlf_code,null weather_code, P_CODE, null AC_TYPE, null AIRPORT_CODE,AERA_CODE,null CHECK_DATE,null OVER_DATE, VALID_FLAG, FIRST_DATE,LAST_DATE,LAST_MODIFY_TIME from v_intf_fgw_radio_c
 union all
 select '1010' qlf_code,null weather_code, P_CODE, null AC_TYPE, null AIRPORT_CODE,AERA_CODE,null CHECK_DATE,null OVER_DATE, VALID_FLAG, FIRST_DATE,LAST_DATE,LAST_MODIFY_TIME from v_intf_fgw_radio_R
 union all
 select qlf_code,WEATHER_CODE,
  P_CODE, AC_TYPE, null AIRPORT_CODE,null AERA_CODE,QLF_DATE CHECK_DATE,QLF_OVERDATE OVER_DATE, VALID_FLAG, null FIRST_DATE, null LAST_DATE,LAST_MODIFY_TIME from v_intf_fgw_qulification qlf where qlf.qlf_code!='485' and qlf.qlf_code!='486';

prompt
prompt Creating view V_INTF_FGW_RADIO
prompt ==============================
prompt
create or replace force view v_intf_fgw_radio as
select /*????????????:????????????(RADI)??????????????(CADI)*/
  a.p_code, /*????????*/
  b.fxw_id, /*??????????ID*/
  decode(a.rank_no || a.aera_code, 'CT', 'TAI', a.aera_code) aera_code,
   /*????????????*/
   /*??????FRMS,????????TAI,????????T*/
  (select d.bm_name
     from t_bas_dict d
    where d.bm_code = a.aera_code
      and d.parent_code = decode(a.rank_no, 'R', 'RADI', 'C', 'CADI')) aera_name, /*????????????*/
  DECODE(A.RANK_NO, 'R', 'RT-RADIO', 'C', 'RT-PIC-SIN') RANK_NO, /*????????*/
  a.first_date, /*????????????*/
  a.last_date, /*????????????*/
  a.valid_flag, /*????????*/
  a.op_time last_modify_time, /*????????????*/
  a.remarks, /*????*/
  a.ac_type /*????*/
   from t_tech_auth_radio a, t_hr_crew b, t_bas_filiale c
  where a.p_code = b.p_code
    and b.module_flag = 'F'
    and b.filiale = c.filiale
    and c.is_online = 'Y';

prompt
prompt Creating view V_INTF_FGW_TECH
prompt =============================
prompt
create or replace force view v_intf_fgw_tech as
select /*????????????*/t.tech_no,t.tech_name
   from t_bas_tech t
  where in_ex = 'I'
    and module_flag = 'F';

prompt
prompt Creating view V_INTF_FGW_TECHINFO
prompt =================================
prompt
create or replace force view v_intf_fgw_techinfo as
select /*????????????????????????????*/
 distinct tech.p_code,
          tech.ac_type,
          tech_code,
          tech_date,
          tech_enddate,
          tech_no_z,
          tech_no_z_date,
          ac_short_types,
          tech.tech_rank,
          decode(tech.valid_flag,'X','N',tech.valid_flag) valid_flag,
          l_checker_code, --??????
          l_checker_date, --??????????
          l_checker_enddate, --??????????????
          ls_checker_code, --????
          ls_checker_date, --????????
          ls_checker_enddate, --????????????
          stage,
          f_max(tech.tech_op_time,
                f_max(checker2.ls_op_time, checker1.l_op_time)) as last_modify_time
   from (select c.p_code,
                b.tech_rank,
                i.ac_type,
                b.tech_type,
                i.tech_no_i as tech_code,
                i.tech_no_i_date as tech_date,
                i.tech_no_z,
                i.tech_no_z_date,
                to_date('', 'yyyy-mm-dd') as tech_enddate,
                i.valid_flag,
                i.stage,
                i.ac_short_types,
                f_max(i.op_time, b.op_time) as tech_op_time
           from t_bas_tech b, t_hr_crew c, t_bas_filiale f, t_tech_info i
          where i.tech_no_i = b.tech_no
            and i.p_code = c.p_code
            and c.filiale = f.filiale
            and f.is_online = 'Y'
            and b.tech_type not in ('L', 'B')) tech
   left join (select distinct i.p_code,
                              i.ac_type,
                              i.tech_no_i as l_checker_code,
                              i.tech_no_i_date as l_checker_date,
                              to_date('', 'yyyy-mm-dd') as l_checker_enddate,
                              f_max(i.op_time, b.op_time) as l_op_time
                from t_bas_tech b, t_tech_info i
               where i.tech_no_i = b.tech_no
                 and b.tech_type = 'L') checker1 on tech.p_code =
                                                    checker1.p_code
                                                and tech.ac_type =
                                                    checker1.ac_type
   left join (select distinct i.p_code,
                              i.ac_type,
                              i.tech_no_i as ls_checker_code,
                              i.tech_no_i_date as ls_checker_date,
                              to_date('', 'yyyy-mm-dd') as ls_checker_enddate,
                              f_max(i.op_time, b.op_time) as ls_op_time
                from t_bas_tech b, t_tech_info i
               where i.tech_no_i = b.tech_no
                 and b.tech_type = 'B') checker2 on tech.p_code =
                                                    checker2.p_code
                  order by tech.p_code,tech.ac_type
;

prompt
prompt Creating view V_INTF_FGW_TECH_Z
prompt ===============================
prompt
create or replace force view v_intf_fgw_tech_z as
select /*????????????*/t.tech_no,t.tech_name
   from t_bas_tech t
  where in_ex = 'Z'
    and module_flag = 'F';

prompt
prompt Creating view V_INTF_FGW_TRANSFER
prompt =================================
prompt
create or replace force view v_intf_fgw_transfer as
select
      /*????????????????????????????????????????????????
      TR01 ????????????????????/??????
      TR03 ????????????????????????/??????
      */
      /*  */
      nvl(t1.fgw_id,t1.trans_id) trans_id,
      t1.p_code,
      t2.c_name,
      t2.work_no,
      t2.id_no,
      t1.from_dep_code,
      t1.from_filiale,
      t1.to_dep_code,
      t1.to_filiale,
      to_char(t1.start_date,'yyyy-mm-dd') start_date,
      to_char(t1.PLAN_END_DATE,'yyyy-mm-dd') end_date,
      state,
      t1.valid_flag,
      t1.op_time as last_modify_time
 from t_hr_transfer t1, t_hr_crew t2
 where t1.p_code = t2.p_code
       and t1.to_filiale in (select t3.filiale from t_bas_filiale t3 where t3.is_online='Y')
       /* ????????(????????)????????????????????,???????????????????????????????? 2014-06-09*/
       and ((t1.to_filiale in ('MU','KMG','SIA','LHW','KHN','CTU','TYN','WUH','PEK','NKG','HFE','NGB','TAO','TNA','SJW','KN') and t1.to_dep_code is null)
       /*????????????????FRMS????????????????????????,??????????????????????????????
       ????????????,FRMS??????????????,?????????????????????????????????????? 2014-06-24
        */
       or (t1.from_filiale in ('MU','KMG','SIA','LHW','KHN','CTU','TYN','WUH','PEK','NKG','HFE','NGB','TAO','TNA','SJW','KN') and t1.to_dep_code is not null) and t1.state='TR01')/* ??????????????FRMS 2014-10-15*/
       /* ????/??????????FRMS????????????????,????????????????????????????????,???? */
       --and (t1.from_filiale in ('MU','KMG','SIA') or t1.to_filiale in ('MU','KMG','SIA'))
       and t1.state in ('TR01','TR03')
      /* and t1.end_date is null ???????????????? */
;

prompt
prompt Creating view V_INTF_FGW_VISA
prompt =============================
prompt
create or replace force view v_intf_fgw_visa as
select /*??????????????????????????*/
          nvl(ort.fgw_id,ort.pass_id) passport_id,/*????ID*/
          nvl(a.fgw_id,a.visa_id) visa_id,/*????ID*/
          a.p_code,/*????????*/
          a.cert_type,/*????????(????/????/????/????/????/??????)*/
          a.visa_no,/*????????*/
          a.country_code,/*????????(????CN)*/
          c.country_name,/*????????????*/
          a.issue_agency,/*????????*/
          a.issue_date,/*????????*/
          a.check_date,/*????????*/
          a.over_date,/*????????*/
          a.valid_flag,/*????????(Y????,N??????,X????)*/
          a.op_time last_modify_time,/*????????????*/
          a.remarks,/*????*/
          a.fxw_id
     from t_hr_visa a,t_hr_passport ort,t_hr_crew b,t_bas_country c
    where a.passport_id=ort.pass_id
     and a.p_code = b.p_code
     and b.module_flag = 'F'
     and b.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
     and a.country_code=c.country_code(+);

prompt
prompt Creating view V_INTF_FOIS_CREWSCH
prompt =================================
prompt
create or replace force view v_intf_fois_crewsch as
select /*??????????????????????????????,????????????????????????,????????????????*/
        a.flight_id as flight_plan_id, /*????ID*/
        a.flight_date, /*????????*/
        a.flight_no,/*??????*/
        case a.crew_owner
          when 'HFE' then 'EA01'
          when 'PEK' then 'EA15'
          when 'CTU' then 'EA16'
          when 'KMG' then 'EA13'
          when 'LHW' then 'EA02'
          when 'KN' then 'EA04'
          when 'KHN' then 'EA06'
          when 'NKG' then 'EA05'
          when 'NGB' then 'EA07'
          when 'TAO' then 'EA08'
          when 'MU' then 'EA10'
          when 'FM' then 'EA17'
          when 'SJW' then 'EA03'
          when 'TYN' then 'EA09'
          when 'WUH' then 'EA11'
          when 'SIA' then 'EA12'
          else a.crew_owner
        end as org_code, /*????????????*/
        a.ac_type, /*????*/
        a.ac_reg as ac_no, /*??????*/
        a.std as schedule_depart_time, /*????????????*/
        a.sta as schedule_arrival_time, /*????????????*/
        a.departure_airport as depart_port_code3, /*????????????*/
        a.arrival_airport as arrival_port_code3, /*????????????*/
        b.p_code as staff_id, /*????????*/
        c.work_no as staff_code, /*????*/
        c.birth_date as birthday, /*????????*/
        c.c_name as staff_name, /*????*/
        c.e_first_name as eng_surname, /*??????*/
        c.e_name as eng_name, /*??????*/
        c.sex, /*????*/
        c.native as nationality, /*????*/
        (select max(license_no)
           from t_hr_license h1,t_bas_fleet h2
          where h1.p_code = b.p_code
            and h2.ac_type = a.ac_type
            and h1.valid_flag = 'Y'
            and instr(h1.ac_types,h2.ac_type_crew) > 0
        ) as licence_no,  /*??????*/
        (select cert_no
           from t_hr_cert
          where p_code = b.p_code
            and cert_type = 'BORD'
            and valid_flag = 'Y'
        ) as board_card_no, /*????????*/
        case b.rank_no
          when 'A001' then '5001' /*????*/
          when 'B001' then '5009' /*????????*/
          when 'C001' then '5003' /*??????????*/
          when 'C002' then '5008' /*??????????*/
          when 'D001' then '5004' /*??????*/
          when 'E001' then '5005' /*??????*/
          when 'F001' then '5007' /*??????*/
          when 'S001' then '5006'
          when 'S002' then '5006'
          when 'S003' then '5006'
          when 'S004' then '5006'
          when 'M001' then '5006' /*????????*/
          else b.rank_no
        end as post, /*????????*/
        b.ts_flag as part_time_post, /*??????*/
        case b.rank_no
          when 'A001'
             then 'CA'
          when 'B001'
             then 'FO'
          when 'C001'
             then 'FO'
          when 'C002'
             then 'FO'
          when 'D001'
             then 'FE'
          when 'E001'
             then 'RO'
          when 'F001'
             then 'SE'
          when 'M001'
             then 'FE'
          else NULL
        end as rank, /*????ICAO????*/
        a.cust_app_flag as lock_1, /*????????????????,??????????????????*/
        a.tele_flag as lock_2, /*????????????*/
        d.passport_no as passport_code, /*??????*/
        e.issue_date as grant_date, /*????????????*/
        e.over_date as passport_expiry, /*????????????*/
        c.born_in as native_place, /*??????????*/
        c.e_born_in as eng_native_place, /*??????????*/
        c.en_address as eng_family_address, /*????????????*/
        d.visa_no visa_code /*??????*/
   from t_flt_schedule a,t_sch_roster b,t_hr_crew c,t_svc_custom_detail d,t_hr_passport e
  where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and a.flight_id = b.flight_id
    and c.p_code = b.p_code
    and a.flight_id = d.flight_id(+)
    and d.passport_no = e.pass_no(+);

prompt
prompt Creating view V_INTF_FOIS_SSIM
prompt ==============================
prompt
create or replace force view v_intf_fois_ssim as
select /*??????????????????????????????????????????,??????????????????????*/
        flight_date, /*????????*/
        flight_no,   /*??????*/
        carrier,     /*??????*/
        rank() over (PARTITION BY flight_date,flight_no ORDER BY STD ASC) leg_idx,
        departure_airport, /*????????*/
        arrival_airport,   /*????????*/
        std,    /*????????????*/
        sta,    /*????????????*/
        flight_type,  /*????????*/
        ac_type,      /*????*/
        case
          when substr(onward_flight,-1,1) = 'Z' then
            substr(onward_flight,1,length(onward_flight) - 1)
          else onward_flight
        end onward_flight, /*??????????*/
        ac_layover,    /*????????????*/
        ac_owner  /*????????????*/
   from t_flt_schedule
  where (flg_cs is null or flg_cs <> 'C' and flg_cs <> 'D')
    and (flight_flag <> 'B');

prompt
prompt Creating view V_INTF_FXW_ABNORMAL
prompt =================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FXW_ABNORMAL AS
SELECT T.MSG_TYPE, APP_ID,  START_DATE, APP_STATUS, OP_CONTENTS, FLIGHT_DATE, FLIGHT_IDS, P_CODES
  FROM T_SCH_ABNORMAL T;

prompt
prompt Creating view V_INTF_FXW_AIRCRAFT
prompt =================================
prompt
create or replace force view v_intf_fxw_aircraft as
select "AC_REG",
        "AC_TYPE",
        "FILIALE",
        "DOW",
        "DOI",
        "START_DATE",
        "END_DATE",
        "MAX_DEPART_WEIGHT",
        "MAX_LANDFALL_WEIGHT",
        "MAX_NO_OIL_WEIGHT",
        "FLY_DEVICE",
        "VALID_FLAG",
        "DOW_L",
        "DOI_L",
        "OP_TIME" LAST_MODIFY_TIME
   from t_bas_aircraft
  where filiale in (select filiale from t_bas_filiale where is_online = 'Y')
  /*and filiale != 'LHW'*/ /*???????????????? 2015-12-23 z1h2p3*/;

prompt
prompt Creating view V_INTF_FXW_AIRPORT
prompt ================================
prompt
create or replace force view v_intf_fxw_airport as
select a.airport_4code,
        a.airport_3code,
        a.chinese_name,
        a.chinese_abbr,
        a.city_ch_name,
        case
          when a.d_or_i = 'D' then
           '????'
          when a.d_or_i = 'I' then
           '????'
          when a.d_or_i = 'R' then
           '????'
          else
           a.d_or_i
        end d_or_i,
        (select b.country_name
           from t_bas_country b
          where b.country_code = a.native) native_cn,
        (select c.bm_name
           from t_bas_dict c
          where c.parent_code = 'ACLS'
            and c.bm_code = a.a_cls) cls_cn,
        a.op_time last_modify_time
   from t_bas_airport a;

prompt
prompt Creating view V_INTF_FXW_BRANCH
prompt ===============================
prompt
create or replace force view v_intf_fxw_branch as
select replace(branch_code,'EAJN','EA08') as "BRANCH_CODE",
        "BRANCH_NAME",
        "FILIALE",
        "BASE",
        to_char(t.op_time,'yyyy-mm-dd hh24:mi:ss') last_modify_time
   from t_hr_branch t
  where valid_flag = 'Y'
  order by idx;

prompt
prompt Creating view V_INTF_FXW_CARRY_ADDRESS
prompt ======================================
prompt
create or replace force view v_intf_fxw_carry_address as
select distinct flight_date,
                 c_name,
                 flight_no,
                 carry_time,
                 carry_name,
                 filiale
   from (select c.flight_date,
                h.c_name,
                s.flight_no,
                c.carry_time,
                y.carry_name,
                h.filiale
           from t_svc_carry    c,
                t_flt_schedule s,
                t_sch_roster   r,
                t_hr_crew      h,
                t_bas_carry    y
          where c.flight_id = s.flight_id
            and c.flight_date = s.flight_date
            and s.flight_id = r.flight_id
            and s.flight_date = r.flight_date
            and c.p_code = r.p_code
            and c.p_code = h.p_code
            and c.carry_code = y.carry_code
            and nvl(s.flg_cs, '1') <> 'C'
            and nvl(s.flg_cs, '1') <> 'D'
            and c.publish_yn = 'Y'
            and h.module_flag = 'F'
            and h.valid_flag = 'Y'
          order by s.flight_date, c.carry_time) t;

prompt
prompt Creating view V_INTF_FXW_CHECKERCODE
prompt ====================================
prompt
create or replace force view v_intf_fxw_checkercode as
select /*??????????????*/tech_no as tech_code,tech_name
   from t_bas_tech t
  where in_ex = 'I'
    and tech_type = 'L'
    and module_flag = 'F';

prompt
prompt Creating view V_INTF_FXW_CHECKPOINT_STATUS
prompt ==========================================
prompt
create or replace force view v_intf_fxw_checkpoint_status as
select FLIGHT_ID,
        dep_code,
        MM_LEG_ID,
        FLIGHT_NO,
        AC_REG,
        TAKEOFF_AIRPORT_NAME,
        LANDING_AIRPORT_NAME,
        DEPARTURE_AIRPORT,
        ARRIVAL_AIRPORT,
        START_TIME,
        END_TIME,
        crew_owner,
        STD,
        STA,
        ETD,
        ETA,
        ATD,
        ATA,
        IS_PAIRING,
        IS_ISSUE,
        IS_VERIFY,
        IS_PUBLISH,
        IS_PREPARE,
        IS_TELECOMM,
        IS_PRINT,
        IS_SCH_LOCK,
        IS_MONITOR,
        IS_BLOCK,
        IS_RECYLE,
        IS_SMS
   from (select ule.flight_id,
                tc.dep_code,
                nvl(ule.mm_leg_id, ule.mm_leg_id_add) mm_leg_id,
                ule.flight_no,
                ule.ac_reg,
                (select ort.chinese_name
                   from t_bas_airport ort
                  where ort.airport_3code = ule.departure_airport) takeoff_airport_name,
                (select ort.chinese_name
                   from t_bas_airport ort
                  where ort.airport_3code = ule.arrival_airport) landing_airport_name,
                ule.departure_airport,
                ule.arrival_airport,
                ule.std start_time,
                ule.std end_time, /*???????????????????????????????? 2015-04-22*/
                ule.crew_owner,
                ule.std,
                ule.sta,
                ule.etd,
                ule.eta,
                ule.atd,
                ule.ata,
                decode((select count(*)
                         from t_sch_pairing ing
                        where ing.crew_link_line = ule.crew_link_line),
                       0,
                       'N',
                       'Y') is_pairing,
                decode(ule.sch_com_flag, 'Y', 'Y', 'N') is_issue,
                decode(ule.sch_ver_flag, 'Y', 'Y', 'N') is_verify,
                decode(ule.sch_pub_flag, 'Y', 'Y', 'N') is_publish,
                '' is_prepare,
                /*decode(ule.tele_flag, 'Y', 'Y', 'N') is_telecomm,*/
                /*????????????????X*/
           /*     decode(ule.d_or_i,
                       'D',
                       'X',
                       decode(ule.tele_flag, 'Y', 'Y', 'N')) is_telecomm 2016-08-29*/
                decode(ule.d_or_i,
                       'D',
                       'X',
                       decode(ule.tele_flag, 'Y', 'Y','X','Y','N')) is_telecomm,
                decode(ule.ftb_prn_flag, 'Y', 'Y', 'N') is_print,
                decode(ule.duty_flag, 'Y', 'Y', 'N') is_sch_lock,
                decode((select count(APP_ID)
                         from t_sch_abnormal mal
                        where mal.flight_ids = ule.flight_id
                          and mal.flight_date = ule.flight_date),
                       0,
                       'N',
                       'Y') is_monitor,
                decode(ule.block_on_time, null, 'N', 'Y') is_block,
               /* decode(ule.ftb_rec_flag, null, 'N', 'N') is_recyle, 2016-08-29*/
                decode(ule.ftb_rec_flag, null, 'N','X','N','Y') is_recyle,
                '' is_sms
           from t_flt_schedule ule,t_sch_roster ter,t_hr_crew tc
          where ule.flight_id=ter.flight_id
            and ter.p_code=tc.p_code
            and nvl(ule.flg_cs, '#') not in ('C', 'D')
            and nvl(ule.flight_type, '#') in ('J', 'C', 'G')
            and nvl(ule.flight_flag, '#') != 'B'
            and ter.fjs_order=1
            );

prompt
prompt Creating view V_INTF_FXW_CREW
prompt =============================
prompt
create or replace force view v_intf_fxw_crew as
select /*????????????????????????????*/
        a.p_code,
        case
          when c.is_ground = 'Y' and work_no is null then --??????????????????G + p_code
           'G' || a.p_code
          else
           a.work_no
        end as work_no, /*????*/
        a.c_name, /*????*/
        a.py_abbr, /*????*/
        a.e_first_name, /*??????*/
        a.e_name, /*??????*/
        a.birth_date, /*????*/
        a.sex, /*????*/
        a.id_no, /*????????*/
        a.filiale, /*??????????????*/
        case
          when a.dep_code = 'EA10011012' then --????????
            a.branch_code
          else
            replace(a.dep_code,'EAJN','EA08')
        end as dep_code, /*????????,????????*/
        (select w.assideptcode from t_intf_fgw_crew w where w.pilotid=a.fxw_id) assideptcode, /*FRMS???????? 2016-05-16 zhong*/
        c.is_ground, /*????????????*/
        a.home_filiale as temp_filiale, /*????????????,??????????????????????temp_unit_code*/
        a.post_duty, /*????????*/
        a.post_rank, /*????????*/
        a.work_date, /*????????????*/
        a.college, /*????????*/
        a.en_date, /*????????*/
        a.grad_date, /*????????*/
        (select bm_name
           from t_bas_dict
          where parent_code = 'AC'
            and bm_code = a.culture) as culture, /*????????*/
        a.speciality, /*????????*/
        '5201' work_type, /*????????????????????????????????????(5201)??????(5202)??????(5203)*/
        a.address, /*????????*/
        a.phone, /*????????*/
        a.office_tel, /*??????????*/
        a.mobil_no, /*????*/
        a.tall, /*????*/
        a.mate_yn, /*????????*/
        a.party_date, /*????????*/
        (select country_name from t_bas_country where country_code = a.native) as native, /*????*/
        (select upper(country_3code)
           from t_bas_country
          where country_code = a.native) as en_native, /*????????*/
        (select bm_name
           from t_bas_dict
          where parent_code = 'AA'
            and bm_code = a.party) as party, /*????????*/
        a.weight, /*????*/
        a.enter_date, /*??????????*/
        a.born_in, /*??????????*/
        a.e_born_in, /*??????????*/
        a.en_address, /*????????????*/
        replace(a.branch_code,'EAJN','EA08') as branch_code, /*????????*/
        a.valid_flag, /*????????*/
        f.cert_no board_no, /*????????*/
        a.icao_cls as icao_eng, /*ICAO????*/
        a.icao_chk_date as icao_check_date, /*ICAO????????????*/
        a.icao_valid_date as icao_over_date, /*ICAO????????????*/
        /*a.healthlevel??hlcode,\*????????????*\*/
        (select d.bm_name
           from t_bas_dict d
          where d.parent_code = 'HL'
            and d.bm_code = a.healthlevel) hlname, /*????????????*/
        a.fxw_id, /*??????ID*/
        f_max(a.op_time, f.op_time) last_modify_time
   from t_hr_crew a,
        t_hr_dept c,
        (select e.p_code, e.cert_no, e.op_time
           from t_hr_cert e
          where e.cert_type = 'BORD'
            and e.valid_flag = 'Y') f
  where a.dep_code = c.dep_code(+)
    and a.p_code = f.p_code(+)
    and a.module_flag = 'F'
    and (a.filiale in
        (select filiale from t_bas_filiale where is_online = 'Y') or
        a.p_code in (select p_code
                        from t_hr_transfer
                       where state = 'TR03'
                         and plan_end_date is not null
                         and end_date is null))
;

prompt
prompt Creating view V_INTF_FXW_CREWNIGHTFLIGHTINFO
prompt ============================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FXW_CREWNIGHTFLIGHTINFO AS
Select aa.crew_owner,
        aa.Arri,
        aa.flight_id,
        aa.flight_date,
        aa.ac_type,
        aa.flight_no,
        aa.Ata,
        aa.Next_flight_no,
        aa.dep_code,
        wm_concat(aa.c_name) crews,
        count(*) crewNum,
        null Remarks
   From (Select xx.crew_owner,
                xx.Arri,
                xx.flight_id,
                xx.flight_date,
                xx.ac_type,
                xx.flight_no,
                xx.Ata,
                xx.Next_flight_no,
                yy.fjs_order,
                (zz.c_name ||
                (SELECT wm_concat(tech_no_z)
                    FROM t_tech_info
                   WHERE t_tech_info.p_code = zz.p_code
                     AND t_tech_info.valid_flag = 'Y')) c_name,
                     dept.dep_code
           from (Select t.crew_owner,
                        t.flight_id,
                        t.flight_date,
                        t.flight_no,
                        t.ac_type,
                        t.arrival_airport,
                        Nvl(t.ata, Nvl(t.eta, t.sta)) Ata,
                        (select a.chinese_name
                           from t_bas_airport a
                          Where a.airport_3code = t.arrival_airport) Arri,
                        (select wm_concat(b.base)
                           from t_bas_base b
                          Where b.filiale = t.crew_owner) Home_Base,
                        p.crew_pairing_line,
                        LEAD(t.flight_no) OVER(PARTITION BY p.crew_pairing_line order by t.std Asc) AS Next_flight_no,
                        row_number() over(partition by t.flight_date, p.crew_pairing_line order by t.std Desc) as std_rank
                   from t_flt_schedule t, t_sch_pairing p, t_bas_fleet ff
                  Where t.crew_link_line = p.crew_link_line
                    And t.ac_type = ff.ac_type
                   /* And t.flight_date >=date'2014-12-01'
                    And t.flight_date <= date'2014-12-08'*/
                   /* And '/MU/' like '%/' || t.crew_owner || '/%'*/) xx,
                t_sch_roster yy,
                t_hr_crew zz,
                t_hr_dept dept
          Where xx.std_rank = 1
            --And (xx.flight_no like '%' || :p_code || '%')
            And xx.Home_Base || ',' Not like
                '%' || xx.arrival_airport || ',%'
            /*And xx.flight_date >=date'2014-12-01'
            And xx.flight_date <=date'2014-12-08' */
            And xx.flight_id = yy.flight_id
            And yy.p_code = zz.p_code
            and zz.dep_code=dept.dep_code
            And yy.module_flag = 'F'
            And zz.module_flag = 'F'
          Order by xx.flight_id, xx.flight_date, yy.fjs_order) aa
  Group by aa.crew_owner,
           aa.Arri,
           aa.flight_id,
           aa.flight_date,
           aa.ac_type,
           aa.flight_no,
           aa.Ata,
           aa.Next_flight_no,
           aa.dep_code
  Order by aa.Arri, aa.flight_no, aa.flight_date
;

prompt
prompt Creating view V_INTF_FXW_CREWSCH
prompt ================================
prompt
create or replace force view v_intf_fxw_crewsch as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.work_no, /*???? 2016-01-07*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(c.op_time,d.op_time)))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        d.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union all
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        nvl(b1.mm_leg_id,b1.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.work_no, /*???? 2016-01-07*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and b1.crew_owner = d.filiale  --??????????,8.28 5693/4
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union all
 select --??????????????????)
        b.flight_id,  --????ID
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.work_no, /*???? 2016-01-07*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and b1.flight_id = b.flight_id_ref
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b1.flight_date >= t.tsk_syn_date
                )
;

prompt
prompt Creating view V_INTF_FXW_CREWSCH20140530
prompt ========================================
prompt
create or replace force view v_intf_fxw_crewsch20140530 as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        b.mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(c.op_time,d.op_time)))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        d.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and b1.crew_owner = d.filiale  --??????????,8.28 5693/4
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union
 select --??????????????????)
        b.flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and b1.flight_id = b.flight_id_ref
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b1.flight_date >= t.tsk_syn_date
                )
;

prompt
prompt Creating view V_INTF_FXW_CREWSCH_BAK20140526
prompt ============================================
prompt
create or replace force view v_intf_fxw_crewsch_bak20140526 as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        b.mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(c.op_time,d.op_time)))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        d.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and b1.crew_owner = d.filiale  --??????????,8.28 5693/4
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union
 select --??????????????????)
        b.flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and b1.flight_id = b.flight_id_ref
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b1.flight_date >= t.tsk_syn_date
                )
;

prompt
prompt Creating view V_INTF_FXW_CREWSCH_CK
prompt ===================================
prompt
create or replace force view v_intf_fxw_crewsch_ck as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.work_no, /*???? 2016-01-07*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
       /* f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(c.op_time,d.op_time)))) as last_modify_time, \*????????????*\
      */  a.rec_id, /*????ID*/
        d.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b.op_time b1_op_time,
        c.op_time c_op_time,
        d.op_time d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d, t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and b.crew_owner='CK'
    and (d.flight_date>=date'2016-01-01' and d.flight_date <date'2016-06-28');

prompt
prompt Creating view V_INTF_FXW_CREWSCH_HUG
prompt ====================================
prompt
create or replace force view v_intf_fxw_crewsch_hug as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        b.mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(c.op_time,d.op_time)))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        d.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union all
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and b1.crew_owner = d.filiale  --??????????,8.28 5693/4
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union all
 select --??????????????????)
        b.flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and b1.flight_id = b.flight_id_ref
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b1.flight_date >= t.tsk_syn_date
                )
;

prompt
prompt Creating view V_INTF_FXW_CREWSCH_NEW
prompt ====================================
prompt
create or replace force view v_intf_fxw_crewsch_new as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        b.mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        d.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(c.op_time,d.op_time)))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        d.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and b1.crew_owner = d.filiale  --??????????,8.28 5693/4
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
 union
 select --??????????????????)
        b.flight_id,  --????ID
        b.mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        d.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,f_max(c.op_time,d.op_time))))) as last_modify_time, --????????????
        a.rec_id, --????ID
        d.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag /*????????(A????B????C????D????)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
    and c.duty_line = d.duty_line
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
    and f.filiale = d.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and b1.flight_id = b.flight_id_ref
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b1.flight_date >= t.tsk_syn_date
                )
;

prompt
prompt Creating view V_INTF_FXW_CREWSCH_OLD
prompt ====================================
prompt
create or replace force view v_intf_fxw_crewsch_old as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        (select fxw_id from t_hr_crew where p_code = a.p_code) fxw_id,
        a.rank_no,   /*????????*/
        a.FJS_ORDER,/*????????*/
        task.duty_line as crew_link_line,  /*????ID*/
        replace(a.ts_flag,'/') ts_flag,   /*??????*/
        a.op_time as last_modify_time, /*????????????*/
        a.rec_id /*????ID*/
   from t_sch_roster a,t_flt_schedule b,
        (
        select c.crew_link_line,c.duty_line
          from t_sch_pairing c,t_sch_dutyline d,t_bas_filiale f
         where c.duty_line = d.duty_line
           and f.filiale = d.filiale
           and f.is_online = 'Y'
           and d.flight_date >= to_date('20130301','yyyymmdd') /*12.20??????????????,????????????12.20????????????????????????????????2013.3.1*/
        ) task
  where a.flight_id = b.flight_id
    and a.flight_date >= to_date('20130301','yyyymmdd') /*12.20??????????????,????????????12.20????????????????????????????????2013.3.1*/
    and b.crew_link_line = task.crew_link_line(+);

prompt
prompt Creating view V_INTF_FXW_CREW_M
prompt ===============================
prompt
create or replace force view v_intf_fxw_crew_m as
select /*????????????????????????????*/
        p_code,
        c_name, /*????*/
        py_abbr, /*????*/
        e_first_name, /*??????*/
        e_name, /*??????*/
        e_born_in,  /*??????????*/
        en_address, /*????????????*/
        (select country_name from t_bas_country where country_code = a.native) as native, /*????*/
        (select upper(country_ename) from t_bas_country where country_code = a.native) as e_native, /*????????*/
        id_no, /*????????*/
        filiale, /*????????*/
        birth_date, /*????*/
        sex, /*????*/
        replace(substr(branch_code,1,4),'EAJN','EA08') as branch_code, /*????????*/
        replace(substr(dep_code,1,4),'EAJN','EA08') as dep_code,/*????????*/
        work_date, /*????????????*/
        (select bm_name from t_bas_dict where parent_code='AC' and bm_code = a.culture) as culture, /*????????*/
        enter_date, /*??????????*/
        (select bm_name from t_bas_dict where parent_code='AA' and bm_code = a.party) as party,  /*????????*/
        phone, /*????????*/
        mobil_no, /*????*/
        post_duty, /*????????*/
        a.remarks,/*????*/
        valid_flag, /*????????*/
        fxw_id,/*??????ID*/
        op_time last_modify_time
   from t_hr_crew a
  where a.module_flag = 'M'
    and a.filiale in (select filiale from t_bas_filiale where is_online = 'Y');

prompt
prompt Creating view V_INTF_FXW_CUSTOM_DETAIL
prompt ======================================
prompt
create or replace force view v_intf_fxw_custom_detail as
select /*??????????????????????????????????*/
        a.flight_id,
        b.crew_owner as flight_unit_code,  /*????????????*/
        a.p_code,
        g.fxw_id,
        decode(a.rank_no,'S004','S001',a.rank_no) as rank_no,
        a.passport_no,
        a.passport_type,
        a.passport_expire_date,
        a.nation,  /*????*/
        c.country_name as nation_ch,   /*????????*/
        a.birth_addr,
        a.birth_date,
        a.visa_no,
        a.visa_type,
        a.visa_grant_date,
        a.visa_expire_date,
        d.duty_line as crew_link_line,
        f_max(a.op_time,d.op_time) as last_modify_time,
        a.rec_id /*????ID*/
   from t_svc_custom_detail a,t_flt_schedule b,t_sch_pairing p,t_sch_dutyline d,t_bas_country c,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = p.crew_link_line
    and p.duty_line = d.duty_line
    and b.flight_id_ref is null
    and d.filiale = f.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and a.nation = c.country_code(+)
    and a.p_code = g.p_code
    /*huguang ??????????????????????????20150323*/
    union all
   select /*??????????????????????????????????*/
        b.flight_id,
        b.crew_owner as flight_unit_code,  /*????????????*/
        a.p_code,
        g.fxw_id,
        decode(a.rank_no,'S004','S001',a.rank_no) as rank_no,
        a.passport_no,
        a.passport_type,
        a.passport_expire_date,
        a.nation,  /*????*/
        c.country_name as nation_ch,   /*????????*/
        a.birth_addr,
        a.birth_date,
        a.visa_no,
        a.visa_type,
        a.visa_grant_date,
        a.visa_expire_date,
        d.duty_line as crew_link_line,
        f_max(a.op_time,d.op_time) as last_modify_time,
        a.rec_id /*????ID*/
   from t_svc_custom_detail a,t_flt_schedule b/*????*/,t_flt_schedule b1/*????*/,t_sch_pairing p,t_sch_dutyline d,t_bas_country c,t_bas_filiale f,t_hr_crew g
  where b1.flight_id_ref is not null
    and a.flight_id = b1.flight_id
    and b.flight_id=b1.flight_id_ref
    and b.crew_link_line = p.crew_link_line
    and p.duty_line = d.duty_line
    and d.filiale = f.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and a.nation = c.country_code(+)
    and a.p_code = g.p_code;

prompt
prompt Creating view V_INTF_FXW_CUSTOM_DETAIL_EXP
prompt ==========================================
prompt
create or replace force view v_intf_fxw_custom_detail_exp as
select /*??????????????????????????????????*/
        a.flight_id,
        b.crew_owner as flight_unit_code,  /*????????????*/
        a.p_code,
        g.fxw_id,
        decode(a.rank_no,'S004','S001',a.rank_no) as rank_no,
        a.passport_no,
        a.passport_type,
        a.passport_expire_date,
        a.nation,  /*????*/
        c.country_name as nation_ch,   /*????????*/
        a.birth_addr,
        a.birth_date,
        a.visa_no,
        a.visa_type,
        a.visa_grant_date,
        a.visa_expire_date,
        d.duty_line as crew_link_line,
        f_max(a.op_time,d.op_time) as last_modify_time,
        a.rec_id /*????ID*/
   from t_svc_custom_detail a,t_flt_schedule b,t_sch_pairing p,t_sch_dutyline d,t_bas_country c,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = p.crew_link_line
    and p.duty_line = d.duty_line
    and b.flight_id_ref is null
    and d.filiale = f.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and a.nation = c.country_code(+)
    and a.p_code = g.p_code
    /*huguang ??????????????????????????20150323*/
    union all
   select /*??????????????????????????????????*/
        b.flight_id,
        b.crew_owner as flight_unit_code,  /*????????????*/
        a.p_code,
        g.fxw_id,
        decode(a.rank_no,'S004','S001',a.rank_no) as rank_no,
        a.passport_no,
        a.passport_type,
        a.passport_expire_date,
        a.nation,  /*????*/
        c.country_name as nation_ch,   /*????????*/
        a.birth_addr,
        a.birth_date,
        a.visa_no,
        a.visa_type,
        a.visa_grant_date,
        a.visa_expire_date,
        d.duty_line as crew_link_line,
        f_max(a.op_time,d.op_time) as last_modify_time,
        a.rec_id /*????ID*/
   from t_svc_custom_detail a,t_flt_schedule b/*????*/,t_flt_schedule b1/*????*/,t_sch_pairing p,t_sch_dutyline d,t_bas_country c,t_bas_filiale f,t_hr_crew g
  where b1.flight_id_ref is not null
    and a.flight_id = b1.flight_id
    and b.flight_id=b1.flight_id_ref
    and b.crew_link_line = p.crew_link_line
    and p.duty_line = d.duty_line
    and d.filiale = f.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and a.nation = c.country_code(+)
    and a.p_code = g.p_code;

prompt
prompt Creating view V_INTF_FXW_CUSTOM_DETAIL_NEW
prompt ==========================================
prompt
create or replace force view v_intf_fxw_custom_detail_new as
select /*??????????????????????????????????*/
        a.flight_id,
        b.crew_owner as flight_unit_code,  /*????????????*/
        a.p_code,
        g.fxw_id,
        decode(a.rank_no,'S004','S001',a.rank_no) as rank_no,
        a.passport_no,
        a.passport_type,
        a.passport_expire_date,
        a.nation,  /*????*/
        c.country_name as nation_ch,   /*????????*/
        a.birth_addr,
        a.birth_date,
        a.visa_no,
        a.visa_type,
        a.visa_grant_date,
        a.visa_expire_date,
        d.duty_line as crew_link_line,
        f_max(a.op_time,d.op_time) as last_modify_time,
        a.rec_id /*????ID*/
   from t_svc_custom_detail a,t_flt_schedule b,t_sch_pairing p,t_sch_dutyline d,t_bas_country c,t_bas_filiale f,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = p.crew_link_line
    and p.duty_line = d.duty_line
    and d.filiale = f.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date
    and a.nation = c.country_code(+)
    and a.p_code = g.p_code;

prompt
prompt Creating view V_INTF_FXW_DAYEHANGTONGJI
prompt =======================================
prompt
create or replace force view v_intf_fxw_dayehangtongji as
select flight_id, cate
   from (select
                flight_id,
                atd,
                ata,
                sdate,
                edate,
                (case
                  when trunc(last_atd) - trunc(first_atd) <= 1 then
                   case
                     when to_char(next_atd, 'hh24mi') < '0600' then
                      case
                        when edate - sdate > 60 and edate - sdate <= 120 then
                         '??????A'
                        else
                         '??????B'
                      end
                     else
                      '??????C'
                   end
                  else
                   case
                     when not exists (select *
                             from t_bas_base base
                            where base.base_yn = 'Y'
                              and base.filiale = crew_owner
                              and base.base = arrival_airport) and
                          edate - sdate > 120 then
                      '??????C'
                     else
                      'is_return_base'
                   end
                end) cate
           from (select ule.*,
                        min(nvl(ule.atd, date '1900-01-01')) over(partition by ing.crew_pairing_line order by ule.atd) first_atd,
                        lag(ule.atd, 1, date '1900-01-01') over(partition by ing.crew_pairing_line order by ule.atd) pre_atd,
                        lead(ule.atd, 1, date '1900-01-01') over(partition by ing.crew_pairing_line order by ule.atd) next_atd,
                        max(nvl(ule.atd, date '1900-01-01')) over(partition by ing.crew_pairing_line order by ule.atd) last_atd,
                        ing.crew_pairing_line
                   from ( select ule.crew_link_line,
                                ule.flight_id,
                                ule.arrival_airport,
                                nvl(nvl(ule.atd, ule.etd), ule.std) atd,
                                nvl(nvl(ule.ata, ule.eta), ule.sta) ata,
                                ule.crew_owner,
                                (case
                                  when to_char(nvl(nvl(ule.atd, ule.etd),
                                                   ule.std),
                                               'hh24mi') >= '0200' and
                                       to_char(nvl(nvl(ule.atd, ule.etd),
                                                   ule.std),
                                               'hh24mi') <= '0600' then
                                   to_Number(to_char(nvl(nvl(ule.atd, ule.etd),
                                                         ule.std),
                                                     'hh24')) * 60 +
                                   to_Number(to_char(nvl(nvl(ule.atd, ule.etd),
                                                         ule.std),
                                                     'mi'))
                                  else
                                   120
                                end) sdate,
                                (case
                                  when to_char(nvl(nvl(ule.ata, ule.eta),
                                                   ule.sta),
                                               'hh24mi') >= '0200' and
                                       to_char(nvl(nvl(ule.ata, ule.eta),
                                                   ule.sta),
                                               'hh24mi') <= '0600' then
                                   to_Number(to_char(nvl(nvl(ule.ata, ule.eta),
                                                         ule.sta),
                                                     'hh24')) * 60 +
                                   to_Number(to_char(nvl(nvl(ule.ata, ule.eta),
                                                         ule.sta),
                                                     'mi'))
                                  else
                                   360
                                end) edate
                           from t_flt_schedule ule
                          where flight_flag in ('A', 'C')
                            and nvl(flg_cs, 'A') not in ('C', 'D')) ule,
                        t_sch_pairing ing
                  where ule.crew_link_line = ing.crew_link_line
                    /*and ule.flight_date >= date
                  '2014-10-01' - 6
                    and ule.flight_date <= date '2014-10-31' + 6*/)) ule
  where ((to_char(atd, 'hh24mi') >= '0200' and
        to_char(atd, 'hh24mi') <= '0600' or
        to_char(ata, 'hh24mi') >= '0200' and
        to_char(ata, 'hh24mi') <= '0600' or
        to_char(atd, 'hh24mi') < '0200' and
        to_char(ata, 'hh24mi') > '0600') /*and
        (ule.flight_date >= date '2014-10-01' and ule.flight_date < date
         '2014-11-01')*/ and edate - sdate > 60)
    and cate != 'is_return_base';

prompt
prompt Creating view V_INTF_FXW_DDO
prompt ============================
prompt
create or replace force view v_intf_fxw_ddo as
select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.c_name,/*????*/
        c.id_no,/*??????????*/
        'N' IS_FROM_FXW, /*????????????????*/
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        (select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        a.remarks, /*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code(+)
    and (c.filiale = d.filiale or c.home_filiale = d.filiale)
    and d.tsk_syn_date is not null
    and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.c_name,/*????*/
        c.id_no,/*??????????*/
        'N' IS_FROM_FXW, /*????????????????*/
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        (select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        a.remark,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale or c.home_filiale=d.filiale)
    and d.tsk_syn_date is not null
    and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.c_name,/*????*/
        c.id_no,/*??????????*/
        a.IS_FROM_FXW,  /*????????????????*/
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        decode(h.train_type,1,'KMG_MNJZW',2,'KMG_LLZW','KMG_MNJZW')||d.ac_type_crew ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || d.ac_type_crew || ']' ddo_name, /*????????*/
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' || b.TRAIN_DESC || '' || /*???????????? 2016-03-11 zhp*/
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+);

prompt
prompt Creating view V_INTF_FXW_DELLOG
prompt ===============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FXW_DELLOG AS
SELECT LOG_ID,
        TAB_CODE,
        REC_ID,
        DEL_TIME
   FROM T_INTF_DEL_LOG;

prompt
prompt Creating view V_INTF_FXW_DEPT
prompt =============================
prompt
create or replace force view v_intf_fxw_dept as
select replace("DEP_CODE",'EAJN','EA08') as dep_code,
        "DEP_NAME",
        "LEADER",
        "TEL",
        "FILIALE",
        "BASE",
        "VALID_FLAG",
        "MODULE_FLAG",
        "IDX",
        to_char(t.op_time,'yyyy-mm-dd hh24:mi:ss') last_modify_time
    from t_hr_dept t;

prompt
prompt Creating view V_INTF_FXW_EXPHIS
prompt ===============================
prompt
create or replace force view v_intf_fxw_exphis as
select /*????????????????????????*/
        tech_his_id,
        a.p_code,
        b.fxw_id,
        upper(ac_type) ac_type,
        tech_no,
        start_date,
        end_date,
        fly_hours,  /*???????? */
        exp_hours,  /* ???????? */
        up_downs,   /* ???????? */
        df_hours,   /* ???????? */
        df_updowns,  /* ???????? */
        a.op_time as last_modify_time     /* ???????????? */
 from t_tech_info_his a,t_hr_crew b
  where data_flag = 'H'
    and a.valid_flag = 'Y'
    and a.p_code = b.p_code;

prompt
prompt Creating view V_INTF_FXW_FATIGUE_EXPO
prompt =====================================
prompt
create or replace force view v_intf_fxw_fatigue_expo as
select ule.flight_id,
        ule.flight_date,
        ule.flight_no,
        ule.departure_airport,
        ule.arrival_airport,
        tc.c_name,
        tc.work_no,
        tc.dep_code,
        fen.fenskind,
        fen.fens
   from t_sch_roster_fens_fxw fen, t_flt_schedule ule, t_hr_crew tc
  where fen.flight_id = ule.flight_id
    and fen.p_code = tc.p_code
  order by tc.dep_code, tc.p_code, ule.flight_date;

prompt
prompt Creating view V_INTF_FXW_FATIGUE_EXPONENT
prompt =========================================
prompt
create or replace force view v_intf_fxw_fatigue_exponent as
select ule.flight_id,
        ule.flight_date,
        ule.flight_no,
        ule.departure_airport || '(' ||
        (select ort.chinese_name
           from t_bas_airport ort
          where ort.airport_3code = ule.departure_airport) || ')' departure_airport,
        ule.arrival_airport || '(' ||
        (select ort.chinese_name
           from t_bas_airport ort
          where ort.airport_3code = ule.arrival_airport) || ')' arrival_airport,
        tc.c_name,
        tc.work_no,
        tc.dep_code,
        fen.fenskind,
        fen.fens
   from t_sch_roster_fens_fxw fen, t_flt_schedule ule, t_hr_crew tc
  where fen.flight_id = ule.flight_id
    and fen.p_code = tc.p_code
    and fen.fens>0
  order by tc.dep_code, tc.p_code, ule.flight_date,fen.fenskind;

prompt
prompt Creating view V_INTF_FXW_FILIALE
prompt ================================
prompt
create or replace force view v_intf_fxw_filiale as
select filiale,  /*??????????*/
        filiale_name,  /*??????????*/
        home_base  /*??????*/
   from t_bas_filiale;

prompt
prompt Creating view V_INTF_FXW_FLEET
prompt ==============================
prompt
create or replace force view v_intf_fxw_fleet as
select ac_type, /*????????*/
        ac_type_long, /*????????*/
        ac_type_crew  /*????????????????*/
   from t_bas_fleet;

prompt
prompt Creating view V_INTF_FXW_FLTSCH
prompt ===============================
prompt
create or replace force view v_intf_fxw_fltsch as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
       nvl2((select decode(ied.actualaircraftproperty,null,'N','Y') is_unity from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=a.flight_id),'Y','N') is_unity,
       (select ied.actualaircraftproperty from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=a.flight_id) is_ac_owner,
       (select ied.actualcrewproperty from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=a.flight_id) is_crew_owner,
       (select ied.actualcabinproperty from t_intf_yxw_unified_flt ied where ied.ispassed=1 and ied.flight_id=a.flight_id) is_stew_owner

      /*  decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.remark is not null),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner*/

        from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
   /* and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
        \*  or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*\
        )*/
        and a.flight_date>=trunc(sysdate-10)
 /*union all
 --??????(??????)????
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'V' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
        decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
     and a.flight_date>=trunc(sysdate-10)*/
 /*union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'J' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
       decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
                  and a.flight_date>=trunc(sysdate-10)*/
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        'N' is_unity,
        '' is_ac_owner,
        '' is_crew_owner,
        '' is_stew_owner
        from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
   /* and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          \*or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*\
        )*/
     and a.flight_date>=trunc(sysdate-10)
;

prompt
prompt Creating view V_INTF_FXW_FLTSCH20140329
prompt =======================================
prompt
create or replace force view v_intf_fxw_fltsch20140329 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
 union all
 --??????(??????)????
 select a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'V' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'J' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --huguang
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
;

prompt
prompt Creating view V_INTF_FXW_FLTSCH20140912
prompt =======================================
prompt
create or replace force view v_intf_fxw_fltsch20140912 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        a.mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
 union all
 --??????(??????)????
 select a.flight_id, /*????ID*/
        a.mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'V' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, /*????ID*/
        a.mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'J' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        a.mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
;

prompt
prompt Creating view V_INTF_FXW_FLTSCH20171027
prompt =======================================
prompt
create or replace force view v_intf_fxw_fltsch20171027 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        decode((select ied.flightinfoid from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1'),null,'N','Y') is_unity,
        (select ied.actualaircraftproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_ac_owner,
        (select ied.actualcrewproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_crew_owner,
        (select ied.actualcabinproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_stew_owner
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line /*(+)*/
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line/*(+)*/
    and nvl(a.flight_type,'#') <> 'V'
 /*   and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )
        )*/
 /*union all
 --??????(??????)????
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'V' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
        decode((select ied.flightinfoid from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1'),null,'N','Y') is_unity,
        (select ied.actualaircraftproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_ac_owner,
        (select ied.actualcrewproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_crew_owner,
        (select ied.actualcabinproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_stew_owner
   from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)*/
 /*union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'J' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
        decode((select ied.flightinfoid from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1'),null,'N','Y') is_unity,
        (select ied.actualaircraftproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_ac_owner,
        (select ied.actualcrewproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_crew_owner,
        (select ied.actualcabinproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_stew_owner
   from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)*/
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        decode((select ied.flightinfoid from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1'),null,'N','Y') is_unity,
        (select ied.actualaircraftproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_ac_owner,
        (select ied.actualcrewproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_crew_owner,
        (select ied.actualcabinproperty from t_intf_yxw_unified_flt ied where ied.flightinfoid=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.ispassed='1') is_stew_owner
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
;

prompt
prompt Creating view V_INTF_QRY_FLIGHT_DATE
prompt ====================================
prompt
create or replace force view v_intf_qry_flight_date as
select trunc(sysdate - 90) + rownum flight_date, rownum row_id
   from dual a
 connect by rownum <= 365*2+90;

prompt
prompt Creating view V_INTF_FXW_FLTSCHV2
prompt =================================
prompt
create or replace force view v_intf_fxw_fltschv2 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.remark is not null),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
   /* and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
        \*  or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*\
        )*/
        and a.flight_date in(select flight_date from v_intf_qry_flight_date)
 /*union all
 --??????(??????)????
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'V' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
        decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
     and a.flight_date>=trunc(sysdate-10)*/
 /*union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'J' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
       decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
                  and a.flight_date>=trunc(sysdate-10)*/
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        'N' is_unity,
        '' is_ac_owner,
        '' is_crew_owner,
        '' is_stew_owner
        from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
   /* and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          \*or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*\
        )*/
     and a.flight_date in(select flight_date from v_intf_qry_flight_date)
;

prompt
prompt Creating view V_INTF_FXW_FLTSCHV3
prompt =================================
prompt
create or replace force view v_intf_fxw_fltschv3 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add) and ied.remark is not null),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
   /* and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
        \*  or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*\
        )*/
        and exists (select 1 from v_intf_qry_flight_date where flight_date=a.flight_date)
 /*union all
 --??????(??????)????
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'V' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
        decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
     and a.flight_date>=trunc(sysdate-10)*/
 /*union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, \*????ID*\
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,\*MM ????????ID*\
        a.flight_date, \*????????*\
        a.carrier, \*??????*\
        a.flight_no, \*??????*\
        a.plan_departure, \*????????????*\
        a.departure_airport, \*????????*\
        a.plan_arrival, \*????????????*\
        a.arrival_airport, \*????????*\
        a.ac_type, \*????*\
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, \*????*\
        'J' as flight_type, \*????????*\
        a.flight_flag, \*????????:A????,B????,C????,D????*\
        a.flg_cs, \*????????????????????'C'??'D'*\
        a.flg_vr, \*????????????,??????'R',??????'V'*\
        a.flg_patch, \*????????/??????????*\
        a.std, \*????????????*\
        a.etd, \*????????????*\
        a.atd, \*????????????*\
        a.sta, \*????????????*\
        a.eta, \*????????????*\
        a.ata, \*????????????*\
        a.ac_owner, \*????????????*\
        a.crew_owner, \*????????????*\
        a.stew_owner, \*??????????????*\
        a.plce_owner, \*????????????*\
        a.mant_owner, \*????????????*\
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, \*????????????*\
        a.onward_flight, \*????????*\
        p.duty_line as crew_link_line, \*??????????*\
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, \*????????*\
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, \*??????????????,????????????????????????????????'Y'*\
        a.ac_link_line,  \*??????*\
       decode((select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)),null,'N','Y') is_unity,
        (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.ac_owner and a.ac_owner in ('MU','FM') then a.ac_owner
        else
        null
        end)
        else
        null
        end) is_ac_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.crew_owner and a.crew_owner in ('MU','FM') then a.crew_owner
        else
        null
        end)
        else
        null
        end) is_crew_owner,
         (case when a.crew_owner in ('MU','FM') and (select ied.mm_leg_id from t_flt_schedule_unified ied where ied.mm_leg_id=nvl(a.mm_leg_id,a.mm_leg_id_add)) is not null then
        (case when a.carrier<>a.stew_owner and a.stew_owner in ('MU','FM') then a.stew_owner
        else
        null
        end)
        else
        null
        end) is_stew_owner
        from t_flt_schedule a\*??????*\,
        t_flt_schedule b\*??????*\,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
                  and a.flight_date>=trunc(sysdate-10)*/
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line,  /*??????*/
        'N' is_unity,
        '' is_ac_owner,
        '' is_crew_owner,
        '' is_stew_owner
        from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
            and bb.flight_date >= trunc(sysdate-10)
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.flight_type= 'V'
    and a.flight_id_ref is null
    and a.flight_flag='D'
   /* and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          \*or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') \*????????????????????????*\
                  )*\
        )*/
     and exists (select 1 from v_intf_qry_flight_date where flight_date=a.flight_date)
;

prompt
prompt Creating view V_INTF_FXW_FLTSCH_20140217
prompt ========================================
prompt
create or replace force view v_intf_fxw_fltsch_20140217 as
select /*????????????????????????*/
        a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
 union
 --??????(??????)????
 select a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'V' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, /*????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'J' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
;

prompt
prompt Creating view V_INTF_FXW_FLTSCH_CK
prompt ==================================
prompt
create or replace force view v_intf_fxw_fltsch_ck as
select /*????????????????????????*/
  a.flight_id, /*????ID*/
  nvl(a.mm_leg_id, a.mm_leg_id_add) mm_leg_id, /*MM ????????ID*/
  a.flight_date, /*????????*/
  a.carrier, /*??????*/
  a.flight_no, /*??????*/
  a.plan_departure, /*????????????*/
  a.departure_airport, /*????????*/
  a.plan_arrival, /*????????????*/
  a.arrival_airport, /*????????*/
  a.ac_type, /*????*/
  case
    when a.ac_reg is null then
     null
    when substr(a.ac_reg, 1, 1) <> 'B' then
     'B' || a.ac_reg
    else
     a.ac_reg
  end ac_reg, /*????*/
  a.flight_type, /*????????*/
  a.flight_flag, /*????????:A????,B????,C????,D????*/
  a.flg_cs, /*????????????????????'C'??'D'*/
  a.flg_vr, /*????????????,??????'R',??????'V'*/
  a.flg_patch, /*????????/??????????*/
  a.std, /*????????????*/
  a.etd, /*????????????*/
  a.atd, /*????????????*/
  a.sta, /*????????????*/
  a.eta, /*????????????*/
  a.ata, /*????????????*/
  a.ac_owner, /*????????????*/
  a.crew_owner, /*????????????*/
  a.stew_owner, /*??????????????*/
  a.plce_owner, /*????????????*/
  a.mant_owner, /*????????????*/
  a.flight_date + nvl(a.ac_layover, 0) onward_fltdate, /*????????????*/
  a.onward_flight, /*????????*/
  p.duty_line as crew_link_line, /*??????????*/
  /*f_max(a.op_time,p.op_time) last_modify_time, \*????????*\*/
  a.op_time      a_op_time,
  a.op_time      b_op_time,
  p.op_time      p_op_time,
  a.sch_pub_flag,
  a.ftb_rec_flag, /*??????????????*/
  a.ac_link_line /*??????*/
   from t_flt_schedule a,
        (select aa.crew_link_line, bb.duty_line, aa.op_time
           from t_sch_pairing aa, t_sch_dutyline bb
          where aa.duty_line = bb.duty_line(+)) p
  where a.crew_link_line = p.crew_link_line(+)
    and a.crew_owner = 'CK'
    and a.flight_date >= date '2016-01-01'
    and a.flight_date < date '2016-06-28';

prompt
prompt Creating view V_INTF_FXW_FTB
prompt ============================
prompt
create or replace force view v_intf_fxw_ftb as
select /*??????????????????????????????*/
        a.ftb_no,
        a.flight_id,
        nvl(a.grnd_hours, 0) + nvl(a.air_hours, 0) totl_hours,
        a.taxi_out_time,
        a.takeoff_time,
        a.landing_time,
        a.taxi_in_time,
        nvl(a.grnd_hours, 0) grnd_hours,
        nvl(a.air_hours, 0) air_hours,
        nvl(a.night_hours, 0) night_hours,
        a.is_icao,
        a.op_time as LAST_MODIFY_TIME,
        nvl(a.old_fuel, 0) old_fuel, /*??????*/
        nvl(a.new_fuel, 0) new_fuel, /*??????*/
        nvl(a.left_fuel, 0) left_fuel, /*??????*/
        a.rec_id /*????ID*/
   from t_svc_ftb      a,
        t_flt_schedule s,
        t_sch_dutyline d,
        t_sch_pairing  p,
        t_bas_filiale  f
  where a.flight_id = s.flight_id
    and s.crew_link_line = p.crew_link_line
    and d.duty_line = p.duty_line
    and p.filiale = f.filiale
    and f.tsk_syn_date is not null
    and d.flight_date >= f.tsk_syn_date;

prompt
prompt Creating view V_INTF_FXW_FTBDETAIL
prompt ==================================
prompt
create or replace force view v_intf_fxw_ftbdetail as
select /*为飞行网提供人员经历时间*/
       a.ftb_no,
       a.flight_id,
       a.p_code,
       nvl(a.fly_hours, 0) as fly_hours, /*飞行时间*/
       nvl(a.exp_hours, 0) as exp_hours, /*经历时间*/
       nvl(a.left_hours, 0) left_hours, /*左座小时*/
       nvl(a.left_updowns, 0) left_updowns, /*左座降落次数*/
       nvl(a.left_downs, 0) left_ups, /*左座起飞次数*/
       a.left_op_manu, /*左座操作角色,PF、PNFPM*/
       nvl(a.right_hours, 0) right_hours, /*右座小时*/
       nvl(a.right_updowns, 0) right_updowns, /*右座降落次数*/
       nvl(a.right_downs, 0) right_ups, /*右座起飞次数*/
       a.right_op_manu, /*右座操作角色,PF、PNFPM*/
       a.op_time as last_modify_time,
       a.rec_id, /*记录ID*/
       nvl(a.left_night, 0) left_night, /*左座夜航时间*/
       nvl(a.left_teach, 0) left_teach, /*左座教员时间*/
       nvl(a.right_night, 0) right_night, /*右座夜航时间*/
       nvl(a.right_teach, 0) right_teach, /*右座教员时间*/
       e.fxw_id, /*人员对应飞行网ID*/
       e.id_no,/*身份证号码*/
       e.filiale
  from t_svc_ftb_detail a,
       t_flt_schedule   s,
       t_sch_pairing    p,
       t_sch_dutyline   d,
       t_hr_crew        e,
       t_bas_filiale    f
 where a.flight_id = s.flight_id
   and s.crew_link_line = p.crew_link_line
   and p.duty_line = d.duty_line
   and a.p_code = e.p_code
   and d.filiale = f.filiale
   and f.tsk_syn_date is not null
   and d.flight_date >= f.tsk_syn_date;

prompt
prompt Creating view V_INTF_FXW_FTBDETAIL_EXP
prompt ======================================
prompt
create or replace force view v_intf_fxw_ftbdetail_exp as
select /*为飞行网提供人员经历时间*/
       a.ftb_no,
       a.flight_id,
       a.p_code,
       nvl(a.fly_hours, 0) as fly_hours, /*飞行时间*/
       nvl(a.exp_hours, 0) as exp_hours, /*经历时间*/
       nvl(a.left_hours, 0) left_hours, /*左座小时*/
       nvl(a.left_updowns, 0) left_updowns, /*左座降落次数*/
       nvl(a.left_downs, 0) left_ups, /*左座起飞次数*/
       a.left_op_manu, /*左座操作角色,PF、PNFPM*/
       nvl(a.right_hours, 0) right_hours, /*右座小时*/
       nvl(a.right_updowns, 0) right_updowns, /*右座降落次数*/
       nvl(a.right_downs, 0) right_ups, /*右座起飞次数*/
       a.right_op_manu, /*右座操作角色,PF、PNFPM*/
       a.op_time as last_modify_time,
       a.rec_id, /*记录ID*/
       nvl(a.left_night, 0) left_night, /*左座夜航时间*/
       nvl(a.left_teach, 0) left_teach, /*左座教员时间*/
       nvl(a.right_night, 0) right_night, /*右座夜航时间*/
       nvl(a.right_teach, 0) right_teach, /*右座教员时间*/
       e.fxw_id, /*人员对应飞行网ID*/
       e.id_no,/*身份证号码*/
       e.filiale
  from t_svc_ftb_detail a,
       t_flt_schedule   s,
       t_sch_pairing    p,
       t_sch_dutyline   d,
       t_hr_crew        e,
       t_bas_filiale    f
 where a.flight_id = s.flight_id
   and s.crew_link_line = p.crew_link_line
   and p.duty_line = d.duty_line
   and a.p_code = e.p_code
   and d.filiale = f.filiale
   and f.tsk_syn_date is not null
   and d.flight_date >= f.tsk_syn_date;

prompt
prompt Creating view V_INTF_FXW_FTB_CK
prompt ===============================
prompt
create or replace force view v_intf_fxw_ftb_ck as
select /*??????????????????????????????*/
        a.ftb_no,
        a.flight_id,
        nvl(a.grnd_hours, 0) + nvl(a.air_hours, 0) totl_hours,
        a.taxi_out_time,
        a.takeoff_time,
        a.landing_time,
        a.taxi_in_time,
        nvl(a.grnd_hours, 0) grnd_hours,
        nvl(a.air_hours, 0) air_hours,
        nvl(a.night_hours, 0) night_hours,
        a.is_icao,
        a.op_time as LAST_MODIFY_TIME,
        nvl(a.old_fuel, 0) old_fuel, /*??????*/
        nvl(a.new_fuel, 0) new_fuel, /*??????*/
        nvl(a.left_fuel, 0) left_fuel, /*??????*/
        a.rec_id /*????ID*/
    from t_svc_ftb      a,
        t_flt_schedule s,
       /* t_sch_dutyline d,*/
        t_sch_pairing  p
     /* t_bas_filiale  f*/
  where a.flight_id = s.flight_id
    and s.crew_link_line = p.crew_link_line(+)
    and s.crew_owner='CK'
  /*  and d.duty_line = p.duty_line(+)*/
   /* and p.filiale = f.filiale*/
    /*and f.tsk_syn_date is not null*/
   /* and f.filiale='CK'*/
    and s.flight_date>=date'2016-01-01' and s.flight_date<date'2016-06-28';

prompt
prompt Creating function FN_GETDAYEHANG
prompt ================================
prompt
create or replace function fn_getdayehang(m_flight_id in varchar2) return varchar2 is
   Result varchar2(10);
 begin
  select cate into Result
   from (select
                ule.*,
                (case
                  when (to_char(atd, 'hh24mi') >= '0200' and
                       to_char(atd, 'hh24mi') <= '0600' or
                       to_char(ata, 'hh24mi') >= '0200' and
                       to_char(ata, 'hh24mi') <= '0600' or
                       to_char(atd, 'hh24mi') < '0200' and
                       to_char(ata, 'hh24mi') > '0600') and
                       total_flyhours <= 480 and crew_num = 2 then
                   case
                     when total_minutes > 60 then
                      case
                        when total_minutes <= 120 then
                         'A'
                        else
                         'B'
                      end
                     else
                      null
                   end
                  else
                   null
                end) cate
           from (select ule.*,
                        sum(edate - sdate) over(partition by ule.crew_link_line /*order by ule.flight_id*/) total_minutes,
                     /*   sum(ule.fly_hours) over(partition by ule.crew_link_line) total_flyHours,
                   */
                     ule.fly_hours total_flyHours,
                   (select count(*)
                           from t_sch_roster ter
                          where ter.flight_id = ule.flight_id
                            and (ter.rank_no in ('A001', 'B001', 'C001','F001') or (ter.rank_no='S001' and instr(ter.ts_flag,'W')>0))) crew_num
                   from (select ule.flight_id,
                                ule.crew_link_line,
                                ule.std atd,
                                ule.sta ata,
                                (case
                                  when to_char(ule.std, 'hh24mi') >= '0200' and
                                       to_char(ule.std, 'hh24mi') <= '0600' then
                                   to_Number(to_char(ule.std, 'hh24')) * 60 +
                                   to_Number(to_char(ule.std, 'mi'))
                                  else
                                   120
                                end) sdate,
                                (case
                                  when to_char(ule.sta, 'hh24mi') >= '0200' and
                                       to_char(ule.sta, 'hh24mi') <= '0600' then
                                   to_Number(to_char(ule.sta, 'hh24')) * 60 +
                                   to_Number(to_char(ule.sta, 'mi'))
                                  when to_char(ule.std,'hh24mi')>='0600' and to_char(ule.sta,'hh24mi')>'0600'  then
                                  120
                                  else
                                   360
                                end) edate,
                                ule.fly_hours
                         from t_flt_schedule ule
                          where ule.flight_date >= sysdate - 260 and ule.sta>ule.std
                          and ule.flight_type!='V' and ule.flight_flag!='B'
                          and ule.crew_link_line=(
                          select distinct ule.crew_link_line from t_flt_schedule ule where ule.flight_id=m_flight_id)
                          ) ule ) ule)  where cate is not null
                  and flight_id=m_flight_id;
   return(Result);
 end fn_getdayehang;
/

prompt
prompt Creating view V_INTF_FXW_FTB_DAYEHANG
prompt =====================================
prompt
create or replace force view v_intf_fxw_ftb_dayehang as
select ftb."FTB_NO",ftb."FLIGHT_ID",ftb."TOTL_HOURS",ftb."TAXI_OUT_TIME",ftb."TAKEOFF_TIME",ftb."LANDING_TIME",ftb."TAXI_IN_TIME",ftb."GRND_HOURS",ftb."AIR_HOURS",ftb."NIGHT_HOURS",ftb."IS_ICAO",ftb."LAST_MODIFY_TIME",ftb."OLD_FUEL",ftb."NEW_FUEL",ftb."LEFT_FUEL",ftb."REC_ID",fn_getdayehang(ftb.flight_id) cate from v_intf_fxw_ftb ftb;

prompt
prompt Creating view V_INTF_FXW_FTB_FILIALE
prompt ====================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FXW_FTB_FILIALE AS
SELECT a."FTB_NO",a."FLIGHT_ID",a."TOTL_HOURS",a."TAXI_OUT_TIME",a."TAKEOFF_TIME",a."LANDING_TIME",a."TAXI_IN_TIME",a."GRND_HOURS",a."AIR_HOURS",a."IS_ICAO",a."LAST_MODIFY_TIME",a."OLD_FUEL",a."NEW_FUEL",a."LEFT_FUEL",a."REC_ID", b.crew_owner
   FROM V_INTF_FXW_FTB a, t_flt_schedule b
  where a.flight_id = b.flight_id;

prompt
prompt Creating view V_INTF_FXW_HEALTH
prompt ===============================
prompt
create or replace force view v_intf_fxw_health as
select /*??????????????????????????*/
        health_id as cert_id, /*??????ID*/
        a.p_code, /*????????*/
        b.fxw_id, /*??????????????*/
        cert_type, /*????????(????HEAL)*/
        cert_no,  /*??????????????*/
        issue_date,  /*????????*/
        over_date,   /*????????*/
        health_info,  /*????????*/
        health_limit, /*????????*/
        health_level, /*????????,??I,II,III,IV,IVa??*/
        duty_rank,  /*????*/
        d_person,  /*????????*/
        s_person,  /*??????*/
        a.valid_flag, /* ???????? */
        b.month_plantime_min month_minutes_limit, /*??????????*/
        a.op_time as last_modify_time
  from t_hr_health a,t_hr_crew b
  where a.cert_type = 'HEAL'
    and a.p_code = b.p_code
    and b.module_flag = 'F'
    and b.filiale in (select filiale from t_bas_filiale where is_online = 'Y');

prompt
prompt Creating view V_INTF_FXW_INPUTTYPE
prompt ==================================
prompt
create or replace force view v_intf_fxw_inputtype as
select a.train_line,/*??????ID*/
        a.course_code,/*????????*/
        a.subject_code,/*????????*/
        b.course_name,/*????????*/
        c.subject_name/*????????*/
   from t_tr_pairing a, t_tr_course b, t_tr_subject c
  where a.course_code = b.course_code
    and a.subject_code = c.subject_code
  order by train_line;

prompt
prompt Creating view V_INTF_FXW_LICENSE_SIMULATOR
prompt ==========================================
prompt
create or replace force view v_intf_fxw_license_simulator as
select /*???????????? ????????????????????????*/
   a.bm_code SIMU_CODE/*????????????*/,
   a.bm_name SIMU_NAME/*????????*/,
   a.remarks /*????*/
 from t_bas_dict a
 where a.parent_code='RT';

prompt
prompt Creating view V_INTF_FXW_MEDI_DUTY
prompt ==================================
prompt
create or replace force view v_intf_fxw_medi_duty as
select
        /*????????????????*/
        a.filiale,--??????
        (select c.fxw_code from t_bas_filiale c where c.filiale=a.filiale) orgCode,--??????????????????
        t.flight_date,--????????
        t.p_code,--????????????????
        a.c_name,--????????????????
        a.mobil_no,--??????????????????
        a.id_no,--??????????????????
        t.duty_code,--????????
        b.duty_name,--????????
        t.td,--????????
        t.ta,--????????
        t.duty_rec,--????????
        t.op_time last_modify_time--????????????
   from t_medi_duty t,t_medi_doctor a,t_bas_duty b
   where t.p_code = a.p_code and t.duty_code = b.duty_code and b.valid_flag='Y'
;

prompt
prompt Creating view V_INTF_FXW_MEDI_MONITOR
prompt =====================================
prompt
create or replace force view v_intf_fxw_medi_monitor as
select /*????????????*/
        t.filiale,--??????
        t.monitor_id,--??????????????????
        t.p_code,--??????????
        a.c_name crewname,--??????????
        a.id_no crewno,--????????????
        a.mobil_no crewmobilno,--????????????
        t.start_date,--????????????
        t.end_end,--????????????
        t.monitor_reason,--????????
        t.monitor_date,--????????????
        b.c_name mediname,--????????????
        t.cancel_reason,--????????
        t.cancel_date,--????????
        b1.c_name,--??????????????????
        t.valid_flag,--????????
        t.special_flag,--????????????
        t.op_time last_modify_time--????????????
   from t_medi_monitor t, t_hr_crew a, t_medi_doctor b ,t_medi_doctor b1
  where a.p_code = t.p_code
    and t.monitor_person=b.p_code (+)
    and  t.cancel_person=b1.p_code(+)
;

prompt
prompt Creating view V_INTF_FXW_MONITOR
prompt ================================
prompt
create or replace force view v_intf_fxw_monitor as
select a.monitor_id,
        'MONITOR' data_type,
        a.p_code,
        a.start_date,
        a.end_end,
        a.monitor_reason,
        a.valid_flag,
        a.op_time last_modify_time
   from T_MEDI_MONITOR a;

prompt
prompt Creating view V_INTF_FXW_MON_FLYHOURS
prompt =====================================
prompt
create or replace force view v_intf_fxw_mon_flyhours as
select /*为飞行网提供月度飞行小时汇总*/
       p_code as polit_info_id,
       to_char(b.flight_date,'yyyy-mm') as year_month,
       b.ac_type,
       sum(a.fly_hours) as fly_hour,
       sum(nvl(left_updowns,0) + nvl(right_updowns,0)) as fly_sortie,
       sum(exp_hours) as live_time,
       sum(nvl(left_updowns,0) + nvl(right_updowns,0)) as live_sortie,
       sum(left_hours) as left_time,
       sum(right_hours) as right_time,
       max(a.op_time) as last_modify_time
  from t_svc_ftb_detail a, t_flt_schedule b
 where a.flight_id = b.flight_id
   and a.ftb_no = b.ftb_no
 group by to_char(b.flight_date,'yyyy-mm'),p_code,ac_type;

prompt
prompt Creating view V_INTF_FXW_MSG_TYPE
prompt =================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_FXW_MSG_TYPE AS
SELECT
 MSG_TYPE,MSG_TYPE_NAME,MSG_LEVEL
 from T_MSG_TYPE t;

prompt
prompt Creating view V_INTF_FXW_PARTIME
prompt ================================
prompt
create or replace force view v_intf_fxw_partime as
select bm_code,
        bm_name
   from t_bas_dict
 where parent_code = 'JZM';

prompt
prompt Creating view V_INTF_FXW_PASSPORT
prompt =================================
prompt
create or replace force view v_intf_fxw_passport as
select /*??????????????????????????*/
         a.pass_id,/*????ID*/
         a.p_code,/*????????*/
         a.cert_type,/*????????(????/????/??????????)*/
         a.pass_flag,/*????????(0????????1????????)*/
         a.pass_no,/*????????*/
         a.country_code,/*????????(????CN)*/
         c.country_name,/*????????????*/
         a.issue_agency,/*????????*/
         a.issue_date,/*????????*/
         decode(a.valid_flag,'N',to_date(null),a.check_date) check_date,/*????????*/
         a.over_date,/*????????*/
         a.en_addr,/*????????*/
         a.en_born_in,/*??????????*/
         a.ch_born_in,/*??????????*/
         a.valid_flag, /*????????(Y????,N??????,X????)*/
         f_max(a.op_time,b.op_time) last_modify_time,/*????????????*/
         a.remarks,/*????*/
         a.fxw_id
    from t_hr_passport a,t_hr_crew b,t_bas_country c
   where a.p_code = b.p_code
     and b.module_flag = 'F'
     and (b.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
       or b.p_code in (select p_code from t_hr_transfer where state = 'TR03' and plan_end_date is not null and end_date is null))
     and a.country_code = c.country_code(+)
     --and (a.valid_flag is null or a.valid_flag <> 'X')
;

prompt
prompt Creating view V_INTF_FXW_PASSTYPE
prompt =================================
prompt
create or replace force view v_intf_fxw_passtype as
select /*??????????????????????????????????????????????????*/
        CERT_TYPE,CERT_NAME from t_hr_cert_type t
 where cert_falg = 'C';

prompt
prompt Creating view V_INTF_FXW_POSTDUTY
prompt =================================
prompt
create or replace force view v_intf_fxw_postduty as
select /*??????????????????????????*/
       a.bm_code,
       a.bm_name
   from t_bas_dict a
  where a.parent_code='AB';

prompt
prompt Creating view V_INTF_FXW_QULIFICATION
prompt =====================================
prompt
create or replace force view v_intf_fxw_qulification as
select /*????????????????????????*/
        license.p_code,
        license_no,
        license.ac_type,
        issue_date,
        check_date,
        over_date,
        basic_month,
        basic_month2,
        last_monitor_date,
        next_monitor_date,
        next_monitor_yn,
        next_monitor_teacher_yn,
        next_teacher_limit,
        tech_code,
        tech_date,
        stage,
        stage_name,
        weather_standard,
        weather_stand_date,
        radio_code,
        radio_date,
        l_checker_code,--????????????
        l_checker_date,--????????????????
        l_checker_enddate,--????????????????????
        ls_checker_code,--??????????
        ls_checker_date,--??????????????
        ls_checker_enddate,--??????????????????
        lc_checker_code,--??????????
        lc_checker_date,--??????????????
        lc_checker_enddate,--??????????????????
        emergency_start_date,
        emergency_end_date,
        dangerous_start_date,
        dangerous_end_date,
        airline_check_start_date,
        airline_check_end_date,
        highline_check_start_date,--??????
        highline_check_end_date,
        rvr_check_start_date,--rvr
        rvr_check_end_date,
        hud_code,--hud
        hud_name,
        hud_start_date,
        hud_end_date,
        simu_code,
        ac_type_yn,
        valid_flag,
       -- f_max(f_max(license_op_time,f_max(tech_op_time,f_max(weather_op_time,f_max(radio_op_time,f_max(f_max(l_checker_optime,f_max(ls_checker_optime,lc_checker_optime)),f_max(emergency_op_time,f_max(dangerous_op_time,airline_op_time))))))),basic_op_time) as last_modify_time
        f_max(f_max(f_max(license_op_time,f_max(tech_op_time,f_max(weather_op_time,f_max(radio_op_time,f_max(f_max(l_checker_optime,f_max(ls_checker_optime,lc_checker_optime)),f_max(emergency_op_time,f_max(dangerous_op_time,f_max(airline_op_time,f_max(highline_op_time,rvr_op_time))))))))),basic_op_time),hud_op_time) as last_modify_time
   from (
        select p_code,
               license_no,
               ac_types as ac_type,
               issue_date,
               check_date,
               over_date,
               basic_month,
               basic_month2,
               last_monitor_date,
               next_monitor_date,
               next_monitor_yn,
               next_monitor_teacher_yn,
               next_teacher_limit,
               simu_code,
               ac_type_yn,
               valid_flag,
               op_time as license_op_time
          from t_hr_license a
        ) license,
        (
        select p_code,
               ac_type,
               tech_no_i as tech_code,
               tech_no_i_date as tech_date,
               stage,
               (select c.bm_name
                 from t_bas_dict c
                where c.bm_code = a.stage
                  and c.parent_code in('F1ST','F2ST','C2ST')) stage_name,
               f_max(a.op_time,b.op_time) as tech_op_time
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'A'
            and b.in_ex='I'
            and a.valid_flag='Y'
        ) tech,
        (
        select a.p_code,
               a.ac_types as ac_type,
               a.qlf_code as weather_standard,
               check_date as weather_stand_date,
               f_max(a.op_time,b.op_time) as weather_op_time
           from t_tech_qulification a, t_tech_qlf b
          where a.qlf_code = b.qlf_code
            and b.parent_code = '391'
            and a.valid_flag='Y'
        ) weather,
        (
        select p_code,
               tech_no_i as radio_code,
               tech_no_i_date as radio_date,
               f_max(a.op_time,b.op_time) as radio_op_time
          from t_tech_info a,t_bas_tech b
         where a.tech_no_i = b.tech_no
           and b.tech_type = 'B'
           and a.valid_flag='Y'
        ) radio,
        (
        select p_code,
               ac_type,
               tech_no_i as l_checker_code,
               tech_no_i_date as l_checker_date,
               /*to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 3) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as l_checker_enddate,
               */
               trunc(add_months(tech_no_i_date,12*3)-1) as l_checker_enddate,
               f_max(a.op_time,b.op_time) as l_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'L'    --????????????
            and a.valid_flag='Y'
        ) checker1,
        (
        select p_code,
               ac_type,
               tech_no_i as ls_checker_code,
               tech_no_i_date as ls_checker_date,
              /*to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 3) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as ls_checker_enddate,
              */
              trunc(add_months(tech_no_i_date,12*3)-1) as ls_checker_enddate,
              f_max(a.op_time,b.op_time) as ls_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'Ls'    --??????????
            and a.valid_flag='Y'
        ) checker2,
        (
        select p_code,
               ac_type,
               tech_no_i as lc_checker_code,
               tech_no_i_date as lc_checker_date,
               /*to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 2) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as lc_checker_enddate,
               */
               trunc(add_months(tech_no_i_date,12*3)-1) as lc_checker_enddate,
               f_max(a.op_time,b.op_time) as lc_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'Lc'    --??????????
            and a.valid_flag='Y'
        ) checker3,
        (
        select a.p_code,
               a.ac_types,
               a.check_date as emergency_start_date,
               a.over_date as emergency_end_date,
               op_time as emergency_op_time
           from t_tech_qulification a
          where a.qlf_code = '401'
          and a.valid_flag='Y'
        ) emergency,
        (
        select a.p_code,
               a.ac_types,
               a.check_date as dangerous_start_date,
               a.over_date as dangerous_end_date,
               op_time as dangerous_op_time
           from t_tech_qulification a
          where a.qlf_code = '402'
          and a.valid_flag='Y'
        ) dangerous,
        (
        select a.p_code,
               --a.ac_types as ac_type,
               a.check_date as airline_check_start_date,
               a.over_date as airline_check_end_date,
               op_time as airline_op_time
           from t_tech_qulification a
          where a.qlf_code = '485'
          and a.valid_flag='Y'
        ) airline,
          (
        select a.p_code,
               --a.ac_types as ac_type,
               a.check_date as highline_check_start_date,
               a.over_date as highline_check_end_date,
               op_time as highline_op_time
           from t_tech_qulification a
          where a.qlf_code = '742'
          and a.valid_flag='Y'
        ) highline,
        (
        select a.p_code,
               a.ac_types as ac_type,
               a.check_date as rvr_check_start_date,
               a.over_date as rvr_check_end_date,
               op_time as rvr_op_time
           from t_tech_qulification a
          where a.qlf_code = '483'
          and a.valid_flag='Y'
        ) rvr,
        (select a.p_code,
                a.qlf_code hud_code,
                b.qlf_name hud_name,
                a.ac_types as ac_type,
                a.check_date as hud_start_date,
                a.over_date as hud_end_date,
                a.op_time as hud_op_time
           from t_tech_qulification a,t_tech_qlf b
          where b.qlf_code=a.qlf_code
                and b.parent_code='753'
                and a.valid_flag='Y'
         )hud ,
        (
        select a.p_code,
               a.op_time as basic_op_time
          from t_hr_crew a
         where a.module_flag = 'F'
           and (a.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
             or a.p_code in (select p_code from t_hr_transfer where state = 'TR03' and plan_end_date is not null and end_date is null))
        ) basicinfo
   where license.p_code = tech.p_code(+)
     and license.ac_type = tech.ac_type(+)
     and license.p_code = weather.p_code(+)
     and license.ac_type = weather.ac_type(+)
     and license.p_code = radio.p_code(+)
     and license.p_code = checker1.p_code(+)
     and license.ac_type = checker1.ac_type(+)
     and license.p_code = checker2.p_code(+)
     and license.ac_type = checker2.ac_type(+)
     and license.p_code = checker3.p_code(+)
     and license.ac_type = checker3.ac_type(+)
     and license.p_code = emergency.p_code(+)
     and license.ac_type = emergency.ac_types(+)
     and license.p_code = dangerous.p_code(+)
     and license.p_code = airline.p_code(+)
     and license.p_code = highline.p_code(+)
     and license.p_code = rvr.p_code(+)
     and license.ac_type = rvr.ac_type(+)
     --and license.ac_type = airline.ac_type(+)  --??????????????????????????
     and license.p_code=hud.p_code(+)
     and license.ac_type=hud.ac_type(+)
     and license.p_code = basicinfo.p_code
;

prompt
prompt Creating view V_INTF_FXW_QULIFICATION201402
prompt ===========================================
prompt
create or replace force view v_intf_fxw_qulification201402 as
select /*????????????????????????*/
        license.p_code,
        license_no,
        license.ac_type,
        issue_date,
        check_date,
        over_date,
        basic_month,
        basic_month2,
        last_monitor_date,
        next_monitor_date,
        next_monitor_yn,
        next_monitor_teacher_yn,
        next_teacher_limit,
        tech_code,
        tech_date,
        stage,
        stage_name,
        weather_standard,
        weather_stand_date,
        radio_code,
        radio_date,
        l_checker_code,--????????????
        l_checker_date,--????????????????
        l_checker_enddate,--????????????????????
        ls_checker_code,--??????????
        ls_checker_date,--??????????????
        ls_checker_enddate,--??????????????????
        lc_checker_code,--??????????
        lc_checker_date,--??????????????
        lc_checker_enddate,--??????????????????
        emergency_start_date,
        emergency_end_date,
        dangerous_start_date,
        dangerous_end_date,
        airline_check_start_date,
        airline_check_end_date,
        highline_check_start_date,--??????
        highline_check_end_date,
        rvr_check_start_date,--rvr
        rvr_check_end_date,
        simu_code,
        ac_type_yn,
        valid_flag,
       -- f_max(f_max(license_op_time,f_max(tech_op_time,f_max(weather_op_time,f_max(radio_op_time,f_max(f_max(l_checker_optime,f_max(ls_checker_optime,lc_checker_optime)),f_max(emergency_op_time,f_max(dangerous_op_time,airline_op_time))))))),basic_op_time) as last_modify_time
        f_max(f_max(license_op_time,f_max(tech_op_time,f_max(weather_op_time,f_max(radio_op_time,f_max(f_max(l_checker_optime,f_max(ls_checker_optime,lc_checker_optime)),f_max(emergency_op_time,f_max(dangerous_op_time,f_max(airline_op_time,f_max(highline_op_time,rvr_op_time))))))))),basic_op_time) as last_modify_time
   from (
        select p_code,
               license_no,
               ac_types as ac_type,
               issue_date,
               check_date,
               over_date,
               basic_month,
               basic_month2,
               last_monitor_date,
               next_monitor_date,
               next_monitor_yn,
               next_monitor_teacher_yn,
               next_teacher_limit,
               simu_code,
               ac_type_yn,
               valid_flag,
               op_time as license_op_time
          from t_hr_license a
        ) license,
        (
        select p_code,
               ac_type,
               tech_no_i as tech_code,
               tech_no_i_date as tech_date,
               stage,
               (select c.bm_name
                 from t_bas_dict c
                where c.bm_code = a.stage
                  and c.parent_code in('F1ST','F2ST','C2ST')) stage_name,
               f_max(a.op_time,b.op_time) as tech_op_time
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'A'
            and b.in_ex='I'
            and a.valid_flag='Y'
        ) tech,
        (
        select a.p_code,
               a.ac_types as ac_type,
               a.qlf_code as weather_standard,
               check_date as weather_stand_date,
               f_max(a.op_time,b.op_time) as weather_op_time
           from t_tech_qulification a, t_tech_qlf b
          where a.qlf_code = b.qlf_code
            and b.parent_code = '391'
            and a.valid_flag='Y'
        ) weather,
        (
        select p_code,
               tech_no_i as radio_code,
               tech_no_i_date as radio_date,
               f_max(a.op_time,b.op_time) as radio_op_time
          from t_tech_info a,t_bas_tech b
         where a.tech_no_i = b.tech_no
           and b.tech_type = 'B'
           and a.valid_flag='Y'
        ) radio,
        (
        select p_code,
               ac_type,
               tech_no_i as l_checker_code,
               tech_no_i_date as l_checker_date,
               /*to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 3) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as l_checker_enddate,
               */
               trunc(add_months(tech_no_i_date,12*3)-1) as l_checker_enddate,
               f_max(a.op_time,b.op_time) as l_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'L'    --????????????
            and a.valid_flag='Y'
        ) checker1,
        (
        select p_code,
               ac_type,
               tech_no_i as ls_checker_code,
               tech_no_i_date as ls_checker_date,
              /*to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 3) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as ls_checker_enddate,
              */
              trunc(add_months(tech_no_i_date,12*3)-1) as ls_checker_enddate,
              f_max(a.op_time,b.op_time) as ls_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'Ls'    --??????????
            and a.valid_flag='Y'
        ) checker2,
        (
        select p_code,
               ac_type,
               tech_no_i as lc_checker_code,
               tech_no_i_date as lc_checker_date,
               /*to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 2) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as lc_checker_enddate,
               */
               trunc(add_months(tech_no_i_date,12*3)-1) as lc_checker_enddate,
               f_max(a.op_time,b.op_time) as lc_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'Lc'    --??????????
            and a.valid_flag='Y'
        ) checker3,
        (
        select a.p_code,
               a.ac_types,
               a.check_date as emergency_start_date,
               a.over_date as emergency_end_date,
               op_time as emergency_op_time
           from t_tech_qulification a
          where a.qlf_code = '401'
          and a.valid_flag='Y'
        ) emergency,
        (
        select a.p_code,
               a.ac_types,
               a.check_date as dangerous_start_date,
               a.over_date as dangerous_end_date,
               op_time as dangerous_op_time
           from t_tech_qulification a
          where a.qlf_code = '402'
          and a.valid_flag='Y'
        ) dangerous,
        (
        select a.p_code,
               --a.ac_types as ac_type,
               a.check_date as airline_check_start_date,
               a.over_date as airline_check_end_date,
               op_time as airline_op_time
           from t_tech_qulification a
          where a.qlf_code = '485'
          and a.valid_flag='Y'
        ) airline,
          (
        select a.p_code,
               --a.ac_types as ac_type,
               a.check_date as highline_check_start_date,
               a.over_date as highline_check_end_date,
               op_time as highline_op_time
           from t_tech_qulification a
          where a.qlf_code = '742'
        ) highline,
        (
        select a.p_code,
               a.ac_types as ac_type,
               a.check_date as rvr_check_start_date,
               a.over_date as rvr_check_end_date,
               op_time as rvr_op_time
           from t_tech_qulification a
          where a.qlf_code = '483'
        ) rvr,
        (
        select a.p_code,
               a.op_time as basic_op_time
          from t_hr_crew a
         where a.module_flag = 'F'
           and (a.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
             or a.p_code in (select p_code from t_hr_transfer where state = 'TR03' and plan_end_date is not null and end_date is null))
        ) basicinfo
   where license.p_code = tech.p_code(+)
     and license.ac_type = tech.ac_type(+)
     and license.p_code = weather.p_code(+)
     and license.ac_type = weather.ac_type(+)
     and license.p_code = radio.p_code(+)
     and license.p_code = checker1.p_code(+)
     and license.ac_type = checker1.ac_type(+)
     and license.p_code = checker2.p_code(+)
     and license.ac_type = checker2.ac_type(+)
     and license.p_code = checker3.p_code(+)
     and license.ac_type = checker3.ac_type(+)
     and license.p_code = emergency.p_code(+)
     and license.ac_type = emergency.ac_types(+)
     and license.p_code = dangerous.p_code(+)
     and license.p_code = airline.p_code(+)
     and license.p_code = highline.p_code(+)
     and license.p_code = rvr.p_code(+)
     and license.ac_type = rvr.ac_type(+)
     --and license.ac_type = airline.ac_type(+)  --??????????????????????????
     and license.p_code = basicinfo.p_code
;

prompt
prompt Creating view V_INTF_FXW_QULIFICATION201510
prompt ===========================================
prompt
create or replace force view v_intf_fxw_qulification201510 as
select /*????????????????????????*/
        license.p_code,
        license_no,
        license.ac_type,
        issue_date,
        check_date,
        over_date,
        basic_month,
        basic_month2,
        last_monitor_date,
        next_monitor_date,
        next_monitor_yn,
        next_monitor_teacher_yn,
        next_teacher_limit,
        tech_code,
        tech_date,
        stage,
        stage_name,
        weather_standard,
        weather_stand_date,
        radio_code,
        radio_date,
        l_checker_code,--????????????
        l_checker_date,--????????????????
        l_checker_enddate,--????????????????????
        ls_checker_code,--??????????
        ls_checker_date,--??????????????
        ls_checker_enddate,--??????????????????
        lc_checker_code,--??????????
        lc_checker_date,--??????????????
        lc_checker_enddate,--??????????????????
        emergency_start_date,
        emergency_end_date,
        dangerous_start_date,
        dangerous_end_date,
        airline_check_start_date,
        airline_check_end_date,
        highline_check_start_date,--??????
        highline_check_end_date,
        rvr_check_start_date,--rvr
        rvr_check_end_date,
        simu_code,
        ac_type_yn,
        valid_flag,
       -- f_max(f_max(license_op_time,f_max(tech_op_time,f_max(weather_op_time,f_max(radio_op_time,f_max(f_max(l_checker_optime,f_max(ls_checker_optime,lc_checker_optime)),f_max(emergency_op_time,f_max(dangerous_op_time,airline_op_time))))))),basic_op_time) as last_modify_time
        f_max(f_max(license_op_time,f_max(tech_op_time,f_max(weather_op_time,f_max(radio_op_time,f_max(f_max(l_checker_optime,f_max(ls_checker_optime,lc_checker_optime)),f_max(emergency_op_time,f_max(dangerous_op_time,f_max(airline_op_time,f_max(highline_op_time,rvr_op_time))))))))),basic_op_time) as last_modify_time
   from (
        select p_code,
               license_no,
               ac_types as ac_type,
               issue_date,
               check_date,
               over_date,
               basic_month,
               basic_month2,
               last_monitor_date,
               next_monitor_date,
               next_monitor_yn,
               next_monitor_teacher_yn,
               next_teacher_limit,
               simu_code,
               ac_type_yn,
               valid_flag,
               op_time as license_op_time
          from t_hr_license a
        ) license,
        (
        select p_code,
               ac_type,
               tech_no_i as tech_code,
               tech_no_i_date as tech_date,
               stage,
               (select c.bm_name
                 from t_bas_dict c
                where c.bm_code = a.stage
                  and c.parent_code in('F1ST','F2ST','C2ST')) stage_name,
               f_max(a.op_time,b.op_time) as tech_op_time
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'A'
            and b.in_ex='I'
            and a.valid_flag='Y'
        ) tech,
        (
        select a.p_code,
               a.ac_types as ac_type,
               a.qlf_code as weather_standard,
               check_date as weather_stand_date,
               f_max(a.op_time,b.op_time) as weather_op_time
           from t_tech_qulification a, t_tech_qlf b
          where a.qlf_code = b.qlf_code
            and b.parent_code = '391'
            and a.valid_flag='Y'
        ) weather,
        (
        select p_code,
               tech_no_i as radio_code,
               tech_no_i_date as radio_date,
               f_max(a.op_time,b.op_time) as radio_op_time
          from t_tech_info a,t_bas_tech b
         where a.tech_no_i = b.tech_no
           and b.tech_type = 'B'
           and a.valid_flag='Y'
        ) radio,
        (
        select p_code,
               ac_type,
               tech_no_i as l_checker_code,
               tech_no_i_date as l_checker_date,
               to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 3) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as l_checker_enddate,
               f_max(a.op_time,b.op_time) as l_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'L'    --????????????
            and a.valid_flag='Y'
        ) checker1,
        (
        select p_code,
               ac_type,
               tech_no_i as ls_checker_code,
               tech_no_i_date as ls_checker_date,
               to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 3) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as ls_checker_enddate,
               f_max(a.op_time,b.op_time) as ls_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'Ls'    --??????????
            and a.valid_flag='Y'
        ) checker2,
        (
        select p_code,
               ac_type,
               tech_no_i as lc_checker_code,
               tech_no_i_date as lc_checker_date,
               to_date(to_char(to_number(to_char(tech_no_i_date,'yyyy')) + 2) || to_char(tech_no_i_date,'mmdd'),'yyyymmdd') - 1 as lc_checker_enddate,
               f_max(a.op_time,b.op_time) as lc_checker_optime
           from t_tech_info a,t_bas_tech b
          where a.tech_no_i = b.tech_no
            and b.tech_type = 'L'
            and a.tech_no_i = 'Lc'    --??????????
            and a.valid_flag='Y'
        ) checker3,
        (
        select a.p_code,
               a.ac_types,
               a.check_date as emergency_start_date,
               a.over_date as emergency_end_date,
               op_time as emergency_op_time
           from t_tech_qulification a
          where a.qlf_code = '401'
          and a.valid_flag='Y'
        ) emergency,
        (
        select a.p_code,
               a.ac_types,
               a.check_date as dangerous_start_date,
               a.over_date as dangerous_end_date,
               op_time as dangerous_op_time
           from t_tech_qulification a
          where a.qlf_code = '402'
          and a.valid_flag='Y'
        ) dangerous,
        (
        select a.p_code,
               --a.ac_types as ac_type,
               a.check_date as airline_check_start_date,
               a.over_date as airline_check_end_date,
               op_time as airline_op_time
           from t_tech_qulification a
          where a.qlf_code = '485'
          and a.valid_flag='Y'
        ) airline,
          (
        select a.p_code,
               --a.ac_types as ac_type,
               a.check_date as highline_check_start_date,
               a.over_date as highline_check_end_date,
               op_time as highline_op_time
           from t_tech_qulification a
          where a.qlf_code = '742'
        ) highline,
        (
        select a.p_code,
               a.ac_types as ac_type,
               a.check_date as rvr_check_start_date,
               a.over_date as rvr_check_end_date,
               op_time as rvr_op_time
           from t_tech_qulification a
          where a.qlf_code = '483'
        ) rvr,
        (
        select a.p_code,
               a.op_time as basic_op_time
          from t_hr_crew a
         where a.module_flag = 'F'
           and (a.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
             or a.p_code in (select p_code from t_hr_transfer where state = 'TR03' and plan_end_date is not null and end_date is null))
        ) basicinfo
   where license.p_code = tech.p_code(+)
     and license.ac_type = tech.ac_type(+)
     and license.p_code = weather.p_code(+)
     and license.ac_type = weather.ac_type(+)
     and license.p_code = radio.p_code(+)
     and license.p_code = checker1.p_code(+)
     and license.ac_type = checker1.ac_type(+)
     and license.p_code = checker2.p_code(+)
     and license.ac_type = checker2.ac_type(+)
     and license.p_code = checker3.p_code(+)
     and license.ac_type = checker3.ac_type(+)
     and license.p_code = emergency.p_code(+)
     and license.ac_type = emergency.ac_types(+)
     and license.p_code = dangerous.p_code(+)
     and license.p_code = airline.p_code(+)
     and license.p_code = highline.p_code(+)
     and license.p_code = rvr.p_code(+)
     and license.ac_type = rvr.ac_type(+)
     --and license.ac_type = airline.ac_type(+)  --??????????????????????????
     and license.p_code = basicinfo.p_code
;

prompt
prompt Creating view V_INTF_FXW_RADIO
prompt ==============================
prompt
create or replace force view v_intf_fxw_radio as
select /*????????????:????????????(RADI)??????????????(CADI)*/
         a.p_code, /*????????*/
         b.fxw_id,/*??????????ID*/
         a.aera_code, /*????????????*/
        (select d.bm_name
           from t_bas_dict d
          where d.bm_code = a.aera_code
            and d.parent_code = decode(a.rank_no, 'R', 'RADI', 'C', 'CADI')) aera_name, /*????????????*/
        a.rank_no, /*????????*/
        a.first_date, /*????????????*/
        a.last_date, /*????????????*/
        a.valid_flag, /*????????*/
        a.op_time last_modify_time, /*????????????*/
        a.remarks, /*????*/
        a.ac_type /*????*/
   from t_tech_auth_radio a, t_hr_crew b, t_bas_filiale c
  where a.p_code = b.p_code
    and b.module_flag = 'F'
    and b.filiale = c.filiale
    and c.is_online = 'Y';

prompt
prompt Creating view V_INTF_FXW_RADIOCODE
prompt ==================================
prompt
create or replace force view v_intf_fxw_radiocode as
select /*????????????*/tech_no as tech_code,tech_name
   from t_bas_tech t
  where in_ex = 'I'
    and tech_type = 'B'
    and module_flag = 'F';

prompt
prompt Creating view V_INTF_FXW_RANK
prompt =============================
prompt
create or replace force view v_intf_fxw_rank as
select rank_no, /*????????????*/
        rank_name, /*????????????*/
        rank_ename /*????????ICAO????*/
   from t_bas_rank;

prompt
prompt Creating view V_INTF_FXW_SIMETYPE
prompt =================================
prompt
create or replace force view v_intf_fxw_simetype as
select a.bm_code sim_code,a.bm_name sim_name,a.bm_ename sim_ename from t_bas_dict a
 where a.parent_code='SI';

prompt
prompt Creating view V_INTF_FXW_SIMULATOR
prompt ==================================
prompt
create or replace force view v_intf_fxw_simulator as
select
   simu_code/*????????????*/,
   simu_name/*????????*/,
   simu_address/*????????????*/
 from t_tr_simulator;

prompt
prompt Creating view V_INTF_FXW_SIMUPLAN
prompt =================================
prompt
create or replace force view v_intf_fxw_simuplan as
select /*??????????????*/
  a.assigndate,
  a.suitid,
  /* max(decode(a.simtype,'????????',null,'????','1','????????','2','????',null)) train_line,*/
  /*huguang 20121102 ????????1 ?????? 2*/
  nvl(min(decode(a.simtype, 'T', null, 'A', '2', 'S', '1', 'C', null)), '1') train_line,
  nvl(min(a.begintime), '00:00:00') as begintime,
  nvl(max(a.endtime), '23:59:59') as endtime,
  case max(a.ac_type)
    when 'A320' then
     'A001'
    when 'A330' then
     '1004'
    when 'A340' then
     'A340'
    else
     'A001'
  end simu_code, /*????(????)????*/
  max(a.ac_type) ac_type /*huguang 20130124????????????????*/
   from t_tr_fxwsimu a
  group by a.assigndate, a.suitid;

prompt
prompt Creating view V_INTF_FXW_SIMUPLAN20140612
prompt =========================================
prompt
create or replace force view v_intf_fxw_simuplan20140612 as
select /*??????????????*/
        a.assigndate,
        a.suitid,
        /* max(decode(a.simtype,'????????',null,'????','1','????????','2','????',null)) train_line,*/
        /*huguang 20121102 ????????1 ?????? 2*/
        nvl(min(decode(a.simtype,'T',null,'A','2','S','1','C',null)),'1') train_line,
        nvl(min(a.begintime),'00:00:00') as begintime,
        nvl(max(a.endtime),'23:59:59') as endtime,
        decode(nvl(min(decode(a.simtype,'T',null,'A','2','S','1','C',null)),'1'),'1','A001',2,'A002','A001') simu_code,/*????(????)????*/
        max(a.ac_type) ac_type/*huguang 20130124????????????????*/
   from t_tr_fxwsimu a
  group by a.assigndate,a.suitid;

prompt
prompt Creating view V_INTF_FXW_SIMUSCH
prompt ================================
prompt
create or replace force view v_intf_fxw_simusch as
select distinct
  /*??????????????
  huguang:2012-11-15 simType ????????
  ???? A ???????? S ???????? T  ???? C
  */
        a.assigndate,
        a.suitid,
        nvl(a.begintime,'00:00:00') as begintime,
        nvl(a.endtime,'23:59:59') as endtime,
        a.p_code,
        min(
          case a.simtype
            when 'C' then 'T301'
            when 'T' then 'T302'
            when 'S' then 'T303'
            when 'A' then 'T303'
          end
        ) as rank_no
   from t_tr_fxwsimu a
  where a.p_code is not null
  group by assigndate,suitid,begintime,endtime,p_code
  order by a.assigndate,a.suitid;

prompt
prompt Creating view V_INTF_FXW_SIMUSCH_ORDER
prompt ======================================
prompt
create or replace force view v_intf_fxw_simusch_order as
select /*??????????????,??????fjs_order*/
        a.assigndate,a.suitid,rownum+1-min_sno sno,a.p_code,a.rank_no,a.begintime,a.endtime
   from (select * from v_intf_fxw_simusch order by assigndate,suitid,rank_no,p_code) a,
        (select assigndate,suitid,min(rownum) as min_sno
           from (select * from v_intf_fxw_simusch order by assigndate,suitid,rank_no,p_code)
          group by assigndate,suitid) b
  where a.assigndate = b.assigndate
    and a.suitid = b.suitid;

prompt
prompt Creating view V_INTF_FXW_STAFFONDUTY
prompt ====================================
prompt
create or replace force view v_intf_fxw_staffonduty as
select tc.c_name user_name,
        ale.filiale_name,
        ale.fxw_code filiale,
        ddo2.ddo_name,
        ddo1.td startdate,
        ddo1.ta enddate,
        tc.mobil_no as phone,
        ddo1.remarks duty_rec
  from t_tr_ddo ddo1, t_bas_ddo ddo2,t_hr_crew tc,t_bas_filiale ale
  where ddo1.ddo_code=ddo2.ddo_code
       and ddo1.p_code=tc.p_code
       and tc.filiale=ale.filiale
       and ddo2.ddo_code in ('D-ZB','D-PQ','DEPT-WORK','D-DD')
 union all
 select user1.user_name,
        (select ale.filiale_name
           from t_bas_filiale ale
          where ale.fxw_code =
                (select fxw_code
                   from t_bas_filiale ale
                  where user1.dept_code like '%' || ale.filiale || '%')) filiale_name,
        (select fxw_code
           from t_bas_filiale ale
          where user1.dept_code like '%' || ale.filiale || '%') filiale,
        ddo3.ddo_name,
        duty.td startdate,
        duty.ta enddate,
        user1.phone,
        duty.duty_rec
   from t_tr_grnd_duty duty, t_sys_user user1, t_bas_ddo ddo3
  where duty.user_code = user1.user_code
    and duty.duty_code = ddo3.ddo_code;

prompt
prompt Creating view V_INTF_FXW_TASK
prompt =============================
prompt
create or replace force view v_intf_fxw_task as
select /*????????????????????????*/
        a.flight_date, /*????????*/
        a.duty_line as crew_link_line, /*????ID*/
        a.flight_com,  /*??????????*/
        a.flight_voyage,  /*????????*/
        a.ac_type,  /*????*/
        a.ac_reg,   /*????*/
        a.filiale, /*??????*/
        replace((select nvl(max(t1.dep_code),f.fxw_code || '01')
           from t_sch_pairing t1
          where t1.duty_line = a.duty_line
        ),'EAJN','EA08') as flight_unit_code,
        a.fly_hours,  /*????????*/
        a.depa_airport, /*????????*/
        a.td,  /*????????????*/
        a.arri_airport,  /*??????*/
        a.ta,  /*????????????*/
        a.td - nvl(a.td_punch/(24*60),0) as sign_time, /*????????*/
        case when a.fixed_flag='Y' then   to_date(to_char(a.flight_date, 'yyyy-mm-dd') ||
                to_char(a.td_min, ' hh24:mi:ss'),
                'yyyy-mm-dd hh24:mi:ss') - nvl(a.td_before / (24 * 60), 0)
          else a.td - nvl(a.td_before/(24*60),0) end as drive_time,  /*????????*/
        a.op_time as last_modify_time,
        a.depart_flight_no,/*??????????*/
        (select decode(min(fs.sch_pub_flag),'X','N',min(fs.sch_pub_flag))
           from t_flt_schedule fs,t_sch_pairing sp
          where sp.duty_line = a.duty_line
            and sp.crew_link_line = fs.crew_link_line
            and (fs.flg_cs is null or fs.flg_cs <> 'C' and fs.flg_cs <> 'D')
        ) as publish_status,
        --decode(a.sch_pub_flag,'X','N',a.sch_pub_flag) publish_status,
        a.rec_id /*????ID*/
   from t_sch_dutyline a,t_bas_filiale f
  where a.filiale = f.filiale
    and f.tsk_syn_date is not null
    and a.flight_date >= f.tsk_syn_date
;

prompt
prompt Creating view V_INTF_FXW_TECHCODE
prompt =================================
prompt
create or replace force view v_intf_fxw_techcode as
select /*????????????*/tech_no as tech_code,tech_name
   from t_bas_tech t
  where in_ex = 'I'
    and tech_type = 'A'
    and module_flag = 'F';

prompt
prompt Creating view V_INTF_FXW_TERMINAL_DATETIME
prompt ==========================================
prompt
create or replace force view v_intf_fxw_terminal_datetime as
select ac_type_crew,
        departure_airport,
        arrival_airport,
        flt_sn,
        fly_hours,
        op_time last_modify_time
   from t_flt_hours
  where ac_type_crew in (select ac_type from t_bas_fleet);

prompt
prompt Creating view V_INTF_FXW_TOLOAN
prompt ===============================
prompt
create or replace force view v_intf_fxw_toloan as
select
      /*????????????????????????????????????????????????
      TR01 ????????????????????
      TR02 ????????????????????
      */
      t1.trans_id,
      t1.p_code,
      t2.c_name,
      t2.work_no,
      t2.id_no,
      t1.from_filiale,
      t1.to_filiale,
      to_char(t1.start_date,'yyyy-mm-dd') start_date,
      to_char(t1.end_date,'yyyy-mm-dd') end_date,
      state
 from t_hr_transfer t1, t_hr_crew t2
 where t1.p_code = t2.p_code
 and ((t1.state='TR01' and t1.end_date is null and t1.start_date<=trunc(sysdate))
    or(t1.state='TR02' and t1.end_date is not null and t1.end_date>=trunc(sysdate)));

prompt
prompt Creating view V_INTF_FXW_TRAIN_TIME
prompt ===================================
prompt
create or replace force view v_intf_fxw_train_time as
select
        /*huguang 2012-01-06 ??????????????????*/
        a.rec_id,/*??????*/
        a.p_code, /*??????ID*/
        a.train_date, /*????????????*/
        b.ac_type_crew as ac_type, /*????*/
        a.train_hours as through_time, /*????????(??????????)*/
        a.updowns, /*????????*/
        a.train_hours as flight_hour, /*????????(??????????)*/
        b.train_line input_type, /*?????????????? 1 ????,??????????????????*/
        case
          when a.rank_no = 'T301' or a.rank_no = 'T302' then
           a.train_hours
          when a.rank_no = 'T303' then
           null
        end as teacher_time, /*????????*/
        a.op_time as last_modify_time, /*????????????*/
        a.rank_no as post, /*????*/
        a.is_from_fxw,/*?????????????? ???????? Y ??????????????????????????????????*/
        d.dep_code as org_code, /*????*/
        a.sim_type,/*????????*/
        a.seat /*C????(????) F????(??????)*/
   from t_tr_schedule a, t_tr_plan b, t_hr_crew d
  where a.train_id = b.train_id
    and a.p_code = d.p_code
    and d.filiale in(select c.filiale from t_bas_filiale c where c.is_online='Y')
    and a.instructor is not null;

prompt
prompt Creating view V_INTF_FXW_VISA
prompt =============================
prompt
create or replace force view v_intf_fxw_visa as
select /*??????????????????????????*/
          a.passport_id,/*????ID*/
          a.visa_id,/*????ID*/
          a.p_code,/*????????*/
          a.cert_type,/*????????(????/????/????/????/????/??????)*/
          a.visa_no,/*????????*/
          a.country_code,/*????????(????CN)*/
          c.country_name,/*????????????*/
          a.issue_agency,/*????????*/
          a.issue_date,/*????????*/
          a.check_date,/*????????*/
          a.over_date,/*????????*/
          a.valid_flag,/*????????(Y????,N??????,X????)*/
          f_max(a.op_time,b.op_time) last_modify_time,/*????????????*/
          a.remarks,/*????*/
          a.fxw_id
     from t_hr_visa a,t_hr_crew b,t_bas_country c
    where a.p_code = b.p_code
     and b.module_flag = 'F'
     and (b.filiale in (select filiale from t_bas_filiale where is_online = 'Y')
       or b.p_code in (select p_code from t_hr_transfer where state = 'TR03' and plan_end_date is not null and end_date is null))
     and a.country_code=c.country_code(+)
     --and (a.valid_flag is null or a.valid_flag <> 'X')
     --and not exists(select 1 from t_hr_passport t where t.pass_id = a.passport_id and t.valid_flag = 'X')
;

prompt
prompt Creating view V_INTF_FXW_VISATYPE
prompt =================================
prompt
create or replace force view v_intf_fxw_visatype as
select /*??????????????????????????????????????????????????*/
        CERT_TYPE,CERT_NAME from t_hr_cert_type t
 where cert_falg = 'D';

prompt
prompt Creating view V_INTF_FXW_WSTDCODE
prompt =================================
prompt
create or replace force view v_intf_fxw_wstdcode as
select /*????????????????*/qlf_code,qlf_name
   from t_tech_qlf
  where parent_code = '391';

prompt
prompt Creating view V_INTF_MOF_FLIGHT
prompt ===============================
prompt
create or replace force view v_intf_mof_flight as
select
        b.p_code,/*??????????*/
        c.c_name,/*??????????*/
        c.work_no,/*??????????*/
        a.flight_id,/*????ID*/
        a.flight_date,/*????????*/
        a.flight_no,/*??????*/
        a.departure_airport,/*????????????*/
        (select d.chinese_name from t_bas_airport d where d.airport_3code=a.departure_airport) da_china_name,/*????????????????*/
        a.arrival_airport,/*????????????*/
        (select d.chinese_name from t_bas_airport d where d.airport_3code=a.arrival_airport) aa_china_name,/*????????????????*/
        a.std,/*????????????*/
        a.atd,/*????????????*/
        a.sta,/*????????????*/
        a.ata,/*????????????*/
        a.ftb_rec_flag,/*??????????????*/
        f_max(a.op_time,b.op_time) last_modify_time /*????????????*/
   from t_flt_schedule a,t_sch_roster b,t_hr_crew c
  where a.flight_id=b.flight_id
  and a.sch_pub_flag='Y'
  and b.fjs_order='1'
  and c.filiale in (select e.filiale from t_bas_filiale e where e.is_online='Y')
  and b.p_code=c.p_code
  and a.flight_id_ref is null;

prompt
prompt Creating view V_INTF_MOF_ROSTER
prompt ===============================
prompt
create or replace force view v_intf_mof_roster as
select a.flight_id,/*????ID*/
        a.flight_date,/*????????*/
        a.p_code,/*??????????*/
        b.c_name,/*??????????*/
        b.work_no,/*??????????*/
        a.fjs_order,/*????????*/
        a.rank_no,/*????????????*/
        (select c.rank_name from t_bas_rank c where a.rank_no = c.rank_no) rank_name,/*????????????*/
        a.ts_flag,/*??????????*/
        (select d.bm_name from t_bas_dict d where d.parent_code = 'JZM' and d.bm_code = a.ts_flag) ts_name,/*????????????*/
        a.op_time last_modify_time /*????????????*/
   from t_sch_roster a, t_hr_crew b, t_flt_schedule c
  where a.p_code = b.p_code
    and a.flight_id = c.flight_id
    and c.flight_id_ref is null
    and c.sch_pub_flag='Y'
 union
 select c.flight_id_ref,/*????ID*/
        a.flight_date,/*????????*/
        a.p_code,/*??????????*/
        b.c_name,/*??????????*/
        b.work_no,/*??????????*/
        a.fjs_order,/*????????*/
        'S004' as rank_no, /*????????????*/
        (select c.rank_name from t_bas_rank c where c.rank_no = 'S004') rank_name,/*????????????*/
        a.ts_flag,/*??????????*/
        (select d.bm_name from t_bas_dict d where d.parent_code = 'JZM' and d.bm_code = a.ts_flag) ts_name,/*????????????*/
        a.op_time last_modify_time /*????????????*/
   from t_sch_roster a, t_hr_crew b, t_flt_schedule c
  where a.p_code = b.p_code
    and a.flight_id = c.flight_id
    and c.flight_id_ref is not null
    and c.sch_pub_flag='Y'
   order by flight_id,fjs_order;

prompt
prompt Creating view V_INTF_MOF_ROSTER_BAK
prompt ===================================
prompt
create or replace force view v_intf_mof_roster_bak as
select a.flight_id,/*????ID*/
        a.flight_date,/*????????*/
        a.p_code,/*??????????*/
        b.c_name,/*??????????*/
        b.work_no,/*??????????*/
        a.fjs_order,/*????????*/
        a.rank_no,/*????????????*/
        (select c.rank_name from t_bas_rank c where a.rank_no = c.rank_no) rank_name,/*????????????*/
        a.ts_flag,/*??????????*/
        (select d.bm_name from t_bas_dict d where d.parent_code = 'JZM' and d.bm_code = a.ts_flag) ts_name,/*????????????*/
        a.op_time last_modify_time /*????????????*/
   from t_sch_roster a, t_hr_crew b, t_flt_schedule c
  where a.p_code = b.p_code
    and a.flight_id = c.flight_id
    and c.flight_id_ref is null
 union
 select c.flight_id_ref,/*????ID*/
        a.flight_date,/*????????*/
        a.p_code,/*??????????*/
        b.c_name,/*??????????*/
        b.work_no,/*??????????*/
        a.fjs_order,/*????????*/
        'S004' as rank_no, /*????????????*/
        (select c.rank_name from t_bas_rank c where c.rank_no = 'S004') rank_name,/*????????????*/
        a.ts_flag,/*??????????*/
        (select d.bm_name from t_bas_dict d where d.parent_code = 'JZM' and d.bm_code = a.ts_flag) ts_name,/*????????????*/
        a.op_time last_modify_time /*????????????*/
   from t_sch_roster a, t_hr_crew b, t_flt_schedule c
  where a.p_code = b.p_code
    and a.flight_id = c.flight_id
    and c.flight_id_ref is not null
   order by flight_id,fjs_order;

prompt
prompt Creating view V_INTF_MORCS_DUTYINFO
prompt ===================================
prompt
create or replace force view v_intf_morcs_dutyinfo as
select DUTY_ID,
        FLIGHT_DATE,
        FLIGHT_IDS,
        FLY_HOURS,
        DUTY_TIME,
        DUTY_TIME_TD,
        DUTY_TIME_TA,
        REST_TIME,
        REST_TIME_TD,
        REST_TIME_TA,
        P_CODE,
        IDX,
        LAST_MODIFY_TIME,
        VALID_FLAG
   from t_morcs_dutyinfo;

prompt
prompt Creating view V_INTF_MRC_FILIALE_CREW
prompt =====================================
prompt
create or replace force view v_intf_mrc_filiale_crew as
select /*??????????????????????????????*/
        c1.filiale,  /*??????*/
        c1.ac_type,  /*????*/
        c4.ac_cnt,   /*????????*/
        c2.jz_cnt,  /*????????*/
        c2.jz_zh,   /*????????*/
        c3.fjs_cnt,  /*??????????*/
        c3.fjs_zh,    /*??????????*/
        c1.fx_cnt,  /*??????????*/
        case
          when c2.jz_zh < c3.fjs_zh then floor(c2.jz_zh)
          else floor((c2.jz_zh + c3.fjs_zh) / 2)
        end as kbjz,   /*????????*/
        c4.ac_type_index,   /*????????*/
        c4.daily_rate,      /*????????????*/
        round(c2.jz_zh - (c4.daily_rate * c4.ac_cnt * c4.ac_type_index * 365 / 950)) as jzyq,  /*????????*/
        round(c3.fjs_zh - (c4.daily_rate * c4.ac_cnt * c4.ac_type_index * 365 / 950)) as fjsyq,   /*??????????*/
        case
          when c2.jz_zh < c3.fjs_zh then round(floor(c2.jz_zh) * 1000 / 12 / c4.ac_type_index,3)
          else round(floor((c2.jz_zh + c3.fjs_zh) / 2) * 1000 / 12 / c4.ac_type_index,3)
        end as npj,   /*??????*/
        case
          when c2.jz_zh < c3.fjs_zh then round(floor(c2.jz_zh) * 95 / c4.ac_type_index,3)
          else round(floor((c2.jz_zh + c3.fjs_zh) / 2) * 95 / c4.ac_type_index,3)
        end as nfz,   /*??????*/
        case
          when c2.jz_zh < c3.fjs_zh then round(floor(c2.jz_zh) * 1000 / 12 / c4.ac_type_index / 30.5 / c4.ac_cnt,3)
          else round(floor((c2.jz_zh + c3.fjs_zh) / 2) * 1000 / 12 / c4.ac_type_index / 30.5 / c4.ac_cnt,3)
        end as rpj,   /*??????*/
        case
          when c2.jz_zh < c3.fjs_zh then round(floor(c2.jz_zh) * 95 / c4.ac_type_index / 30.5 / c4.ac_cnt,3)
          else round(floor((c2.jz_zh + c3.fjs_zh) / 2) * 95 / c4.ac_type_index / 30.5 / c4.ac_cnt,3)
        end as rfz,   /*??????*/
        round(c2.jz_zh * 83.33,3) as jzkf,   /*??????????*/
        round(c3.fjs_zh * 83.33,3) as fjskf,   /*????????????*/
        case
          when c2.jz_zh < c3.fjs_zh then round(c2.jz_zh * 83.33 / c4.ac_type_index,3)
          else round((c2.jz_zh + c3.fjs_zh) / 2 * 83.33 / c4.ac_type_index,3)
        end as jdkf    /*????????*/
   from (
         select a.filiale,b.ac_type,count(*) fx_cnt
           from t_hr_crew a,t_tech_info b,t_bas_tech c
          where a.p_code = b.p_code
            and a.valid_flag = 'Y'
            and b.valid_flag = 'Y'
            and b.tech_no_i = c.tech_no
            and c.tech_type = 'A'
          group by a.filiale,b.ac_type
        ) c1,
        (
         select a.filiale,b.ac_type,count(*) jz_cnt,sum(nvl(c.remarks,1)) jz_zh
           from t_hr_crew a,t_tech_info b,(select * from t_bas_dict where parent_code = 'AE') c
          where a.p_code = b.p_code
            and a.valid_flag = 'Y'
            and b.valid_flag = 'Y'
            and b.tech_no_i in ('B00C','B00B','B00A','C002')
            and a.post_rank = c.bm_code(+)
          group by a.filiale,b.ac_type
        ) c2,
        (
          select a.filiale,b.ac_type,count(*) fjs_cnt,sum(nvl(c.remarks,1)) fjs_zh
           from t_hr_crew a,t_tech_info b,(select * from t_bas_dict where parent_code = 'AE') c
          where a.p_code = b.p_code
            and a.valid_flag = 'Y'
            and b.valid_flag = 'Y'
            and b.tech_no_i in ('C001','F001','F002','S001')
            and a.post_rank = c.bm_code(+)
          group by a.filiale,b.ac_type
        ) c3,
        (
          select d1.filiale,d2.ac_type_crew as ac_type,count(*) ac_cnt,max(ac_type_index) ac_type_index,max(daily_rate) daily_rate
            from t_bas_aircraft d1,t_bas_fleet d2
           where d1.ac_type = d2.ac_type
             and d1.valid_flag = 'Y'
           group by d1.filiale,d2.ac_type_crew
        ) c4
 where c1.filiale = c2.filiale(+)
   and c1.ac_type = c2.ac_type(+)
   and c1.filiale = c3.filiale(+)
   and c1.ac_type = c3.ac_type(+)
   and c1.filiale = c4.filiale
   and c1.ac_type = c4.ac_type
 order by filiale,ac_type;

prompt
prompt Creating view V_INTF_SALARY_DUTY
prompt ================================
prompt
create or replace force view v_intf_salary_duty as
select
    /*薪酬系统数据接口_任务书数据*/
    a.ftb_no,/*任务书编号*/
    a.flight_id,/*航班ID*/
    b.flight_date,/*日期*/
    b.flight_no,/*航班号*/
    b.ac_type,/*机型*/
    b.departure_airport dep,/*起飞机场*/
    b.arrival_airport arr, /*落地机场*/
    b.flg_vr,/*返航/备降标志 V-备降,R-返航*/
    c.p_code,/*人员编码*/
    c.work_no,/*工号*/
    c.id_no,/*身份证号*/
    c.filiale,/*单位（分子公司）执行单位 */
    c.c_name,/*姓名*/
    d.rank_no,/*岗位*/
    d.ts_flag,/*兼职码*/
    b.atd,/*实际起飞时间*/
    b.ata,/*实际降落时间*/
    b.std,/*计划起飞时间*/
    b.sta,/*计划降落时间*/
    b.crew_owner,/*执飞单位 */
    a.SEAT_TYPE,/*左座/右座*/
    a.OPERATE_TYPE,/*操作标识*/
    a.FLY_SORTIE/*起落次数 */
from
    (
      select e.p_code,e.flight_id,e.ftb_no,'LEFT' SEAT_TYPE,e.left_op_manu OPERATE_TYPE,e.left_updowns FLY_SORTIE
        from t_svc_ftb_detail e
      where e.left_hours!=0
        and e.left_updowns!=0
      union
      select f.p_code,f.flight_id,f.ftb_no,'RIGHT' SEAT_TYPE,f.right_op_manu OPERATE_TYPE,f.right_updowns FLY_SORTIE
       from t_svc_ftb_detail f
      where f.right_hours!=0
        and f.right_updowns!=0
    ) a,t_flt_schedule b,t_hr_crew c,t_sch_roster d
where a.flight_id = d.flight_id(+)
 and a.p_code = d.p_code(+)
 and a.flight_id = b.flight_id
 and a.p_code = c.p_code;

prompt
prompt Creating view V_INTF_SALARY_QUALIFICATIONS
prompt ==========================================
prompt
create or replace force view v_intf_salary_qualifications as
select
       /*????????????????_????????????????*/
       a.p_code,/*????????*/
       a.c_name,/*????*/
       a.id_no, /*????????*/
       b.ac_type, /*????*/
       b.tech_no_i,/*????????*/
       c.icao_class,/*ICAO????*/
       c.icao_over_date /*ICAO??????*/
  from t_hr_crew a,t_tech_info b,
       (
       select p_code,
              max(icao_class) icao_class,
              max(icao_over_date) icao_over_date
         from t_hr_license
        group by p_code
       ) c
 where a.p_code = b.p_code
   and a.p_code = c.p_code;

prompt
prompt Creating view V_INTF_TELE_CREWSCH
prompt =================================
prompt
create or replace force view v_intf_tele_crewsch as
select /*??????????????????????????????,????????????????????????,????????????????*/
        to_number(a.flight_id) as flight_plan_id, /*????ID*/
        a.flight_date, /*????????*/
        replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
        case a.crew_owner
          when 'HFE' then 'EA01'
          when 'PEK' then 'EA15'
          when 'CTU' then 'EA16'
          when 'KMG' then 'EA13'
          when 'LHW' then 'EA02'
          when 'CK' then 'EA04'
          when 'KHN' then 'EA06'
          when 'NKG' then 'EA05'
          when 'NGB' then 'EA07'
          when 'TAO' then 'EA0801'
          when 'TNA' then 'EA0802'
          when 'MU' then 'EA10'
          when 'FM' then 'EA17'
          when 'SJW' then 'EA03'
          when 'TYN' then 'EA09'
          when 'WUH' then 'EA11'
          when 'SIA' then 'EA12'
          when 'KN' then 'EA14'
          else a.crew_owner
        end as org_code, /*????????????*/
        a.ac_type, /*????*/
        a.ac_reg as ac_no, /*??????*/
        a.std as schedule_depart_time, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta as schedule_arrival_time, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.departure_airport as depart_port_code3, /*????????????*/
        a.arrival_airport as arrival_port_code3, /*????????????*/
        a.p_code as staff_id, /*????????*/
        a.work_no as staff_code, /*????*/
        a.birth_date as birthday, /*????????*/
        a.c_name as staff_name, /*????*/
        a.e_first_name as eng_surname, /*??????*/
        a.e_name as eng_name, /*??????*/
        decode(nvl(a.sex,'#'),'M','??','F','??','#','??') sex, /*????*/
        a.native as nationality, /*????*/
        (select max(license_no)
           from t_hr_license h1,t_bas_fleet h2
          where h1.p_code = a.p_code
            and h2.ac_type = a.ac_type
            and h1.valid_flag = 'Y'
            and instr(h1.ac_types,h2.ac_type_crew) > 0
        ) as licence_no,  /*??????*/
        (select upper(cert_no)
           from t_hr_cert
          where p_code = a.p_code
            and cert_type = 'BORD'
            and valid_flag = 'Y'
        ) as board_card_no, /*????????*/
        case
          when a.rank_no = 'A001' and fjs_order = 1
            then '5000' /*????????*/
          when a.rank_no = 'A001' and fjs_order <> 1
            then '5001'
          when a.rank_no = 'B001' then '5002' /*????????,??????????*/
          when a.rank_no = 'C001' then '5003' /*??????????*/
          when a.rank_no = 'C002' then '5008' /*??????????*/
          when a.rank_no = 'D001' then '5004' /*??????*/
          when a.rank_no = 'E001' then '5005' /*??????*/
          when a.rank_no = 'F001' then '5007' /*??????*/
          when a.rank_no = 'S001' then '5006'
          when a.rank_no = 'S002' then '5006'
          when a.rank_no = 'S003' then '5006'
          when a.rank_no = 'S004' then '5006'
          when a.rank_no = 'M001' then '5006' /*????????*/
          else a.rank_no
        end as post, /*????????*/
        a.ts_flag as part_time_post, /*??????*/
        case a.rank_no
          when 'A001'
             then 'CA'
          when 'B001'
             then 'FO'
          when 'C001'
             then 'FO'
          when 'C002'
             then 'FO'
          when 'D001'
             then 'FE'
          when 'E001'
             then 'RO'
          when 'F001'
             then 'SE'
          when 'M001'
             then 'FE'
          else NULL
        end as rank, /*????ICAO????*/
        decode(a.cust_app_flag,'X','N',a.cust_app_flag) as lock_1, /*????????????????,??????????????????*/
        decode(a.tele_flag,'X','N',a.tele_flag) as lock_2, /*????????????*/
        d.passport_no as passport_code, /*??????*/
        e.issue_date as grant_date, /*????????????*/
        e.over_date as passport_expiry, /*????????????*/
        e.ch_born_in as native_place, /*??????????*/
        upper(e.en_born_in) as eng_native_place, /*??????????*/
        upper(e.en_addr) as eng_family_address, /*????????????*/
        d.visa_no visa_code /*??????*/
   from (
         --14.1.27????????????????????????
         select a.flight_id, /*????ID*/
                a.flight_date, /*????????*/
                replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a.crew_owner, /*????????????*/
                a.ac_type, /*????*/
                a.ac_reg, /*??????*/
                a.std, /*????????????*/
                a.etd,
                a.atd,
                a.sta, /*????????????*/
                a.eta,
                a.ata,
                a.departure_airport, /*????????????*/
                a.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                b.rank_no, /*????????*/
                b.fjs_order,
                b.ts_flag, /*??????*/
                a.cust_app_flag, /*????????????????,??????????????????*/
                a.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_sch_roster b,t_hr_crew c,t_bas_country d
          where a.flight_date = date'2014-1-27'
            and a.flight_no = 'MU599'
            and a.flight_id = b.flight_id
            and b.p_code = c.p_code
            and c.native = d.country_code(+)
         union
         select a.flight_id, /*????ID*/
                a.flight_date, /*????????*/
                replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a.crew_owner, /*????????????*/
                a.ac_type, /*????*/
                a.ac_reg, /*??????*/
                a.std, /*????????????*/
                a.etd,
                a.atd,
                a.sta, /*????????????*/
                a.eta,
                a.ata,
                a.departure_airport, /*????????????*/
                a.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                b.rank_no, /*????????*/
                b.fjs_order,
                b.ts_flag, /*??????*/
                a.cust_app_flag, /*????????????????,??????????????????*/
                a.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_sch_roster b,t_bas_airport b1,t_bas_airport b2,t_hr_crew c,t_bas_country d,t_sch_pairing c1,t_sch_dutyline d1,t_bas_filiale f
          where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
            and (a.d_or_i = 'R' or a.d_or_i = 'I')
            and a.flight_id = b.flight_id
            and nvl(a.flight_type,'J') <> 'V'
            and a.flight_id_ref is null
            and a.sch_pub_flag = 'Y'  --????????????????????????????????????????????2012.11.9
            and a.departure_airport = b1.airport_3code
            and a.arrival_airport = b2.airport_3code
            and b1.d_or_i = 'D'
            /*and (b2.d_or_i = 'I' or b2.d_or_i = 'R')20150130???????????????????????????????? ????????(??????)*/
            and c.p_code = b.p_code
            and c.native = d.country_code(+)
            and a.crew_link_line = c1.crew_link_line
            and c1.duty_line = d1.duty_line
            and f.filiale = d1.filiale
            and f.tsk_syn_date is not null
            and d1.flight_date >= f.tsk_syn_date
         union
         select a1.flight_id, /*????ID*/
                a1.flight_date, /*????????*/
                replace(replace(replace(replace(a1.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a1.crew_owner, /*????????????*/
                a1.ac_type, /*????*/
                a1.ac_reg, /*??????*/
                a1.std, /*????????????*/
                a1.etd,
                a1.atd,
                a1.sta, /*????????????*/
                a1.eta,
                a1.ata,
                a1.departure_airport, /*????????????*/
                a1.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                'S001' as rank_no, /*????????*/
                0 as fjs_order,
                b.ts_flag, /*??????*/
                a1.cust_app_flag, /*????????????????,??????????????????*/
                a1.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_flt_schedule a1,t_sch_roster b,t_bas_airport b1,t_bas_airport b2,t_hr_crew c,t_bas_country d,t_sch_pairing c1,t_sch_dutyline d1,t_bas_filiale f
          where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
            and (a.d_or_i = 'R' or a.d_or_i = 'I')
            and nvl(a.flight_type,'J') = 'V'
            and a.sch_pub_flag = 'Y'  --????????????????????????????????????????????2012.11.9
            and a.flight_id_ref = a1.flight_id
            and a.flight_id = b.flight_id
            and a1.departure_airport = b1.airport_3code
            and a1.arrival_airport = b2.airport_3code
            and b1.d_or_i = 'D'
            and (b2.d_or_i = 'I' or b2.d_or_i = 'R')
            and c.p_code = b.p_code
            and c.native = d.country_code(+)
            and a1.crew_link_line = c1.crew_link_line
            and c1.duty_line = d1.duty_line
            and f.filiale = d1.filiale
            and f.tsk_syn_date is not null
            and d1.flight_date >= f.tsk_syn_date
        ) a
        left join t_svc_custom_detail d
           on a.flight_id = d.flight_id
             and a.p_code = d.p_code
        left join t_hr_passport e
           on d.passport_no = e.pass_no
             and d.p_code = e.p_code
             and e.valid_flag='Y'
;

prompt
prompt Creating view V_INTF_TELE_CREWSCH1
prompt ==================================
prompt
create or replace force view v_intf_tele_crewsch1 as
select /*??????????????????????????????,????????????????????????,????????????????*/
        to_number(a.flight_id) as flight_plan_id, /*????ID*/
        a.flight_date, /*????????*/
        replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
        case a.crew_owner
          when 'HFE' then 'EA01'
          when 'PEK' then 'EA15'
          when 'CTU' then 'EA16'
          when 'KMG' then 'EA13'
          when 'LHW' then 'EA02'
          when 'CK' then 'EA04'
          when 'KHN' then 'EA06'
          when 'NKG' then 'EA05'
          when 'NGB' then 'EA07'
          when 'TAO' then 'EA0801'
          when 'TNA' then 'EA0802'
          when 'MU' then 'EA10'
          when 'FM' then 'EA17'
          when 'SJW' then 'EA03'
          when 'TYN' then 'EA09'
          when 'WUH' then 'EA11'
          when 'SIA' then 'EA12'
          when 'KN' then 'EA14'
          else a.crew_owner
        end as org_code, /*????????????*/
        a.ac_type, /*????*/
        a.ac_reg as ac_no, /*??????*/
        a.std as schedule_depart_time, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta as schedule_arrival_time, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.departure_airport as depart_port_code3, /*????????????*/
        a.arrival_airport as arrival_port_code3, /*????????????*/
        a.p_code as staff_id, /*????????*/
        a.work_no as staff_code, /*????*/
        a.birth_date as birthday, /*????????*/
        a.c_name as staff_name, /*????*/
        a.e_first_name as eng_surname, /*??????*/
        a.e_name as eng_name, /*??????*/
        decode(nvl(a.sex,'#'),'M','??','F','??','#','??') sex, /*????*/
        a.native as nationality, /*????*/
        (select max(license_no)
           from t_hr_license h1,t_bas_fleet h2
          where h1.p_code = a.p_code
            and h2.ac_type = a.ac_type
            and h1.valid_flag = 'Y'
            and instr(h1.ac_types,h2.ac_type_crew) > 0
        ) as licence_no,  /*??????*/
        (select upper(cert_no)
           from t_hr_cert
          where p_code = a.p_code
            and cert_type = 'BORD'
            and valid_flag = 'Y'
        ) as board_card_no, /*????????*/
        case
          when a.rank_no = 'A001' and fjs_order = 1
            then '5000' /*????????*/
          when a.rank_no = 'A001' and fjs_order <> 1
            then '5001'
          when a.rank_no = 'B001' then '5002' /*????????,??????????*/
          when a.rank_no = 'C001' then '5003' /*??????????*/
          when a.rank_no = 'C002' then '5008' /*??????????*/
          when a.rank_no = 'D001' then '5004' /*??????*/
          when a.rank_no = 'E001' then '5005' /*??????*/
          when a.rank_no = 'F001' then '5007' /*??????*/
          when a.rank_no = 'S001' then '5006'
          when a.rank_no = 'S002' then '5006'
          when a.rank_no = 'S003' then '5006'
          when a.rank_no = 'S004' then '5006'
          when a.rank_no = 'M001' then '5006' /*????????*/
          else a.rank_no
        end as post, /*????????*/
        a.ts_flag as part_time_post, /*??????*/
        case a.rank_no
          when 'A001'
             then 'CA'
          when 'B001'
             then 'FO'
          when 'C001'
             then 'FO'
          when 'C002'
             then 'FO'
          when 'D001'
             then 'FE'
          when 'E001'
             then 'RO'
          when 'F001'
             then 'SE'
          when 'M001'
             then 'FE'
          else NULL
        end as rank, /*????ICAO????*/
        decode(a.cust_app_flag,'X','N',a.cust_app_flag) as lock_1, /*????????????????,??????????????????*/
        decode(a.tele_flag,'X','N',a.tele_flag) as lock_2, /*????????????*/
        d.passport_no as passport_code, /*??????*/
        e.issue_date as grant_date, /*????????????*/
        e.over_date as passport_expiry, /*????????????*/
        e.ch_born_in as native_place, /*??????????*/
        upper(e.en_born_in) as eng_native_place, /*??????????*/
        upper(e.en_addr) as eng_family_address, /*????????????*/
        d.visa_no visa_code /*??????*/
   from (
         --14.1.27????????????????????????
         select a.flight_id, /*????ID*/
                a.flight_date, /*????????*/
                replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a.crew_owner, /*????????????*/
                a.ac_type, /*????*/
                a.ac_reg, /*??????*/
                a.std, /*????????????*/
                a.etd,
                a.atd,
                a.sta, /*????????????*/
                a.eta,
                a.ata,
                a.departure_airport, /*????????????*/
                a.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                b.rank_no, /*????????*/
                b.fjs_order,
                b.ts_flag, /*??????*/
                a.cust_app_flag, /*????????????????,??????????????????*/
                a.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_sch_roster b,t_hr_crew c,t_bas_country d
          where a.flight_date = date'2014-1-27'
            and a.flight_no = 'MU599'
            and a.flight_id = b.flight_id
            and b.p_code = c.p_code
            and c.native = d.country_code(+)
         union
         select a.flight_id, /*????ID*/
                a.flight_date, /*????????*/
                replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a.crew_owner, /*????????????*/
                a.ac_type, /*????*/
                a.ac_reg, /*??????*/
                a.std, /*????????????*/
                a.etd,
                a.atd,
                a.sta, /*????????????*/
                a.eta,
                a.ata,
                a.departure_airport, /*????????????*/
                a.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                b.rank_no, /*????????*/
                b.fjs_order,
                b.ts_flag, /*??????*/
                a.cust_app_flag, /*????????????????,??????????????????*/
                a.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_sch_roster b,t_bas_airport b1,t_bas_airport b2,t_hr_crew c,t_bas_country d,t_sch_pairing c1,t_sch_dutyline d1,t_bas_filiale f
          where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
            and (a.d_or_i = 'R' or a.d_or_i = 'I')
            and a.flight_id = b.flight_id
            and nvl(a.flight_type,'J') <> 'V'
            and a.flight_id_ref is null
            and a.sch_pub_flag = 'Y'  --????????????????????????????????????????????2012.11.9
            and a.departure_airport = b1.airport_3code
            and a.arrival_airport = b2.airport_3code
            and b1.d_or_i = 'D'
            --and (b2.d_or_i = 'I' or b2.d_or_i = 'R')
            and c.p_code = b.p_code
            and c.native = d.country_code(+)
            and a.crew_link_line = c1.crew_link_line
            and c1.duty_line = d1.duty_line
            and f.filiale = d1.filiale
            and f.tsk_syn_date is not null
            and d1.flight_date >= f.tsk_syn_date
         union
         select a1.flight_id, /*????ID*/
                a1.flight_date, /*????????*/
                replace(replace(replace(replace(a1.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a1.crew_owner, /*????????????*/
                a1.ac_type, /*????*/
                a1.ac_reg, /*??????*/
                a1.std, /*????????????*/
                a1.etd,
                a1.atd,
                a1.sta, /*????????????*/
                a1.eta,
                a1.ata,
                a1.departure_airport, /*????????????*/
                a1.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                'S001' as rank_no, /*????????*/
                0 as fjs_order,
                b.ts_flag, /*??????*/
                a1.cust_app_flag, /*????????????????,??????????????????*/
                a1.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_flt_schedule a1,t_sch_roster b,t_bas_airport b1,t_bas_airport b2,t_hr_crew c,t_bas_country d,t_sch_pairing c1,t_sch_dutyline d1,t_bas_filiale f
          where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
            and (a.d_or_i = 'R' or a.d_or_i = 'I')
            and nvl(a.flight_type,'J') = 'V'
            and a.sch_pub_flag = 'Y'  --????????????????????????????????????????????2012.11.9
            and a.flight_id_ref = a1.flight_id
            and a.flight_id = b.flight_id
            and a1.departure_airport = b1.airport_3code
            and a1.arrival_airport = b2.airport_3code
            and b1.d_or_i = 'D'
            and (b2.d_or_i = 'I' or b2.d_or_i = 'R')
            and c.p_code = b.p_code
            and c.native = d.country_code(+)
            and a1.crew_link_line = c1.crew_link_line
            and c1.duty_line = d1.duty_line
            and f.filiale = d1.filiale
            and f.tsk_syn_date is not null
            and d1.flight_date >= f.tsk_syn_date
        ) a
        left join t_svc_custom_detail d
           on a.flight_id = d.flight_id
             and a.p_code = d.p_code
        left join t_hr_passport e
           on d.passport_no = e.pass_no
             and d.p_code = e.p_code
;

prompt
prompt Creating view V_INTF_TELE_CREWSCH2
prompt ==================================
prompt
create or replace force view v_intf_tele_crewsch2 as
select /*??????????????????????????????,????????????????????????,????????????????*/
        to_number(a.flight_id) as flight_plan_id, /*????ID*/
        a.flight_date, /*????????*/
        replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
        case a.crew_owner
          when 'HFE' then 'EA01'
          when 'PEK' then 'EA15'
          when 'CTU' then 'EA16'
          when 'KMG' then 'EA13'
          when 'LHW' then 'EA02'
          when 'CK' then 'EA04'
          when 'KHN' then 'EA06'
          when 'NKG' then 'EA05'
          when 'NGB' then 'EA07'
          when 'TAO' then 'EA0801'
          when 'TNA' then 'EA0802'
          when 'MU' then 'EA10'
          when 'FM' then 'EA17'
          when 'SJW' then 'EA03'
          when 'TYN' then 'EA09'
          when 'WUH' then 'EA11'
          when 'SIA' then 'EA12'
          when 'KN' then 'EA14'
          else a.crew_owner
        end as org_code, /*????????????*/
        a.ac_type, /*????*/
        a.ac_reg as ac_no, /*??????*/
        a.std as schedule_depart_time, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta as schedule_arrival_time, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.departure_airport as depart_port_code3, /*????????????*/
        a.arrival_airport as arrival_port_code3, /*????????????*/
        a.p_code as staff_id, /*????????*/
        a.work_no as staff_code, /*????*/
        a.birth_date as birthday, /*????????*/
        a.c_name as staff_name, /*????*/
        a.e_first_name as eng_surname, /*??????*/
        a.e_name as eng_name, /*??????*/
        decode(nvl(a.sex,'#'),'M','??','F','??','#','??') sex, /*????*/
        a.native as nationality, /*????*/
        (select max(license_no)
           from t_hr_license h1,t_bas_fleet h2
          where h1.p_code = a.p_code
            and h2.ac_type = a.ac_type
            and h1.valid_flag = 'Y'
            and instr(h1.ac_types,h2.ac_type_crew) > 0
        ) as licence_no,  /*??????*/
        (select upper(cert_no)
           from t_hr_cert
          where p_code = a.p_code
            and cert_type = 'BORD'
            and valid_flag = 'Y'
        ) as board_card_no, /*????????*/
        case
          when a.rank_no = 'A001' and fjs_order = 1
            then '5000' /*????????*/
          when a.rank_no = 'A001' and fjs_order <> 1
            then '5001'
          when a.rank_no = 'B001' then '5002' /*????????,??????????*/
          when a.rank_no = 'C001' then '5003' /*??????????*/
          when a.rank_no = 'C002' then '5008' /*??????????*/
          when a.rank_no = 'D001' then '5004' /*??????*/
          when a.rank_no = 'E001' then '5005' /*??????*/
          when a.rank_no = 'F001' then '5007' /*??????*/
          when a.rank_no = 'S001' then '5006'
          when a.rank_no = 'S002' then '5006'
          when a.rank_no = 'S003' then '5006'
          when a.rank_no = 'S004' then '5006'
          when a.rank_no = 'M001' then '5006' /*????????*/
          else a.rank_no
        end as post, /*????????*/
        a.ts_flag as part_time_post, /*??????*/
        case a.rank_no
          when 'A001'
             then 'CA'
          when 'B001'
             then 'FO'
          when 'C001'
             then 'FO'
          when 'C002'
             then 'FO'
          when 'D001'
             then 'FE'
          when 'E001'
             then 'RO'
          when 'F001'
             then 'SE'
          when 'M001'
             then 'FE'
          else NULL
        end as rank, /*????ICAO????*/
        decode(a.cust_app_flag,'X','N',a.cust_app_flag) as lock_1, /*????????????????,??????????????????*/
        decode(a.tele_flag,'X','N',a.tele_flag) as lock_2, /*????????????*/
        d.passport_no as passport_code, /*??????*/
        e.issue_date as grant_date, /*????????????*/
        e.over_date as passport_expiry, /*????????????*/
        e.ch_born_in as native_place, /*??????????*/
        upper(e.en_born_in) as eng_native_place, /*??????????*/
        upper(e.en_addr) as eng_family_address, /*????????????*/
        d.visa_no visa_code /*??????*/
   from (
         --14.1.27????????????????????????
         select a.flight_id, /*????ID*/
                a.flight_date, /*????????*/
                replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a.crew_owner, /*????????????*/
                a.ac_type, /*????*/
                a.ac_reg, /*??????*/
                a.std, /*????????????*/
                a.etd,
                a.atd,
                a.sta, /*????????????*/
                a.eta,
                a.ata,
                a.departure_airport, /*????????????*/
                a.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                b.rank_no, /*????????*/
                b.fjs_order,
                b.ts_flag, /*??????*/
                a.cust_app_flag, /*????????????????,??????????????????*/
                a.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_sch_roster b,t_hr_crew c,t_bas_country d
          where a.flight_date = date'2014-1-27'
            and a.flight_no = 'MU599'
            and a.flight_id = b.flight_id
            and b.p_code = c.p_code
            and c.native = d.country_code(+)
         union
         select a.flight_id, /*????ID*/
                a.flight_date, /*????????*/
                replace(replace(replace(replace(a.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a.crew_owner, /*????????????*/
                a.ac_type, /*????*/
                a.ac_reg, /*??????*/
                a.std, /*????????????*/
                a.etd,
                a.atd,
                a.sta, /*????????????*/
                a.eta,
                a.ata,
                a.departure_airport, /*????????????*/
                a.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                b.rank_no, /*????????*/
                b.fjs_order,
                b.ts_flag, /*??????*/
                a.cust_app_flag, /*????????????????,??????????????????*/
                a.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_sch_roster b,t_bas_airport b1,t_bas_airport b2,t_hr_crew c,t_bas_country d,t_sch_pairing c1,t_sch_dutyline d1,t_bas_filiale f
          where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
            and (a.d_or_i = 'R' or a.d_or_i = 'I')
            and a.flight_id = b.flight_id
            and nvl(a.flight_type,'J') <> 'V'
            and a.flight_id_ref is null
            and a.sch_pub_flag = 'Y'  --????????????????????????????????????????????2012.11.9
            and a.departure_airport = b1.airport_3code
            and a.arrival_airport = b2.airport_3code
            and b1.d_or_i = 'D'
            and (b2.d_or_i = 'I' or b2.d_or_i = 'R')
            and c.p_code = b.p_code
            and c.native = d.country_code(+)
            and a.crew_link_line = c1.crew_link_line
            and c1.duty_line = d1.duty_line
            and f.filiale = d1.filiale
            and f.tsk_syn_date is not null
            and d1.flight_date >= f.tsk_syn_date
         union
         select a1.flight_id, /*????ID*/
                a1.flight_date, /*????????*/
                replace(replace(replace(replace(a1.flight_no,'MU'),'KN'),'FM'),'CK') as flight_no,/*??????*/
                a1.crew_owner, /*????????????*/
                a1.ac_type, /*????*/
                a1.ac_reg, /*??????*/
                a1.std, /*????????????*/
                a1.etd,
                a1.atd,
                a1.sta, /*????????????*/
                a1.eta,
                a1.ata,
                a1.departure_airport, /*????????????*/
                a1.arrival_airport, /*????????????*/
                b.p_code, /*????????*/
                c.work_no, /*????*/
                c.birth_date, /*????????*/
                c.c_name, /*????*/
                c.e_first_name, /*??????*/
                c.e_name, /*??????*/
                c.sex, /*????*/
                d.country_name native, /*????*/
                'S001' as rank_no, /*????????*/
                0 as fjs_order,
                b.ts_flag, /*??????*/
                a1.cust_app_flag, /*????????????????,??????????????????*/
                a1.tele_flag, /*????????????*/
                c.born_in, /*??????????*/
                c.e_born_in, /*??????????*/
                c.en_address /*????????????*/
           from t_flt_schedule a,t_flt_schedule a1,t_sch_roster b,t_bas_airport b1,t_bas_airport b2,t_hr_crew c,t_bas_country d,t_sch_pairing c1,t_sch_dutyline d1,t_bas_filiale f
          where (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
            and (a.d_or_i = 'R' or a.d_or_i = 'I')
            and nvl(a.flight_type,'J') = 'V'
            and a.sch_pub_flag = 'Y'  --????????????????????????????????????????????2012.11.9
            and a.flight_id_ref = a1.flight_id
            and a.flight_id = b.flight_id
            and a1.departure_airport = b1.airport_3code
            and a1.arrival_airport = b2.airport_3code
            and b1.d_or_i = 'D'
            and (b2.d_or_i = 'I' or b2.d_or_i = 'R')
            and c.p_code = b.p_code
            and c.native = d.country_code(+)
            and a1.crew_link_line = c1.crew_link_line
            and c1.duty_line = d1.duty_line
            and f.filiale = d1.filiale
            and f.tsk_syn_date is not null
            and d1.flight_date >= f.tsk_syn_date
        ) a
        left join t_svc_custom_detail d
           on a.flight_id = d.flight_id
             and a.p_code = d.p_code
        left join t_hr_passport e
           on d.passport_no = e.pass_no
             and d.p_code = e.p_code
             and e.valid_flag='Y'
;

prompt
prompt Creating view V_INTF_TELE_FILIALE
prompt =================================
prompt
create or replace force view v_intf_tele_filiale as
select filiale,  /*??????????*/
        filiale_name,  /*??????????*/
        home_base  /*??????*/
   from t_bas_filiale;

prompt
prompt Creating view V_INTF_TELE_PARTIME
prompt =================================
prompt
create or replace force view v_intf_tele_partime as
select bm_code,bm_name from t_bas_dict where parent_code = 'JZM';

prompt
prompt Creating view V_INTF_TELE_RANK
prompt ==============================
prompt
create or replace force view v_intf_tele_rank as
select rank_no, /*????????????*/
        rank_name, /*????????????*/
        rank_ename /*????????ICAO????*/
   from t_bas_rank t
  order by t.idx;

prompt
prompt Creating view V_INTF_XSF_CREW
prompt =============================
prompt
create or replace force view v_intf_xsf_crew as
select /*????????????????????????????*/
        a.p_code,
        case
          when c.is_ground = 'Y' and work_no is null then --??????????????????G + p_code
           'G' || a.p_code
          else
           a.work_no
        end as work_no, /*????*/
        a.c_name, /*????*/
        a.py_abbr, /*????*/
        a.e_first_name, /*??????*/
        a.e_name, /*??????*/
        a.birth_date, /*????*/
        a.sex, /*????*/
        a.id_no, /*????????*/
        (select ale.filiale_name from t_bas_filiale ale where ale.filiale=a.filiale) filiale, /*??????????????*/
        (select dept.dep_name from t_hr_dept dept where dept.dep_code=(case
          when a.dep_code = 'EA10011012' then --????????
            a.branch_code
          else
            replace(a.dep_code,'EAJN','EA08')
        end)) as dep_code, /*????????,????????*/
        c.is_ground, /*????????????*/
        a.home_filiale as temp_filiale, /*????????????,??????????????????????temp_unit_code*/
        a.post_duty, /*????????*/
        a.post_rank, /*????????*/
        a.work_date, /*????????????*/
        a.college, /*????????*/
        a.en_date, /*????????*/
        a.grad_date, /*????????*/
        (select bm_name
           from t_bas_dict
          where parent_code = 'AC'
            and bm_code = a.culture) as culture, /*????????*/
        a.speciality, /*????????*/
        '5201' work_type, /*????????????????????????????????????(5201)??????(5202)??????(5203)*/
        a.address, /*????????*/
        a.phone, /*????????*/
        a.office_tel, /*??????????*/
        a.mobil_no, /*????*/
        a.tall, /*????*/
        a.mate_yn, /*????????*/
        a.party_date, /*????????*/
        (select country_name from t_bas_country where country_code = a.native) as native, /*????*/
        (select upper(country_3code)
           from t_bas_country
          where country_code = a.native) as en_native, /*????????*/
        (select bm_name
           from t_bas_dict
          where parent_code = 'AA'
            and bm_code = a.party) as party, /*????????*/
        a.weight, /*????*/
        a.enter_date, /*??????????*/
        a.born_in, /*??????????*/
        a.e_born_in, /*??????????*/
        a.en_address, /*????????????*/
        replace(a.branch_code,'EAJN','EA08') as branch_code, /*????????*/
        a.valid_flag, /*????????*/
        f.cert_no board_no, /*????????*/
        a.icao_cls as icao_eng, /*ICAO????*/
        a.icao_chk_date as icao_check_date, /*ICAO????????????*/
        a.icao_valid_date as icao_over_date, /*ICAO????????????*/
        /*a.healthlevel??hlcode,\*????????????*\*/
        (select d.bm_name
           from t_bas_dict d
          where d.parent_code = 'HL'
            and d.bm_code = a.healthlevel) hlname, /*????????????*/
        a.fxw_id, /*??????ID*/
        info.ac_type,
        info.tech_no_i,
        tc.STARLEVEL,
        f_max(f_max(a.op_time, f.op_time),info.op_time) last_modify_time
   from t_hr_crew a,
        t_hr_dept c,
        (select e.p_code, e.cert_no, e.op_time
           from t_hr_cert e
          where e.cert_type = 'BORD'
            and e.valid_flag = 'Y') f,
        t_tech_info info,
        t_intf_fgw_crew tc
  where a.dep_code = c.dep_code(+)
    and a.p_code = f.p_code(+)
    and a.p_code=info.p_code(+)
    and a.fxw_id=tc.pilotid(+)
    and a.module_flag = 'F'
    and (a.filiale in
        (select filiale from t_bas_filiale where is_online = 'Y') or
        a.p_code in (select p_code
                        from t_hr_transfer
                       where state = 'TR03'
                         and plan_end_date is not null
                         and end_date is null))
;

prompt
prompt Creating view V_INTF_YDFX_DDO
prompt =============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_YDFX_DDO AS
SELECT (select duty_line from t_sch_pairing where crew_link_line= t.crew_link_line) ddo_id,
        h.p_code,
        h.work_no,
        h.c_name,
        h.fxw_id,
        h.filiale,
        (select d.filiale_name from t_bas_filiale d where d.filiale=h.filiale) filiale_name,
       -- (select d.fxw_code from t_bas_filiale d where d.filiale=h.filiale) org_code,
        l.td,
        l.ta,
        'hb' cate,
        '????-' || decode(t.FLIGHT_FLAG,'B','????','C','????','D','????','????????') cate_name,
        'FlightSchedule' ddo_code,
        a.chinese_name || '-' || b.chinese_name ddo_name,
        --t.flight_no,
         decode(t.FLIGHT_TYPE,'V','('||t.flight_no||')',  t.flight_no) flight_no,
        t.REMARKS,
        t.op_time last_modify_time,
        '' is_from_fxw
     FROM t_flt_schedule t,t_sch_pairing l, t_sch_roster s,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE t.crew_link_line=l.crew_link_line /*????????????????????????,??crew_link_line??duty_line??????????,???????? 2015-10-19*/
      and ( t.flight_id = s.flight_id )
      AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F'
      and t.sch_pub_flag='Y'
  union all
 select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        decode(b.ddo_type,'5','hy','kq') cate,
        decode(b.DDO_TYPE,'5','????-'||b.ddo_name,'????-'||b.ddo_name) cate_name,
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        '' flight_no,
        a.remarks, /*????*/
        a.op_time last_modify_time,/*????????????*/
        '' is_from_fxw
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code
    and (c.filiale = d.filiale)-- or c.home_filiale = d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'kq' cate,
        '????-??????' cate_name,
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        '' flight_no,
        a.remark,/*????*/
        a.op_time last_modify_time,/*????????????*/
        '' is_from_fxw
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale)-- or c.home_filiale=d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.filiale_name,
       --e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        'mnj' cate,
        decode(h.train_type,1,'??????-????',2,'??????-????') cate_name,
        decode(h.train_type,1,'MNJZW' || '_' || b.ac_type_crew,2,'LLZW' || '_' || b.ac_type_crew,'MNJZW' || '_' || b.ac_type_crew) ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || b.ac_type_crew || ']' ddo_name, /*????????*/
        '' flight_no,
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' ||
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        a.op_time last_modify_time,/*????????????*/
        decode(a.is_from_fxw,null,'N',a.is_from_fxw) is_from_fxw
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+)
    and (not (b.is_from_fxw='Y' and b.ac_type_crew='A320')) /*??????????????????A320??????*/
   /* and (a.is_from_fxw is null or a.is_from_fxw = 'N'); */
;

prompt
prompt Creating view V_INTF_YDFX_DDO_NEW
prompt =================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_YDFX_DDO_NEW AS
SELECT t.crew_link_line/*(select t.crew_link_line from t_sch_pairing where crew_link_line= t.crew_link_line)*/ ddo_id,
        h.p_code,
        h.work_no,
        h.c_name,
        h.fxw_id,
        h.filiale,
        (select d.filiale_name from t_bas_filiale d where d.filiale=h.filiale) filiale_name,
       -- (select d.fxw_code from t_bas_filiale d where d.filiale=h.filiale) org_code,
        l.td,
        l.ta,
        'hb' cate,
        '????-' || decode(t.FLIGHT_FLAG,'B','????','C','????','D','????','????????') cate_name,
        'FlightSchedule' ddo_code,
        a.chinese_name || '-' || b.chinese_name ddo_name,
        --t.flight_no,
         decode(t.FLIGHT_TYPE,'V','('||t.flight_no||')',  t.flight_no) flight_no,
        t.REMARKS,
        t.op_time last_modify_time,
        '' is_from_fxw
     FROM t_flt_schedule t,t_sch_pairing l, t_sch_roster s,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE t.crew_link_line=l.crew_link_line /*????????????????????????,??crew_link_line??duty_line??????????,???????? 2015-10-19*/
      and ( t.flight_id = s.flight_id )
      AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F'
      and t.sch_pub_flag='Y'
  union all
 select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        decode(b.ddo_type,'5','hy','kq') cate,
        decode(b.DDO_TYPE,'5','????-'||b.ddo_name,'????-'||b.ddo_name) cate_name,
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        '' flight_no,
        a.remarks, /*????*/
        a.op_time last_modify_time,/*????????????*/
        '' is_from_fxw
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code
    and (c.filiale = d.filiale)-- or c.home_filiale = d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'kq' cate,
        '????-??????' cate_name,
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        '' flight_no,
        a.remark,/*????*/
        a.op_time last_modify_time,/*????????????*/
        '' is_from_fxw
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale)-- or c.home_filiale=d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.filiale_name,
       --e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        'mnj' cate,
        decode(h.train_type,1,'??????-????',2,'??????-????') cate_name,
        decode(h.train_type,1,'MNJZW' || '_' || b.ac_type_crew,2,'LLZW' || '_' || b.ac_type_crew,'MNJZW' || '_' || b.ac_type_crew) ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || b.ac_type_crew || ']' ddo_name, /*????????*/
        '' flight_no,
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' ||
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        a.op_time last_modify_time,/*????????????*/
        decode(a.is_from_fxw,null,'N',a.is_from_fxw) is_from_fxw
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+)
    and (not (b.is_from_fxw='Y' and b.ac_type_crew='A320')) /*??????????????????A320??????*/
   /* and (a.is_from_fxw is null or a.is_from_fxw = 'N'); */
;

prompt
prompt Creating view V_INTF_YDFX_FLIGHTHEALTHCHECK
prompt ===========================================
prompt
create or replace force view v_intf_ydfx_flighthealthcheck as
select duty.duty_line taskid,
        tc.c_name,
        medi.temperature,
        medi.blood_pressure,
        medi.health,
        (select user1.user_name
           from t_sys_user user1
          where user1.user_code = medi.oper) oper,
        medi.op_time last_modify_time
   from t_sch_dutyline       duty,
        t_flt_schedule       ule,
        t_medi_health_detail medi,
        t_hr_crew            tc
  where duty.duty_line = ule.crew_link_line
    and ule.flight_id = medi.flight_id
    and medi.p_code = tc.p_code;

prompt
prompt Creating view V_INTF_YDFX_FLIGHTTASKDETAIL
prompt ==========================================
prompt
create or replace force view v_intf_ydfx_flighttaskdetail as
select ing.duty_line taskid,
        ing.flight_date,
        ule.flight_no,
        ule.departure_airport,
        ule.arrival_airport,
        line.td,
        line.ta,
        line.td - line.td_punch / (24 * 60) signin,
        line.td - line.td_before / (24 * 60) start_time,
        nvl(ule.mm_leg_id,ule.mm_leg_id_add) mm_leg_id,
        rost.flight_id,
        tc.work_no
   from t_sch_dutyline line,
        t_sch_pairing  ing,
        t_flt_schedule ule,
        t_sch_roster   rost,
        t_hr_crew      tc
  where line.duty_line = ing.duty_line
    and ing.crew_link_line = ule.crew_link_line
    and ule.flight_id = rost.flight_id
    and rost.p_code = tc.p_code
    and ule.sch_pub_flag = 'Y';

prompt
prompt Creating view V_INTF_YDFX_FLIGHTTASKSTATUS
prompt ==========================================
prompt
create or replace force view v_intf_ydfx_flighttaskstatus as
select ing.duty_line taskid,
        decode(ule.tele_flag, 'X', 'N', ule.tele_flag) tele_flag,
        decode(ule.ftb_prn_flag, 'X', 'N', ule.ftb_prn_flag) print_flag,
        decode(ule.ftb_rec_flag, 'X', 'N', ule.ftb_rec_flag) rec_flag,
        tc.work_no,
        ing.td,
        ing.ta
   from t_flt_schedule ule,
        t_sch_pairing  ing,
        t_sch_roster   rost,
        t_hr_crew      tc
  where ule.crew_link_line = ing.crew_link_line
    and ule.flight_id = rost.flight_id
    and rost.p_code = tc.p_code
    and ule.sch_pub_flag='Y';

prompt
prompt Creating view V_INTF_YDFX_FLTSCH_NOLIMITED
prompt ==========================================
prompt
create or replace force view v_intf_ydfx_fltsch_nolimited as
select /*????????????????????????*/
        a.flight_id flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.crew_link_line = p.crew_link_line(+)
    and nvl(a.flight_type,'#') <> 'V'
    and (
          exists(
                 select 1 from t_bas_filiale b
                  where b.flt_syn_date is not null
                    and (a.crew_owner = b.filiale or a.stew_owner = b.filiale or a.plce_owner = b.filiale)
                    and a.flight_date >= b.flt_syn_date
                )
          or exists(
                   select 1 from t_intf_del_log d
                    where d.tab_code = 'FLTSCH'
                      and d.rec_id = a.flight_id
                      --and d.del_time >= to_date('2013-01-14 09:00','yyyy-mm-dd hh24:mi') /*????????????????????????*/
                  )
        )
 union all
 --??????(??????)????
 select a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'V' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and not exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --??????(??????)????,????????(2013.10.1??????)
 select a.flight_id, /*????ID*/
        nvl(a.mm_leg_id,a.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        'J' as flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        a.std, /*????????????*/
        a.etd, /*????????????*/
        a.atd, /*????????????*/
        a.sta, /*????????????*/
        a.eta, /*????????????*/
        a.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(f_max(a.op_time,b.op_time),p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        b.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        'Y' as ftb_rec_flag, /*??????????????,????????????????????????????????'Y'*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a/*??????*/,
        t_flt_schedule b/*??????*/,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p
  where a.flight_type = 'V'
    and a.flight_id_ref = b.flight_id
    and not exists(
                 select 1 from t_bas_filiale t
                  where b.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and b.flight_date >= t.tsk_syn_date
                )
    and exists(
                 select 1 from t_bas_filiale t
                  where a.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                    and a.flight_date >= t.tsk_syn_date
                )
    and a.crew_link_line is not null
    and a.crew_link_line = p.crew_link_line(+)
    and exists(select 1 from t_sch_dutyline t
                where substr(flight_com,1,1) = '('
                  and substr(flight_com,-1,1) = ')'
                  and instr(flight_com,'/') = 0
                  and t.duty_line = a.crew_link_line)
 union all
 --huguang ????zuo?????? 20140329
 select /*????????????????????????*/
        a.flight_id, /*????ID*/
        nvl(c.mm_leg_id,c.mm_leg_id_add) mm_leg_id,/*MM ????????ID*/
        a.flight_date, /*????????*/
        a.carrier, /*??????*/
        a.flight_no, /*??????*/
        a.plan_departure, /*????????????*/
        a.departure_airport, /*????????*/
        a.plan_arrival, /*????????????*/
        a.arrival_airport, /*????????*/
        a.ac_type, /*????*/
        case
          when a.ac_reg is null then
            null
          when substr(a.ac_reg, 1, 1) <> 'B' then
            'B' || a.ac_reg
          else
            a.ac_reg
        end ac_reg, /*????*/
        a.flight_type, /*????????*/
        a.flight_flag, /*????????:A????,B????,C????,D????*/
        a.flg_cs, /*????????????????????'C'??'D'*/
        a.flg_vr, /*????????????,??????'R',??????'V'*/
        a.flg_patch, /*????????/??????????*/
        /*??????????????*/
        c.std, /*????????????*/
        c.etd, /*????????????*/
        c.atd, /*????????????*/
        c.sta, /*????????????*/
        c.eta, /*????????????*/
        c.ata, /*????????????*/
        a.ac_owner, /*????????????*/
        a.crew_owner, /*????????????*/
        a.stew_owner, /*??????????????*/
        a.plce_owner, /*????????????*/
        a.mant_owner, /*????????????*/
        a.flight_date + nvl(a.ac_layover,0) onward_fltdate, /*????????????*/
        a.onward_flight, /*????????*/
        p.duty_line as crew_link_line, /*??????????*/
        f_max(a.op_time,p.op_time) last_modify_time, /*????????*/
        a.op_time a_op_time,
        a.op_time b_op_time,
        p.op_time p_op_time,
        a.sch_pub_flag,
        a.ftb_rec_flag, /*??????????????*/
        a.ac_link_line  /*??????*/
   from t_flt_schedule a,
        (
         select aa.crew_link_line,
                bb.duty_line,
                aa.op_time
           from t_sch_pairing aa,t_sch_dutyline bb,t_bas_filiale cc
          where aa.duty_line = bb.duty_line(+)
            and bb.filiale = cc.filiale
            and cc.tsk_syn_date is not null
            and bb.flight_date >= cc.tsk_syn_date
         ) p,
         t_flt_schedule c
  where a.crew_link_line = p.crew_link_line(+)
      and a.flight_id_ref=c.flight_id
    and a.flight_type= 'V'
    and a.flight_flag='D'
    and a.flight_id_ref is not null
;

prompt
prompt Creating view V_INTF_YDFX_FLYHOURSBYWORKNO
prompt ==========================================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_YDFX_FLYHOURSBYWORKNO AS
SELECT FLIGHT_DATE,
        tc.P_CODE,
        MONTH_FLY_HOURS,
        MONTH3_FLY_HOURS,
        YEAR_FLY_HOURS,
        work_no
   FROM T_SCH_ROSTER_A rost, t_hr_crew tc
  where rost.p_code = tc.p_code;

prompt
prompt Creating view V_INTF_YDYX_ROSTER_LOG
prompt ====================================
prompt
create or replace force view v_intf_ydyx_roster_log as
select ule.crew_link_line taskid,
        ule.mm_leg_id leg_id,
        t6.flight_date,
        ule.flight_no,
        ule.departure_airport,
        ule.arrival_airport,
        t6.flight_info,
        t6.rank_name,
        tc.work_no old_workno,
        tc.c_name old_name,
        tc1.work_no new_workno,
        tc1.c_name new_name,
        t6.oper_type,
        t6.oper_type || t6.rank_name || '(' ||
        decode(t6.oper_remarks,
               '????',
               tc1.c_name,
               '????',
               tc.c_name,
               tc.c_name || '-->' || tc1.c_name) || ')' oper_remarks,
        t6.oper,
        t6.op_time last_modify_time
   from (select t1.flight_id,
                t1.flight_date,
                t1.flight_info,
                t5.rank_name rank_name,
                t1.old_p_code,
                t1.p_code,
                decode(t1.modify_type, 'I', '????', 'U', '????', 'D', '????') oper_type,
                decode(t1.modify_type, 'I', '????', 'U', '????', 'D', '????') oper_remarks,
                t4.user_name oper,
                t1.op_time op_time
           from t_sch_roster_log t1,
                (select t2.flight_id,t2.op_time
                   from (select d.*,
                                row_number() over(partition by flight_id order by d.flight_id, d.op_time desc) row_no
                           from t_svc_record d
                          where d.step_type = '3'
                            and d.step_yn = 'Y') t2
                  where t2.row_no = 2
                 union
                 select g.flight_id,t2.op_time
                   from (select rec1.flight_id, rec1.op_time
                           from t_svc_record rec1
                          where exists (select rec.flight_id
                                   from t_svc_record rec
                                  where rec.step_type = '3'
                                    and rec.step_yn = 'Y'
                                    and rec.flight_id = rec1.flight_id
                                  group by rec.flight_id
                                 having count(*) = 1) and rec1.step_type='3' and rec1.step_yn='Y') t2,
                        t_sch_roster_log g
                  where t2.flight_id = g.flight_id
                    and g.op_time > t2.op_time) t3,
                t_sys_user t4,
                t_bas_rank t5
          where t1.flight_id = t3.flight_id
            and t1.op_time>t3.op_time
            and t1.oper = t4.user_code
            and t1.rank_no = t5.rank_no) t6
   left join t_hr_crew tc
     on t6.old_p_code = tc.p_code
   left join t_hr_crew tc1
     on t6.p_code = tc1.p_code
   left join t_flt_schedule ule
     on t6.flight_id = ule.flight_id
;

prompt
prompt Creating view V_INTF_YDYX_SCHEDULEADUSTLOG
prompt ==========================================
prompt
create or replace force view v_intf_ydyx_scheduleadustlog as
select b.mm_leg_id leg_id,
       b.flight_date,
       b.flight_no,
       b.departure_airport || '(' ||
       (select ort.chinese_name
          from t_bas_airport ort
         where ort.airport_3code = b.departure_airport) || ')' departure_airport,
       b.arrival_airport || '(' ||
       (select ort.chinese_name
          from t_bas_airport ort
         where ort.airport_3code = b.arrival_airport) || ')' arrival_airport,
       (select replace(wmsys.wm_concat(dict.bm_name), ',', '/')
          from t_bas_dict dict
         where parent_code = 'BG'
           and instr(replace('''' || a.adjust_type || '''', '/', ''','''),
                     '''' || dict.bm_ename || '''') > 0) oper_type,
       a.log_desc,
       (select er.user_name from t_sys_user er where er.user_code = a.oper) oper,
       a.log_time last_modify_time
  from t_flt_adjust a, t_flt_schedule b
 where a.flight_id = b.flight_id
   and a.log_time > (select max(d.op_time) max_time
                       from t_svc_record d
                      where d.step_type = '3'
                        and d.step_yn = 'Y'
                        and d.flight_id = a.flight_id);

prompt
prompt Creating view V_INTF_YXW_DDO
prompt ============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_YXW_DDO AS
SELECT (select duty_line from t_sch_pairing where crew_link_line= t.crew_link_line) ddo_id,
        h.p_code,
        h.work_no,
        h.c_name,
        h.fxw_id,
        h.filiale,
        (select d.filiale_name from t_bas_filiale d where d.filiale=h.filiale) filiale_name,
       -- (select d.fxw_code from t_bas_filiale d where d.filiale=h.filiale) org_code,
        Nvl(t.atd,Nvl(t.etd,t.std)) td,
        Nvl(t.ata,Nvl(t.eta,t.sta)) ta,
        'hb' cate,
        '????-' || decode(t.FLIGHT_FLAG,'B','????','C','????','D','????','????????') cate_name,
        'FlightSchedule' ddo_code,
        a.chinese_name || '-' || b.chinese_name ddo_name,
        t.flight_no,
        t.REMARKS,
        t.op_time last_modify_time
     FROM t_flt_schedule t, t_sch_roster s,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE ( t.flight_id = s.flight_id )
      AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F'
  union all
 select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        decode(b.ddo_type,'5','hy','kq') cate,
        decode(b.DDO_TYPE,'5','????-'||b.ddo_name,'????-'||b.ddo_name) cate_name,
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        '' flight_no,
        a.remarks, /*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code
    and (c.filiale = d.filiale)-- or c.home_filiale = d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'kq' cate,
        '????-??????' cate_name,
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        '' flight_no,
        a.remark,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale)-- or c.home_filiale=d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.filiale_name,
       --e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        'mnj' cate,
        decode(h.train_type,1,'??????-????',2,'??????-????') cate_name,
        decode(h.train_type,1,'MNJZW' || '_' || d.ac_type_crew,2,'LLZW' || '_' || d.ac_type_crew,'MNJZW' || '_' || d.ac_type_crew) ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || d.ac_type_crew || ']' ddo_name, /*????????*/
        '' flight_no,
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' ||
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        a.op_time last_modify_time/*????????????*/
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+)
   /* and (a.is_from_fxw is null or a.is_from_fxw = 'N'); */
;

prompt
prompt Creating view V_INTF_YXW_DDO1
prompt =============================
prompt
CREATE OR REPLACE FORCE VIEW V_INTF_YXW_DDO1 AS
SELECT (select duty_line from t_sch_pairing where crew_link_line= t.crew_link_line) ddo_id,
        h.p_code,
        h.work_no,
        h.c_name,
        h.fxw_id,
        h.filiale,
        (select d.filiale_name from t_bas_filiale d where d.filiale=h.filiale) filiale_name,
        h.dep_code,
       -- (select d.fxw_code from t_bas_filiale d where d.filiale=h.filiale) org_code,
        Nvl(t.atd,Nvl(t.etd,t.std)) td,
        Nvl(t.ata,Nvl(t.eta,t.sta)) ta,
        'hb' cate,
        '????-' || decode(t.FLIGHT_FLAG,'B','????','C','????','D','????','????????') cate_name,
        'FlightSchedule' ddo_code,
        a.chinese_name || '-' || b.chinese_name ddo_name,
        t.flight_no,
        t.REMARKS,
        decode(t.flight_flag,'A',1.0,'C',1.1,'B',1.2,'D',1.3,1.6) priority,
        t.op_time last_modify_time
     FROM t_flt_schedule t,t_sch_roster s,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE (t.flight_id = s.flight_id)
      AND (t.FLIGHT_DATE = s.FLIGHT_DATE)
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F'
 union all
 select duty_line ddo_id,
        tc.p_code,
        tc.work_no,
        tc.c_name,
        tc.fxw_id,
        tc.filiale,
        (select d.filiale_name
           from t_bas_filiale d
          where d.filiale = tc.filiale) filiale_name,
        tc.dep_code,
        t1.td,
        t1.ta,
        'hb' cate,
        '????-????(' || (select ort1.chinese_name
                       from t_bas_airport ort1
                      where ort1.airport_3code = arri_airport) || ')' cate_name,
        'zhanwai' DDO_CODE,
        '????' ddo_name,
        '' flight_no,
        '' remarks,
        1.5 priority,
        ule.op_time last_modify_time
   from (select trunc(cur_ta + 1) td,
                trunc(next_td - 1) ta,
                arri_airport,
                crew_link_line,
                duty_line
           from (select ta cur_ta,
                        lead(td, 1) over(partition by duty_line order by td) next_td,
                        t.*
                   from (select ing.td,
                                ing.ta,
                                min(ing.flight_date) over(partition by ing.duty_line order by ing.duty_line) start_date,
                                max(ing.flight_date) over(partition by ing.duty_line order by ing.duty_line) end_date,
                                ing.depa_airport,
                                ing.arri_airport,
                                ing.duty_line,
                                ing.crew_link_line
                           from t_sch_pairing ing
                          where ing.flight_date >= sysdate-180) t /*????????????,?????????????????? 2015-10-28*/
                  where end_date - start_date >= 2
                 /* and duty_line=6567817*/
                  order by duty_line, td)
          where trunc(next_td) - trunc(cur_ta) >= 2) t1,
        t_flt_schedule ule,
        t_sch_roster ter,
        t_hr_crew tc
  where t1.crew_link_line = ule.crew_link_line
    and ule.flight_id = ter.flight_id
    and ter.p_code = tc.p_code
    and ter.module_flag = 'F'
    and tc.module_flag = 'F'
  union all
 select a.ddo_id, /*ID*/
        a.p_code, /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        c.dep_code,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.td, /*????????*/
        a.ta, /*????????*/
        decode(b.ddo_type,'5','hy','kq') cate,
        decode(b.DDO_TYPE,'5','????-'||b.ddo_name,'????-'||b.ddo_name) cate_name,
        a.ddo_code, /*????????*/
        b.ddo_name, /*????????*/
        '' flight_no,
        a.remarks, /*????*/
        decode(b.ddo_type,'5',3,4) priority,
        a.op_time last_modify_time/*????????????*/
   from t_tr_ddo a, t_bas_ddo b, t_hr_crew c,t_bas_filiale d
  where a.ddo_code = b.ddo_code
    and a.p_code = c.p_code
    and (c.filiale = d.filiale)-- or c.home_filiale = d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.td >= d.tsk_syn_date or a.ta >= d.tsk_syn_date )
 union all
 select a.block_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        d.filiale_name,
        c.dep_code,
        --(select d.fxw_code from t_bas_filiale d where d.filiale=c.filiale) org_code,/*??????????????????????*/
        a.start_date,/*????????*/
        a.end_date,/*????????*/
        'kq' cate,
        '????-??????' cate_name,
        'HOLISCHNXJ', /*????????*/
        '??????', /*????????*/
        '' flight_no,
        a.remark,/*????*/
        4 priority,
        a.op_time last_modify_time/*????????????*/
   from t_tr_holi_sch a, t_hr_crew c,t_bas_filiale d
  where a.p_code = c.p_code
    and (c.filiale=d.filiale)-- or c.home_filiale=d.filiale)
    --and d.tsk_syn_date is not null
    --and (a.start_date >= d.tsk_syn_date or a.end_date >= d.tsk_syn_date)
 union all
 select a.rec_id ddo_id, /*ID*/
        a.p_code,  /*????????*/
        c.work_no,
        c.c_name,
        c.fxw_id, /*??????ID*/
        c.filiale,/*????????*/
        e.filiale_name,
        c.dep_code,
       --e.fxw_code org_code,/*??????????????????????*/
        a.atd td,/*????????*/
        a.ata ta,/*????????*/
        'mnj' cate,
        decode(h.train_type,1,'??????-????',2,'??????-????') cate_name,
        decode(h.train_type,1,'MNJZW' || '_' || d.ac_type_crew,2,'LLZW' || '_' || d.ac_type_crew,'MNJZW' || '_' || d.ac_type_crew) ddo_code, /*????????*/
        decode(h.train_type,1,'??????',2,'????',3,'????',4,'????','??????') || '[' || d.ac_type_crew || ']' ddo_name, /*????????*/
        '' flight_no,
        d.simu_name || /*g.course_name || */' ' || h.subject_name || ' ' ||
        (select stragg(decode(t1.rank_no,'T301','??????:','T302','????:','T303','????:',t1.rank_no) || t2.c_name)
           from (select * from t_tr_schedule order by rank_no) t1,t_hr_crew t2
          where t1.train_id = a.train_id
            and t1.p_code = t2.p_code
        ) || decode(nvl(a.remarks,'#'),'#','',' RMK:' || a.remarks) as remarks,/*????*/
        decode(h.train_type,1,2.0,2,2.1) priority,
        a.op_time last_modify_time/*????????????*/
   from t_tr_schedule a, t_tr_plan b, t_hr_crew c, t_tr_simulator d,t_bas_filiale e,t_tr_pairing f,t_tr_course g,t_tr_subject h
  where a.p_code = c.p_code
    and a.train_id = b.train_id
    and b.simu_code = d.simu_code
    and e.filiale = c.filiale
    and b.train_line = f.train_line
    and f.course_code = g.course_code(+)
    and f.subject_code = h.subject_code(+)
   /* and (a.is_from_fxw is null or a.is_from_fxw = 'N'); */
;

prompt
prompt Creating view V_PARING_TERMINAL_FLTNO
prompt =====================================
prompt
create or replace force view v_paring_terminal_fltno as
select /*??????????????????????????*/
        a.crew_link_line,a.flight_no st_fltno,b.flight_no tm_fltno,a.departure_airport st_airport,b.arrival_airport tm_airport
   from (select crew_link_line,flight_no,departure_airport,
                RANK() OVER(PARTITION BY CREW_LINK_LINE ORDER BY std,atd,sta,ata ASC) RK
           from T_FLT_SCHEDULE
          where CREW_LINK_LINE is not null
            and (flg_cs is null or flg_cs <> 'C' and flg_cs <> 'D')
        ) a,
        (select crew_link_line,flight_no,arrival_airport,
                RANK() OVER(PARTITION BY CREW_LINK_LINE ORDER BY std,atd,sta,ata DESC) RK
           from T_FLT_SCHEDULE
          where CREW_LINK_LINE is not null
            and (flg_cs is null or flg_cs <> 'C' and flg_cs <> 'D')
        ) b
   where a.RK = 1
     and b.RK = 1
     and a.crew_link_line = b.crew_link_line;

prompt
prompt Creating view V_PERSON_ATTENDANCE
prompt =================================
prompt
create or replace force view v_person_attendance as
select f2.train_date FROM_DATE, f2.train_date TO_DATE,-1 crew_id,
        null ac_type ,null  ac_reg,
        'SI-' FLIGHT_COM,
        f5.subject_name FLIGHT_VOYAGE,
        f1.train_id flight_id ,f1.train_id crew_link_line,
        f2.train_hours FLY_HOURS ,0 car_time,
        --f1.td time_to_port,
        f2.atd time_to_port,
        --f1.td,f1.ta,
        f2.atd TD,f2.ata TA,
        f2.atd ATD,f2.ata ATA,
        --f1.ta time_from_port,
        f2.ata time_from_port,
        p.home_base departure_airport ,p.home_base arrival_airport ,p.filiale,
        'SI-'||f4.course_name||'-'||f5.subject_name REASON,
        f2.p_code,null modify_reason,null ddo_code ,f2.rank_no,
        p.module_flag,
        'E' SCHEDULE_TYPE,
        'Y' VALID_FLAG,
        DECODE(f2.is_from_fxw,'Y','????????????????','C','??????????????????', f2.REMARKS) as REMARKS,
        u.user_name OPERNAME,
        f2.op_time opertime,
        p.work_no
   from t_tr_plan f1, t_tr_schedule f2,
        T_TR_PAIRING f3,
        t_tr_course f4,t_tr_subject f5,
        t_hr_crew p,t_sys_user u
  Where f1.train_id = f2.train_id
    --and f1.train_date = f2.train_date
    and f1.train_line = f3.train_line
    and f3.course_code = f4.course_code
    and f3.subject_code = f5.subject_code
    AND F2.P_CODE=P.P_CODE AND p.module_flag='F'
    And f2.oper =u.user_code(+)
    And ta >sysdate-5
 UNION All
 --H ???? ???? T
 select Trunc(tt.td),
        Trunc(tt.ta),-1 crew_id,
         null,null,
        'TF-',
        t1.ddo_name,
        tt.ddo_id,
        tt.ddo_id,
        0,0,
        tt.td time_to_port,
        tt.td,
        tt.ta,
        tt.td,
        tt.ta,
        tt.ta time_from_port,
        p.home_base,
        p.home_base,
        p.filiale,
        'TF-'||t1.ddo_name||' '||tt.remarks,
        tt.p_code,
        t1.ddo_type,
        t1.ddo_code,
        null,
        p.module_flag,
        Decode(t1.ddo_type,5,'H','T'),
        tt.VALID_FLAG VALID_FLAG,
        tt.REMARKS,
        u.user_name OPERNAME,
        tt.op_time opertime,
        p.work_no
 from t_tr_ddo tt,t_bas_ddo t1,t_hr_crew p,t_sys_user u
 Where tt.ddo_code = t1.ddo_code
   And tt.p_code = p.p_code and p.module_flag='F'
   And tt.oper =u.user_code(+)
   And ta >sysdate-5
 UNION All
 select Trunc(tt.start_date),
        Trunc(tt.end_date),-1 crew_id,
        null,null,
        'TF-',
        '????',
        tt.BLOCK_ID,
        tt.BLOCK_ID,
        0,0,
        tt.start_date time_to_port,
        tt.start_date,
        tt.end_date,
        tt.start_date,
        tt.end_date,
        tt.end_date time_from_port,
        p.home_base,
        p.home_base,
        p.filiale,
        'TF-????'||' '||tt.remark,
        tt.p_code,
        null,
         '-1',--null
        null,
        p.module_flag,
        'T',
        'Y' VALID_FLAG,
        tt.remark,
        u.user_name OPERNAME,
        tt.OP_TIME opertime,
        p.work_no
 from T_TR_HOLI_SCH tt,t_hr_crew p,t_sys_user u
 Where  tt.p_code = p.p_code and p.module_flag='F'
        And tt.oper =u.user_code(+)
        And end_date >sysdate-5
;

prompt
prompt Creating view V_PERSON_DUTY_SCHEDULE
prompt ====================================
prompt
CREATE OR REPLACE FORCE VIEW V_PERSON_DUTY_SCHEDULE AS
SELECT s.flight_date FROM_DATE,
       s.flight_date TO_DATE,L.crew_id,
       t.ac_type,
       t.ac_reg,
       t.flight_no  FLIGHT_COM,
       Nvl(a.chinese_abbr,'?')||Nvl(b.chinese_abbr,'?') FLIGHT_VOYAGE,
       t.flight_id flight_id,
       t.crew_link_line crew_link_line,
       s.fly_hours FLY_HOURS,
       Nvl(a.car_time,115) car_time,
       t.std - (nvl(a.in_time,75)/(24*60)) time_to_port,
       t.STD TD,
       t.STA TA,
       Nvl(t.atd,Nvl(t.etd,t.std)) Atd,
       Nvl(t.ata,Nvl(t.eta,t.sta)) Ata,
       t.sta + (nvl(b.out_time,30)/(24*60)) time_from_port,
       t.departure_airport,
       t.arrival_airport,
       h.filiale,--  t.crew_owner filiale,
       trim(t.flight_no)||chr(13)||chr(10)||Nvl(a.chinese_abbr,'?')||Nvl(b.chinese_abbr,'?') REASON,
       s.p_code P_CODE,
       s.modify_reason,
       null as ddo_code,
       s.rank_no rank_no,
       s.module_flag MODULE_FLAG,
       Nvl(t.flight_flag,'A')  SCHEDULE_TYPE,
       --Decode(s.rank_no,'S001','D','S002','D','S004','D', Nvl(t.flight_flag,'A')) SCHEDULE_TYPE,
       'Y' VALID_FLAG,
       t.REMARKS,
       '' OPERNAME,
       t.op_time opertime,
       h.work_no,
       l.crew_pairing_line
    FROM t_flt_schedule t, t_sch_roster s,t_sch_pairing L,
         t_bas_airport a,t_bas_airport b,t_hr_crew h
   WHERE ( t.flight_id = s.flight_id ) And t.crew_link_line =L.crew_link_line
     AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
     And a.airport_3code = t.departure_airport
     And b.airport_3code = t.arrival_airport
     and s.p_code=h.p_code
     and s.module_flag='F' /*And t.flight_flag <>'D' */
Union All
--************
--A航班 B备份 C本场 D摆渡 F加机组 J借调
--模拟机及培训  E
select f2.train_date, f2.train_date,-1 crew_id,
       null,null,
       'SI-',
       f5.subject_name,
       f1.train_id,f1.train_id,
       f2.train_hours,0,
       --f1.td time_to_port,
       f2.atd time_to_port,
       --f1.td,f1.ta,
       f2.atd,f2.ata,
       f2.atd,f2.ata,
       --f1.ta time_from_port,
       f2.ata time_from_port,
       p.home_base,p.home_base,p.filiale,
       'SI-'||f4.course_name||'-'||f5.subject_name,
       f2.p_code,null,null,f2.rank_no,
       p.module_flag,
       'E' SCHEDULE_TYPE,
       'Y',
       DECODE(f2.is_from_fxw,'Y','从飞行网导入数据','C','从飞培中心导入数据', f2.REMARKS) as REMARKS,
       u.user_name OPERNAME,
       f2.op_time opertime,
       p.work_no,
       0
  from t_tr_plan f1, t_tr_schedule f2,
       T_TR_PAIRING f3,
       t_tr_course f4,t_tr_subject f5,
       t_hr_crew p,t_sys_user u
 Where f1.train_id = f2.train_id
   --and f1.train_date = f2.train_date
   and f1.train_line = f3.train_line
   and f3.course_code = f4.course_code
   and f3.subject_code = f5.subject_code
   AND F2.P_CODE=P.P_CODE AND p.module_flag='F'
   And f2.oper =u.user_code(+)
--H 航医 停飞 T
--J 借调
--N个人要求
;

prompt
prompt Creating view V_PERSON_SCHEDULE
prompt ===============================
prompt
CREATE OR REPLACE FORCE VIEW V_PERSON_SCHEDULE AS
SELECT s.flight_date FROM_DATE,
        s.flight_date TO_DATE,L.crew_id,
        t.ac_type,
        t.ac_reg,
        t.flight_no  FLIGHT_COM,
        Nvl(a.chinese_abbr,'?')||Nvl(b.chinese_abbr,'?') FLIGHT_VOYAGE,
        t.flight_id flight_id,
        t.crew_link_line crew_link_line,
        s.fly_hours FLY_HOURS,
        Nvl(a.car_time,115) car_time,
        t.std - (nvl(a.in_time,75)/(24*60)) time_to_port,
        t.STD TD,
        t.STA TA,
        Nvl(t.atd,Nvl(t.etd,t.std)) Atd,
        Nvl(t.ata,Nvl(t.eta,t.sta)) Ata,
        t.sta + (nvl(b.out_time,30)/(24*60)) time_from_port,
        t.departure_airport,
        t.arrival_airport,
        h.filiale,--  t.crew_owner filiale,
        trim(t.flight_no)||chr(13)||chr(10)||Nvl(a.chinese_abbr,'?')||Nvl(b.chinese_abbr,'?') REASON,
        s.p_code P_CODE,
        s.modify_reason,
        null as ddo_code,
        s.rank_no rank_no,
        s.module_flag MODULE_FLAG,
        Nvl(t.flight_flag,'A')  SCHEDULE_TYPE,
        --Decode(s.rank_no,'S001','D','S002','D','S004','D', Nvl(t.flight_flag,'A')) SCHEDULE_TYPE,
        'Y' VALID_FLAG,
        t.REMARKS,
        '' OPERNAME,
        t.op_time opertime,
        h.work_no,
        l.crew_pairing_line
     FROM t_flt_schedule t, t_sch_roster s,t_sch_pairing L,
          t_bas_airport a,t_bas_airport b,t_hr_crew h
    WHERE ( t.flight_id = s.flight_id ) And t.crew_link_line =L.crew_link_line
      AND ( t.FLIGHT_DATE = s.FLIGHT_DATE )
      And a.airport_3code = t.departure_airport
      And b.airport_3code = t.arrival_airport
      and s.p_code=h.p_code
      and s.module_flag='F' /*And t.flight_flag <>'D' */
 Union All
 --************
 --A???? B???? C???? D???? F?????? J????
 --????????????  E
 select f2.train_date, f2.train_date,-1 crew_id,
        null,null,
        'SI-',
        f5.subject_name,
        f1.train_id,f1.train_id,
        f2.train_hours,0,
        --f1.td time_to_port,
        f2.atd time_to_port,
        --f1.td,f1.ta,
        f2.atd,f2.ata,
        f2.atd,f2.ata,
        --f1.ta time_from_port,
        f2.ata time_from_port,
        p.home_base,p.home_base,p.filiale,
        'SI-'||f4.course_name||'-'||f5.subject_name,
        f2.p_code,null,null,f2.rank_no,
        p.module_flag,
        'E' SCHEDULE_TYPE,
        'Y',
        DECODE(f2.is_from_fxw,'Y','????????????????','C','??????????????????', f2.REMARKS) as REMARKS,
        u.user_name OPERNAME,
        f2.op_time opertime,
        p.work_no,
        0
   from t_tr_plan f1, t_tr_schedule f2,
        T_TR_PAIRING f3,
        t_tr_course f4,t_tr_subject f5,
        t_hr_crew p,t_sys_user u
  Where f1.train_id = f2.train_id
    --and f1.train_date = f2.train_date
    and f1.train_line = f3.train_line
    and f3.course_code = f4.course_code
    and f3.subject_code = f5.subject_code
    AND F2.P_CODE=P.P_CODE AND p.module_flag='F'
    And f2.oper =u.user_code(+)
 Union All
 --H ???? ???? T
 select Trunc(tt.td),
        Trunc(tt.ta),-1 crew_id,
         null,null,
        'TF-',
        t1.ddo_name,
        tt.ddo_id,
        tt.ddo_id,
        0,0,
        tt.td time_to_port,
        tt.td,
        tt.ta,
        tt.td,
        tt.ta,
        tt.ta time_from_port,
        p.home_base,
        p.home_base,
        p.filiale,
        'TF-'||t1.ddo_name||' '||tt.remarks,
        tt.p_code,
        t1.ddo_type,
        t1.ddo_code,
        null,
        p.module_flag,
        Decode(t1.ddo_type,5,'H','T'),
        tt.VALID_FLAG VALID_FLAG,
        tt.REMARKS,
        u.user_name OPERNAME,
        tt.op_time opertime,
        p.work_no,
        0
 from t_tr_ddo tt,t_bas_ddo t1,t_hr_crew p,t_sys_user u
 Where tt.ddo_code = t1.ddo_code
   And tt.p_code = p.p_code and p.module_flag='F'
   And tt.oper =u.user_code(+)
 UNION All
 select Trunc(tt.start_date),
        Trunc(tt.end_date),-1 crew_id,
        null,null,
        'TF-',
        '????',
        tt.BLOCK_ID,
        tt.BLOCK_ID,
        0,0,
        tt.start_date time_to_port,
        tt.start_date,
        tt.end_date,
        tt.start_date,
        tt.end_date,
        tt.end_date time_from_port,
        p.home_base,
        p.home_base,
        p.filiale,
        'TF-????'||' '||tt.remark,
        tt.p_code,
        null,
         '-1',--null
        null,
        p.module_flag,
        'T',
        'Y' VALID_FLAG,
        tt.remark,
        u.user_name OPERNAME,
        tt.OP_TIME opertime,
        p.work_no,
        0
 from T_TR_HOLI_SCH tt,t_hr_crew p,t_sys_user u
 Where  tt.p_code = p.p_code and p.module_flag='F'
        And tt.oper =u.user_code(+)
 UNION All
 --J ????
 select t.start_date,
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),-1 crew_id,
        '',
        '',
        'J-',
        '????????????',
        TRANS_ID,
        TRANS_ID,
        0,
        0,
        t.start_date,
        t.start_date,
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),
        t.start_date,
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),
        NVL(t.end_date+1-1/24/60/60, t.plan_end_date+1-1/24/60/60),
        p.home_base,
        p.home_base,
        p.Filiale,
        'J-????',
        t.p_code,
        '',
        '',
        '',
        p.module_flag,
        'J' SCHEDULE_TYPE,
        'Y',
        '????????????',
        u.user_name,
        t.op_time,
        p.work_no,
        0
   from t_hr_transfer t, t_hr_crew p,t_sys_user u
  where t.p_code = p.p_code
    and p.module_flag = 'F'
    and t.state = 'TR01'
    and t.VALID_FLAG='Y'
    And t.oper =u.user_code(+)

 UNION All
 --N????????
 select Trunc(N1.FROM_DATE),
        Trunc(n1.to_date),-1 crew_id,
        null,null,
        'RE-',
        nvl(n1.claim_content,'No Reason'),
        n1.claim_id,
        n1.claim_id,
        0,0,
        n1.from_date,
        n1.from_date,
        n1.to_date,
        n1.from_date,
        n1.to_date,
        n1.to_date,
        p.home_base,
        p.home_base,
        p.filiale,
        'RE-'||nvl(n1.claim_content,'No Reason'),
        n1.p_code,
        null,null,null,
         p.module_flag,
        'N',
        n1.valid_flag,
        n1.REMARKS,
        '' OPERNAME,
        n1.op_time opertime,
        p.work_no,
        0
 from t_sch_claim n1,t_hr_crew p
 Where n1.p_code= p.p_code and p.module_flag='F'
;

prompt
prompt Creating view V_PRF_APPLYCOUNT
prompt ==============================
prompt
create or replace force view v_prf_applycount as
select h.p_code,h.YearM,
  h.FASCount1 -decode(c.FASCount,null,0,c.FASCount)  FASCount,/*??????????*/
  h.FACount1-decode(c.FACount,null,0,c.FACount)  FACount,/*??????????*/
  h.LockCount1- decode(c.LockCount,null,0,c.LockCount) LockCount,/*????????????*/
  h.ACount1-decode(c.ACount,null,0,c.ACount) ACount /*????????????????????*/
  from (
      select  c.p_code,YearM,sum(FASCount) FASCount,sum(FACount) FACount,sum(LockCount) LockCount,sum(ACount) ACount
      from (
      select  p_code,to_char(apply_time,'yyyy-MM') YearM, count(1) FASCount,0 FACount,0  LockCount,0  ACount from( select rank() over(partition by a.guidpk order by a.app_id) rk, a.* from t_prf_flight_apply a where a.apply_flag='Y') where rk=1 group by p_code, to_char(apply_time,'yyyy-MM')
      UNION ALL
      select p_code,to_char(apply_time,'yyyy-MM') YearM,0 FASCount,count(1) FACount ,0  LockCount,0  ACount from( select rank() over(partition by a.guidpk order by a.app_id) rk, a.* from t_prf_flight_apply a ) where rk=1 group by p_code, to_char(apply_time,'yyyy-MM')
      UNION ALL
      select  p_code,to_char(lock_date,'yyyy-MM')  YearM,0 FASCount,0 FACount,count(1) LockCount,0  ACount from ( select rank() over(partition by a.guidpk order by a.lock_id) rk, a.* from t_prf_sch_lock a WHERE A.app_status=1 ) where rk=1 group by p_code, to_char(lock_date,'yyyy-MM')
        UNION ALL
      select  p_code,to_char(apply_time ,'yyyy-MM')YearM,0 FASCount,0 FACount,0  LockCount, count(1) ACount    from t_prf_appraisal a where a.type=1 AND A.apply_result ='Y' group by a.p_code, to_char(apply_time ,'yyyy-MM')
      ) c
      group by  c.p_code,YearM
  ) c,(
    select h.p_code,h.c_name,h.dep_code,h.branch_code,h.filiale,h.work_no,YearM,r.ver_id,
           (select  the_value from t_prf_param_detail where ver_id =r.ver_id and parm_id='38') FASCount1,
           (select  the_value from t_prf_param_detail where ver_id =r.ver_id and parm_id='115') FACount1,
           (select  the_value from t_prf_param_detail where ver_id =r.ver_id and parm_id='114') LockCount1,
           (select the_value from t_prf_param_detail where ver_id =r.ver_id and parm_id='39') ACount1
   from t_hr_crew h,t_rule_version r,
   (
     select '2017-01' YearM from dual union all
     select '2017-02' YearM from dual union all
     select '2017-03' YearM from dual union all
     select '2017-04' YearM from dual union all
     select '2017-05' YearM from dual union all
     select '2017-06' YearM from dual union all
     select '2017-07' YearM from dual union all
     select '2017-08' YearM from dual union all
     select '2017-09' YearM from dual union all
     select '2017-10' YearM from dual union all
     select '2017-11' YearM from dual union all
     select '2017-12' YearM from dual union all
     select '2018-01' YearM from dual union all
     select '2018-02' YearM from dual union all
     select '2018-03' YearM from dual union all
     select '2018-04' YearM from dual union all
     select '2018-05' YearM from dual union all
     select '2018-06' YearM from dual union all
     select '2018-07' YearM from dual union all
     select '2018-08' YearM from dual union all
     select '2018-09' YearM from dual union all
     select '2018-10' YearM from dual union all
     select '2018-11' YearM from dual union all
     select '2018-12' YearM from dual
   )
  where h.filiale=r.filiale
  ) h
  where  h.p_code=c.P_code(+) and h.YearM=c.YearM(+);

prompt
prompt Creating view V_PRF_USABLEINTEGRAL
prompt ==================================
prompt
create or replace force view v_prf_usableintegral as
select a."P_CODE",a."WORK_NO",a."SCORES",a."VER_ID",a."STARTDATE",last_day(a."ENDDATE") ENDDATE,
 (select the_value from t_prf_param_detail where parm_id=38 and ver_id=a.ver_id)- nvl( b.ct,0) flight_ct,/*??????????????*/
 (select the_value from t_prf_param_detail where parm_id=39 and ver_id=a.ver_id)- nvl( c.ct,0) raisal_ct/*??????????????*/  from (
 select p_code,work_no,sum(scores) scores,ver_id,startdate,enddate from (
 select a.p_code,c.work_no,a.scores,b.ver_id,b.startdate,b.enddate from t_hr_crew c
 left join t_prf_initintegral a on c.p_code=a.p_code
 inner join t_prf_integralcycle b on a.integralcycle_id=b.id
 /*inner join t_hr_crew c on a.p_code=c.p_code*/
 inner join (select ver_id,FILIALE from T_RULE_VERSION where  MODULE_FLAG = 'F' and valid_flag='Y') d on c.FILIALE=d.FILIALE and d.ver_id=b.ver_id
 /*where b.ver_id=59 and startdate<=date '2014-09-01' and enddate >= date '2014-09-01'*/
 union all
 select a.p_code,c.work_no, a.scores,b.ver_id,b.startdate,b.enddate  from t_hr_crew c
 left join t_prf_scores_sum a on c.p_code=a.p_code
 inner join t_prf_integralcycle b on b.startdate<=a.flight_date and b.enddate>=a.flight_date
 /*inner join t_hr_crew c on a.p_code=c.p_code*/
 inner join (select ver_id,FILIALE from T_RULE_VERSION where  MODULE_FLAG = 'F' and valid_flag='Y') d on c.FILIALE=d.FILIALE and d.ver_id=b.ver_id
 /*where b.ver_id=59 and startdate<=date '2014-09-01' and enddate >= date '2014-09-01'*/
 ) a
 group by p_code,work_no,ver_id,startdate,enddate) a
 left join (select p_code,count(*) ct from t_prf_flight_apply group by p_code) b on a.p_code=b.p_code
 left join (select p_code,count(*) ct from t_prf_appraisal group by p_code) c on a.p_code=c.p_code;

prompt
prompt Creating view V_PUB_CREW_CUST
prompt =============================
prompt
create or replace force view v_pub_crew_cust as
select a.flight_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,e.work_no,
        d.p_code,e.c_name, e.e_first_name,e.e_name,e.birth_date,e.sex,
        d.fjs_order,d.rank_no,
        case
          when d.rank_no = 'A001' and d.fjs_order = 1 then '????????'
          when d.rank_no = 'A001' and d.fjs_order <> 1 then '????????'
          else g.rank_name
        end as rank_name
   from t_flt_schedule a,t_sch_pairing b,t_sch_roster d,t_hr_crew e,t_bas_rank g
  where a.crew_link_line = b.crew_link_line
    and a.flight_id = d.flight_id
    and d.p_code = e.p_code
    and d.rank_no = g.rank_no(+)
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and a.flight_flag <> 'D'
    and a.sch_pub_flag = 'Y' and b.module_flag='F'
    and a.flight_date >=date'2014-01-01'
 Union All
 select a.flight_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,e.work_no,
        d.p_code,e.c_name, e.e_first_name,e.e_name,e.birth_date,e.sex,
        100 + d.fjs_order,
        'S004' rank_no,
        '????????' rank_name
   from t_flt_schedule a,t_sch_pairing b,t_sch_roster d,t_hr_crew e,t_flt_schedule v
  where a.crew_link_line = b.crew_link_line
    and v.flight_id = d.flight_id
    and d.p_code = e.p_code
    and v.flight_id_ref = a.flight_id
    and v.flight_id_ref is not null
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and v.flight_flag = 'D'
    and a.sch_pub_flag = 'Y'  and b.module_flag='F'
    and a.flight_date>=date'2014-01-01';

prompt
prompt Creating view V_PUB_CREW_CUSTOM
prompt ===============================
prompt
create or replace force view v_pub_crew_custom as
select a.flight_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,h.ac_type_crew,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        d.p_code,e.c_name, e.e_first_name,e.e_name,e.birth_date,e.sex,
        f.country_name native_c,f.country_3code native_e,
        d.fjs_order,d.rank_no,
        case
          when d.rank_no = 'A001' and d.fjs_order = 1 then '????????'
          when d.rank_no = 'A001' and d.fjs_order <> 1 then '????????'
          else g.rank_name
        end as rank_name,
        Nvl(g.rank_ename,'F/E') rank_ename,
        (select Max('Y') from t_tech_qulification where p_code = d.p_code And (qlf_code = 392 or qlf_code = 483) and ac_types = h.ac_type_crew and valid_flag = 'Y') rvr,
        (select Max('Y') from t_tech_qulification where p_code = d.p_code And qlf_code = 395 and valid_flag = 'Y') rnp_apch,
        (select Max('Y') from t_tech_auth_rnp xx where  xx.p_code = d.p_code And xx.tech_type = 396 and xx.valid_flag = 'Y' And (xx.airport_code = a.departure_airport Or xx.airport_code =a.arrival_airport) ) rnp_ar,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 743 and ac_types = h.ac_type_crew and valid_flag = 'Y') NewCapt/*??????*/,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 393 and ac_types = h.ac_type_crew and valid_flag = 'Y') catIIarisk,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 482 and ac_types = h.ac_type_crew and valid_flag = 'Y') catII,
        (select Max('Y') from t_tech_qulification where p_code= d.p_code And qlf_code = 741 and ac_types = h.ac_type_crew and valid_flag = 'Y') catIII,
        (select Max('Y') from t_tech_auth_etops where p_code= d.p_code And ac_type =h.ac_type_crew and valid_flag = 'Y') etops,
        d.tech_no_i tech_no,
        x.p_code pass_Pcode,
        x.passport_no,
        (select Max(xa.check_date) from t_hr_passport xa
        Where xa.p_code = x.p_code and xa.pass_no = Trim(x.passport_no)
        and  xa.cert_type =x.passport_type and xa.valid_flag='Y' ) passport_Check_date,
        x.passport_expire_date,x.visa_no,x.visa_grant_date,x.visa_expire_date
   from t_flt_schedule a, t_sch_pairing b, t_sch_roster d,t_hr_crew e,
        t_bas_country f,t_bas_rank g,t_bas_fleet h,t_svc_custom_detail x
  where a.crew_link_line = b.crew_link_line
    and a.flight_id = d.flight_id
    and d.p_code = e.p_code
    and a.ac_type = h.ac_type
    and e.native = f.country_code(+)
    and d.rank_no = g.rank_no(+)
    and d.flight_id =x.flight_id(+)
    And d.p_code =x.p_code(+)
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and a.flight_flag <> 'D'
    and a.sch_pub_flag = 'Y' and b.module_flag='F'
    and a.flight_date >=date'2014-01-01'
 Union All
 select a.flight_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,h.ac_type_crew,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        d.p_code,e.c_name, e.e_first_name,e.e_name,e.birth_date,e.sex,
        f.country_name native_c,f.country_3code native_e,
        d.fjs_order,
        'S004' rank_no,
        '????????' rank_name,
        'F/E' rank_ename,
        null rvr,
        null rnp_apch,
        null rnp_ar,
        null NewCapt,
        null catIIarisk,
        null catII,
        null catIII,
        null etops,
        d.tech_no_i tech_no,
        x.p_code pass_Pcode,
        x.passport_no,
        (select Max(xa.check_date) from t_hr_passport xa
        Where xa.p_code = x.p_code and xa.pass_no = Trim(x.passport_no)
        and  xa.cert_type =x.passport_type and xa.valid_flag='Y' ) passport_Check_date,
        x.passport_expire_date,x.visa_no,x.visa_grant_date,x.visa_expire_date
   from t_flt_schedule a,t_sch_pairing b,t_flt_schedule v, t_sch_roster d,t_hr_crew e,
        t_bas_country f,t_bas_fleet h,t_svc_custom_detail x
  where a.crew_link_line = b.crew_link_line
    and v.flight_id = d.flight_id
    and d.p_code = e.p_code
    and a.ac_type = h.ac_type
    and e.native = f.country_code(+)
    and a.flight_id = x.flight_id
    And d.p_code = x.p_code(+)
    and v.flight_id_ref = a.flight_id
    and v.flight_id_ref is not null
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and v.flight_flag = 'D'
    and a.sch_pub_flag = 'Y'  and b.module_flag='F'
    and a.flight_date>=date'2014-01-01'
    Union All
 select a.flight_id, a.flight_date,
        a.flight_no, a.departure_airport,a.arrival_airport,
        a.std,a.atd,a.sta,a.ata,
        a.ac_reg,a.ac_type,h.ac_type_crew,a.d_or_i,
        b.filiale,
        b.flight_date duty_flt_date,a.crew_link_line,
        b.flight_com,b.flight_voyage,
        d.fly_hours,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        d.p_code,e.c_name, e.e_first_name,e.e_name,e.birth_date,e.sex,
        f.country_name native_c,f.country_3code native_e,
        d.fjs_order,
        'S004' rank_no,
        '????????' rank_name,
        'F/E' rank_ename,
        null rvr,
        null rnp_apch,
        null rnp_ar,
        null NewCapt,
        null catIIarisk,
        null catII,
        null catIII,
        null etops,
        d.tech_no_i tech_no,
        x.p_code pass_Pcode,
        x.passport_no,
        (select Max(xa.check_date) from t_hr_passport xa
        Where xa.p_code = x.p_code and xa.pass_no = Trim(x.passport_no)
        and  xa.cert_type =x.passport_type and xa.valid_flag='Y' ) passport_Check_date,
        x.passport_expire_date,x.visa_no,x.visa_grant_date,x.visa_expire_date
   from t_flt_schedule a,t_sch_pairing b,t_flt_schedule v, t_sch_roster d,t_hr_crew e,
        t_bas_country f,t_bas_fleet h,t_svc_custom_detail x
  where a.crew_link_line = b.crew_link_line
    and v.flight_id = d.flight_id
    and d.p_code = e.p_code
    and a.ac_type = h.ac_type
    and e.native = f.country_code(+)
    and d.flight_id = x.flight_id
    And d.p_code = x.p_code(+)
    and v.flight_id_ref = a.flight_id
    and v.flight_id_ref is not null
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and v.flight_flag = 'D'
    and a.sch_pub_flag = 'Y'  and b.module_flag='F'
    and a.flight_date>=date'2014-01-01';

prompt
prompt Creating view V_PUB_CREW_DUTY
prompt =============================
prompt
create or replace force view v_pub_crew_duty as
select /*??????????*/
        a.p_code,
        b.c_name,
        b.work_no,
        td,
        ta
   from t_tr_ddo a,t_hr_crew b
  where a.p_code = b.p_code
    and a.ddo_code in ('D-ZB','D-DD','D-PQ');

prompt
prompt Creating view V_PUB_CREW_ROSTER
prompt ===============================
prompt
create or replace force view v_pub_crew_roster as
select a.flight_id,
        a.flight_date,
        a.flight_no,
        a.plan_departure,
        a.plan_arrival,
        a.departure_airport,
        a.arrival_airport,
        a.std,
        a.atd,
        a.sta,
        a.ata,
        a.ac_reg,
        a.ac_type,
        h.ac_type_crew,
        d.fly_hours,
        a.d_or_i,
        a.flight_flag,
        b.crew_link_line,b.duty_line,
        b.module_flag,
        b.filiale,
        b.flight_com,
        b.flight_voyage,
        b.flight_date duty_flt_date,
        b.td duty_dep_time,
        b.ta duty_arr_time,
        d.p_code,
        e.work_no,
        e.c_name,
        e.e_name,
        e.e_first_name,
        e.birth_date,
        e.sex,
        f.country_3code native_e,
        f.country_name native_c,
        d.rank_no,
        d.fjs_order,
        case
          when d.rank_no = 'A001' and d.fjs_order = 1 then '????????'
          when d.rank_no = 'A001' and d.fjs_order <> 1 then '????????'
          else g.rank_name
        end as rank_name,
        Nvl(g.rank_ename,'F/E') rank_ename,
        a.sch_pub_flag,
        a.cust_app_flag,
        e.dep_code,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        decode(nvl(rvr.p_code,'??'),'??',null,'??') rvr,
        decode(nvl(rnp_apch.p_code,'??'),'??',null,'??') rnp_apch,
        decode(nvl(rnp_ar.p_code,'??'),'??',null,'??') rnp_ar,
        decode(nvl(catIIarisk.p_code,'??'),'??',null,'??') catIIarisk,
        decode(nvl(catII.p_code,'??'),'??',null,'??') catII,
        decode(nvl(etops.p_code,'??'),'??',null,'??') etops,
        (select max(a1.tech_no_i) from t_tech_info a1,t_bas_tech b1,t_bas_fleet c1
          where b1.in_ex = 'I'
            and b1.tech_type = 'A'
            and a1.tech_no_i = b1.tech_no
            and a1.ac_type = c1.ac_type_crew
            and a.ac_type = c1.ac_type
            and d.p_code = a1.p_code
        ) as tech_no
   from t_flt_schedule a,
        t_sch_pairing b,
        t_sch_roster d,
        t_hr_crew e,
        t_bas_country f,
        t_bas_rank g,
        t_bas_fleet h,
        (select p_code from t_tech_qulification where (qlf_code = 392 or qlf_code = 483) and valid_flag = 'Y') rvr,
        (select p_code from t_tech_qulification where qlf_code = 395 and valid_flag = 'Y') rnp_apch,
        (select p_code from t_tech_qulification where qlf_code = 743 and valid_flag = 'Y') rnp_ar/*??????*/,
        (select p_code from t_tech_qulification where qlf_code = 393 and valid_flag = 'Y') catIIarisk,
        (select p_code from t_tech_qulification where qlf_code = 482 and valid_flag = 'Y') catII,
        (select p_code from t_tech_auth_etops where valid_flag = 'Y') etops
  where a.crew_link_line = b.crew_link_line
    and a.flight_id = d.flight_id
    and a.flight_id_ref is null
    and d.p_code = e.p_code
    and e.native = f.country_code(+)
    and d.rank_no = g.rank_no(+)
    and a.ac_type = h.ac_type
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and a.sch_pub_flag = 'Y'
    and e.p_code = rvr.p_code(+)
    and e.p_code = rnp_apch.p_code(+)
    and e.p_code = rnp_ar.p_code(+)
    and e.p_code = catIIarisk.p_code(+)
    and e.p_code = catII.p_code(+)
    and e.p_code = etops.p_code(+)
 union
 select a.flight_id,
        a.flight_date,
        a.flight_no,
        a.plan_departure,
        a.plan_arrival,
        a.departure_airport,
        a.arrival_airport,
        a.std,
        a.atd,
        a.sta,
        a.ata,
        a.ac_reg,
        a.ac_type,
        h.ac_type_crew,
        d.fly_hours,
        a.d_or_i,
        a.flight_flag,
        b.crew_link_line,b.duty_line,
        b.module_flag,
        b.filiale,
        b.flight_com,
        b.flight_voyage,
        b.flight_date duty_flt_date,
        b.td duty_dep_time,
        b.ta duty_arr_time,
        d.p_code,
        e.work_no,
        e.c_name,
        e.e_name,
        e.e_first_name,
        e.birth_date,
        e.sex,
        f.country_3code native_e,
        f.country_name native_c,
        'S004',
        100+d.fjs_order,
        '??????????',
        'CCC',
        a.sch_pub_flag,
        a.cust_app_flag,
        e.dep_code,
        (select a1.dep_name from t_hr_dept a1 where a1.dep_code = e.dep_code) as dept_name,
        decode(nvl(rvr.p_code,'??'),'??',null,'??') rvr,
        decode(nvl(rnp_apch.p_code,'??'),'??',null,'??') rnp_apch,
        decode(nvl(rnp_ar.p_code,'??'),'??',null,'??') rnp_ar,
        decode(nvl(catIIarisk.p_code,'??'),'??',null,'??') catIIarisk,
        decode(nvl(catII.p_code,'??'),'??',null,'??') catII,
        decode(nvl(etops.p_code,'??'),'??',null,'??') etops,
        (select max(a1.tech_no_i) from t_tech_info a1,t_bas_tech b1,t_bas_fleet c1
          where b1.in_ex = 'I'
            and b1.tech_type = 'A'
            and a1.tech_no_i = b1.tech_no
            and a1.ac_type = c1.ac_type_crew
            and a.ac_type = c1.ac_type
        ) as tech_no
   from t_flt_schedule a,
        t_flt_schedule a1,
        t_sch_pairing  b,
        t_sch_roster   d,
        t_hr_crew e,
        t_bas_country f,
        t_bas_fleet h,
        (select p_code from t_tech_qulification where (qlf_code = 392 or qlf_code = 483) and valid_flag = 'Y') rvr,
        (select p_code from t_tech_qulification where qlf_code = 395 and valid_flag = 'Y') rnp_apch,
        (select p_code from t_tech_qulification where qlf_code = 743 and valid_flag = 'Y') rnp_ar/*??????*/,
        (select p_code from t_tech_qulification where qlf_code = 393 and valid_flag = 'Y') catIIarisk,
        (select p_code from t_tech_qulification where qlf_code = 482 and valid_flag = 'Y') catII,
        (select p_code from t_tech_auth_etops where valid_flag = 'Y') etops
  where a.crew_link_line = b.crew_link_line
    and a1.flight_id = d.flight_id
    and a1.flight_id_ref is not null
    and a1.flight_id_ref = a.flight_id
    and d.p_code = e.p_code
    and e.native = f.country_code(+)
    and a.ac_type = h.ac_type
    and (a.flg_cs is null or a.flg_cs <> 'C' and a.flg_cs <> 'D')
    and a.sch_pub_flag = 'Y'
    and e.p_code = rvr.p_code(+)
    and e.p_code = rnp_apch.p_code(+)
    and e.p_code = rnp_ar.p_code(+)
    and e.p_code = catIIarisk.p_code(+)
    and e.p_code = catII.p_code(+)
    and e.p_code = etops.p_code(+);

prompt
prompt Creating view V_PUB_CREW_TECH
prompt =============================
prompt
create or replace force view v_pub_crew_tech as
select /*????????????*/
        a.p_code,
        b.work_no,
        ac_type,
        d.license_no,
        d.over_date,
        tech_no_i,
        c.tech_rank,  --????(A??????B????C????F??????S????J??????R??????)
        trunc(tech_no_i_date) as tech_no_i_date,
        a.valid_flag
   from t_tech_info a left join t_hr_license d on a.p_code = d.p_code and a.ac_type = d.ac_types,
        t_hr_crew b,t_bas_tech c
  where a.p_code = b.p_code
    and a.tech_no_i = c.tech_no
    and c.in_ex = 'I'
    and c.tech_type = 'A'
;

prompt
prompt Creating view V_PUB_FTB_DETAIL
prompt ==============================
prompt
create or replace force view v_pub_ftb_detail as
select /*飞行员飞行经历*/
       a.flight_id,
       a.flight_date,
       a.p_code,
       b.c_name,
       b.work_no,
       a.fly_hours, /*飞行时间*/
       a.exp_hours, /*经历时间*/
       nvl(a.left_hours,0) left_hours,  /*左座小时*/
       nvl(a.left_updowns,0) left_updowns, /*左座降落次数*/
       nvl(a.left_downs,0) left_ups, /*左座起飞次数*/
       nvl(a.right_hours,0) right_hours,  /*右座小时*/
       nvl(a.right_updowns,0) right_updowns, /*右座降落次数*/
       nvl(a.right_downs,0) right_ups, /*右座起飞次数*/
       nvl(a.left_night,0) left_night, /*左座夜航时间*/
       nvl(a.left_teach,0) left_teach, /*左座教员时间*/
       nvl(a.right_night,0) right_night, /*右座夜航时间*/
       nvl(a.right_teach,0) right_teach /*右座教员时间*/
  from t_svc_ftb_detail a,t_hr_crew b
 where a.p_code = b.p_code;

prompt
prompt Creating view V_R5_FLT_ADJUST
prompt =============================
prompt
create or replace force view v_r5_flt_adjust as
select a.flight_id, a.log_time
 from t_flt_adjust a
where (
      instr('/' || a.adjust_type || '/', '/T/') > 0 or
      instr('/' || a.adjust_type || '/', '/ET/') > 0 or
      instr('/' || a.adjust_type || '/', '/AT/') > 0 or
      instr('/' || a.adjust_type || '/', '/C/') > 0 or
      instr('/' || a.adjust_type || '/', '/R/') > 0 or
      instr('/' || a.adjust_type || '/', '/M/') > 0 or
      instr('/' || a.adjust_type || '/', '/RT/') > 0 or
      instr('/' || a.adjust_type || '/', '/V/') > 0
      );

prompt
prompt Creating view V_R5_PARAM
prompt ========================
prompt
create or replace force view v_r5_param as
select a.filiale, a.ver_name, b.parm_id, c.parm_name, b.the_value
  from t_rule_version a
 inner join t_rule_param_detail b
    on a.ver_id = b.ver_id
 inner join t_rule_param c
    on b.parm_id = c.parm_id
 where a.valid_flag = 'Y'
   and a.module_flag = 'F'
union all
select 'FILIALE_DEFAULT' filiale,
       '?????' ver_name,
       b.parm_id,
       b.parm_name,
       b.the_value
  from t_rule_param b
 where b.module_flag = 'F';

prompt
prompt Creating view V_R5_PERSON_SCHEDULE
prompt ==================================
prompt
create or replace force view v_r5_person_schedule as
select
   'FLT_SCH' data_type,
   a.p_code,
   b.flight_id,
   b.flight_date,
   b.flight_no,
   b.departure_airport,
   b.arrival_airport,
   b.ac_type,
   b.flg_cs,
   b.flight_flag,
   b.std,
   b.etd,
   b.atd,
   b.sta,
   b.eta,
   b.ata,
   nvl(b.atd, nvl(b.etd, b.std)) td,
   nvl(b.ata, nvl(b.eta, b.sta)) ta,
   a.fly_hours/*??????????*/,
   a.module_flag,
   c.td_punch /*????*/,
   c.td_before /*????*/,
   c.ta_after /*????*/,
   d.sign_in_time /*??????*/,
   d.leaving_time /*??????*/,
   b.crew_owner /*??????,??????????*/
from t_sch_roster a, t_flt_schedule b, t_sch_pairing c,t_sch_sign_in_time d
where a.flight_id = b.flight_id
and a.module_flag = 'F'
and nvl(b.flg_cs, 'A') not in ('C', 'D')
and b.crew_link_line = c.crew_link_line(+)
and b.flight_flag in('A','B','C','D')
and a.flight_id = d.flight_id(+)
and a.p_code = d.p_code(+)
union all
select 'TR_SCH' data_type,
    b.p_code,
    b.train_id flight_id,
    a.train_date flight_date,
    d.simu_name flight_no,
    null departure_airport,
    null arrival_airport,
    a.ac_type_crew ac_type,
    null flg_cs,
    null flight_flag,
    b.atd std,
    b.atd etd,
    b.atd atd,
    b.ata sta,
    b.ata eta,
    b.ata ata,
    b.atd td,
    b.ata ta,
    b.train_hours fly_hours,
    c.module_flag module_flag,
    null td_punch /*????*/,
    null td_before /*????*/,
    null ta_after /*????*/,
    null sign_in_time /*??????*/,
    null leaving_time /*??????*/,
    c.filiale crew_owner/*??????,??????????*/
from t_tr_plan a, t_tr_schedule b,t_hr_crew c, t_tr_simulator d
where a.train_id = b.train_id
and a.simu_code=d.simu_code
/*and d.train_type=1 ????????TRAIN_TYPE 1???2??3??4?? */
and b.p_code=c.p_code;

prompt
prompt Creating view V_ROSTER20150415
prompt ==============================
prompt
create or replace force view v_roster20150415 as
select /*??????????????????????????*/
        a.flight_id,  /*????ID*/
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        a.flight_date,/*????????*/
        a.p_code,    /*????????*/
        g.fxw_id,   /*??????ID*/
        g.id_no,/*??????????*/
        case
          when a.rank_no = 'S001' and inStr(a.ts_flag,'W') >0 then
            'D001'
          else
            a.rank_no
        end as rank_no,   /*????????,S004????????????,D001??????????*/
        a.FJS_ORDER,/*????????*/
        c.duty_line as crew_link_line,  /*????ID*/
        replace(replace(a.ts_flag,','),'/') ts_flag,   /*??????*/
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,c.op_time))) as last_modify_time, /*????????????*/
        a.rec_id, /*????ID*/
        c.flight_date as task_date, /*????????*/
        DECODE(b.flight_flag,'B',b.plan_departure,'') as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b.op_time b1_op_time,
        c.op_time c_op_time,
        ' ' d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b,t_sch_pairing c,t_hr_crew g
  where a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
 /*   and c.duty_line = d.duty_line*/
    and b.flight_id_ref is null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
 /*   and f.filiale = d.filiale*/
 /*   and f.tsk_syn_date is not null*/
 /*   and d.flight_date >= f.tsk_syn_date*/
  and a.flight_date>=date'2014-01-01' /*and (a.flight_date<(case when g.filiale='CTU' then date'2014-5-1' end)
                                                        or a.flight_date<(case when g.filiale='KHN' then date'2014-3-1' end)
                                                        or a.flight_date<(case when g.filiale='NGB' then date'2014-6-1' end)
                                                        or a.flight_date<(case when g.filiale='NKG' then date'2014-4-1' end)
                                                        or a.flight_date<(case when g.filiale='PEK' then date'2014-4-1' end)
                                                        or a.flight_date<(case when g.filiale='WUH' then date'2014-5-1' end))*/
 union all
 select --??????????????????)
        b.flight_id_ref as flight_id,  --????ID
        nvl(b1.mm_leg_id,b1.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end as rank_no,   --??????????
        0 as fjs_order, --????????
        c.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,c.op_time)))) as last_modify_time, --????????????
        a.rec_id, --????ID
        c.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        ' ' d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_hr_crew g
  where a.flight_id = b.flight_id
    and b1.flight_id = b.flight_id_ref
    and b1.crew_link_line = c.crew_link_line
 /*   and c.duty_line = d.duty_line*/
    and b.flight_id_ref is not null
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
 /*   and f.filiale = d.filiale*/
 /*   and b1.crew_owner = d.filiale  --??????????,8.28 5693/4*/
 /*   and f.tsk_syn_date is not null*/
   /* and d.flight_date >= f.tsk_syn_date*/

  and a.flight_date>=date'2014-01-01' /*and (a.flight_date<(case when g.filiale='CTU' then date'2014-5-1' end)
                                                    or a.flight_date<(case when g.filiale='KHN' then date'2014-3-1' end)
                                                    or a.flight_date<(case when g.filiale='NGB' then date'2014-6-1' end)
                                                    or a.flight_date<(case when g.filiale='NKG' then date'2014-4-1' end)
                                                    or a.flight_date<(case when g.filiale='PEK' then date'2014-4-1' end)
                                                    or a.flight_date<(case when g.filiale='WUH' then date'2014-5-1' end))*/
 union all
 select --??????????????????)
        b.flight_id,  --????ID
        nvl(b.mm_leg_id,b.mm_leg_id_add) mm_leg_id,/*MM????LEG_ID*/
        b.flight_date, --????????
        a.p_code,    --????????
        g.fxw_id,     /*??????ID*/
        g.id_no,/*??????????*/
        case
          when rank_no='M001' then 'M001'
          else 'S004'
        end  as rank_no,   --??????????
        0 as fjs_order, --????????
        c.duty_line as crew_link_line,  --????ID
        replace(replace(a.ts_flag,','),'/') ts_flag,   --??????
        f_max(a.op_time,f_max(a.pub_time,f_max(b.op_time,f_max(b1.op_time,c.op_time)))) as last_modify_time, --????????????
        a.rec_id, --????ID
        c.flight_date as task_date, /*????????*/
        '' as back_departure,/*????????*/
        b.AC_TYPE,/*????*/
        b.flight_flag, /*????????(A????B????C????D????)*/
        a.op_time a_op_time,
        a.pub_time a_pub_time,
        b.op_time b_op_time,
        b1.op_time b1_op_time,
        c.op_time c_op_time,
        ' ' d_op_time,
        a.check_type,
         (select listagg(ctype.bm_name,',') within group (order by ctype.bm_code)
            from t_bas_dict ctype
           where ctype.parent_code = 'DA'
             and instr('/'||a.check_type||'/','/'||ctype.bm_code||'/')>0) check_name,
             b.FLIGHT_NO,/*??????*/
             b.DEPARTURE_AIRPORT,/*????????*/
             b.arrival_airport,/*????????*/
             a.fly_hours /*????????(????DOC,??????FTB)*/
   from t_sch_roster a,t_flt_schedule b/*??????*/,t_flt_schedule b1,t_sch_pairing c,t_hr_crew g
  where b.flight_id_ref is not null
    and a.flight_id = b.flight_id
    and b.crew_link_line = c.crew_link_line
 /*   and c.duty_line = d.duty_line*/
    and a.p_code = g.p_code
    and b.sch_pub_flag = 'Y'
 /*   and f.filiale = d.filiale*/
 /*   and f.tsk_syn_date is not null*/
 /*   and d.flight_date >= f.tsk_syn_date*/
   and a.flight_date>=date'2014-01-01' /*and (a.flight_date<(case when g.filiale='CTU' then date'2014-5-1' end)
                                                    or a.flight_date<(case when g.filiale='KHN' then date'2014-3-1' end)
                                                    or a.flight_date<(case when g.filiale='NGB' then date'2014-6-1' end)
                                                    or a.flight_date<(case when g.filiale='NKG' then date'2014-4-1' end)
                                                    or a.flight_date<(case when g.filiale='PEK' then date'2014-4-1' end)
                                                    or a.flight_date<(case when g.filiale='WUH' then date'2014-5-1' end))*/

    and b1.flight_id = b.flight_id_ref
    and not exists(
                 select 1 from t_bas_filiale t
                  where b1.crew_owner = t.filiale
                    and t.tsk_syn_date is not null
                   /* and b1.flight_date >= t.tsk_syn_date*/
   and b1.flight_date>=date'2014-01-01'/* and (b1.flight_date<(case when g.filiale='CTU' then date'2014-5-1' end)
                                            or b1.flight_date<(case when g.filiale='KHN' then date'2014-3-1' end)
                                            or b1.flight_date<(case when g.filiale='NGB' then date'2014-6-1' end)
                                            or b1.flight_date<(case when g.filiale='NKG' then date'2014-4-1' end)
                                            or b1.flight_date<(case when g.filiale='PEK' then date'2014-4-1' end)
                                            or b1.flight_date<(case when g.filiale='WUH' then date'2014-5-1' end))*/

                )
;

prompt
prompt Creating view V_RPT_FLT_SCHEDULE
prompt ================================
prompt
create or replace force view v_rpt_flt_schedule as
select /*????????????????????????????????*/
        sc.FLIGHT_ID,
        sc.FLIGHT_DATE,
        sc.AC_TYPE,
        sc.carrier,
        --sc.departure_airport,
        --sc.arrival_airport,
        sc.co_old,
        sc.crew_owner,
        (select h.fly_hours
           from t_flt_hours h
          where h.ac_type_crew = sc.AC_TYPE
            and h.departure_airport = sc.DEPARTURE_AIRPORT
            and h.arrival_airport = sc.ARRIVAL_AIRPORT
            and h.flt_sn = sc.FLT_SN) as fly_hours, ---????????
        (select f.totl_hours
           from t_svc_ftb f
          where f.flight_id = sc.FLIGHT_ID) as totl_hours --????????
   from (select s.*,
                case
                  when (to_char(s.FLIGHT_DATE, 'MM') >= 5 and
                       to_char(s.FLIGHT_DATE, 'MM') < 11) --????
                   then
                   'W'
                  else
                   'S'
                end FLT_SN --????
           from T_FLT_SCHEDULE s) sc
;

prompt
prompt Creating view V_RPT_HR_CREW
prompt ===========================
prompt
create or replace force view v_rpt_hr_crew as
select a.p_code
        ,a.c_name
        ,a.work_no
        ,a.py_abbr
        ,a.native
        ,a.post_rank
        ,a.post_duty
        ,a.enter_date
        ,a.fly_date
        ,a.year_plantime
        ,a.month3_plantime
        ,a.month_plantime
        ,a.month_plantime_min
        ,a.week_plantime
        ,a.auto_yn
        ,a.branch_code
        ,b.branch_name
        ,a.dep_code
        ,c.dep_name
        ,a.filiale
        ,f.filiale_name
        ,a.post_duty as post_duty_name
        ,a.home_base
        ,e.chinese_name base_chinese_name
        ,e.english_name base_english_name
        ,e.city_3code
        ,e.city_ch_name
        ,dt.bm_name post_rank_name
        ,dt.remarks post_rank_weight
        ,a.kind
        ,dt1.bm_name kind_name
 from  t_hr_crew a
      left join t_hr_branch b on b.valid_flag='Y' and b.module_flag='F' and a.branch_code=b.branch_code
      left join t_hr_dept c on c.valid_flag='Y' and c.module_flag='F' and a.dep_code=c.dep_code
      left join t_bas_airport e on a.home_base=e.airport_3code
      left join t_bas_dict dt on a.post_rank=dt.bm_code and dt.parent_code='AE'
      left join t_bas_dict dt1 on a.kind=dt1.bm_code and dt1.parent_code='PP'
      left join t_bas_filiale f on f.valid_flag='Y' and a.filiale = f.filiale
 where (a.hr_status is null or a.hr_status not in ('I022','I023','I024')) --????????????????
       and a.valid_flag='Y'
       and a.module_flag='F'
       and a.dep_code is not null
;

prompt
prompt Creating view V_RPT_HR_CREW_UNLTD
prompt =================================
prompt
create or replace force view v_rpt_hr_crew_unltd as
select a.p_code
        ,a.c_name
        ,a.work_no
        ,a.py_abbr
        ,a.native
        ,a.post_rank
        ,a.post_duty
        ,a.enter_date
        ,a.fly_date
        ,a.year_plantime
        ,a.month3_plantime
        ,a.month_plantime
        ,a.month_plantime_min
        ,a.week_plantime
        ,a.auto_yn
        ,a.branch_code
        ,b.branch_name
        ,a.dep_code
        ,c.dep_name
        ,a.filiale
        ,f.filiale_name
        ,a.post_duty as post_duty_name
        ,a.home_base
        ,e.chinese_name base_chinese_name
        ,e.english_name base_english_name
        ,e.city_3code
        ,e.city_ch_name
        ,dt.bm_name post_rank_name
        ,dt.remarks post_rank_weight
        ,a.kind
        ,dt1.bm_name kind_name
 from  t_hr_crew a
      left join t_hr_branch b on b.valid_flag='Y' and b.module_flag='F' and a.branch_code=b.branch_code
      left join t_hr_dept c   on c.valid_flag='Y' and c.module_flag='F' and a.dep_code=c.dep_code
      left join t_bas_airport e on a.home_base=e.airport_3code
      left join t_bas_dict dt   on a.post_rank=dt.bm_code and dt.parent_code='AE'
      left join t_bas_dict dt1  on a.kind=dt1.bm_code and dt1.parent_code='PP'
      left join t_bas_filiale f on f.valid_flag='Y' and a.filiale = f.filiale;

prompt
prompt Creating view V_RPT_HR_DEPT
prompt ===========================
prompt
create or replace force view v_rpt_hr_dept as
select a.dep_code,a.dep_name,b.dep_name||c.dep_name||d.dep_name||e.dep_name dep_name_full
        ,a.leader,a.tel,a.filiale,a.base,a.idx
        ,a.dep_code4,b.dep_name dep_name4
        ,a.dep_code6,c.dep_name dep_name6
        ,a.dep_code8,d.dep_name dep_name8
        ,a.dep_code10,e.dep_name dep_name10
 from (select dep_code,dep_name,leader,tel,filiale,base,valid_flag,module_flag,idx
            , substr(dep_code,0,4) dep_code4
            ,(case when length(dep_code)>=6 then substr(dep_code,0,6) else null end) dep_code6
            ,(case when length(dep_code)>=8 then substr(dep_code,0,8) else null end) dep_code8
            ,(case when length(dep_code)>=10 then substr(dep_code,0,10) else null end) dep_code10
       from t_hr_dept order by dep_code4,dep_code6 desc,dep_code8 desc,dep_code10 desc
      ) a
        left join t_hr_dept b on a.dep_code4=b.dep_code and b.valid_flag='Y' and b.module_flag='F'
        left join t_hr_dept c on a.dep_code6=c.dep_code and c.valid_flag='Y' and c.module_flag='F'
        left join t_hr_dept d on a.dep_code8=d.dep_code and d.valid_flag='Y' and d.module_flag='F'
        left join t_hr_dept e on a.dep_code10=e.dep_code and e.valid_flag='Y' and e.module_flag='F'
 where a.valid_flag='Y' and a.module_flag='F';

prompt
prompt Creating view V_RPT_HR_TECH_NO
prompt ==============================
prompt
create or replace force view v_rpt_hr_tech_no as
select a.p_code,a.ac_type,a.ac_short_types,
       a.tech_no_i,t0.tech_name tech_no_i_name,t0.tech_rank tech_rank_i,a.tech_no_i_date,
       a.tech_no_z,t1.tech_name tech_no_z_name,t1.tech_rank tech_rank_z,a.tech_no_z_date
 from t_tech_info a
      left join t_bas_tech t0  on t0.tech_no=a.tech_no_i and t0.module_flag='F' and t0.tech_type='A' and t0.in_ex='I'
      left join t_bas_tech t1  on t1.tech_no=a.tech_no_z and t1.module_flag='F' and t1.tech_type='A' and t1.in_ex='Z'
 where a.valid_flag='Y'
       and t0.tech_type='A' --????????????????????????
;

prompt
prompt Creating view V_RPT_HR_TECH_NO_I
prompt ================================
prompt
create or replace force view v_rpt_hr_tech_no_i as
select a.p_code,c.tech_type,a.ac_type ac_type_series,a.tech_no_i,c.tech_name tech_no_i_name,stragg(b.ac_type) ac_type_detail
 from t_tech_info a
      inner join t_bas_fleet b on a.valid_flag='Y' and a.ac_type=b.ac_type_crew and b.valid_flag='Y'
      inner join t_bas_tech c  on a.tech_no_i=c.tech_no and c.module_flag='F'
 group by a.p_code,c.tech_type,a.ac_type,a.tech_no_i,c.tech_name
 order by a.p_code,c.tech_type,a.ac_type;

prompt
prompt Creating view V_RPT_MONTHLY_FTB_HOURS
prompt =====================================
prompt
create or replace force view v_rpt_monthly_ftb_hours as
select a.filiale,
       a.p_code,
       a.c_name,
       d.ac_type,
       d.tech_no_i,
       f.tech_name,
       to_char(c.flight_date,'yyyymm') as ym,
       round(sum(b.fly_hours) / 60,2) m_hours
  from t_hr_crew a,t_svc_ftb_detail b,t_flt_schedule c,t_tech_info d,t_bas_fleet e,t_bas_tech f
 where a.p_code = b.p_code
   and b.flight_id = c.flight_id
   and a.p_code = d.p_code
   and c.ac_type = e.ac_type
   and d.ac_type = e.ac_type_crew
   and d.tech_no_i = f.tech_no
group by a.filiale,d.ac_type,a.p_code,a.c_name,d.tech_no_i,f.tech_name,to_char(c.flight_date,'yyyymm')
order by filiale,c_name,ac_type;

prompt
prompt Creating view V_RPT_MONTHLY_SCH_HOURS
prompt =====================================
prompt
create or replace force view v_rpt_monthly_sch_hours as
select a.filiale,
        a.p_code,
        a.c_name,
        d.ac_type,
        d.tech_no_i,
        f.tech_name,
        to_char(c.flight_date,'yyyymm') as ym,
        round(sum(b.fly_hours) / 60,2) m_hours
   from t_hr_crew a,t_sch_roster b,t_flt_schedule c,t_tech_info d,t_bas_fleet e,t_bas_tech f
  where a.p_code = b.p_code
    and b.flight_id = c.flight_id
    and b.rank_no in ('A001','B001','C001','C002')
    and (c.ftb_rec_flag is null or c.ftb_rec_flag = 'N')
    and (c.flg_cs is null or c.flg_cs <> 'C' and c.flg_cs <> 'D')
    and c.flight_flag = 'A'
    and a.p_code = d.p_code
    and c.ac_type = e.ac_type
    and d.ac_type = e.ac_type_crew
    and d.tech_no_i = f.tech_no
 group by a.filiale,d.ac_type,a.p_code,a.c_name,d.tech_no_i,f.tech_name,to_char(c.flight_date,'yyyymm')
 order by filiale,c_name,ac_type;

prompt
prompt Creating view V_RPT_PERSON_DUTY
prompt ===============================
prompt
create or replace force view v_rpt_person_duty as
select f1.p_code
        ,'??????' p_type
        ,f4.course_name p_type_sub
        ,f1.train_date p_date
        ,f1.atd td
        ,f1.ata ta
        ,f5.subject_name remark0
        ,decode(f1.is_from_fxw,'Y','????????????????','C','??????????????????', f1.REMARKS)  remark1
        ,null remark2
 from  t_tr_schedule f1
        inner join t_tr_plan f2 on f1.train_id = f2.train_id
        inner join  T_TR_PAIRING f3 on f2.train_line = f3.train_line
        inner join  t_tr_course f4 on f3.course_code = f4.course_code
        inner join t_tr_subject f5 on f3.subject_code = f5.subject_code
 union all
 --????: ????(0??????1????????2????3????4????5????)
 select h0.p_code
        ,'????' p_type
        ,decode(h1.ddo_type,0,'??????',1,'????????',2,'????',3,'????',4,'????',5,'????') p_type_sub
        ,trunc(h0.td) p_date
        ,h0.td
        ,h0.ta
        ,h1.remarks  remark0
        ,(case when h1.ddo_code in ('INTF-MT','F-SICK','SIM') then '??????' else h1.ddo_code end)  remark1
        ,h1.ddo_name remark2
 from t_tr_ddo h0
      inner join t_bas_ddo h1 on h0.ddo_code = h1.ddo_code
 where h0.valid_flag='Y'
 union all
 --????
 select j0.p_code
         ,'????' p_type
         ,j0.remark p_type_sub
        ,trunc(j0.start_Date) p_date
        ,j0.start_Date td
        ,j0.end_date ta
        ,j0.BLOCK_KIND remark0
        ,j0.RANK_NO remark1
        ,null remark2
 from T_TR_HOLI_SCH j0
 union all
 --????????????
 select g0.p_code
        ,'????????????' p_type
        ,g0.remarks p_type_sub
        ,trunc(g0.from_Date) p_date
        ,g0.from_Date td
        ,g0.to_date ta
        ,g0.claim_content remark0
        ,null remark1
        ,null remark2
 from  t_sch_claim g0
 where valid_flag='Y'
;

prompt
prompt Creating view V_RPT_SCHEDULE_FTB_DETAIL
prompt =======================================
prompt
create or replace force view v_rpt_schedule_ftb_detail as
select a.flight_id,a.flight_no,a.flight_flag,a.flight_date,a.carrier,a.departure_airport,a.arrival_airport
       ,d.chinese_name dep_airport_name,d.chinese_abbr dep_airport_abbr
       ,e.chinese_name arr_airport_name,e.chinese_abbr arr_airport_abbr
       ,nvl(nvl(a.atd,a.etd),a.std) td,nvl(nvl(a.ata,a.eta),a.sta) ta
       ,decode(a.flight_type,'W',c.fly_hours,round(to_number(nvl(nvl(a.ata,a.eta),a.sta)-nvl(nvl(a.atd,a.etd),a.std))*1440)) fly_hours_schedule
       ,a.d_or_i,a.flight_type,a.ac_type,f.ac_type_crew, a.ac_reg,a.ftb_rec_flag
       ,a.crew_link_line,a.stew_link_line,a.plce_link_line
       ,b.ftb_no,b.air_hours,b.grnd_hours,b.night_hours,b.totl_hours
       ,c.p_code,c.fly_hours, c.exp_hours,c.left_hours,c.left_updowns
       ,c.left_op_manu,c.right_hours,c.right_updowns,c.right_op_manu
       ,g.tech_no_i,g.tech_no_i_name,g.tech_rank_i,'B00A' tech_no_z

 from  t_flt_schedule  a
       inner join t_svc_ftb  b on a.flight_id=b.flight_id
       inner join t_svc_ftb_detail c on a.flight_id=c.flight_id --and b.ftb_no=c.ftb_no
       left join t_bas_airport d on a.departure_airport=d.airport_3code
       left join t_bas_airport e on a.arrival_airport=e.airport_3code
       left join t_bas_fleet f   on a.ac_type=f.ac_type --and f.valid_flag='Y'
       left join (select a1.p_code,a1.ac_type ac_type_crew,a1.tech_no_i,b1.tech_name tech_no_i_name,b1.tech_rank tech_rank_i
                  from t_tech_info a1 inner join t_bas_tech b1
                             on a1.valid_flag = 'Y' and b1.tech_type ='A' and b1.module_flag='F' and a1.tech_no_i = b1.tech_no
                  ) g on c.p_code=g.p_code and f.ac_type_crew=g.ac_type_crew
;

prompt
prompt Creating view V_RPT_SCHEDULE_ROSTER_FTB
prompt =======================================
prompt
create or replace force view v_rpt_schedule_roster_ftb as
select t0.flight_id,
       t1.p_code,
       t2.ftb_no,
       t0.ftb_rec_flag,
       t0.flight_date,
       t0.carrier,
       t0.crew_owner,
       t0.flight_no,
       t0.departure_airport,
       t0.arrival_airport,
       nvl(nvl(t0.atd, t0.etd), t0.std) td,
       nvl(nvl(t0.ata, t0.eta), t0.sta) ta,
       t0.d_or_i,
       t0.flight_type,
       t0.ac_type,
       tp1.ac_type_long,
       tp1.ac_type_crew,
       t0.ac_reg,
       t0.off_wheel,
       t0.on_wheel,
       t0.flight_flag,
       t0.flg_cs,
       t0.sch_com_flag,
       t0.sch_ver_flag,
       t0.sch_pub_flag,
       t0.fly_hours schdule_fly_hours,
       t0.crew_link_line,
       t0.stew_link_line,
       t0.plce_link_line,

       t1.auto_flag  roster_auto_flag,
       t1.fly_hours  roster_fly_hours,
       t1.fjs_order,
       t1.rank_no,
       t1.ts_flag,
       t1.check_type,
       t1.tech_no_i,
       t1.tech_no_z,
       t1.hotel_yn,
       t1.hotel_id,

       t2.taxi_out_time,
       t2.takeoff_time,
       t2.landing_time,
       t2.taxi_in_time,
       t2.air_hours,
       t2.grnd_hours,
       --t2.night_hours,
       t2.totl_hours ftb_totl_hours,
       t2.is_icao,

       t3.fly_hours,
       t3.exp_hours,
       (t3.left_night+t3.right_night) night_hours,
       t3.left_hours,
       t3.left_updowns,
       t3.left_op_manu,
       t3.right_hours,
       t3.right_updowns,
       t3.right_op_manu
  from t_flt_schedule t0
       inner join t_sch_roster t1 on t0.flight_id = t1.flight_id
       left join t_svc_ftb t2 on t0.flight_id = t2.flight_id
       left join t_svc_ftb_detail t3 on t0.flight_id = t3.flight_id and t1.p_code = t3.p_code
       left join t_bas_fleet tp1  on t0.ac_type = tp1.ac_type
  where  nvl(t0.flg_cs,'A') not in ('C', 'D')    --排除取消航班
         and t0.flight_flag in ('A','C')         --只包含正常，本场航班（排除备份，摆渡航班）
         and t1.module_flag = 'F'
         and t1.rank_no in ('A001','B001','C001','C002','F001')  --机长副驾检查员岗位
;

prompt
prompt Creating view V_RPT_SCHEDULE_ROSTER_FTB_FENS
prompt ============================================
prompt
create or replace force view v_rpt_schedule_roster_ftb_fens as
select t0.flight_id,
       t1.p_code,
       t2.ftb_no,
       t0.ftb_rec_flag,
       t0.flight_date,
       t0.carrier,
       t0.crew_owner,
       t0.flight_no,
       t0.departure_airport,
       t0.arrival_airport,
       nvl(nvl(t0.atd, t0.etd), t0.std) td,
       nvl(nvl(t0.ata, t0.eta), t0.sta) ta,
       t0.d_or_i,
       t0.flight_type,
       t0.ac_type,
       tp1.ac_type_long,
       tp1.ac_type_crew,
       t0.ac_reg,
       t0.off_wheel,
       t0.on_wheel,
       t0.flight_flag,
       t0.flg_cs,
       t0.sch_com_flag,
       t0.sch_ver_flag,
       t0.sch_pub_flag,
       t0.fly_hours schdule_fly_hours,
       t0.crew_link_line,
       t0.stew_link_line,
       t0.plce_link_line,

       t1.auto_flag  roster_auto_flag,
       t1.fly_hours  roster_fly_hours,
       t1.fjs_order,
       t1.rank_no,
       t1.ts_flag,
       t1.check_type,
       t1.tech_no_i,
       t1.tech_no_z,
       t1.hotel_yn,
       t1.hotel_id,

       t2.taxi_out_time,
       t2.takeoff_time,
       t2.landing_time,
       t2.taxi_in_time,
       t2.air_hours,
       t2.grnd_hours,
       t2.totl_hours ftb_totl_hours,
       t2.is_icao,
       b.fens roster_fly_fens,
       t3.fly_hours,
       t3.exp_hours,
       (t3.left_night+t3.right_night) night_hours,
       t3.left_hours,
       t3.left_updowns,
       t3.left_op_manu,
       t3.right_hours,
       t3.right_updowns,
       t3.right_op_manu
  from t_flt_schedule t0
       inner join t_sch_roster t1 on t0.flight_id = t1.flight_id and t1.module_flag = 'F'
       INNER join  t_sch_roster_FENS b ON t1.flight_id = b.flight_id AND t1.p_code = b.p_code
       left join t_svc_ftb t2 on t0.flight_id = t2.flight_id
       left join t_svc_ftb_detail t3 on t0.flight_id = t3.flight_id and t1.p_code = t3.p_code and t2.ftb_no = t3.ftb_no
       left join t_bas_fleet tp1  on t0.ac_type = tp1.ac_type and tp1.valid_flag = 'Y'
  where  nvl(t0.flg_cs,'A') not in ('C', 'D')    --排除取消航班
         and t0.flight_flag in ('A','C')         --只包含正常，本场航班（排除备份，摆渡航班）
         and t1.rank_no not like 'S00%' and t1.rank_no not like 'M00%'  --排除搭机、学员
;

prompt
prompt Creating view V_RPT_SCH_ROSTER_FTB
prompt ==================================
prompt
create or replace force view v_rpt_sch_roster_ftb as
select t1.flight_id,
       t2.ftb_no,
       t3.p_code,
       t1.flight_date,
       t1.carrier,
       t1.flight_no,
       t1.departure_airport,
       t1.arrival_airport,
       nvl(nvl(t1.atd, t1.etd), t1.std) td,
       nvl(nvl(t1.ata, t1.eta), t1.sta) ta,
       t1.d_or_i,
       t1.flight_type,
       t1.ac_type,
       tp1.ac_type_long,
       tp1.ac_type_crew,
       t1.ac_reg,
       t1.off_wheel,
       t1.on_wheel,
       t1.flight_flag,
       t1.sch_com_flag,
       t1.sch_ver_flag,
       t1.sch_pub_flag,
       t1.ftb_rec_flag,
       t1.fly_hours schdule_fly_hours,
       t1.crew_link_line,
       t1.stew_link_line,
       t1.plce_link_line,
       t2.taxi_out_time,
       t2.takeoff_time,
       t2.landing_time,
       t2.taxi_in_time,
       t2.air_hours,
       t2.grnd_hours,
       t2.night_hours,
       t2.totl_hours ftb_totl_hours,
       t2.is_icao,
       t3.fly_hours,
       t3.exp_hours,
       t3.left_hours,
       t3.left_updowns,
       t3.left_op_manu,
       t3.right_hours,
       t3.right_updowns,
       t3.right_op_manu,
       t4.auto_flag roster_auto_flag,
       t4.fjs_order,
       t4.rank_no,
       t4.ts_flag,
       t4.check_type,
       t4.tech_no_i,
       t4.tech_no_z,
       t4.hotel_yn,
       t4.hotel_id
  from t_flt_schedule t1
       inner join t_svc_ftb t2 on t1.flight_id = t2.flight_id
             and  nvl(t1.flg_cs,'A') not in ('C', 'D') and t1.flight_flag in ('A','C')
       inner join t_svc_ftb_detail t3 on t1.flight_id = t3.flight_id
             and t2.ftb_no = t3.ftb_no
       left join t_sch_roster t4 on t1.flight_id = t4.flight_id and t3.p_code = t4.p_code
             and t4.rank_no not like 'S00%' and t4.rank_no not like 'M00%'
             and t4.module_flag = 'F'
       left join t_bas_fleet tp1 on t1.ac_type = tp1.ac_type
             and tp1.valid_flag = 'Y';

prompt
prompt Creating view V_SVC_STEP_RECORD
prompt ===============================
prompt
create or replace force view v_svc_step_record as
select /*??????????????????????/??????????*/
        distinct a.flight_id,a.step_type,a.step_yn first_step_yn,a.op_time first_time,b.step_yn last_step_yn,b.op_time last_time
   from (select flight_id,step_type,step_yn,op_time,
                RANK() OVER(PARTITION BY flight_id,step_type ORDER BY op_time ASC) RK
           from T_SVC_RECORD
        ) a,
        (select flight_id,step_type,step_yn,op_time,
                RANK() OVER(PARTITION BY flight_id,step_type ORDER BY op_time DESC) RK
           from T_SVC_RECORD
        ) b
   where a.RK = 1
     and b.RK = 1
     and a.flight_id = b.flight_id
     and a.step_type = b.step_type;

prompt
prompt Creating view V_TECH
prompt ====================
prompt
create or replace force view v_tech as
select aa.p_code, min(aa.tech_no_i) tech_no,
        min(bb.tech_rank) tech_rank,
        stragg(Distinct aa.ac_type) ac_types
   from t_tech_info aa,t_bas_tech bb
  Where aa.tech_no_i = bb.tech_no
    and aa.valid_flag = 'Y'
    and bb.tech_type ='A'
    And bb.module_flag='F'
 Group by aa.p_code;

prompt
prompt Creating view V_TECHZ
prompt =====================
prompt
create or replace force view v_techz as
Select xx.p_code,
        min(xx.tech_no_z) tech_no,
        min(xx.tech_no_i) tech_no_i,
        wm_concat(xx.ac_short_types) ac_short_types,
        wm_concat(xx.tech_nos) tech_nos,
        wm_concat(xx.tech_nos_i) tech_nos_i,
        wm_concat(xx.tech_Radios) tech_Radios,
        wm_concat(xx.tech_Checkers) tech_Checkers,
        min(xx.tech_rank) tech_rank,
        min(xx.idx) idx
 From(select aa.p_code,
        aa.tech_no_z,
        aa.tech_no_i,
        aa.ac_short_types,
        Decode(bb.tech_type,'A', bb.idx,1000) idx,
        bb.tech_rank,
        Decode(aa.TECH_NO_Z,null,null, aa.ac_type||'('||aa.TECH_NO_Z||')') tech_nos,
        Decode(bb.tech_type,'A',aa.ac_type||'('||aa.tech_no_i||')',null) tech_nos_i,
        Decode(bb.tech_type,'B',aa.tech_no_i,null) tech_Radios,
        Decode(bb.tech_type,'L',aa.ac_type||'('||aa.tech_no_i||')',null) tech_Checkers
   from t_tech_info aa,t_bas_tech bb
  Where aa.TECH_NO_I = bb.tech_no
    and aa.valid_flag = 'Y'
    and bb.in_ex ='I'
    And bb.module_flag='F'
    Order by aa.ac_type Asc ) XX
 Group by XX.p_code;

prompt
prompt Creating package SESSION_PARAMETERS
prompt ===================================
prompt
CREATE OR REPLACE PACKAGE SESSION_PARAMETERS AS
   USER_CODE     VARCHAR2(20);  --操作用户代码
   MODULE_FLAG   VARCHAR2(1);  -- 系统代码
   UNIT_ID       VARCHAR2(20);  --用户席位代码（T8105.UNIT_ID）
   LOG_W         CHAR(1);       -- Y=写，N=不写
   S_TYPE        VARCHAR2(20);  --分类
   IP            VARCHAR2(15);  --操作用户IP
   MACHINE       VARCHAR2(50);  --操作用户机器
   REMARKS       VARCHAR2(200);
END SESSION_PARAMETERS;
/

prompt
prompt Creating function FN_CACCEL_CREW_PAIRING_LINE
prompt =============================================
prompt
create or replace function FN_CACCEL_crew_pairing_line(f_flight_id varchar2,
                                                        f_p_code    varchar2)
   return varchar2 is
   Result varchar2(50);
 begin
   select to_char(new_col)
     into Result
     from (select flight_id,
                  to_number(replace(Remarks, 'L', '')) new_col,
                  op_time,
                  P_CODE,
                  old_p_code,
                  row_number() over(partition by flight_id order by op_time desc) rk
             from t_sch_roster_log
            where FLIGHT_ID = f_flight_id
              AND (P_CODE = f_p_code or old_p_code = f_p_code)) a
    where a.rk = 1;
   return(Result);
 end;
/

prompt
prompt Creating function FN_FIRSTDATE
prompt ==============================
prompt
create or replace function FN_firstDate(f_guidpk varchar2)
   return varchar2 is
   Result varchar2(50);
 begin
        select min(flight_date)
        into Result
        from  T_PRF_FLIGHT_APPLY
        where guidpk=f_guidpk
   return(Result);
 end;
 create or replace function FN_firstDate_FLIGHTAPPLY(f_guidpk varchar2)
   return date is
   Result date;
 begin
        select min(flight_date)
        into Result
        from  T_PRF_FLIGHT_APPLY
        where guidpk=f_guidpk;
   return(Result);
 end;
 create or replace function FN_firstFlightID_FLIGHTAPPLY(f_guidpk varchar2)
   return varchar is
   Result varchar(20);
 begin

         select flight_id
         into Result
    from (
    select rownum rn,flight_id
    from (select flight_id from  T_PRF_FLIGHT_APPLY where guidpk=f_guidpk  order by FLIGHT_DATE ))
    where rn=1;
   return(Result);
 end;
 create or replace function fn_firstFlightNo_crewpairline(p_crew_pairing_line varchar2)
   return varchar2 is
   Result varchar2(50);
 begin


               select flight_no
               into Result
               from (
              select rownum rn,std,flight_no
              from (
             select a.std,a.flight_no
             from t_flt_schedule a
            where exists (select 1
                     from t_sch_pairing b
                    where b.crew_link_line = a.crew_link_line
                      and b.crew_pairing_line = p_crew_pairing_line)
              order by a.std ))
              where rn=1 ;
   return(Result);
 end;
/

prompt
prompt Creating function FN_FLIGHTIDS_FLIGHTINFO
prompt =========================================
prompt
create or replace function fn_flightids_FlightInfo(FlightIDs in varchar2) return varchar2 is


   --FlightIDs varchar(100);


 begin

   return FlightIDs ;
 end fn_flightids_FlightInfo;
/

prompt
prompt Creating function FN_FLIGHTNUM_CREWPAIRLINE
prompt ===========================================
prompt
create or replace function fn_FlightNum_crewpairline(p_crew_pairing_line varchar2,p_codec varchar2)
   return varchar2 is
   Result varchar2(50);
 begin
   select sum(1)
     into Result
     from t_flt_schedule a
    where exists (select 1
             from t_sch_pairing b
            where b.crew_link_line = a.crew_link_line
             and b.flight_date>=to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd')
              and b.crew_pairing_line = p_crew_pairing_line

              )
          and
          exists (select 1
                     from t_sch_roster r
                     where  a.flight_id=r.flight_id
                     and r.p_code=p_codec
              );
   return(Result);
 end;
/

prompt
prompt Creating function FN_GETDAYS_CREWPAIRLINE
prompt =========================================
prompt
create or replace function fn_getdays_crewpairline(p_crew_pairing_line varchar2)
   return varchar2 is
   Result varchar2(50);
 begin
   select (max(a.flight_date) - min(a.flight_date) + 1)
     into Result
     from t_flt_schedule a
    where exists (select 1
             from t_sch_pairing b
            where b.crew_link_line = a.crew_link_line
              and b.crew_pairing_line = p_crew_pairing_line);
   return(Result);
 end;
/

prompt
prompt Creating function FN_GETFIRSTFLIGHT_DATE
prompt ========================================
prompt
create or replace function fn_getfirstflight_date(flight_id1 in varchar2,
                                               p_code1    in varchar2)
   return date is
   Result        date;
   t_flight_date date;
   t_std         date;
 begin
   select flight_date, std
     into t_flight_date, t_std
     from t_flt_schedule ule
    where ule.flight_id = flight_id1;
     select flight_date
     into Result
     from (select flight_date
             from (select ter.flight_date,ule.std
                     from t_sch_roster ter, t_flt_schedule ule
                    where ter.flight_id = ule.flight_id
                      and ter.p_code = p_code1
                      and ule.departure_airport in ('SHA','PVG')
                      and ule.std < t_std
                      /*and substr(ter.rank_no,1,1)!='S'*/
                      and ule.flight_date>=t_flight_date-7 and ule.flight_date<=t_flight_date
               /*       and ule.flight_date-5 <= t_flight_date*/
                    order by std desc)
            where rownum < 2);
  return(Result);
 end fn_getfirstflight_date;
/

prompt
prompt Creating function FN_GETFLIGHTASSIGNENTCAT
prompt ==========================================
prompt
create or replace function fn_getflightAssignentCAT(recid number ) return varchar2 is
   Result varchar2(50);
   row_count number(5);
 begin
  /*  PRAGMA AUTONOMOUS_TRANSACTION;*/
    insert into t_intf_efb_cat
  select p_code, rank_no, qlf_code, qlf_name, nvl(idx,2) idx /*????????????????catI 2015-01-19*/
                   from (select ion.p_code,
                                decode(ter.rank_no, 'A001', 'jz', 'B001', 'jz') rank_no,
                                qlf.qlf_code,
                                qlf.qlf_name,
                                qlf.idx
                           from t_flt_schedule      ule,
                                t_sch_roster        ter,
                                t_bas_fleet         eet,
                                t_tech_qulification ion,
                                t_tech_qlf          qlf
                          where ule.flight_id = ter.flight_id
                            and ter.rank_no in ('A001', 'B001')
                            and ule.ac_type = eet.ac_type
                            and eet.ac_type_crew = ion.ac_types
                            and ter.p_code = ion.p_code
                            and ion.valid_flag = 'Y'
                            and ion.qlf_code = qlf.qlf_code
                            and ion.over_date >= ule.flight_date
                            and qlf.parent_code = '391'
                            and qlf.qlf_code != '483'
                            and ule.flight_id =
                                (select flight_id
                                   from (select flight_id
                                           from t_flt_schedule ule,
                                                t_sch_pairing  ing
                                          where ule.crew_link_line =
                                                ing.crew_link_line
                                            and ing.rec_id = recid)
                                  where rownum <= 1)
                          order by qlf.idx desc) t1
                  where rownum <= 1;
 insert into t_intf_efb_cat1
 select p_code, rank_no, qlf_code, qlf_name, idx
                   from (select ion.p_code,
                                decode(ter.rank_no,
                                       'A001',
                                       'fj',
                                       'B001',
                                       'fj',
                                       'C001',
                                       'fj',
                                       'fj') rank_no,
                                qlf.qlf_code,
                                qlf.qlf_name,
                                qlf.idx
                           from t_flt_schedule      ule,
                                t_sch_roster        ter,
                                t_bas_fleet         eet,
                                t_tech_qulification ion,
                                t_tech_qlf          qlf
                          where ule.flight_id = ter.flight_id
                            and ter.rank_no in ('A001', 'B001', 'C001')
                            and ule.ac_type = eet.ac_type
                            and eet.ac_type_crew = ion.ac_types
                            and ter.p_code = ion.p_code(+)
                            and ion.valid_flag = 'Y'
                            and ion.qlf_code = qlf.qlf_code
                            and ion.over_date >= ule.flight_date
                            and qlf.parent_code = '391'
                            and qlf.qlf_code != '483'
                            and ule.flight_id =
                                (select flight_id
                                   from (select flight_id
                                           from t_flt_schedule ule,
                                                t_sch_pairing  ing
                                          where ule.crew_link_line =
                                                ing.crew_link_line
                                            and ing.rec_id = recid)
                                  where rownum <= 1)
                            and ter.p_code !=
                                (select p_code
                                   from (select ion.p_code,
                                                decode(ter.rank_no,
                                                       'A001',
                                                       'jz',
                                                       'B001',
                                                       'jz') rank_no,
                                                qlf.qlf_code,
                                                qlf.qlf_name,
                                                qlf.idx
                                            from t_flt_schedule      ule,
                                                t_sch_roster        ter,
                                                t_bas_fleet         eet,
                                                t_tech_qulification ion,
                                                t_tech_qlf          qlf
                                          where ule.flight_id = ter.flight_id
                                            and ter.rank_no in ('A001', 'B001')
                                            and ule.ac_type = eet.ac_type
                                            and eet.ac_type_crew = ion.ac_types
                                            and ter.p_code = ion.p_code
                                            and ion.valid_flag = 'Y'
                                            and ion.qlf_code = qlf.qlf_code
                                            and ion.over_date >= ule.flight_date
                                            and qlf.parent_code = '391'
                                            and qlf.qlf_code != '483'
                                            and ule.flight_id =
                                                (select flight_id
                                                   from (select flight_id
                                                           from t_flt_schedule ule,
                                                                t_sch_pairing  ing
                                                          where ule.crew_link_line =
                                                                ing.crew_link_line
                                                            and ing.rec_id = recid)
                                                  where rownum <= 1)
                                          order by qlf.idx desc) t1
                                  where rownum <= 1)
                          order by qlf.idx desc) t1
                  where rownum <= 1;
   select count(*) into row_count from t_intf_efb_cat;
   if row_count=0 then
     begin
     insert into t_intf_efb_cat values('000','jz','392','CAT I',2);
     end;
   end if;
   select count(*) into row_count from t_intf_efb_cat1;
   if row_count=0 then
     begin
     insert into t_intf_efb_cat1 values('000','fj','392','CAT I',2);
     end;
   end if;
   select qlf_name into Result from (select * from (select * from t_intf_efb_cat
    union all
    select * from t_intf_efb_cat1) order by idx asc) where rownum<=1;
   return(Result);
 end fn_getflightAssignentCAT;
 create or replace function fn_getFlight_com(flight_id1 in number) return varchar2 is
   Result varchar2(500);
   duty_line1 number;
 begin
    select ing.duty_line into duty_line1
   from t_flt_schedule ule, t_sch_pairing ing
  where ule.flight_id = flight_id1
    and ule.crew_link_line = ing.crew_link_line;
  select replace(wm_concat(flight_no),',','/') into Result  from (select ule.flight_no
   from t_flt_schedule ule, t_sch_pairing ing
  where ule.flight_id = flight_id
    and ule.crew_link_line = ing.crew_link_line
    and ing.duty_line=duty_line1
    order by ule.std);
   return(Result);
 end fn_getFlight_com;
/

prompt
prompt Creating function FN_GETISARRANGE
prompt =================================
prompt
create or replace function fn_getIsArrange(crew_line_lines in varchar2,check_yn in varchar2) return varchar2 is
   Result varchar2(100);
 begin
   select max(is_arranges) into Result
   from (select wm_concat(is_arrange) over(partition by row_no1 order by row_no) is_arranges
           from (select row_number() over(partition by crew_link_line, is_arrange order by row_no) row_no1,
                        crew_link_line,
                        is_arrange,
                        row_no
                   from (select rownum row_no,
                                ule1.crew_link_line,
                                decode(ule.sch_pub_flag || check_yn,'YY','Y','YN','Y','N') is_arrange
                           from t_flt_schedule ule,
                                (             with a as (select crew_line_lines || '/' crew_link_line
                                                           from dual)
                                  select regexp_substr(crew_link_line,
                                                       '[^/]+',
                                                       1,
                                                       rownum) crew_link_line
                                    from a
                                  connect by rownum <=
                                             length(regexp_replace(crew_link_line,
                                                                   '[^/]+'))) ule1
                                   where ule.crew_link_line =
                                         ule1.crew_link_line
                         ))
          where row_no1 = 1
          order by row_no);
   return(Result);
 end fn_getIsArrange;
/

prompt
prompt Creating function FN_GETMAXTIME
prompt ===============================
prompt
create or replace function fn_getmaxtime(crew_line_lines in varchar2,op_time in date) return date is
   Result date;
 begin
   select max(op_time) max_time into Result
    from t_flt_schedule ule,
         (             with a as (select crew_line_lines ||'/' crew_link_line
                                    from dual)
           select regexp_substr(crew_link_line, '[^/]+', 1, rownum) crew_link_line
             from a
           connect by rownum <=
                      length(regexp_replace(crew_link_line, '[^/]+'))) ule1
            where ule.crew_link_line = ule1.crew_link_line;
    select greatest(nvl(Result,date'1900-01-01'),op_time) into Result from dual;
   return(Result);
 end fn_getmaxtime;
 create or replace function fn_getminflightdate(crew_line_lines in varchar2) return date is
   Result date;
 begin
   select min(flight_date) flight_date into Result
    from t_flt_schedule ule,
         (             with a as (select crew_line_lines ||'/' crew_link_line
                                    from dual)
           select regexp_substr(crew_link_line, '[^/]+', 1, rownum) crew_link_line
             from a
           connect by rownum <=
                      length(regexp_replace(crew_link_line, '[^/]+'))) ule1
            where ule.crew_link_line = ule1.crew_link_line;
    return(Result);
 end fn_getminflightdate;
/

prompt
prompt Creating function FN_GETNEXTFIGHT_ID
prompt ====================================
prompt
create or replace function fn_getnextfight_id(flight_id1 in varchar2,
                                               p_code1    in varchar2)
   return number is
   Result        number(15);
   t_flight_date date;
   t_std         date;
 begin
   select flight_date, std
     into t_flight_date, t_std
     from t_flt_schedule ule
    where ule.flight_id = flight_id1;
   select flight_id
     into Result
     from (select flight_id
             from (select ter.flight_id
                     from t_sch_roster ter, t_flt_schedule ule
                    where ter.flight_id = ule.flight_id
                      and ter.p_code = p_code1
                      and ule.std > t_std
                      and substr(ter.rank_no, 1, 1) != 'S'
                      and ule.flight_date >= t_flight_date
                      and ule.flight_date <= t_flight_date + 5
                    order by std asc)
            where rownum < 2);
   return(Result);
 end fn_getnextfight_id;
/

prompt
prompt Creating function FN_GETPILOTINFO
prompt =================================
prompt
create or replace function fn_getpilotinfo(p_code in varchar2,depCode in varchar2) return varchar2 is
   Result varchar2(500);
 begin
     select wm_concat(tc.fxw_id ||'/' || tc.work_no ||'/' ||tc.c_name) pilotinfo into Result
    from t_hr_crew tc,
         (             with a as (select p_code ||'/' p_codes
                                    from dual)
           select regexp_substr(p_codes, '[^/]+', 1, rownum) p_codes
             from a
           connect by rownum <=
                      length(regexp_replace(p_codes, '[^/]+'))) tc1
            where tc.p_code = tc1.p_codes and tc.dep_code like '%' || depCode || '%';
   return(Result);
 end fn_getpilotinfo;
 create or replace function fn_getplantailno(crew_line_lines in varchar2) return varchar2 is
   Result varchar2(100);
 begin
    select wm_concat(tail_no) into Result from (select distinct ule.ac_reg tail_no
    from t_flt_schedule ule,
         (             with a as (select crew_line_lines ||'/' crew_link_line
                                    from dual)
           select regexp_substr(crew_link_line, '[^/]+', 1, rownum) crew_link_line
             from a
           connect by rownum <=
                      length(regexp_replace(crew_link_line, '[^/]+'))) ule1
            where ule.crew_link_line = ule1.crew_link_line);
   return(Result);
 end fn_getplantailno;
/

prompt
prompt Creating function FN_GETSUMROOMS
prompt ================================
prompt
create or replace function fn_getsumrooms(flight_id in number,depcode varchar2) return number is
 result number(12);
 v_sql varchar2(2000);
 begin
 v_sql:='select sum(sum_rooms)
   from (select ceil(sum((case
                           when ter.rank_no = ''A001'' or ter.rank_no = ''B001'' then
                            1
                           when (ter.rank_no = ''C001'' or ter.rank_no = ''C002'') then
                            0.5
                           else
                            0
                         end))) sum_rooms,
                sum((case
                      when ter.rank_no = ''A001'' or ter.rank_no = ''B001'' then
                       1
                      when (ter.rank_no = ''C001'' or ter.rank_no = ''C002'') then
                       0.5
                      else
                       0
                    end))
           from t_sch_roster ter, t_hr_crew tc
          where ter.p_code = tc.p_code
            and ter.flight_id =' || flight_id ||' and instr(tc.dep_code,''' || depcode || ''')>0
          group by sex)';
        execute immediate v_sql into result;
      return (result);
 end fn_getsumrooms;
/

prompt
prompt Creating function FN_GETZHUWAIGUOYE
prompt ===================================
prompt
create or replace function fn_getzhuwaiguoye(flight_id number) return varchar2
   is
   result varchar2(50);
   v_sql varchar2(1500);
  begin
   if flight_id is null then return 'N';
   end if;
   v_sql :='select (case
            when instr(bases, t.arrival_airport) > 0 then
             ''N''
            else
             ''Y''
          end) is_guoye
     from (select ule.arrival_airport,
                  (select wm_concat(base.base) bases
                     from t_bas_base base
                    where base.base_yn = ''Y''
                      and base.filiale = ule.crew_owner) bases,
                  row_number() over(partition by ule.flight_date, ing.crew_pairing_line order by ule.std) row_no
             from t_flt_schedule ule, t_sch_pairing ing
            where ule.crew_link_line = ing.crew_link_line
              and ule.flight_date>=date''2015-01-01''
              and ule.flight_id =' || flight_id || ') t
    where t.row_no = 1';
    execute immediate v_sql into result;
    return result;
  end fn_getzhuwaiguoye;
/

prompt
prompt Creating function FN_HOLIDAYPLANDAY
prompt ===================================
prompt
create or replace function FN_HolidayPlanDay(begintime varchar, pcode varchar)
 return integer is
   Result integer;
 begin
    select  nvl(t.plan_day,0) - nvl(s.odd,0) Surplus into Result
                                   from T_TR_HOLI_STD t,
                                        (select d.p_code, ceil(sum((d.end_date - d.start_date) )) odd
                                           from T_TR_HOLI_SCH d
                                          where to_char(d.stop_date,'yyyy') =begintime
                                          and d.p_code is not null
                                          group by d.p_code) s
                                  where t.p_code = s.p_code(+)
                                  and t.p_code=pcode
                                    and to_char(t.stop_date,'yyyy') = begintime;
   return(Result);
 end FN_HolidayPlanDay;
/

prompt
prompt Creating function FN_PARING_DAYFLIGHT
prompt =====================================
prompt
create or replace function fn_paring_DayFlight(p_crew_pairing_line varchar2)
   return varchar2 is
   Result varchar2(50);
 begin


               select flight_no
               into Result
               from (
              select rownum rn,std,flight_no
              from (
             select a.std,a.flight_no
             from t_flt_schedule a
            where exists (select 1
                     from t_sch_pairing b
                    where b.crew_link_line = a.crew_link_line
                      and b.crew_pairing_line = '5304642')
              order by a.std ))
              where rn=1 ;
   return(Result);
 end;
/

prompt
prompt Creating function FN_SCORES
prompt ===========================
prompt
create or replace function FN_SCORES( begintime in date, endtime in date)
   return type_tb_scores
   is
   o_tb type_tb_scores := type_tb_scores();
   i number := 0;
 begin
   /*????????????*/
   for v_rec in (select * from t_prf_scores where scorestype='A' and  flight_date between begintime and endtime) loop
     /*??????????????????*/
     for v_rec2 in (
                    with s as (
                         select v_rec.param_id, v_rec.record_id, v_rec.p_code, v_rec.scores_id,
                         v_rec.flight_date, v_rec.value, v_rec.op_time, v_rec.remarks, v_rec.scorestype
                         from dual
                         )
                   select level,regexp_substr( TRIM(',' FROM param_id),'[^,]+',1,level ) param_id,
                   regexp_substr( regexp_substr(remarks,'[^;]+',1,level ),'[^,]+',1,1 ) flight_id,
                   regexp_substr( regexp_substr(regexp_substr(remarks,'[^;]+',1,level ),'[^,]+',1,2 ),'[^/]+',1,2) valuess,
                   param_id as param_ids, record_id, p_code,scores_id ,
                   flight_date, value countValue, op_time, remarks, scorestype


                   from s
                   connect by level< length(TRIM(',' FROM s.param_id)) -length(replace(TRIM(',' FROM s.param_id),',',''))+2) loop
            o_tb.extend;
            i := i + 1;
            /*????????????????????????????*/
           o_tb(i) := type_row_scores (
           v_rec2.record_id,
           v_rec2.scores_id,
           v_rec2.p_code,
           v_rec2.flight_date,
           v_rec2.param_ids,
           v_rec2.flight_id ,
           v_rec2.valuess,
           v_rec2.param_id,
           v_rec2.op_time,
           v_rec2.remarks,
           v_rec2.countValue,
           v_rec2.scorestype
           );  /*??????????*/
     end loop;
   end loop;
   return o_tb;
 end FN_SCORES;
 create or replace function fn_Scores_R(remarks in varchar2) return varchar2 is
   STR VARCHAR2(400);
   lenR number;
   i number;
   ramark varchar(100);
   flightid varchar(100);
   paramid varchar(100);
   valuess varchar(100);
   temp varchar(100);
 begin
    temp:=TRIM(both ';' FROM remarks);
   --????
    lenR:= length(temp)- length( REPLACE(temp,';',''))+1;
   begin
    i:=1;
         while i<=lenR
           loop
             --??n??
              ramark:=  regexp_substr(temp ,'[^;]+',1,i);
              flightid:=  regexp_substr(ramark ,'[^,]+',1,1);
              paramid:=  regexp_substr(regexp_substr(ramark ,'[^,]+',1,2) ,'[^/]+',1,1);
              valuess:=  regexp_substr(regexp_substr(ramark ,'[^,]+',1,2) ,'[^/]+',1,2);
              for v_rec in (select  (flight_no ||'/'||to_char(flight_date,'yyyy-MM-dd')) ffd from t_flt_schedule where flight_id=flightid) loop
                STR:=STR || v_rec.ffd||'/';
              end loop;
              for v_rec in (select  parm_name  from t_prf_param where parm_id =paramid) loop
                STR:=STR || v_rec.parm_name||'/';
              end loop;
             STR:=STR || valuess||' ; ';
              i:=i+1;
             end loop;
       end;
   return STR ;
 end fn_Scores_R;
/

prompt
prompt Creating function FN_YEARA_INDEX
prompt ================================
prompt
CREATE OR REPLACE FUNCTION fn_YearA_Index(workNo VARCHAR2,blockId varchar2)
  RETURN varchar2 IS
  Result varchar2(50);
 BEGIN
       --??????????????

   select to_char(rn)  into Result
     from (select rownum rn ,work_no,scores
     from (select work_no,scores
     from (select c.work_no,
       (nvl(( select ini.scores  from t_prf_initintegral ini
               where  exists (select 1 from t_prf_integralcycle inte
                              where ini.integralcycle_id=inte.id and to_char(inte.startdate,'yyyy')=to_char(sysdate,'yyyy')
                              and exists (select 1 from t_rule_version ver where inte.ver_id=ver.ver_id and ver.filiale=c.filiale  )
                 )  and  ini.p_code=c.p_code),0 )
                                               +
         nvl((select sum(scores) from t_prf_scores_sum
              where p_code=c.p_code and to_char(flight_date,'yyyy')=to_char(sysdate,'yyyy')  group by p_code ),0)) scores
       from (
         select filiale,work_no,p_code from(
                 select a.p_code,h.filiale,h.work_no from t_prf_appraisal a, t_hr_crew h where a.p_code=h.p_code AND a.apply_result <>'X' and  block_id=blockId
                 union all
                 select p_code,filiale,work_no from t_hr_crew where work_no =workNo
             )
         group by filiale,work_no,p_code
       ) c
     )
     order by scores desc))
     WHERE work_no=workNo;
      RETURN Result;
 END;
/

prompt
prompt Creating function F_DAYS_OF_MONTH
prompt =================================
prompt
CREATE OR REPLACE FUNCTION F_DAYS_OF_MONTH(YEARMONTH VARCHAR2) RETURN NUMBER
 AS
   D1 VARCHAR2(8);
   Days NUMBER;
 BEGIN
   D1 := YEARMONTH || '01';
   Days := ADD_MONTHS(TO_DATE(D1,'YYYYMMDD'),1)-TO_DATE(D1,'YYYYMMDD');
   RETURN Days;
 END;
/

prompt
prompt Creating function F_FIRSTDAY_OF_MONTH
prompt =====================================
prompt
CREATE OR REPLACE FUNCTION F_FIRSTDAY_OF_MONTH(YEARMONTH VARCHAR2) RETURN DATE
 AS
   D1 VARCHAR2(8);
   D2 DATE;
 BEGIN
   D1 := YEARMONTH || '01';
   d2 := TO_DATE(D1,'YYYYMMDD');
   RETURN D2;
 END;
/

prompt
prompt Creating function F_FLT_SEASON
prompt ==============================
prompt
CREATE OR REPLACE FUNCTION F_FLT_SEASON(P_FLTDATE DATE) RETURN VARCHAR2
 /*??????????????????????????*/
 AS
   A_SA_DATE DATE;
   A_WS_DATE DATE;
   A_WEEKDAY NUMBER;
 BEGIN
   SELECT LAST_DAY(TO_DATE(TO_CHAR(P_FLTDATE,'YYYY') || '1001','YYYYMMDD')) INTO A_WS_DATE FROM DUAL;
   SELECT TO_NUMBER(TO_CHAR(A_WS_DATE,'D')) INTO A_WEEKDAY FROM DUAL;
   IF A_WEEKDAY <> 1 THEN
     A_WS_DATE := A_WS_DATE - A_WEEKDAY + 1;
   END IF;

   SELECT LAST_DAY(TO_DATE(TO_CHAR(P_FLTDATE,'YYYY') || '0301','YYYYMMDD')) INTO A_SA_DATE FROM DUAL;
   SELECT TO_NUMBER(TO_CHAR(A_SA_DATE,'D')) INTO A_WEEKDAY FROM DUAL;
   IF A_WEEKDAY <> 1 THEN
     A_SA_DATE := A_SA_DATE - A_WEEKDAY + 1;
   END IF;

   IF P_FLTDATE < A_SA_DATE THEN
     RETURN 'W';
   ELSIF P_FLTDATE >= A_SA_DATE AND P_FLTDATE < A_WS_DATE THEN
     RETURN 'S';
   ELSE
     RETURN 'W';
   END IF;
 END;
/

prompt
prompt Creating function F_FLT_SEASON_E
prompt ================================
prompt
CREATE OR REPLACE FUNCTION F_FLT_SEASON_E(P_FLTDATE DATE) RETURN Date
 /*??????????????????????????????*/
 AS
   A_WS_DATE DATE;
   A_WEEKDAY NUMBER;
 BEGIN
   SELECT LAST_DAY(TO_DATE(TO_CHAR(P_FLTDATE,'YYYY') || '1001','YYYYMMDD')) INTO A_WS_DATE FROM DUAL;
   SELECT TO_NUMBER(TO_CHAR(A_WS_DATE,'D')) INTO A_WEEKDAY FROM DUAL;
   IF A_WEEKDAY <> 1 THEN
     A_WS_DATE := A_WS_DATE - A_WEEKDAY + 1;
   END IF;

   RETURN A_WS_DATE;
 END;
/

prompt
prompt Creating function F_FLT_SEASON_S
prompt ================================
prompt
CREATE OR REPLACE FUNCTION F_FLT_SEASON_S(P_FLTDATE DATE) RETURN Date
 /*??????????????????????????????*/
 AS
   A_SA_DATE DATE;
   A_WEEKDAY NUMBER;
 BEGIN
   SELECT LAST_DAY(TO_DATE(TO_CHAR(P_FLTDATE,'YYYY') || '0301','YYYYMMDD')) INTO A_SA_DATE FROM DUAL;
   SELECT TO_NUMBER(TO_CHAR(A_SA_DATE,'D')) INTO A_WEEKDAY FROM DUAL;
   IF A_WEEKDAY <> 1 THEN
     A_SA_DATE := A_SA_DATE - A_WEEKDAY + 1;
   END IF;

   RETURN A_SA_DATE;
 END;
 create or replace function F_GET_CHGS(str1 IN OUT varchar2,str2 IN OUT varchar2,separator1 varchar2,separator2 varchar2)
   return varchar2 is
   i NUMBER := 1;
   j NUMBER := 1;
   k NUMBER := 1;
   m NUMBER := 1;
   v_tempStr1 varchar2(4000);
   v_tempStr2 varchar2(4000);
   v_checkstr1 varchar2(4000);
   v_checkstr2 varchar2(4000);
   v_resultstr1 varchar2(4000);
   v_resultstr2 varchar2(4000);
 begin
   LOOP
      i := instr(str1,separator1,k);
      j := instr(str2,separator1,k);
      if i=0 then
        v_tempStr1 := str1;
        v_tempStr2 := str2;
      else
        v_tempStr1 := substr(str1,1,i-1);
        v_tempStr2 := substr(str2,1,j-1);
      end if;
      m := instr(v_tempStr2,separator2,k);
      v_checkstr1 := substr(v_tempStr2,1,m-1);
      v_checkstr2 := substr(v_tempStr2,m+length(separator2));
      if nvl(v_checkstr1,'@#$%^&')!=nvl(v_checkstr2,'@#$%^&') then
         v_resultstr1 := v_resultstr1||separator1||v_tempStr1;
         v_resultstr2 := v_resultstr2||separator1||v_tempStr2;
      end if;
      str1 := substr(str1,i+length(separator1));
      str2 := substr(str2,j+length(separator1));
      exit when i=0;
   end LOOP;
   str1 := ltrim(v_resultstr1,separator1);
   str2 := ltrim(v_resultstr2,separator1);
   return str1;
 end F_GET_CHGS;
/

prompt
prompt Creating function F_GET_FLY_HOURS
prompt =================================
prompt
create or replace function F_get_fly_hours(fly_hours number  )
   return number is
   Result number;
 begin
    select
        case
          when to_number(substr(to_char(fly_hours),
                                length(to_char(fly_hours)),
                                1)) >= 5 then
           to_number(substr(to_char(fly_hours),
                            0,
                            length(to_char(fly_hours)) - 1) || '5')
          else
           to_number(substr(to_char(fly_hours),
                            0,
                            length(to_char(fly_hours)) - 1) || '0')
        end into Result
   from dual c;
   return(Result);
 end;
/

prompt
prompt Creating function F_GET_LINE_COM
prompt ================================
prompt
create or replace function f_get_line_com(in_mm_leg_id number)
   return varchar2 as
   str_dep varchar2(4);
   str_arr varchar2(4);
   str_com varchar2(100);
   cursor myCur is
     select t.departure_airport, t.arrival_airport
       from t_flt_schedule t
      where nvl(t.flg_cs, 'X') <> 'C'
        and nvl(t.flg_cs, 'X') <> 'D'
        and nvl(t.flg_vr, 'X') <> 'V'
        and nvl(t.flg_vr, 'X') <> 'R'
        and t.departure_airport <> t.arrival_airport
        and t.crew_link_line =
            (select crew_link_line
               from t_flt_schedule t1
              where t1.mm_leg_id = in_mm_leg_id)
      order by t.atd;
 begin
   /*201600728 ????????FOC????????????*/
   str_com := NULL;

   FOR lpCur IN myCur LOOP

     str_dep := lpCur.departure_airport;
     str_arr := lpCur.arrival_airport;

     select t.airport_4code
       into str_dep
       from t_bas_airport t
      where t.airport_3code = str_dep;
     select t.airport_4code
       into str_arr
       from t_bas_airport t
      where t.airport_3code = str_arr;

     if str_com is null then
       str_com := str_dep || '-' || str_arr;
     else
       str_com := str_com || '-' || str_arr;
     end if;

   END LOOP;

   return(str_com);

 end;
/

prompt
prompt Creating function F_LASTDAY_OF_MONTH
prompt ====================================
prompt
CREATE OR REPLACE FUNCTION F_LASTDAY_OF_MONTH(YEARMONTH VARCHAR2) RETURN DATE
 AS
   D1 VARCHAR2(8);
   D2 DATE;
 BEGIN
   D1 := YEARMONTH || '01';
   D2 := ADD_MONTHS(TO_DATE(D1,'YYYYMMDD'),1)-1;
   RETURN D2;
 END;
 create or replace function f_max(p_date1 date, p_date2 date) return date
 as
 /*??????????????????????*/
 begin
   if nvl(p_date1, to_date('1900-01-01','yyyy-mm-dd')) > nvl(p_date2, to_date('1900-01-01','yyyy-mm-dd')) then
      return p_date1;
    else
      return p_date2;
    end if;
 end;
 create or replace function f_min(pX1 int, pX2 int) return int
 as
 /*????????????????????*/
 begin
   if (pX1<pX2) then
      return pX1;
    else
      return pX2;
    end if;
 end;
 create or replace function F_MM_HMDOT(minutes IN number)
 Return varchar2
 Is
 receive number;
 rest number;
 part1 varchar2(8);
 part2 varchar2(8);

 /*icrew???? ??????????????????????????HH.MM
 BY LIZF  SUNWIN  2007-05-01*/

 Begin
     receive := nvl(minutes,0);

     rest :=Abs( Mod(receive, 60));
     If rest < 10 and rest>=0 then
        part2 := '0'||to_char(rest) ;
     Else
        part2 := to_char(rest);
     End if;
     part1 := to_char(Trunc(receive/60));
     if (Length(part1) =1) then
      part1 :='0'||part1;
     end if;

       /*???????????????????????????????? ????-10??-50   zhangxigui 2013-11-27*/
   If part1 = '00' and receive < 0 then
     part1 := '-' || part1;
   end if;

    Return (part1||'.'||part2);
 End;
/

prompt
prompt Creating function F_MM_HMDOT20131127
prompt ====================================
prompt
create or replace function F_MM_HMDOT20131127(minutes IN number)
 Return varchar2
 Is
 receive number;
 rest number;
 part1 varchar2(8);
 part2 varchar2(8);

 /*icrew???? ??????????????????????????HH.MM
 BY LIZF  SUNWIN  2007-05-01*/

 Begin
     receive := nvl(minutes,0);

     rest :=Abs( Mod(receive, 60));
     If rest < 10 and rest>=0 then
        part2 := '0'||to_char(rest) ;
     Else
        part2 := to_char(rest);
     End if;
     part1 := to_char(Trunc(receive/60));
     if (Length(part1) =1) then
      part1 :='0'||part1;
     end if;
    Return (part1||'.'||part2);
 End;
 create or replace function F_MM_HMSTR(minutes IN number) Return varchar2 Is
   receive number;
   rest number;
   result_str varchar2(12);
 Begin
   receive := round(nvl(minutes, 0),0);

   if(receive<0)
     then result_str :='-';
   End if;

   receive :=ABS(receive);

   if(receive<600)
     then result_str :=result_str||'0';
   End if;

   rest :=Mod(receive, 60);

   if rest<10
    then result_str := result_str||to_char(trunc(receive / 60))||':0'||to_char(rest);
   else
    result_str := result_str||to_char(trunc(receive / 60))||':'||to_char(rest);
   End if;

   return result_str;
 End;
/

prompt
prompt Creating function F_MM_HMSTR
prompt ============================
prompt
create or replace function F_MM_HMSTR(minutes IN number) Return varchar2 Is
   receive number;
   rest number;
   result_str varchar2(12);
 Begin
   receive := round(nvl(minutes, 0),0);

   if(receive<0)
     then result_str :='-';
   End if;

   receive :=ABS(receive);

   if(receive<600)
     then result_str :=result_str||'0';
   End if;

   rest :=Mod(receive, 60);

   if rest<10
    then result_str := result_str||to_char(trunc(receive / 60))||':0'||to_char(rest);
   else
    result_str := result_str||to_char(trunc(receive / 60))||':'||to_char(rest);
   End if;

   return result_str;
 End;
/

prompt
prompt Creating function F_MM_HMSTR2
prompt =============================
prompt
create or replace function F_MM_HMSTR2(minutes IN number) Return varchar2 Is
   receive number;
   rest    number;
   part1   varchar2(20);
   part2   varchar2(20);

   /*icrew???? ??????????????????????????HH:MM
   BY LIZF  SUNWIN  2007-05-01*/

 Begin
   receive := nvl(minutes, 0);

   rest :=Abs(Mod(receive, 60));

   part2 :=to_char(rest,'09');

   part1 := to_char(Trunc(receive / 60));
   if (Length(part1) = 1) then
     part1 := '0' || part1;
   end if;

    /*???????????????????????????????? ????-10??-50   zhangxigui 2013-11-27*/
   If part1 = '00' and receive < 0 then
     part1 := '-' || part1;
   end if;

   Return(part1 || ':' || part2);
 End;
/

prompt
prompt Creating function F_MM_HMSTR20131127BAK
prompt =======================================
prompt
create or replace function F_MM_HMSTR20131127BAK(minutes IN number) Return varchar2 Is
   receive number;
   rest    number;
   part1   varchar2(8);
   part2   varchar2(8);

   /*icrew???? ??????????????????????????HH:MM
   BY LIZF  SUNWIN  2007-05-01*/

 Begin
   receive := nvl(minutes, 0);

   rest :=Abs(Mod(receive, 60));
   If rest < 10 and rest >= 0 then
     part2 := '0' || to_char(rest);
   Else
     part2 := to_char(rest);
   End if;
   part1 := to_char(Trunc(receive / 60));
   if (Length(part1) = 1) then
     part1 := '0' || part1;
   end if;
   Return(part1 || ':' || part2);
 End;
/

prompt
prompt Creating function F_PINYIN
prompt ==========================
prompt
CREATE OR REPLACE FUNCTION f_pinyin(hanzi varchar2, flag integer) return varchar2 as
   Result varchar2(64);
   OneHanzi varchar2(2);
   OnePinYin varchar2(16);
   i  integer;
   li_count integer;
   /*icrew???? ???????????????? BY LIZF  SUNWIN  2007-05-01*/
 begin
     Result := '';
     i := 1;
     while i <= length(trim(hanzi))
     loop
       OneHanzi := Substr(trim(hanzi), i, 1);
       If Instr('0123456789',OneHanzi) <=0 Then --??????????
           select count(*) into li_count
             from T_Bas_Pinyin
            where HANZI = OneHanzi;
           if li_count = 0 then
              OnePinYin := OneHanzi;
           else
               select trim(PINYIN) into OnePinYin
                 from T_Bas_Pinyin
                where HANZI = OneHanzi;
               if flag = 0 then
                 OnePinYin := Substr(OnePinYin, 1, 1);
               else
                 OnePinYin := Upper(Substr(OnePinYin, 1, 1))||Substr(OnePinYin, 2);
               end if;
           end if;
           Result := Result||OnePinYin ;
       End if;
       i := i+1;
     end loop;
   if(Length(Result) >=4) then
      Result := substr(Result,1,4);
   end if;
   return(Result);
 end f_pinyin;
 create or replace function F_TR(str1 varchar2) return varchar2 is
 begin
   --??","??????"??"(????)????????????????????????????
   return replace(str1, ',', '??');
 end F_TR;
/

prompt
prompt Creating function GETALLPARAMNAME
prompt =================================
prompt
CREATE OR REPLACE FUNCTION GetAllParamName(ParamIds IN VARCHAR2) RETURN VARCHAR2 IS
   RParamNames VARCHAR2(100);
   BEGIN
     DECLARE CURSOR ParamNames is SELECT p.parm_name FROM t_prf_param p WHERE INSTR(',' || ParamIds || ',',
                      ',' || TO_CHAR(P.PARM_ID) || ',')>0 order by p.parm_id;
      BEGIN
        FOR names IN ParamNames LOOP
          IF RParamNames IS NULL THEN
            RParamNames:=names.parm_name;
          ELSIF INSTR(RParamNames,names.parm_name) = 0 THEN
            RParamNames:=RParamNames||','||names.parm_name;
          END IF;
        END LOOP;
      END;
      RETURN (RParamNames);
   END GetAllParamName;
 CREATE OR REPLACE FUNCTION ISNUMBER(MyStr VARCHAR2) RETURN NUMBER
 IS
   STR VARCHAR2(400);
   ISNUM NUMBER;
   NUM NUMBER;
 BEGIN
      --????0????????????1????????
      ISNUM:=0;
      STR:=TRIM(MyStr);
      --????????????????????????????????
      IF TRIM(STR) IS NOT NULL THEN
      BEGIN
           NUM:=TO_NUMBER(STR);
           ISNUM:=1;
           EXCEPTION
           WHEN INVALID_NUMBER THEN
                NULL;
           WHEN OTHERS THEN
                NULL;
      END;
      END IF;
      RETURN ISNUM;
 END
 CREATE OR REPLACE FUNCTION stragg(input varchar2 )
 RETURN varchar2
 PARALLEL_ENABLE AGGREGATE USING string_agg_type;
/

prompt
prompt Creating procedure INSERT_T8101
prompt ===============================
prompt
CREATE OR REPLACE PROCEDURE "INSERT_T8101"     ( MSG_NO  in number,
 MSG_CONTENT in varchar2,
 MSG_TYPE in varchar2,
 MSG_TYPE_YW in varchar2,
 DEPARTURE_AIRPORT in varchar2,   --????????????????????????????????
 ARRIVAL_AIRPORT in varchar2,
 ADJUST_TYPE in varchar2,   --??????????????????????
 D_OR_I in varchar2   --??????????????????????
)
IS
BEGIN
INSERT INTO T8101(
           MSG_NO,
           MSG_CONTENT,
           MSG_TYPE,
           ISSUE_DEPT,
           ISSUE_PERSON,
           ISSUE_TIME,
           RECV_PERSON,
           REPONSE_YN,
           RESPONSE_PERSON,
           SEND_OR_NOT,
           MSG_TYPE_YW,
           RECV_PERSON_CODE,
           RESPONSE_PERSON_CODE,
           DEPARTURE_AIRPORT,
           ARRIVAL_AIRPORT,
           ADJUST_TYPE,
           D_OR_I
           )
    values(
           MSG_NO,
           MSG_CONTENT,
           MSG_TYPE,
           'SYS',
           'SYS',
           SYSDATE,
           '??????',
           'N',
           NULL,
           NULL,
           MSG_TYPE_YW,
           'ALL',
           NULL,
           DEPARTURE_AIRPORT,
           ARRIVAL_AIRPORT,
           ADJUST_TYPE,
          D_OR_I
           );
  END;
CREATE OR REPLACE PROCEDURE Proc_Test(
       p_WorkNo IN VARCHAR2,
       p_C_Name OUT VARCHAR2,
       p_Photo OUT BLOB
)
AS

var_name VARCHAR2(10);
var_photo BLOB;

BEGIN
  SELECT c.c_name INTO var_name FROM t_hr_crew c WHERE c.work_no = p_WorkNo;
  SELECT I.PHOTO INTO var_photo FROM t_blob_image i WHERE i.work_no=p_WorkNo;
  p_C_Name := var_name;
  p_Photo := var_photo;
END;
CREATE OR REPLACE PROCEDURE P_CHECK_SEQUENCE
AS
  cursor mycur is
    select seq_name,table_name,col_name from t_seq_list;
  dyn_select VARCHAR2(200);
  a_seq_name t_seq_list.seq_name%type;
  a_tab_name varchar2(100);
  a_col_name varchar2(100);
  a_max_val  number(12);
  a_curr_val number(12);
BEGIN
  for lp in mycur loop
    a_seq_name := lp.seq_name;
    a_tab_name := lp.table_name;
    a_col_name := lp.col_name;
    if a_seq_name = 'SEQ_RULE_FUN_ID' then
      dyn_select := 'select max(to_number(substr(' || lp.col_name || ',8))) from ' || lp.table_name || ' where fun_code like ''RuleFun''';
    elsif a_seq_name = 'SEQ_ROLE_ID' then
      dyn_select := 'select max(to_number(substr(' || lp.col_name || ',2))) from ' || lp.table_name || ' where role_code <> ''RF''';
    else
      dyn_select := 'select max(to_number(' || lp.col_name || ')) from ' || lp.table_name;
    end if;
    execute immediate dyn_select into a_max_val;

    select last_number into a_curr_val from user_sequences t where t.sequence_name = lp.seq_name;

    if a_max_val > a_curr_val then
      --dbms_output.put_line('error occured:' || lp.seq_name);
      dbms_output.put_line(lp.seq_name || ' curval:' || to_char(a_curr_val) || ' ' || a_tab_name || '.' || a_col_name || ' maxval:' || to_char(a_max_val));
    end if;
  end loop;
exception
  when others then
    dbms_output.put_line(a_seq_name || ' ' || sqlerrm);
END;
create or replace procedure p_crt_triggers(pSqlText1 in varchar2,
                                     pSqlText2 in varchar2,
                                     pSqlText3 in varchar2,
                                     pSqlText4 in varchar2,
                                     pSqlText5 in varchar2,
                                     pSqlCode out varchar2,
                                     pSqlErrm out varchar2)  as
begin
  --????????????trigger sql????
  if trim(pSqlText1) is not null then
    if instr(lower(pSqlText1), 'create or replace trigger') = 0 and instr(lower(pSqlText1), 'drop trigger') = 0 then
      pSqlCode := 'S0001';
      pSqlErrm := '????????????Trigger??????';
    else
      execute immediate pSqlText1||pSqlText2||pSqlText3||pSqlText4||pSqlText5;
      pSqlCode := 'OK';
      pSqlErrm := '??????';
    end if;
  else
    pSqlCode := 'S0002';
    pSqlErrm := '????sql????????';
  end if;
exception
  when others then
    pSqlCode := sqlcode;
    pSqlErrm := substr(sqlerrm, 1, 200);
end;
/

prompt
prompt Creating procedure P_GET_EXPORT_CMD
prompt ===================================
prompt
create or replace procedure p_get_export_cmd
is
  a_cmd varchar2(4000);
  cursor mycur is
    select table_name from user_tables t where t.table_name not like 'T_%' order by table_name;
begin
  a_cmd := 'exp ceacrew/ceacrew!01@ceacrew_prod rows=N file=c:\exp1.dmp log=c:\exp1.log tables=(';
  a_cmd := a_cmd || 'T_CEAFTC_CTTRAINEE,';
  a_cmd := a_cmd || 'T_CEAFTC_CTINSTRUCTOR,';
  a_cmd := a_cmd || 'T_CEAFTC_CLASSTASK,';
  a_cmd := a_cmd || 'T_CEAFTC_CLASSTASK_HIS,';
  a_cmd := a_cmd || 'T_LOG,';
  a_cmd := a_cmd || 'T_LOG_HIS,';
  a_cmd := a_cmd || 'T_INTF_AIRCRAFT_HIS,';
  a_cmd := a_cmd || 'T_INTF_DELLOG_HIS,';
  a_cmd := a_cmd || 'T_INTF_FXW_CREW_DELTA,';
  a_cmd := a_cmd || 'T_SCH_ROSTER_LOGHIS,';
  a_cmd := a_cmd || 'T_SCH_ROSTER_DOCBACK,';
  a_cmd := a_cmd || 'T_FLT_MM_PROC_LOGS,';
  a_cmd := a_cmd || 'T_TR_FXWSIMU_HIS,';
  a_cmd := a_cmd || 'T_MSG_SMS,';
  a_cmd := a_cmd || 'T_DS_LOGS,';
  a_cmd := a_cmd || 'T_DS_LOGS20140318,';
  a_cmd := a_cmd || 'T_DOC_HIS,';

  for lp in mycur loop
    a_cmd := a_cmd || lp.table_name || ',';
  end loop;
  if substr(a_cmd,-1,1) = ',' then
    a_cmd := substr(a_cmd,1,length(a_cmd) - 1);
  end if;

  a_cmd := a_cmd || ')';

  delete t_exp_cmd;
  insert into t_exp_cmd values(a_cmd);
  commit;

  dbms_output.put_line('OK!');
end;
/

prompt
prompt Creating procedure P_SESSION_PARAMETERS
prompt =======================================
prompt
create or replace procedure p_session_parameters
  (USER_CODE   varchar2,
   MODULE_FLAG varchar2,
   UNIT_ID     char,
   LOG_W       varchar2,
   IP          varchar2,
   MACHINE     varchar2,
   REMARKS      varchar2) is
begin
  -- Icrew数据日志临时数据保存
  Session_Parameters.USER_CODE   := USER_CODE;
  Session_Parameters.MODULE_FLAG := MODULE_FLAG;
  Session_Parameters.UNIT_ID     := UNIT_ID;
  Session_Parameters.LOG_W       := LOG_W;
  Session_Parameters.S_TYPE      := 'A';
  Session_Parameters.IP          := IP;
  Session_Parameters.MACHINE     := MACHINE;
  Session_Parameters.REMARKS      := REMARKS;

  delete from t_log_user;
  insert into t_log_user(USER_CODE, MODULE_FLAG, UNIT_ID,Log_Yn,Oper_Ip,Oper_Host, REMARKS)
                  values(USER_CODE, MODULE_FLAG, UNIT_ID,LOG_W, IP,MACHINE,   REMARKS);
end p_session_parameters;
/

prompt
prompt Creating procedure P_T4004TOT4004MELBYYB
prompt ========================================
prompt
create or replace procedure P_T4004ToT4004melByYB(log_id in VARCHAR2,
                                                  inDate in date,
                                                  errMsg out varchar2) as
begin
/*
comment on column CCALFOC.T4004.canceled_yn
is '??????????Y????????N????????';
OPEN=>"N"
CLOSED=>"Y"
????????????????????????????????????????????????????
ecmar:OPEN,CLOSED
sap  :A,B,C,D,E,F
     ????:????A(????),B(????),C(????????),D(????????);
     ????:E(????),F(????)
*/
  declare
    --????????
    cursor c_job is
      select task_code,
             DDF_CD,
             TRIM(REPLACE(TAIL_NO,'B','')) TAIL_NO,
             ZDWMC,
             ZSZBM,
             ZTSNZCSN,
             ZAPPER,
             ZAPPDT,
             ZBLCLA,
             DDF_DESC,
             ZDEFR,
             ZMITEM,
             ZOITEM,
             ZOPLIMIT,
             ZDEFBS,
             TO_CHAR(START_TIME, 'YYYY-MM-DD') || '-' ||
             TO_CHAR(END_TIME, 'YYYY-MM-DD') START_TIME_END_TIME,
             ZAPRER,
             ZAPRDT,
             TO_CHAR(ZAYQDT, 'YYYY-MM-DD') || '-' ||
             TO_CHAR(ZYQDD, 'YYYY-MM-DD') ZAYQDT_ZYQDD,
             ZYQER,
             ZBYQDT,
             ZCLER,
             ZCLDAT,
             CASE
               WHEN DDF_STATUS = 'OPEN' OR
                 DDF_STATUS = 'A' OR
                 DDF_STATUS = 'B' OR
                 DDF_STATUS = 'C' OR
                 DDF_STATUS = 'D'
                 THEN
                'N'
               WHEN DDF_STATUS = 'CLOSED' OR
                 DDF_STATUS = 'E' OR
                 DDF_STATUS = 'F' THEN
                'Y'
               ELSE
                'N'
             END DDF_STATUS,
             ZREMARK,
             updated_time,
             DEL_FLAG
        from t4004mel a
       order by updated_time asc;
    --????????????????v_cinfo c_emp%ROWTYPE ??????????????c_emp????????????????
    c_row c_job%rowtype;
    num   int;
    znum  int;
  begin
    znum := 0;
    for c_row in c_job loop
      begin
        if (c_row.DEL_FLAG = 'N') then
          begin
            select count(BLGZ_ID)
              into num
              from t4004
             where BLGZ_ID = c_row.DDF_CD;
            if num > 0 then
              begin
                update T4004
                   set ITEM_NO             = c_row.TASK_CODE,
                       AC_NO               = c_row.TAIL_NO,
                       UNIT                = c_row.ZDWMC,
                       PLACE               = c_row.ZSZBM,
                       FH_LD_ENG_CYC       = c_row.ZTSNZCSN,
                       REPORTED            = c_row.ZAPPER,
                       REPORTED_DATE       = c_row.ZAPPDT,
                       CLASS               = c_row.ZBLCLA,
                       FAILURE_DESCRIPTION = c_row.DDF_DESC,
                       FIRST_LIMIT         = c_row.START_TIME_END_TIME,
                       REASON_OF_DEFERMENT = c_row.ZDEFR,
                       CORRECTIVE_ACTION   = c_row.ZMITEM,
                       crew_action         = c_row.ZOITEM,
                       OPERATION_LIMIT     = c_row.ZOPLIMIT,
                       DEFERRED_BASIS      = c_row.ZDEFBS,
                       FIRST_EXAMINE_BY    = c_row.ZAPRER,
                       FIRST_EXAMINE_DATE  = c_row.ZAPRDT,
                       SECOND_LIMIT        = c_row.ZAYQDT_ZYQDD,
                       SECOND_EXAMINE_BY   = c_row.ZYQER,
                       SECOND_EXAMINE_DATE = c_row.ZBYQDT,
                       CANCELED_BY         = c_row.ZCLER,
                       CANCELED_DATE       = c_row.ZCLDAT,
                       CANCELED_YN         = c_row.DDF_STATUS,
                       REMARKS             = c_row.ZREMARK,
                       LAST_MODIFY         = c_row.updated_time
                 where BLGZ_ID = c_row.DDF_CD;
                znum := znum + 1;
              end;
            else
              begin
                insert into T4004
                  (ITEM_NO,
                   AC_NO,
                   UNIT,
                   PLACE,
                   FH_LD_ENG_CYC,
                   REPORTED,
                   REPORTED_DATE,
                   CLASS,
                   FAILURE_DESCRIPTION,
                   REASON_OF_DEFERMENT,
                   CORRECTIVE_ACTION,
                   crew_action,
                   OPERATION_LIMIT,
                   DEFERRED_BASIS,
                   FIRST_LIMIT,
                   FIRST_EXAMINE_BY,
                   FIRST_EXAMINE_DATE,
                   SECOND_LIMIT,
                   SECOND_EXAMINE_BY,
                   SECOND_EXAMINE_DATE,
                   CANCELED_BY,
                   CANCELED_DATE,
                   CANCELED_YN,
                   REMARKS,
                   LAST_MODIFY,
                   BLGZ_ID
                   )
                values
                  (c_row.TASK_CODE,
                   c_row.TAIL_NO,
                   c_row.ZDWMC,
                   c_row.ZSZBM,
                   c_row.ZTSNZCSN,
                   c_row.ZAPPER,
                   c_row.ZAPPDT,
                   c_row.ZBLCLA,
                   c_row.DDF_DESC,
                   c_row.ZDEFR,
                   c_row.ZMITEM,
                   c_row.ZOITEM,
                   c_row.ZOPLIMIT,
                   c_row.ZDEFBS,
                   c_row.START_TIME_END_TIME,
                   c_row.ZAPRER,
                   c_row.ZAPRDT,
                   c_row.ZAYQDT_ZYQDD,
                   c_row.ZYQER,
                   c_row.ZBYQDT,
                   c_row.ZCLER,
                   c_row.ZCLDAT,
                   c_row.DDF_STATUS,
                   c_row.ZREMARK,
                   c_row.updated_time,
                   c_row.DDF_CD);
              end;
              znum := znum + 1;
            end if;
            num := 0;
          end;
        elsif (c_row.DEL_FLAG = 'Y') then
          begin
            delete t4004 where BLGZ_ID = c_row.DDF_CD;
            znum := znum + 1;
          end;
        else
          begin
            insert into t2001sap_log
              (log_id,
               start_time,
               end_time,
               proc_type,
               proc_cnt,
               proc_result,
               err_msg,
               time_stamp,
               op_time)
            values
              (SEQ_T2001SAP_LOG_ID.nextval,
               sysdate,
               sysdate,
               'MEL_DEL',
               1,
               'DEL_FLAG:'||c_row.DEL_FLAG,
               c_row.DDF_CD,
               inDate,
               sysdate);
            znum := znum + 1;
          end;
        end if;
      end;
    end loop;
    --????????????????????????????
    insert into t4004mel_his
      (tail_no,
       ddf_cd,
       start_time,
       end_time,
       ddf_desc,
       ddf_status,
       ata_desc,
       task_code,
       task_actype,
       created_time,
       updated_time,
       zblcla,
       zdwmc,
       zszbm,
       zapper,
       zappdt,
       ztsnzcsn,
       zdefr,
       zmitem,
       zoitem,
       zoplimit,
       ztkrec,
       zdefbs,
       zremark,
       zsplx,
       zaprer,
       zaprdt,
       zaprtm,
       zpgfa,
       zifkcl,
       muid,
       zfl_date,
       zddffc,
       zddffh,
       zblth,
       zther,
       zthdat,
       zthtim,
       zcler,
       zclbm,
       zclth,
       ztjer,
       ztjrq,
       ztjtim,
       zayqdt,
       zyqdd,
       zyqer,
       zbyqdt,
       zifxz,
       zifrw,
       zifhc,
       mdnum,
       zxzid,
       zudnam,
       zwxdw,
       zchnnm,
       zclbmchn,
       crdat,
       crtim,
       zcldat,
       pn_qat,
       del_flag,
       first_limit,
       second_limit,
       log_id,
       inDate,
       op_time)
      select tail_no,
             ddf_cd,
             start_time,
             end_time,
             ddf_desc,
             ddf_status,
             ata_desc,
             task_code,
             task_actype,
             created_time,
             updated_time,
             zblcla,
             zdwmc,
             zszbm,
             zapper,
             zappdt,
             ztsnzcsn,
             zdefr,
             zmitem,
             zoitem,
             zoplimit,
             ztkrec,
             zdefbs,
             zremark,
             zsplx,
             zaprer,
             zaprdt,
             zaprtm,
             zpgfa,
             zifkcl,
             muid,
             zfl_date,
             zddffc,
             zddffh,
             zblth,
             zther,
             zthdat,
             zthtim,
             zcler,
             zclbm,
             zclth,
             ztjer,
             ztjrq,
             ztjtim,
             zayqdt,
             zyqdd,
             zyqer,
             zbyqdt,
             zifxz,
             zifrw,
             zifhc,
             mdnum,
             zxzid,
             zudnam,
             zwxdw,
             zchnnm,
             zclbmchn,
             crdat,
             crtim,
             zcldat,
             pn_qat,
             del_flag,
             first_limit,
             second_limit,
             log_id,
             inDate,
             sysdate
        from t4004mel;
    commit;
  exception
    when others then
      rollback;
      errMsg := sqlerrm;
  end;
end;
/

prompt
prompt Creating procedure SET_MY_APP_CTX
prompt =================================
prompt
create or replace procedure set_my_app_ctx
(p_app_user in varchar2 := USER) is
begin
  dbms_session.set_context('MY_APP_CTX', 'APP_USERID', p_app_user);
end;
create or replace procedure set_my_app_ctx2(p_app_user in varchar2 := USER) is
begin
  dbms_session.set_context('MY_APP_CTX_HUG', 'APP_USERID', p_app_user);
end;
CREATE OR REPLACE PROCEDURE sleepTest IS
BEGIN
  dbms_lock.sleep(30);
  END sleepTest;
/

prompt
prompt Creating procedure SP_INTF_EFB_GETCAT
prompt =====================================
prompt
create or replace procedure sp_intf_efb_getCAT(recid number,cat out varchar) as
  row_count number(5);
begin
   insert into t_intf_efb_cat
 select p_code, rank_no, qlf_code, qlf_name, nvl(idx,2) idx /*????????????????catI 2015-01-19*/
                  from (select ion.p_code,
                               decode(ter.rank_no, 'A001', 'jz', 'B001', 'jz') rank_no,
                               qlf.qlf_code,
                               qlf.qlf_name,
                               qlf.idx
                          from t_flt_schedule      ule,
                               t_sch_roster        ter,
                               t_bas_fleet         eet,
                               t_tech_qulification ion,
                               t_tech_qlf          qlf
                         where ule.flight_id = ter.flight_id
                           and ter.rank_no in ('A001', 'B001')
                           and ule.ac_type = eet.ac_type
                           and eet.ac_type_crew = ion.ac_types
                           and ter.p_code = ion.p_code
                           and ion.valid_flag = 'Y'
                           and ion.qlf_code = qlf.qlf_code
                           and ion.over_date >= ule.flight_date
                           and qlf.parent_code = '391'
                           and qlf.qlf_code != '483'
                           and ule.flight_id =
                               (select flight_id
                                  from (select flight_id
                                          from t_flt_schedule ule,
                                               t_sch_pairing  ing
                                         where ule.crew_link_line =
                                               ing.crew_link_line
                                           and ing.rec_id = recid)
                                 where rownum <= 1)
                         order by qlf.idx desc) t1
                 where rownum <= 1;
insert into t_intf_efb_cat1
select p_code, rank_no, qlf_code, qlf_name, idx
                  from (select ion.p_code,
                               decode(ter.rank_no,
                                      'A001',
                                      'fj',
                                      'B001',
                                      'fj',
                                      'C001',
                                      'fj',
                                      'fj') rank_no,
                               qlf.qlf_code,
                               qlf.qlf_name,
                               qlf.idx
                          from t_flt_schedule      ule,
                               t_sch_roster        ter,
                               t_bas_fleet         eet,
                               t_tech_qulification ion,
                               t_tech_qlf          qlf
                         where ule.flight_id = ter.flight_id
                           and ter.rank_no in ('A001', 'B001', 'C001')
                           and ule.ac_type = eet.ac_type
                           and eet.ac_type_crew = ion.ac_types
                           and ter.p_code = ion.p_code(+)
                           and ion.valid_flag = 'Y'
                           and ion.qlf_code = qlf.qlf_code
                           and ion.over_date >= ule.flight_date
                           and qlf.parent_code = '391'
                           and qlf.qlf_code != '483'
                           and ule.flight_id =
                               (select flight_id
                                  from (select flight_id
                                          from t_flt_schedule ule,
                                               t_sch_pairing  ing
                                         where ule.crew_link_line =
                                               ing.crew_link_line
                                           and ing.rec_id = recid)
                                 where rownum <= 1)
                           and ter.p_code !=
                               (select p_code
                                  from (select ion.p_code,
                                               decode(ter.rank_no,
                                                      'A001',
                                                      'jz',
                                                      'B001',
                                                      'jz') rank_no,
                                               qlf.qlf_code,
                                               qlf.qlf_name,
                                               qlf.idx
                                           from t_flt_schedule      ule,
                                               t_sch_roster        ter,
                                               t_bas_fleet         eet,
                                               t_tech_qulification ion,
                                               t_tech_qlf          qlf
                                         where ule.flight_id = ter.flight_id
                                           and ter.rank_no in ('A001', 'B001')
                                           and ule.ac_type = eet.ac_type
                                           and eet.ac_type_crew = ion.ac_types
                                           and ter.p_code = ion.p_code
                                           and ion.valid_flag = 'Y'
                                           and ion.qlf_code = qlf.qlf_code
                                           and ion.over_date >= ule.flight_date
                                           and qlf.parent_code = '391'
                                           and qlf.qlf_code != '483'
                                           and ule.flight_id =
                                               (select flight_id
                                                  from (select flight_id
                                                          from t_flt_schedule ule,
                                                               t_sch_pairing  ing
                                                         where ule.crew_link_line =
                                                               ing.crew_link_line
                                                           and ing.rec_id = recid)
                                                 where rownum <= 1)
                                         order by qlf.idx desc) t1
                                 where rownum <= 1)
                         order by qlf.idx desc) t1
                 where rownum <= 1;
  select count(*) into row_count from t_intf_efb_cat;
  if row_count=0 then
    begin
    insert into t_intf_efb_cat values('000','jz','392','CAT I',2);
    commit;
    end;
  end if;
  select count(*) into row_count from t_intf_efb_cat1;
  if row_count=0 then
    begin
    insert into t_intf_efb_cat1 values('000','fj','392','CAT I',2);
    commit;
    end;
  end if;
  select qlf_name into cat from (select * from (select * from t_intf_efb_cat
   union all
   select * from t_intf_efb_cat1) order by idx asc) where rownum<=1;
end sp_intf_efb_getCAT;
/

prompt
prompt Creating procedure SP_INTF_EFB_FLIGHTASSIGNMENT
prompt ===============================================
prompt
create or replace procedure sp_intf_efb_flightassignment(crew_link_line1 number,
                                                         cur             out sys_refcursor) as
  type type_rec is record(
    rec_id            number(11),
    flight_id         number(11),
    filiale           varchar2(20),
    ac_type           varchar2(15),
    plane_no          varchar2(10),
    flight_no         varchar2(15),
    flight_type       varchar2(10),
    std               varchar2(20),
    departure_airport varchar2(35),
    sta               varchar2(20),
    arrival_airport   varchar2(35),
    cat               varchar2(10), /*????????*/
    init_std          varchar2(20),
    is_long           varchar2(10),
    crew_owner        varchar2(10)
    /*,plane_nos         varchar2(30) */ --????????
    );
  /*????????*/
  type type_crew is record(
    captain varchar2(100),
    cruise  varchar2(100),
    fo      varchar2(100),
    so      varchar2(100),
    other   varchar2(200));
  crews       type_crew;
  flight_info type_rec;
  /*  type my_table is table of type_rec index by binary_integer;
  */
  flight_nos       varchar2(500);
  flight_types     varchar2(500);
  takeoff_landings varchar2(500);
  cat              varchar2(10);
  is_long_distance varchar2(10);
  cnt              number(2);
  dow              varchar2(30);
  /*  dow_l varchar2(30);*/
  doi varchar2(30);
  /*  doi_l varchar2(30);*/
  persons number(2); /*????????*/
  icao    varchar2(500); --ICAO????
  ac_types varchar2(20); --????????
  cursor mycur is
    select ing.rec_id,
           ule.flight_id,
           (select ale.filiale_name
              from t_bas_filiale ale
             where ale.filiale = ule.crew_owner) filiale,
           (select aft.ac_type
              from t_bas_aircraft aft
             where aft.ac_reg = ule.ac_reg) ac_type,
           ule.ac_reg plane_no,
           ule.flight_no,
           (case
             when ule.flg_vr = 'R' then
              '????'
             when ule.flg_vr = 'V' then
              '????'
             else
              (select dict.bm_name
                 from t_bas_dict dict
                where dict.bm_code = ule.flight_type
                  and dict.parent_code = 'XZ')
           end) flight_type,
           to_char(ule.std, 'hh24mi') std,
           (select ort.chinese_name
              from t_bas_airport ort
             where ort.airport_3code = ule.departure_airport) departure_airport,
           to_char(ule.sta, 'hh24mi') sta,
           (select ort.chinese_name
              from t_bas_airport ort
             where ort.airport_3code = ule.arrival_airport) arrival_airport,
           '' cate,
           min(to_char(ule.std, 'yyyy-mm-dd hh24:mi:ss')) over(partition by ing.crew_link_line) init_std,
           decode((select count(*)
                    from t_bas_airport ort
                   where (ort.airport_3code = ule.departure_airport or
                         ort.airport_3code = ule.arrival_airport)
                     and ort.A_DISTANCE = 'Y'),
                  0,
                  'N',
                  'Y') is_long,
           ule.crew_owner
      from t_flt_schedule ule, t_sch_pairing ing
     where ule.crew_link_line = ing.crew_link_line
       and ule.crew_link_line = crew_link_line1
     order by ule.std;
begin
  is_long_distance := 'N';
  ac_types:=null;
  open mycur;
  loop
    fetch mycur
      into flight_info;
    exit when mycur%notfound;
    --????????
    if flight_nos is not null then
      flight_nos := flight_nos || '-' || substr(flight_info.flight_no, 3);
    else
      flight_nos := flight_info.flight_no;
    end if;
    --??????????
    if flight_types is not null then
      flight_types := flight_types || '/' || flight_info.flight_type;
    else
      flight_types := flight_info.flight_type;
    end if;
    if takeoff_landings is not null then
      takeoff_landings := takeoff_landings || flight_info.std || '/' ||
                          flight_info.sta || flight_info.arrival_airport;
    else
      takeoff_landings := flight_info.departure_airport || flight_info.std || '/' ||
                          flight_info.sta || flight_info.arrival_airport;
    end if;
    if flight_info.is_long = 'Y' then
      is_long_distance := 'Y';
    end if;
    --????????
    if ac_types is null then
       ac_types:= flight_info.plane_no;
    else
       if instr('/' || ac_types || '/', '/' || flight_info.plane_no || '/')<=0 then
          ac_types:=ac_types || '/' || flight_info.plane_no;
          dbms_output.put_line(ac_types);
       end if;
       --dbms_output.put_line(ac_types);
    end if;
    --icao
    SELECT COUNT(1)
    into cnt
    FROM t_flt_schedule a, t_bas_airlines b
   WHERE ((a.departure_airport = b.departure_airport AND
         a.arrival_airport = b.arrival_airport AND
         b.flight_com like '%' || a.flight_no || '%') or
         (a.departure_airport = b.departure_airport AND
         '####' = b.arrival_airport) or
         ('####' = b.departure_airport AND
         a.arrival_airport = b.arrival_airport))
     AND b.airline_type = 'ICAO-' || a.crew_owner
     AND a.flight_id = flight_info.flight_id;
    if cnt=0 then
       icao:=icao|| flight_info.flight_id || '=' || 'N,';
    else
       icao:=icao|| flight_info.flight_id || '=' || 'Y';
    end if;
    --??????????
    flight_info.filiale := replace(flight_info.filiale, '????', '');
    flight_info.filiale := replace(flight_info.filiale, '??????', '');
    flight_info.filiale := replace(flight_info.filiale, '????????', '');
    flight_info.filiale := flight_info.filiale || '??????';
  end loop;
  icao:=substr(icao,1,length(icao)-1);
  ac_types:='B' || ac_types;
  sp_intf_efb_getcat(flight_info.rec_id, cat);
  flight_info.cat := cat;
  --????????
  select count(*)
    into persons
    from t_sch_roster ter
   where ter.flight_id = flight_info.flight_id;
  --??????????
  if is_long_distance = 'Y' then
    select to_char(aft.DOw_L)
      into dow
      from t_bas_aircraft aft
     where aft.ac_reg = flight_info.plane_no;
    select to_char(aft.DOi_L)
      into doi
      from t_bas_aircraft aft
     where aft.ac_reg = flight_info.plane_no;
  else
    select to_char(aft.DOw)
      into dow
      from t_bas_aircraft aft
     where aft.ac_reg = flight_info.plane_no;
    select to_char(aft.DOi)
      into doi
      from t_bas_aircraft aft
     where aft.ac_reg = flight_info.plane_no;
  end if;
  dow := dow || '+' || to_char(persons * 80);
/*  --icao
  SELECT COUNT(1)
    into cnt
    FROM t_flt_schedule a, t_bas_airlines b
   WHERE ((a.departure_airport = b.departure_airport AND
         a.arrival_airport = b.arrival_airport AND
         b.flight_com like '%' || a.flight_no || '%') or
         (a.departure_airport = b.departure_airport AND
         '####' = b.arrival_airport) or
         ('####' = b.departure_airport AND
         a.arrival_airport = b.arrival_airport))
     AND b.airline_type = 'ICAO-' || a.crew_owner
     AND a.crew_link_line = crew_link_line1;
  if cnt = 0 then
    icao := 'N';
  else
    icao := 'Y';
  end if;*/
  --????????
  select *
    into crews
    from (select (select replace(replace(wm_concat(tc.c_name ||
                                                   replace(ter.ts_flag,
                                                           ',',
                                                           '/')),
                                         ',',
                                         ' '),
                                 '/',
                                 ',')
                    from t_sch_roster ter, t_hr_crew tc
                   where ter.p_code = tc.p_code
                     and ter.flight_id = ule.flight_id
                     and ter.rank_no = 'A001') captain,
                 (select replace(replace(wm_concat(tc.c_name ||
                                                   replace(ter.ts_flag,
                                                           ',',
                                                           '/')),
                                         ',',
                                         ' '),
                                 '/',
                                 ',')
                    from t_sch_roster ter, t_hr_crew tc
                   where ter.p_code = tc.p_code
                     and ter.flight_id = ule.flight_id
                     and ter.rank_no = 'B001') cruise,
                 (select replace(replace(wm_concat(tc.c_name ||
                                                   replace(ter.ts_flag,
                                                           ',',
                                                           '/')),
                                         ',',
                                         ' '),
                                 '/',
                                 ',')
                    from t_sch_roster ter, t_hr_crew tc
                   where ter.p_code = tc.p_code
                     and ter.flight_id = ule.flight_id
                     and ter.rank_no = 'C001') fo,
                 (select replace(replace(wm_concat(tc.c_name ||
                                                   replace(decode(ter.module_flag,
                                                                  'M',
                                                                  'O',
                                                                  ter.ts_flag),
                                                           ',',
                                                           '/')),
                                         ',',
                                         ' '),
                                 '/',
                                 ',')
                    from t_sch_roster ter, t_hr_crew tc
                   where ter.p_code = tc.p_code
                     and ter.flight_id = ule.flight_id
                     and ter.rank_no = 'C002') so,
                 (select replace(replace(wm_concat(tc.c_name ||
                                                   replace(ter.ts_flag,
                                                           ',',
                                                           '/')),
                                         ',',
                                         ' '),
                                 '/',
                                 ',')

                    from t_sch_roster ter, t_hr_crew tc
                   where ter.flight_id = ule.flight_id
                     and ter.p_code = tc.p_code
                     and ter.rank_no not in ('A001', 'B001', 'C001', 'C002')) other
            from t_flt_schedule ule
           where ule.flight_id = flight_info.flight_id);
  execute immediate 'delete from T_INTF_efb_flightassignment';
  insert into T_INTF_efb_flightassignment
  values
    (flight_info.filiale,
     flight_info.ac_type || ' ' || ac_types,
     flight_info.init_std,
     flight_nos,
     TAKEOFF_LANDINGS,
     cat,
     crews.captain,
     crews.cruise,
     crews.fo,
     crews.so,
     crews.other,
     dow,
     doi,
     icao,
     '');
  commit;
  open cur for
    select filiale_name,
           ac_type,
           init_std,
           flight_nos,
           takeoff_landings,
           cat,
           captain,
           cruise,
           fo,
           so,
           other,
           dow,
           doi,
           icao,
           dispacher
      from T_INTF_efb_flightassignment;
/*  dbms_output.put_line('abc');*/
exception
/*  when no_data_found then
    icao := 0;*/
  when others then
    dbms_output.put_line(sqlerrm);
end sp_intf_efb_flightassignment;
/

prompt
prompt Creating procedure SP_INTF_FOIS_ABNORMAL
prompt ========================================
prompt
create or replace procedure sp_intf_fois_abnormal(errmsg out varchar2)
/*????????????????
  1.????????????????
  2.????????????????*/
 as
  a_cnt            number(2);
  a_last_sync_time date;
begin
  select count(*)
    into a_cnt
    from t_intf_param
   where param_code = 'FOIS_DELAY_SYNC_TIME';
  if a_cnt = 0 then
    insert into t_intf_param
      (param_code, param_value, param_desc)
    values
      ('FOIS_DELAY_SYNC_TIME',
       null,
       '????????????????????????????????????');
  end if;

  select to_date(param_value, 'yyyy/mm/dd hh24:mi:ss')
    into a_last_sync_time
    from t_intf_param
   where param_code = 'FOIS_DELAY_SYNC_TIME';
  if a_last_sync_time is null then
    select min(time_stamp)
      into a_last_sync_time
      from v_crewman_flight_leg@fois;
  end if;

  delete T_FLT_FOIS_ABNORMAL_DELTA;
  insert into T_FLT_FOIS_ABNORMAL_DELTA
    (FLIGHT_ID,
     FLIGHT_DATE,
     CARRIER,
     FLIGHT_NO,
     DEPARTURE_AIRPORT,
     ARRIVAL_AIRPORT,
     STD,
     DEPT_DELAY,
     ARR_DELAY,
     AOC_DELAY_CODE,
     AOC_DELAY_REASON,
     DEPT_DELAY_DEADZONE,
     ARR_DELAY_DEADZONE)
    select leg_id,
           pdate,
           carrier,
           flight_no,
           dept_airport,
           arr_airport,
           std,
           dept_delay,
           arr_delay,
           aoc_code,
           aoc_reason,
           dept_delay_deadzone,
           arr_delay_deadzone
      from v_crewman_flight_abnormal@fois
     where carrier in ('MU', 'FM', 'KN', 'CK')
       and (dept_delay > 0 or arr_delay > 0)
       and time_stamp >= a_last_sync_time;

  merge into t_flt_fois_abnormal d
  using (select * from T_FLT_FOIS_ABNORMAL_DELTA) s
  on (d.flight_id = s.flight_id)
  when matched then
    update
       set d.FLIGHT_DATE         = s.flight_date,
           d.CARRIER             = s.carrier,
           d.FLIGHT_NO           = s.flight_no,
           d.DEPARTURE_AIRPORT   = s.DEPARTURE_AIRPORT,
           d.ARRIVAL_AIRPORT     = s.ARRIVAL_AIRPORT,
           d.STD                 = s.STD,
           d.DEPT_DELAY          = s.DEPT_DELAY,
           d.ARR_DELAY           = s.ARR_DELAY,
           d.AOC_DELAY_CODE      = s.AOC_DELAY_CODE,
           d.AOC_DELAY_REASON    = s.AOC_DELAY_REASON,
           d.DEPT_DELAY_DEADZONE = s.DEPT_DELAY_DEADZONE,
           d.ARR_DELAY_DEADZONE  = s.ARR_DELAY_DEADZONE
  when not matched then
    insert
    values
      (s.FLIGHT_ID,
       s.FLIGHT_DATE,
       s.CARRIER,
       s.FLIGHT_NO,
       s.DEPARTURE_AIRPORT,
       s.ARRIVAL_AIRPORT,
       s.STD,
       s.DEPT_DELAY,
       s.ARR_DELAY,
       s.AOC_DELAY_CODE,
       s.AOC_DELAY_REASON,
       s.DEPT_DELAY_DEADZONE,
       s.ARR_DELAY_DEADZONE);

  update t_flt_schedule d
     set flg_delay = 'D'
   where exists (select 1
            from t_flt_fois_abnormal_delta a,t_flt_fois_sch b
           where a.flight_id = b.flight_id
             and b.mm_leg_id = d.mm_leg_id);

  select max(time_stamp)
    into a_last_sync_time
    from v_crewman_flight_leg@fois;

  update t_intf_param
     set param_value = to_char(a_last_sync_time, 'yyyy/mm/dd hh24:mi:ss')
   where param_code = 'FOIS_DELAY_SYNC_TIME';

  commit;
exception
  when others then
    errmsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FOIS_SCH
prompt ===================================
prompt
create or replace procedure sp_intf_fois_sch(errmsg out varchar2)
/*????????????????
  1.??????????????????????????????
  2.????????VIP????*/
 as
  a_cnt            number(2);
  a_last_sync_time date;
begin
  select count(*)
    into a_cnt
    from t_intf_param
   where param_code = 'FOIS_SCH_SYNC_TIME';
  if a_cnt = 0 then
    insert into t_intf_param
      (param_code, param_value, param_desc)
    values
      ('FOIS_SCH_SYNC_TIME', null, '????????????????????????????????');
  end if;

  select to_date(param_value, 'yyyy/mm/dd hh24:mi:ss')
    into a_last_sync_time
    from t_intf_param
   where param_code = 'FOIS_SCH_SYNC_TIME';
  if a_last_sync_time is null then
    select min(time_stamp)
      into a_last_sync_time
      from v_crewman_flight_leg@fois;
  end if;

  delete t_flt_fois_sch_delta;
  insert into t_flt_fois_sch_delta
    (FLIGHT_ID,
     FLIGHT_DATE,
     CARRIER,
     FLIGHT_NO,
     SUFFIX,
     STATUS,
     FLIGHT_TYPE,
     D_OR_I,
     AC_TYPE,
     AC_REG,
     VIP,
     SPE,
     PLAN_DEPARTURE,
     DEPARTURE_AIRPORT,
     STD,
     ETD,
     ATD,
     CABIN_CLOSE_TIME,
     BLOCK_OFF_TIME,
     TURN_ON_TIME,
     PLAN_ARRIVAL,
     ARRIVAL_AIRPORT,
     STA,
     ETA,
     ATA,
     TURN_OFF_TIME,
     BLOCK_ON_TIME,
     CABIN_OPEN_TIME,
     TIME_STAMP,
     MM_LEG_ID,
     DEP_BAY,
     ARR_BAY)
    select id,
           pdate,
           carrier,
           flight_no,
           flight_no_fix,
           status,
           flt_prop,
           intl_flag,
           ac_type,
           tail_no,
           vip_flag,
           serv_flag,
           plan_dept_airport,
           dept_airport,
           std,
           etd,
           atd,
           cabin_close,
           blockoff,
           turnon_acars,
           plan_arr_airport,
           arr_airport,
           sta,
           eta,
           ata,
           turnoff_acars,
           blockon,
           cabin_open,
           time_stamp,
           aoc_leg_id,
           dept_ac_pos,
           arr_ac_pos
      from v_crewman_flight_leg@fois
     where carrier in ('MU', 'FM', 'KN', 'CK')
       and time_stamp >= a_last_sync_time;

  merge into t_flt_fois_sch d
  using (select * from t_flt_fois_sch_delta) s
  on (d.flight_id = s.flight_id)
  when matched then
    update
       set d.FLIGHT_DATE       = s.FLIGHT_DATE,
           d.CARRIER           = s.CARRIER,
           d.FLIGHT_NO         = s.FLIGHT_NO,
           d.SUFFIX            = s.SUFFIX,
           d.STATUS            = s.STATUS,
           d.FLIGHT_TYPE       = s.FLIGHT_TYPE,
           d.D_OR_I            = s.D_OR_I,
           d.AC_TYPE           = s.AC_TYPE,
           d.AC_REG            = s.AC_REG,
           d.VIP               = s.VIP,
           d.SPE               = s.SPE,
           d.PLAN_DEPARTURE    = s.PLAN_DEPARTURE,
           d.DEPARTURE_AIRPORT = s.DEPARTURE_AIRPORT,
           d.STD               = s.STD,
           d.ETD               = s.ETD,
           d.ATD               = s.ATD,
           d.CABIN_CLOSE_TIME  = s.CABIN_CLOSE_TIME,
           d.BLOCK_OFF_TIME    = s.BLOCK_OFF_TIME,
           d.TURN_ON_TIME      = s.TURN_ON_TIME,
           d.PLAN_ARRIVAL      = s.PLAN_ARRIVAL,
           d.ARRIVAL_AIRPORT   = s.ARRIVAL_AIRPORT,
           d.STA               = s.STA,
           d.ETA               = s.ETA,
           d.ATA               = s.ATA,
           d.TURN_OFF_TIME     = s.TURN_OFF_TIME,
           d.BLOCK_ON_TIME     = s.BLOCK_ON_TIME,
           d.CABIN_OPEN_TIME   = s.CABIN_OPEN_TIME,
           d.TIME_STAMP        = s.TIME_STAMP,
           d.MM_LEG_ID         = s.MM_LEG_ID,
           d.DEP_BAY           = s.DEP_BAY,
           d.ARR_BAY           = s.ARR_BAY
  when not matched then
    insert
    values
      (s.FLIGHT_ID,
       s.FLIGHT_DATE,
       s.CARRIER,
       s.FLIGHT_NO,
       s.SUFFIX,
       s.STATUS,
       s.FLIGHT_TYPE,
       s.D_OR_I,
       s.AC_TYPE,
       s.AC_REG,
       s.VIP,
       s.SPE,
       s.PLAN_DEPARTURE,
       s.DEPARTURE_AIRPORT,
       s.STD,
       s.ETD,
       s.ATD,
       s.CABIN_CLOSE_TIME,
       s.BLOCK_OFF_TIME,
       s.TURN_ON_TIME,
       s.PLAN_ARRIVAL,
       s.ARRIVAL_AIRPORT,
       s.STA,
       s.ETA,
       s.ATA,
       s.TURN_OFF_TIME,
       s.BLOCK_ON_TIME,
       s.CABIN_OPEN_TIME,
       s.TIME_STAMP,
       s.MM_LEG_ID,
       s.dep_bay,
       s.arr_bay);

  update t_flt_schedule d
     set (flg_vip,dep_bay,arr_bay) = (select vip,dep_bay,arr_bay
                      from t_flt_fois_sch_delta s
                     where s.mm_leg_id = d.mm_leg_id)
   where exists (select 1 from t_flt_fois_sch_delta s where s.mm_leg_id = d.mm_leg_id);

  select max(time_stamp)
    into a_last_sync_time
    from v_crewman_flight_leg@fois;

  update t_intf_param
     set param_value = to_char(a_last_sync_time, 'yyyy/mm/dd hh24:mi:ss')
   where param_code = 'FOIS_SCH_SYNC_TIME';

  commit;
exception
  when others then
    errmsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FOIS
prompt ===============================
prompt
create or replace procedure sp_intf_fois
/*????????????????*/
is
  errmsg varchar2(1000);
begin
  sp_intf_fois_sch(errmsg);
  sp_intf_fois_abnormal(errmsg);
end;
/

prompt
prompt Creating procedure SP_INTF_FXWSIMU
prompt ==================================
prompt
create or replace procedure sp_intf_fxwsimu(p_startdate date,p_enddate date, errMsg out varchar2)
/*??????????????????????????*/
as
begin
  /*huguang 20150326 ??????????????????????*/
  return;
  /*????????*/
  delete t_tr_schedule
   where train_id in (
         select train_id
           from t_tr_plan a
          where fxw_suitid in
                (select fxw_suitid
                  from t_tr_plan
                 where train_date >= p_startdate
                   and train_date <= p_enddate
                   and is_from_fxw = 'Y'
                )
         );

  /*????????*/
  delete t_tr_plan
   where fxw_suitid in
                (select fxw_suitid
                  from t_tr_plan
                 where train_date >= p_startdate
                   and train_date <= p_enddate
                   and is_from_fxw = 'Y'
                );

  /*??????????????????T_TR_PLAN*/
  insert into t_tr_plan
      (train_id,
       train_date,
       train_line,
       td,
       ta,
       simu_code,
       qlf_rank_code,
       is_from_fxw,
       fxw_suitid,
       ac_type_crew
      )
  select seq_train_id.nextval,
        assigndate,
        train_line,/*??????1 ???????????????? 20121102 huguang*/
        to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || begintime, 'yyyy/mm/dd hh24:mi:ss') begintime,
        /*huguang 2012-12-18 ????????????????????,????????????????*/
        case
          when endtime< begintime then
            to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || endtime, 'yyyy/mm/dd hh24:mi:ss')+1
          else
            to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || endtime, 'yyyy/mm/dd hh24:mi:ss')
        end endtime,
        simu_code,
        '486',
        'Y',
        suitid,
        ac_type/*huguang 20130124????????????????*/
   from v_intf_fxw_simuplan
  where suitid in
        (select suitid
           from v_intf_fxw_simuplan
          where assigndate >= p_startdate
            and assigndate <= p_enddate
        );

  /*????????????*/
  insert into t_tr_schedule(
           train_id,
           train_date,
           p_code,
           fjs_order,
           rank_no,
           atd,
           ata,
           is_from_fxw
          )
   select a.train_id,
          a.train_date,
          b.p_code,
          b.sno,
          b.rank_no,
          to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.begintime, 'yyyy/mm/dd hh24:mi:ss') begintime,
          /*huguang 2012-12-18 ????????????????????,????????????????*/
          case
            when b.endtime<b.begintime then
              to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.endtime, 'yyyy/mm/dd hh24:mi:ss')+1
            else
              to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.endtime, 'yyyy/mm/dd hh24:mi:ss')
          end endtime,
          'Y'
     from t_tr_plan a, v_intf_fxw_simusch_order b
    where a.fxw_suitid in
          (select suitid
             from v_intf_fxw_simuplan
            where assigndate >= p_startdate
              and assigndate <= p_enddate
          )
      and a.train_date = b.assigndate
      and a.fxw_suitid = b.suitid;

  commit;
exception
  when others then
    rollback;
    errMsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXWSIMU_DELTA
prompt ========================================
prompt
create or replace procedure sp_intf_fxwsimu_delta(errmsg out varchar2)
/*??????????????????????????,????????*/
as
begin
  /*huguang 20150326 ??????????????????????*/
  return;
  /*??????????????????????????????????????*/
  merge into t_tr_fxwsimu d
    using (select assigndate,
                  suitid,
                  pilotid,
                  clerkcode,
                  pilotname,
                  idcard,
                  simtype,
                  traincom,
                  begintime,
                  endtime,
                  lastmodifytime,
                  p_code,
                  ac_type
             from t_tr_fxwsimu_delta
           ) s
        on (d.assigndate = s.assigndate
         and d.suitid = s.suitid
         and d.pilotid = s.pilotid)
     when matched then
       update
          set d.clerkcode = s.clerkcode,
              d.pilotname = s.pilotname,
              d.idcard = s.idcard,
              d.simtype = s.simtype,
              d.traincom = s.traincom,
              d.begintime = s.begintime,
              d.endtime = s.endtime,
              d.lastmodifytime = s.lastmodifytime,
              d.p_code = s.p_code,
              d.ac_type = s.ac_type
     when not matched then
       insert
         (spaid,
          assigndate,
          suitid,
          pilotid,
          clerkcode,
          pilotname,
          idcard,
          simtype,
          traincom,
          begintime,
          endtime,
          lastmodifytime,
          p_code,
          ac_type
         )
       values
         (seq_tr_fxw_spaid.nextval,
          s.assigndate,
          s.suitid,
          s.pilotid,
          s.clerkcode,
          s.pilotname,
          s.idcard,
          s.simtype,
          s.traincom,
          s.begintime,
          s.endtime,
          s.lastmodifytime,
          s.p_code,
          s.ac_type
         );

  --??????????????????????????
  delete t_tr_fxwsimu t
   where exists
         (select 1
            from t_tr_fxwsimu_delta d
           where d.suitid = t.suitid
             and d.pilotid = t.pilotid)
     and not exists
         (select 1
            from t_tr_fxwsimu_delta d
           where d.suitid = t.suitid
             and d.pilotid = t.pilotid
             and d.assigndate = t.assigndate);

  /*????????*/
  delete t_tr_schedule
   where is_from_fxw = 'Y'
     and train_id in (
         select a.train_id
           from t_tr_plan a,t_tr_fxwsimu_delta b
          where a.fxw_suitid = b.suitid
            --and a.train_date = b.assigndate
            --and p_code is not null
         );

  /*????????????*/
  delete t_tr_plan
   where is_from_fxw = 'Y'
     and (/*train_date,*/fxw_suitid) in (
           select /*assigndate,*/suitid from t_tr_fxwsimu_delta /*where p_code is not null*/);

  /*??????????????????T_TR_PLAN*/
  merge into t_tr_plan d
    using (select assigndate,
                  train_line,
                  suitid,
                  to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || begintime, 'yyyy/mm/dd hh24:mi:ss') begintime,
                  /*huguang 2012-12-18 ????????????????????,????????????????*/
                  case
                    when endtime<begintime then
                      to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || endtime, 'yyyy/mm/dd hh24:mi:ss')+1
                    else
                      to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || endtime, 'yyyy/mm/dd hh24:mi:ss')
                  end endtime,
                  simu_code,
                  ac_type/*huguang 20130124????????????????*/
             from v_intf_fxw_simuplan
            where (/*assigndate,*/suitid) in
                  (select distinct /*assigndate,*/suitid from t_tr_fxwsimu_delta/* where p_code is not null*/)
          ) s
       on( d.fxw_suitid = s.suitid and
           d.train_date = s.assigndate
         )
    when matched then
      update
         set d.train_line = train_line,  /*??????1 ???????????????? 20121102 huguang*/
             d.td = begintime,
             d.ta = endtime,
             d.simu_code = s.simu_code,
             d.qlf_rank_code ='486',
             d.ac_type_crew = s.ac_type
    when not matched then
      insert
        (train_id,
         train_date,
         train_line,
         td,
         ta,
         simu_code,
         qlf_rank_code,
         is_from_fxw,
         fxw_suitid,
         ac_type_crew
        )
      values
        (seq_train_id.nextval,
         s.assigndate,
         s.train_line,/*??????1 ???????????????? 20121102 huguang*/
         s.begintime,
         s.endtime,
         s.simu_code,
         '486',
         'Y',
         s.suitid,
         s.ac_type/*huguang 20130124????????????????*/
        );

  /*????????????*/
  insert into t_tr_schedule(
           train_id,
           train_date,
           p_code,
           fjs_order,
           rank_no,
           atd,
           ata,
           is_from_fxw
          )
   select a.train_id,
          a.train_date,
          b.p_code,
          b.sno,
          b.rank_no,
          to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.begintime, 'yyyy/mm/dd hh24:mi:ss') begintime,
          /*huguang 2012-12-18 ????????????????????,????????????????*/
          case
            when b.endtime<b.begintime
              then to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.endtime, 'yyyy/mm/dd hh24:mi:ss')+1
            else
              to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.endtime, 'yyyy/mm/dd hh24:mi:ss')
          end endtime,
          'Y'
     from t_tr_plan a, v_intf_fxw_simusch_order b
    where (/*a.train_date,*/a.fxw_suitid) in (select distinct /*assigndate,*/suitid from t_tr_fxwsimu_delta)
      and a.train_date = b.assigndate
      and a.fxw_suitid = b.suitid;

  commit;
exception
  when others then
    rollback;
    errMsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXWSIMU_POLIT
prompt ========================================
prompt
create or replace procedure sp_intf_fxwsimu_polit(p_politid varchar2, errMsg out varchar2)
/*
????????????????????????????????????????????????????
??????????
  p_politid:????????????ID
  errmsg:????????????????????????????
????????
  1??????????????????????????????????????????ID??????
  2????T_TR_FXWSIMU??P_CODE??????????????????????????ID

--????????????????????????
select train_date,c_name,rank_no from t_tr_schedule a,t_hr_crew b
where train_id in (
  select train_id from t_tr_schedule where p_code = 1238
  )
and a.p_code = b.p_code
order by train_date,c_name;
*/
as
  a_cnt integer;
  a_pcode t_hr_crew.p_code%type;
begin
  select count(*) into a_cnt from t_hr_crew where fxw_id = p_politid;
  if a_cnt = 0 then
    return;
  end if;

  select p_code into a_pcode from t_hr_crew where fxw_id = p_politid;
  update t_tr_fxwsimu set p_code = a_pcode where pilotid = p_politid/* and p_code is null*/;

  /*????????*/
  delete t_tr_schedule
   where train_id in (
         select train_id
           from t_tr_plan a
          where is_from_fxw = 'Y'
            and (/*train_date,*/fxw_suitid) in (
                 select /*assigndate,*/suitid from t_tr_fxwsimu where pilotid = p_politid)
         );

  /*????????*/
  delete t_tr_plan
   where is_from_fxw = 'Y'
     and (/*train_date,*/fxw_suitid) in (
           select /*assigndate,*/suitid from t_tr_fxwsimu where pilotid = p_politid);

  /*??????????????????T_TR_PLAN*/
  insert into t_tr_plan
      (train_id,
       train_date,
       train_line,
       td,
       ta,
       simu_code,
       qlf_rank_code,
       is_from_fxw,
       fxw_suitid
      )
 select seq_train_id.nextval,
        assigndate,
        train_line,/*??????1 ???????????????? 20121102 huguang*/
        to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || begintime, 'yyyy/mm/dd hh24:mi:ss') begintime,
        to_date(to_char(assigndate,'yyyy/mm/dd') || ' ' || endtime, 'yyyy/mm/dd hh24:mi:ss') endtime,
        simu_code,
        '486',
        'Y',
        suitid
   from v_intf_fxw_simuplan
  where (/*assigndate,*/suitid) in (
           select /*assigndate,*/suitid from t_tr_fxwsimu where pilotid = p_politid);

  /*????????????*/
  insert into t_tr_schedule(
           train_id,
           train_date,
           p_code,
           fjs_order,
           rank_no,
           atd,
           ata,
           is_from_fxw
          )
   select a.train_id,
          a.train_date,
          b.p_code,
          b.sno,
          b.rank_no,
          to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.begintime, 'yyyy/mm/dd hh24:mi:ss') begintime,
          to_date(to_char(b.assigndate,'yyyy/mm/dd') || ' ' || b.endtime, 'yyyy/mm/dd hh24:mi:ss') endtime,
          'Y'
     from t_tr_plan a, v_intf_fxw_simusch_order b
    where a.train_date = b.assigndate
      and a.fxw_suitid = b.suitid
      and (/*train_date,*/fxw_suitid) in (
           select /*assigndate,*/suitid from t_tr_fxwsimu where pilotid = p_politid);

  commit;
exception
  when others then
    rollback;
    errMsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXWTRANS
prompt ===================================
prompt
create or replace procedure sp_intf_fxwtrans
/*??????????????/????????????????
1????????????????????
   a) ????????????????????????
      ????????????????????????????????????????????????????????????
            ??????????????????????????????????????????
      ??????????job????????????????????????????????????????????????????????????????
            ????????????????????????
   b) ????????????????????????
      ????????????????????????????????????????????????????????????????????????????????????????????
            ????????????????????????????????????????????filiale,dep_code,branch_code
   c) ????????????????????????
      ????????????????????????????????????????????????????????
            ????????????????????????????????????????????(home_filiale)
            ????????????????????????
      ??????????job????????????????????????????????????????????????????????????????
            ????????????????????????
   d) ????????????????????????
      ??????????????????????????????????????????????????????????????????????????????????
            ????job????????????????????????????????????????????????filiale,dep_code,branch_code
            ????????????????????????
2??????????????????????????
   a) ??????????????????????????????????????????
      ????????????????????????????????????????????????????????????????????????????????????????????????
   b) ??????????????????????????????
      ????????????????????????????????????????????????????????????????????????????????????????????????
   c) ??????????????????????????????
      ??????????????????????????????????????????????????????????????????filiale,dep_code,branch_code
3????????????
   errmsg ??????????????????????????
*/
as
  --TR01:????????????????????????
  --TR02:????????????????????????
  --TR03:????????????????????????
  --TR04:????????????????????????
  errMsg varchar2(4000);
  a_online varchar2(1);
  cursor mycur is
    select * from t_hr_transfer
      where VALID_FLAG='Y' and ((state = 'TR01' or state = 'TR02') and plan_end_date < trunc(sysdate) and end_date is null)
         or (state = 'TR03' and start_date <= trunc(sysdate) and remarks is null);

begin
  for lp in mycur loop
    if lp.state = 'TR01' or lp.state = 'TR02' then
      update t_hr_crew
         set home_filiale = null,
             home_dep_code = null
       where p_code = lp.p_code and home_filiale=lp.to_filiale;

      update t_hr_transfer
         set end_date = lp.plan_end_date,
             remarks='??????????' || to_char(sysdate,'yyyy/mm/dd hh24:mi') || '????????'
       where trans_id = lp.trans_id;
    else
      update t_hr_crew
         set filiale = lp.to_filiale,
             dep_code = (select fxw_code from t_bas_filiale where filiale = lp.to_filiale),
             branch_code = (select fxw_code from t_bas_filiale where filiale = lp.to_filiale),
             home_filiale = null
       where p_code = lp.p_code;

      --????????????????????????,end_date??????????
      --2013.10.18
      select is_online into a_online from t_bas_filiale where filiale = lp.to_filiale;
      if a_online = 'Y' then
        update t_hr_transfer
           set plan_end_date = trunc(sysdate),
               end_date = trunc(sysdate),
               remarks='??????????' || to_char(sysdate,'yyyy/mm/dd hh24:mi') || '????????'
         where trans_id = lp.trans_id;
      else
        update t_hr_transfer
           set plan_end_date = trunc(sysdate),
               remarks='??????????' || to_char(sysdate,'yyyy/mm/dd hh24:mi') || '????????'
         where trans_id = lp.trans_id;
      end if;
    end if;
  end loop;

  commit;
exception
  when others then
    errmsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXWTRANSIN_PROC
prompt ==========================================
prompt
create or replace procedure sp_intf_fxwtransin_proc(fxwid varchar2, errMsg out varchar2)
as
/*??????????????????????
1????????????????????
   a) ????????????????????????
   b) ??????????????????t_hr_transfer
   c) ??????????????????????
2??????????????????????????
   b) ????????????????????????
   c) ????????????????
3????????????
   fxwid ??????????trans_id??????????????????????ID
   errmsg ??????????????????????????
*/
  a_trans_id t_hr_transfer.trans_id%type;
begin
  select seq_transfer_id.nextval into a_trans_id from dual;

  --????????????
  insert into t_fxw_crew_his(
    TRANS_ID,
    BASIC_INFO_ID,
    CLERK_CODE,
    PILOT_NAME,
    SHORT_NAME,
    ENG_SURNAME,
    ENG_NAME,
    NATIVE_PLACE,
    BIRTHDAY,
    SEX,
    ID_CODE,
    ORG_CODE,
    AERO_UNIT_CODE,
    EXECUTE_DUTY,
    EXECUTE_LEVEL,
    CIVIL_AVIATION_DATE,
    WORK_DATE,
    GRADUATE_ACADEMY,
    ENTER_DATE,
    GRADUATE_DATE,
    CULTURE_DEGREE,
    SPECIALITY,
    WORK_TYPE,
    FAMILY_ADDRESS,
    FAMILY_TEL,
    OFFICE_TEL,
    MOBILE_TEL,
    STATURE,
    MARRIAGE_STATUS,
    ENTER_PARTY_DATE,
    BOARD_CARD_NO,
    NATIONALITY,
    REMARKS,
    POLITY,
    TEMP_UNIT_CODE,
    CREATOR,
    CREATE_DATE,
    WEIGHT,
    CE_AVIATION_DATE,
    ENG_NATIONALITY,
    ENG_NAT_CODE3,
    ICAO_ENG,
    ROUTE_ENG,
    HEALTH_LEVEL,
    LAST_MODIFIER,
    LAST_MODIFY_TIME,
    VALIDITY,
    STATUS,
    ICAO_VALID_DATE,
    ICAO_INVALID_DATE,
    ENG_NATIVE_PLACE,
    ENG_FAMILY_ADDRESS,
    EXEC_DEPT_CODE,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER,
    FROM_UNIT,
    TO_UNIT)
  select a_trans_id,
    BASIC_INFO_ID,
    CLERK_CODE,
    PILOT_NAME,
    SHORT_NAME,
    ENG_SURNAME,
    ENG_NAME,
    NATIVE_PLACE,
    BIRTHDAY,
    SEX,
    ID_CODE,
    ORG_CODE,
    AERO_UNIT_CODE,
    EXECUTE_DUTY,
    EXECUTE_LEVEL,
    CIVIL_AVIATION_DATE,
    WORK_DATE,
    GRADUATE_ACADEMY,
    ENTER_DATE,
    GRADUATE_DATE,
    CULTURE_DEGREE,
    SPECIALITY,
    WORK_TYPE,
    FAMILY_ADDRESS,
    FAMILY_TEL,
    OFFICE_TEL,
    MOBILE_TEL,
    STATURE,
    MARRIAGE_STATUS,
    ENTER_PARTY_DATE,
    BOARD_CARD_NO,
    NATIONALITY,
    REMARKS,
    POLITY,
    TEMP_UNIT_CODE,
    CREATOR,
    CREATE_DATE,
    WEIGHT,
    CE_AVIATION_DATE,
    ENG_NATIONALITY,
    ENG_NAT_CODE3,
    ICAO_ENG,
    ROUTE_ENG,
    HEALTH_LEVEL,
    LAST_MODIFIER,
    LAST_MODIFY_TIME,
    VALIDITY,
    STATUS,
    ICAO_VALID_DATE,
    ICAO_INVALID_DATE,
    ENG_NATIVE_PLACE,
    ENG_FAMILY_ADDRESS,
    EXEC_DEPT_CODE,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER,
    FROM_UNIT,
    TO_UNIT
  from t_fxw_crew
  where TRANS_ID = fxwid;

  --????????????
  insert into t_fxw_license_his(
    TRANS_ID,
    TECHNICAL_STANDARD_ID,
    PILOT_INFO_ID,
    LICENCE_NO,
    VALID_BEGIN_DATE,
    VALID_END_DATE,
    MONTH1,
    MONTH2,
    MAIN_AC_TYPE_CODE,
    MAIN_AC_TYPE_DATE,
    TECHNICAL_STANDARD,
    TECHNICAL_STAND_DATE,
    APPOINT_STANDARD,
    APPOINT_STAND_DATE,
    WEATHER_STANDARD,
    WEATHER_STAND_DATE,
    RADIO_STANDARD,
    RADIO_STAND_DATE,
    MACHINE_STANDARD,
    MACHINE_STAND_DATE,
    TEACHER_STANDARD,
    TEACHER_STAND_DATE,
    OFFICE_INSPECTOR_STAND_DATE,
    COMPANY_INSPECTOR_STAND_DATE,
    NEXT_SCIAMACHY,
    LICENCE_BEG_DATE,
    LICENCE_END_DATE,
    TEACHER_STAND_END_DATE,
    OFFICE_INSP_STAND_END_DATE,
    SKILLED_INSPECTOR_STAND_DATE,
    COMPANY_INSP_STAND_END_DATE,
    PLATEAU_STANDARD,
    PLATEAU_STAND_DATE,
    NEXT_SCIAMACHY_TEACHER,
    NEXT_TEACHER_NUM,
    TEACHER_THEORY_PRE_GRADE,
    CREATOR,
    CREATE_DATE,
    LAST_MODIFIER,
    LAST_MODIFY_TIME,
    SKILLED_INSP_STAND_END_DATE,
    RETRAINING_PLACE,
    EMERGENCY_SUR_START_DATE,
    EMERGENCY_SUR_END_DATE,
    DANGEROUS_START_DATE,
    DANGEROUS_END_DATE,
    AIRLINE_CHECK_START_DATE,
    AIRLINE_CHECK_END_DATE,
    OFFICE_INSPECTOR_STANDARD,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    TECHNICAL_STANDARD_ID,
    PILOT_INFO_ID,
    LICENCE_NO,
    VALID_BEGIN_DATE,
    VALID_END_DATE,
    MONTH1,
    MONTH2,
    MAIN_AC_TYPE_CODE,
    MAIN_AC_TYPE_DATE,
    TECHNICAL_STANDARD,
    TECHNICAL_STAND_DATE,
    APPOINT_STANDARD,
    APPOINT_STAND_DATE,
    WEATHER_STANDARD,
    WEATHER_STAND_DATE,
    RADIO_STANDARD,
    RADIO_STAND_DATE,
    MACHINE_STANDARD,
    MACHINE_STAND_DATE,
    TEACHER_STANDARD,
    TEACHER_STAND_DATE,
    OFFICE_INSPECTOR_STAND_DATE,
    COMPANY_INSPECTOR_STAND_DATE,
    NEXT_SCIAMACHY,
    LICENCE_BEG_DATE,
    LICENCE_END_DATE,
    TEACHER_STAND_END_DATE,
    OFFICE_INSP_STAND_END_DATE,
    SKILLED_INSPECTOR_STAND_DATE,
    COMPANY_INSP_STAND_END_DATE,
    PLATEAU_STANDARD,
    PLATEAU_STAND_DATE,
    NEXT_SCIAMACHY_TEACHER,
    NEXT_TEACHER_NUM,
    TEACHER_THEORY_PRE_GRADE,
    CREATOR,
    CREATE_DATE,
    LAST_MODIFIER,
    LAST_MODIFY_TIME,
    SKILLED_INSP_STAND_END_DATE,
    RETRAINING_PLACE,
    EMERGENCY_SUR_START_DATE,
    EMERGENCY_SUR_END_DATE,
    DANGEROUS_START_DATE,
    DANGEROUS_END_DATE,
    AIRLINE_CHECK_START_DATE,
    AIRLINE_CHECK_END_DATE,
    OFFICE_INSPECTOR_STANDARD,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_license
  where TRANS_ID = fxwid;

  --????????????
  insert into t_fxw_passport_his(
    TRANS_ID,
    PASSPORT_ID,
    PILOT_INFO_ID,
    PASSPORT_CODE,
    PASSPORT_TYPE,
    GRANT_DATE,
    USE_DATE,
    VALID_DATE,
    GRANT_PLACE,
    REMARK,
    CREATOR,
    CREATE_DATE,
    LAST_MODIFIER,
    LAST_MODIFY_TIME,
    ENTER_AIRPORT,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    PASSPORT_ID,
    PILOT_INFO_ID,
    PASSPORT_CODE,
    PASSPORT_TYPE,
    GRANT_DATE,
    USE_DATE,
    VALID_DATE,
    GRANT_PLACE,
    REMARK,
    CREATOR,
    CREATE_DATE,
    LAST_MODIFIER,
    LAST_MODIFY_TIME,
    ENTER_AIRPORT,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_passport
  where TRANS_ID = fxwid;

  --????????????
  insert into t_fxw_visa_his(
    TRANS_ID,
    PILOT_VISA_ID,
    PILOT_INFO_ID,
    PASSPORT_ID,
    VISA_CODE,
    VISA_TYPE,
    NATION,
    VALID_DATE,
    BEGIN_DATE,
    GRANT_DATE,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    PILOT_VISA_ID,
    PILOT_INFO_ID,
    PASSPORT_ID,
    VISA_CODE,
    VISA_TYPE,
    NATION,
    VALID_DATE,
    BEGIN_DATE,
    GRANT_DATE,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_visa
  where TRANS_ID = fxwid;

  --????????
  insert into t_fxw_fltplan_his(
    TRANS_ID,
    FLIGHT_PLAN_ID,
    FLIGHT_DATE,
    FLIGHT_NO,
    DEPART_PORT_CODE3,
    ARRIVAL_PORT_CODE3,
    ORG_CODE,
    AC_TYPE_CODE,
    AC_NO,
    FLIGHT_ATTR,
    CANCELED,
    SCHEDULE_DEPART_TIME,
    SCHEDULE_ARRIVAL_TIME,
    CARRIER,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    FLIGHT_PLAN_ID,
    FLIGHT_DATE,
    FLIGHT_NO,
    DEPART_PORT_CODE3,
    ARRIVAL_PORT_CODE3,
    ORG_CODE,
    AC_TYPE_CODE,
    AC_NO,
    FLIGHT_ATTR,
    CANCELED,
    SCHEDULE_DEPART_TIME,
    SCHEDULE_ARRIVAL_TIME,
    CARRIER,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_fltplan
  where TRANS_ID = fxwid;

  --????????
  insert into t_fxw_task_his(
    TRANS_ID,
    FLIGHT_TASK_ID,
    ORG_CODE,
    TASK_DATE,
    APPLY_FLIGHT_NO,
    AC_TYPE,
    SIGN_TIME,
    DRIVE_TIME,
    FLIGHT_HOUR,
    DEPART_FLIGHT_NO,
    DEPART_PORT_CODE3,
    DEPART_TIME,
    DESTINATION,
    ARRIVE_TIME,
    TASK_TYPE,
    FLIGHT_UNIT_CODE,
    ASSIGN_STATUS,
    IS_FULL,
    ROUTE,
    FLIGHT_STATUS,
    IS_MODIFIED,
    MODIFIY_TIME,
    DUTY_LOCK,
    GENERAL_DISPATCH_LOCK,
    PUBLISH_STATUS,
    LAST_MODIFY_TIME,
    REMARKS,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    FLIGHT_TASK_ID,
    ORG_CODE,
    TASK_DATE,
    APPLY_FLIGHT_NO,
    AC_TYPE,
    SIGN_TIME,
    DRIVE_TIME,
    FLIGHT_HOUR,
    DEPART_FLIGHT_NO,
    DEPART_PORT_CODE3,
    DEPART_TIME,
    DESTINATION,
    ARRIVE_TIME,
    TASK_TYPE,
    FLIGHT_UNIT_CODE,
    ASSIGN_STATUS,
    IS_FULL,
    ROUTE,
    FLIGHT_STATUS,
    IS_MODIFIED,
    MODIFIY_TIME,
    DUTY_LOCK,
    GENERAL_DISPATCH_LOCK,
    PUBLISH_STATUS,
    LAST_MODIFY_TIME,
    REMARKS,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_task
  where TRANS_ID = fxwid;

  --????????????
  insert into t_fxw_taskflight_his(
    TRANS_ID,
    TASK_PLAN_ID,
    FLIGHT_TASK_ID,
    FLIGHT_PLAN_ID,
    TASK_TYPE,
    PLAN_IDX,
    IF_LIFT,
    IF_PAGE,
    FLIGHT_DATE,
    LAST_MODIFY_TIME,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    TASK_PLAN_ID,
    FLIGHT_TASK_ID,
    FLIGHT_PLAN_ID,
    TASK_TYPE,
    PLAN_IDX,
    IF_LIFT,
    IF_PAGE,
    FLIGHT_DATE,
    LAST_MODIFY_TIME,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_taskflight
  where TRANS_ID = fxwid;

  --????
  insert into t_fxw_crewroster_his(
    TRANS_ID,
    CREW_ASSIGN_ID,
    FLIGHT_TASK_ID,
    FLIGHT_PLAN_ID,
    CREW_ID,
    POST,
    IS_CHIEF,
    IS_LIFT,
    IF_PART_TIME,
    MARK,
    LAST_MODIFY_TIME,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    CREW_ASSIGN_ID,
    FLIGHT_TASK_ID,
    FLIGHT_PLAN_ID,
    CREW_ID,
    POST,
    IS_CHIEF,
    IS_LIFT,
    IF_PART_TIME,
    MARK,
    LAST_MODIFY_TIME,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_crewroster
  where TRANS_ID = fxwid;

  --????????????
  insert into t_fxw_main_fltexp_his(
    TRANS_ID,
    FLIGHT_REC_ID,
    FLIGHT_PLAN_ID,
    SLIDE_START_TIME,
    TAKE_OFF_TIME,
    LAND_TIME,
    SLIDE_END_TIME,
    TIME_ON_GROUND,
    TIME_IN_SKY,
    SUM_TIME,
    RESERVED_FUEL,
    REFUEL,
    TOTAL_FUEL,
    TIME_IN_NIGHT,
    AERO_PAPER_ID,
    AERO_PAPER_NO,
    PILOT_CHECKBOX,
    ICAO,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    FLIGHT_REC_ID,
    FLIGHT_PLAN_ID,
    SLIDE_START_TIME,
    TAKE_OFF_TIME,
    LAND_TIME,
    SLIDE_END_TIME,
    TIME_ON_GROUND,
    TIME_IN_SKY,
    SUM_TIME,
    RESERVED_FUEL,
    REFUEL,
    TOTAL_FUEL,
    TIME_IN_NIGHT,
    AERO_PAPER_ID,
    AERO_PAPER_NO,
    PILOT_CHECKBOX,
    ICAO,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_main_fltexp
  where TRANS_ID = fxwid;

  --??????????
  insert into t_fxw_fltexp_his(
    TRANS_ID,
    SEAT_REC_ID,
    FLIGHT_PLAN_ID,
    CREW_ID,
    USER_NAME,
    IDCODE,
    COMPANY_NAME,
    COMPANY_CODE,
    FLIGHT_ID,
    FLIGHT_DATE,
    FLIGHT_NO,
    DEPART_PORT_CODE3,
    ARRIVAL_PORT_CODE3,
    SUM_TIME,
    FLY_TIME,
    SEAT_TYPE,
    FLY_SORTIE,
    IS_LAND_OPERATOR,
    OPERATE_TYPE,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER,
    night_time,
    teacher_time,
    up_sortie,
    down_sortie
  )
  select a_trans_id,
    SEAT_REC_ID,
    FLIGHT_PLAN_ID,
    CREW_ID,
    USER_NAME,
    IDCODE,
    COMPANY_NAME,
    COMPANY_CODE,
    FLIGHT_ID,
    FLIGHT_DATE,
    FLIGHT_NO,
    DEPART_PORT_CODE3,
    ARRIVAL_PORT_CODE3,
    SUM_TIME,
    FLY_TIME,
    SEAT_TYPE,
    FLY_SORTIE,
    IS_LAND_OPERATOR,
    OPERATE_TYPE,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER,
    night_time,
    teacher_time,
    up_sortie,
    down_sortie
  from t_fxw_fltexp
  where TRANS_ID = fxwid;

  --????????????
  insert into t_fxw_monfltexp_his(
    TRANS_ID,
    FLIGHT_HOUR_ID,
    PILOT_INFO_ID,
    USER_NAME,
    IDCODE,
    COMPANY_NAME,
    COMPANY_CODE,
    YEAR_MONTH,
    AC_TYPE,
    FLY_HOUR,
    FLY_SORTIE,
    LIVE_TIME,
    LIVE_SORTIE,
    LEFT_TIME,
    RIGHT_TIME,
    NIGHT_TIME,
    METER_FLY_TIME,
    II_SORTIE,
    TEACHER_TIME,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  )
  select a_trans_id,
    FLIGHT_HOUR_ID,
    PILOT_INFO_ID,
    USER_NAME,
    IDCODE,
    COMPANY_NAME,
    COMPANY_CODE,
    YEAR_MONTH,
    AC_TYPE,
    FLY_HOUR,
    FLY_SORTIE,
    LIVE_TIME,
    LIVE_SORTIE,
    LEFT_TIME,
    RIGHT_TIME,
    NIGHT_TIME,
    METER_FLY_TIME,
    II_SORTIE,
    TEACHER_TIME,
    OP_TIME,
    OPER_IP,
    OPER_HOST,
    OPER
  from t_fxw_monfltexp
  where TRANS_ID = fxwid;

  --????????????????
  delete t_fxw_crew where TRANS_ID = fxwid;
  delete t_fxw_license where TRANS_ID = fxwid;
  delete t_fxw_passport where TRANS_ID = fxwid;
  delete t_fxw_visa where TRANS_ID = fxwid;
  delete t_fxw_fltplan where TRANS_ID = fxwid;
  delete t_fxw_task where TRANS_ID = fxwid;
  delete t_fxw_taskflight where TRANS_ID = fxwid;
  delete t_fxw_crewroster where TRANS_ID = fxwid;
  delete t_fxw_main_fltexp where TRANS_ID = fxwid;
  delete t_fxw_fltexp where TRANS_ID = fxwid;
  delete t_fxw_monfltexp where TRANS_ID = fxwid;

  commit;
exception
  when others then
    errmsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXWTRANS_CREW
prompt ========================================
prompt
create or replace procedure sp_intf_fxwtrans_crew
as
  -- ????????????????????????????????????????????????
  --TR01:????????????????????????
  --TR02:????????????????????????
  errMsg varchar2(4000);
  cursor mycur is
        select t.p_code, t.to_filiale,t.to_dep_code
        from t_hr_transfer t
        where t.valid_flag='Y' AND T.END_DATE IS NULL AND T.STATE IN ('TR01','TR02')
        AND T.P_CODE NOT IN ( SELECT  P_CODE FROM T_HR_CREW  WHERE HOME_FILIALE IS NOT NULL)
        AND t.trans_id in  (select max(t.trans_id)
              from t_hr_transfer t
              where t.valid_flag='Y' AND T.END_DATE IS NULL AND T.STATE IN ('TR01','TR02') group by P_CODE);
begin
  for lp in mycur loop
        update t_hr_crew
           set home_filiale = lp.to_filiale,
               home_dep_code = lp.to_dep_code
         where p_code = lp.p_code ;

  end loop;
  commit;
exception
  when others then
    errmsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXWTRANS_OLD
prompt =======================================
prompt
create or replace procedure sp_intf_fxwtrans_old
/*??????????????/????????????????
1????????????????????
   a) ????????????????????
      ??????????????????????????????????????????????????????
      ????????????????????????????
   b) ????????????????????
      ??????????????????????????????????????
      ????????????????????????????????????????????????????????????????????????????
2??????????????????????????
   a) ??????????????????????????????????????
      ??????????????????????????????????????????????????????????????????????????????????
   c) ??????????????????????????
      ??????????????????????????????????????????????????????????????????????????????????
3????????????
   errmsg ??????????????????????????
*/
as
  --TR01 ????????->??????
  --TR02 ??????->????????
  errMsg varchar2(4000);
  cursor mycur is
    select * from t_hr_transfer
      where (state = 'TR01' and start_date <= trunc(sysdate) and remarks is null)
         or (state = 'TR02' and end_date <= trunc(sysdate) and remarks is null);

begin
  for lp in mycur loop
    if lp.state = 'TR01' then
      --??????????????????????????????????????
      update t_hr_crew
         set home_filiale = filiale,
             home_dep_code = dep_code,
             filiale = lp.to_filiale,
             dep_code = (select fxw_code from t_bas_filiale where filiale = lp.to_filiale)
       where p_code = lp.p_code;
      update t_hr_transfer set remarks='??????????' || to_char(sysdate,'yyyy/mm/dd hh24:mi') || '????????????????' where trans_id = lp.trans_id;
    else
      --??????????????????????????????????????(????????)
      update t_hr_crew
         set filiale = lp.from_filiale,
             dep_code = (select fxw_code from t_bas_filiale where filiale = lp.from_filiale),
             home_filiale = null,
             home_dep_code = null
       where p_code = lp.p_code;
      update t_hr_transfer set remarks='??????????' || to_char(sysdate,'yyyy/mm/dd hh24:mi') || '??????????????' where trans_id = lp.trans_id;
    end if;
  end loop;

  commit;
exception
  when others then
    errmsg := sqlerrm;
end;
/

prompt
prompt Creating procedure SP_INTF_FXW_FTB
prompt ==================================
prompt
create or replace procedure sp_intf_fxw_ftb as
  ftb_num  integer;
  ftbd_num integer;
begin
  /*????????????????,????????????????20150731*/
  --????????
  select count(*)
    into ftb_num
    from (select a.rec_id
            from t_svc_ftb a
           where a.op_time >= sysdate - 5
             and a.op_time <= (sysdate - 15 / 24 / 60)
          minus
          select fr.rec_id
            from crs.ceacrs2_flight_rec@fxw_prod fr
           where fr.LAST_MODIFY_TIME >= sysdate - 5
             and fr.LAST_MODIFY_TIME <= (sysdate - 15 / 24 / 60)) aa;
  if ftb_num > 0 then
    update t_svc_ftb ftb
       set ftb.op_time = sysdate
     where ftb.rec_id in
           (select a.rec_id
              from t_svc_ftb a
             where a.op_time >= sysdate - 5
               and a.op_time <= (sysdate - 15 / 24 / 60)
            minus
            select fr.rec_id
              from crs.ceacrs2_flight_rec@fxw_prod fr
             where fr.LAST_MODIFY_TIME >= sysdate - 5
               and fr.LAST_MODIFY_TIME <= (sysdate - 15 / 24 / 60));
  end if;
  select count(*)
    into ftbd_num
    from (select a.rec_id
            from t_svc_ftb_detail a
           where a.op_time >= sysdate - 5
             and a.op_time <= (sysdate - 35 / 24 / 60)
          minus
          select fr.rec_id
            from crs.ceacrs2_pilot_seat_rec@fxw_prod fr
           where fr.LAST_MODIFY_TIME >= sysdate - 5
             and fr.LAST_MODIFY_TIME <= (sysdate - 35 / 24 / 60)) aa;

  if ftbd_num > 0 then
    --????????
    update t_svc_ftb_detail de
       set de.op_time = sysdate
     where de.rec_id in
           (select a.rec_id
              from t_svc_ftb_detail a
             where a.op_time >= sysdate - 5
               and a.op_time <= (sysdate - 35 / 24 / 60)
            minus
            select fr.rec_id
              from crs.ceacrs2_pilot_seat_rec@fxw_prod fr
             where fr.LAST_MODIFY_TIME >= sysdate - 5
               and fr.LAST_MODIFY_TIME <= (sysdate - 35 / 24 / 60));
  end if;
  commit;

  --20160222 ????????????????????????
  select count(*)
    into ftb_num
    from (select a.rec_id
            from t_sch_dutyline a
           where a.op_time >= sysdate - 5
             and a.op_time <= (sysdate - 15 / 24 / 60)
             and a.filiale not in ('CK', 'GWJ')
          minus
          select a.rec_id
            from crs.ceacrs2_flight_task@fxw_prod a
           where a.last_modify_time >= sysdate - 5
             and a.last_modify_time <= (sysdate - 15 / 24 / 60));

  if ftb_num > 0 then
    update t_sch_dutyline b
       set b.op_time = sysdate
     where b.rec_id in
           (select a.rec_id
              from t_sch_dutyline a
             where a.op_time >= sysdate - 5
               and a.op_time <= (sysdate - 15 / 24 / 60)
               and a.filiale not in ('CK', 'GWJ')
            minus
            select a.rec_id
              from crs.ceacrs2_flight_task@fxw_prod a
             where a.last_modify_time >= sysdate - 5
               and a.last_modify_time <= (sysdate - 15 / 24 / 60));
  end if;
  commit;

  /*
  SM ????????:
  01:23:36-01:27:28
  21:23:36-21:27:10
  16:51:27-16:55:31
  */
  if (to_number(to_char(sysdate, 'hh24miss')) > 010000 and
     to_number(to_char(sysdate, 'hh24miss')) < 023000) or
     (to_number(to_char(sysdate, 'hh24miss')) > 210000 and
     to_number(to_char(sysdate, 'hh24miss')) < 223000) or
     (to_number(to_char(sysdate, 'hh24miss')) > 160000 and
     to_number(to_char(sysdate, 'hh24miss')) < 173000) then
    insert into t_flt_schedule_ac_type1019
      (flight_id,
       ????????,
       ??????????,
       ????????,
       ??????????,
       ????????,
       ????????,
       ????????????,
       ????????)
      select a.flight_id,
             a.ac_type ????????,
             (select c.ac_type_crew
                from t_bas_fleet c
               where c.ac_type = a.ac_type) ??????????,
             b.ac_type ????????,
             (select c.ac_type_crew
                from t_bas_fleet c
               where c.ac_type = b.ac_type) ??????????,
             a.ac_reg ????????,
             'Y',
             sysdate,
             a.flight_date
        from t_flt_schedule a, t_bas_aircraft b
       where a.flight_date >= trunc(sysdate + 3)
         and a.flight_date <= trunc(sysdate + 13)
         and nvl(a.ac_reg, '#') = b.ac_reg(+)
         and a.ac_type != b.ac_type
         and a.flight_flag in ('A', 'C')
         and nvl(a.flg_cs, 'A') not in ('C', 'D')
       order by a.ac_type, a.flight_no;

    update t_flt_schedule a
       set a.ac_reg = null, a.oper = 'SapUser'
     where a.flight_id in (select flight_id
                             from t_flt_schedule_ac_type1019 c
                            where c.???????? = 'Y')
       and a.flight_date >= trunc(sysdate + 3)
       and a.flight_date <= trunc(sysdate + 13)
       and a.ac_type not in ('73V' /* ,'73S','73U'*/);

    update t_flt_schedule_ac_type1019
       set ???????? = null
     where ???????? = 'Y';
    commit;
  end if;
exception
  when others then
    dbms_output.put_line(substr(sqlerrm, 1, 1000));
end;
/

prompt
prompt Creating procedure SP_INTF_GETAIRCRAFTFROMSABRE
prompt ===============================================
prompt
create or replace procedure sp_intf_GetAircraftFromSabre
as
/*??Sabre????????????????*/
begin
  insert into t_bas_fleet(ac_type)
  select distinct code from aircraft_info@airops
    where code not in (select ac_type from t_bas_fleet);

  merge into t_bas_aircraft d
    using (select distinct tail_number,code,operator_code from aircraft_info@airops) s
    on (d.ac_reg = s.tail_number)
   when matched then
     update
        set d.ac_type = s.code,
            d.filiale  = s.operator_code
       where (d.ac_type <> s.code
          or nvl(d.filiale,'#') <> nvl(s.operator_code,'#'))
   when not matched then
     insert (ac_reg,ac_type,filiale) values(s.tail_number,s.code,s.operator_code);

  commit;
exception
  when others then
    dbms_output.put_line(substr(sqlerrm, 1, 1000));
end;
/

prompt
prompt Creating procedure SP_INTF_GETAIRPORTFROMSABRE
prompt ==============================================
prompt
create or replace procedure sp_intf_GetAirportFromSabre
as
/*??airops SS????????????????*/
begin
  merge into t_bas_airport d
    using (select icao_code,airport_code,airport_name,city_code,b.offset as zone_time,
                  case
                    when time_zone_code = 'CN01' then 'D'
                    when time_zone_code = 'HK01' then 'R'
                    when time_zone_code = 'MO01' then 'R'
                    when time_zone_code = 'TW01' then 'R'
                    else 'I'
                  end as d_or_i
            from airport@airops a, time_zone@airops b
           where a.time_zone_code = b.code
             and (icao_code <> 'ZZZZ' and icao_code <> 'VTBD' and icao_code <> 'VTBS')
             and airport_code <> 'SIA'
             and airport_code <> 'HHA'
             and airport_code <> 'ZGC'
             and lengthb(city_code) <= 3) s
    on (d.airport_3code = s.airport_code)
   /*
   when matched then
     update
        set d.airport_4code = s.icao_code,
            --d.chinese_name = s.airport_name,
            --d.city_ch_name  = s.airport_name,
            d.city_3code = s.city_code,
            d.zone_time = s.zone_time,
            --d.d_or_i = s.d_or_i
   */
   when not matched then
     insert (d.airport_3code,d.airport_4code,d.chinese_name,d.city_3code,d.city_ch_name,d.zone_time,d.d_or_i,d.oper,d.op_time)
     values (s.airport_code,s.icao_code,s.airport_name,s.city_code,s.airport_name,s.zone_time,s.d_or_i,'sm_user',sysdate);

  commit;
exception
  when others then
    rollback;
end;
/

prompt
prompt Creating procedure SP_INTF_LOCK_TELE
prompt ====================================
prompt
CREATE OR REPLACE PROCEDURE SP_INTF_LOCK_TELE(P_FLTID NUMBER, P_USER VARCHAR2)
AS
/*????????????????????????????????(OK!!)*/
BEGIN
  UPDATE T_FLT_SCHEDULE
     SET TELE_OPER = P_USER,TELE_TIME = SYSDATE,TELE_FLAG = 'Y'
   WHERE d_Or_i in ('R','I') And --by lizf 2014-08-18 ????????????????
        crew_link_line in (
       select crew_link_line
         from t_sch_pairing
        where duty_line in (
               select b.duty_line
                 from t_flt_schedule a,t_sch_pairing b
                where flight_id = p_fltid
                  and a.crew_link_line = b.crew_link_line
             )
      ) ;

  --??????????????????????????????????????????
  UPDATE T_FLT_SCHEDULE
     SET TELE_OPER = P_USER,TELE_TIME = SYSDATE,TELE_FLAG = 'Y'
   WHERE d_Or_i in ('R','I') And --by lizf 2014-08-18 ????????????????
         crew_link_line in (
       select crew_link_line
         from t_sch_pairing
        where duty_line in (
               select b.duty_line
                 from t_flt_schedule a,t_sch_pairing b
                where a.flight_id_ref = p_fltid
                  and a.crew_link_line = b.crew_link_line
             )
      );

  /*UPDATE T_FLT_SCHEDULE
     SET TELE_OPER = P_USER,TELE_TIME = SYSDATE,TELE_FLAG='Y'
   WHERE crew_link_line in (select crew_link_line from t_flt_schedule where flight_id = p_fltid);*/
 commit;
 exception
  when others then
    rollback;
END;
/

prompt
prompt Creating procedure SP_INTF_UNLOCK_TELE
prompt ======================================
prompt
CREATE OR REPLACE PROCEDURE SP_INTF_UNLOCK_TELE(P_FLTID NUMBER, P_USER VARCHAR2)
AS
/*????????????????????????????????????(OK!!)*/
BEGIN
  UPDATE T_FLT_SCHEDULE
     SET TELE_OPER = P_USER,TELE_TIME = SYSDATE,TELE_FLAG = 'X'
   WHERE --d_Or_i in ('R','I') And --by lizf 2014-08-18 ????????????????
       crew_link_line in (
       select crew_link_line
         from t_sch_pairing
        where duty_line in (
               select b.duty_line
                 from t_flt_schedule a,t_sch_pairing b
                where flight_id = p_fltid
                  and a.crew_link_line = b.crew_link_line
             )
      );

  --??????????????????????????????????????????
  UPDATE T_FLT_SCHEDULE
     SET TELE_OPER = P_USER,TELE_TIME = SYSDATE,TELE_FLAG = 'X'
   WHERE --d_Or_i in ('R','I') And --by lizf 2014-08-18 ????????????????
       crew_link_line in (
       select crew_link_line
         from t_sch_pairing
        where duty_line in (
               select b.duty_line
                 from t_flt_schedule a,t_sch_pairing b
                where a.flight_id_ref = p_fltid
                  and a.crew_link_line = b.crew_link_line
             )
      );

  /*UPDATE T_FLT_SCHEDULE
     SET TELE_OPER = P_USER,TELE_TIME = SYSDATE,TELE_FLAG='N'
   WHERE crew_link_line in (select crew_link_line from t_flt_schedule where flight_id = p_fltid );*/
  commit;
  exception
  when others then
    rollback;
END;
/

prompt
prompt Creating procedure SP_INTF_YDYX_KAOQINMINGXI
prompt ============================================
prompt
create or replace procedure sp_intf_ydyx_kaoqinmingxi(startdate in date,
                                                      enddate   in date,
                                                      work_no   in varchar2,
                                                      detail    out sys_refcursor) as

  type ref_cursor_type is ref cursor;
  type typ_rec is record(
    ddo_id    varchar2(15),
    p_code    varchar2(50),
    work_no   varchar2(10),
    c_name    varchar2(70),
    filiale   varchar2(50),
    startdate date,
    enddate   date,
    cate      varchar2(100),
    cate_name varchar2(100),
    remarks varchar2(2000)
    );
  pre_rec        typ_rec;
  i              int := 1;
  j              int := 1;
  splitcnt       int := 0; --????????????
  --commitRows     int := 1000; --????????
  --sumrows        int := 0; --??????
  NoCount        int := 1;
  crew_link_line varchar2(20);
  mycur          ref_cursor_type;
  cur            ref_cursor_type;
  cur_row        typ_rec;
  v_sql          varchar2(500);
  errmsg         varchar2(500);
  v_beginDate date:=startdate;
  v_endDate date:=enddate+1;
  v_work_no varchar2(10):=work_no;
begin
 /* v_begindate:=startdate;
  v_endDate:=enddate;
  v_work_no:=work_no;*/
  v_sql := 'select
           ddo.ddo_id,
           ddo.p_code,
           ddo.work_no,
           ddo.c_name,
           ddo.filiale_name,
           ddo.td,
           ddo.ta,
           ddo.cate,
           ddo.cate_name,
           ddo.remarks
      from v_intf_ydfx_ddo_new ddo
     where ddo.td <:A and ddo.ta >=:B and work_no=:C';
/*    v_sql := 'select
           ddo.ddo_id,
           ddo.p_code,
           ddo.work_no,
           ddo.c_name,
           ddo.filiale_name,
           ddo.td,
           ddo.ta,
           ddo.cate,
           ddo.cate_name,
           ddo.remarks
      from v_intf_ydfx_ddo_new ddo
     where ddo.td < to_date(''' ||
           to_char(enddate + 1, 'yyyy-mm-dd hh24:mi:ss') ||
           ''',''yyyy-mm-dd hh24:mi:ss'')' || ' and ddo.ta >=to_date(''' ||
           to_char(startdate, 'yyyy-mm-dd hh24:mi:ss') ||
           ''',''yyyy-mm-dd hh24:mi:ss'')';    */
  /*if upper(work_no) != 'N/A' then
    v_sql := v_sql || ' and work_no=''' || work_no || '''';
  end if;
  --v_sql := v_sql \*|| ' order by ddo.p_code, ddo.cate_name, ddo.td'**/
  open mycur for v_sql using v_endDate,v_beginDate,v_work_no;
  --execute immediate 'delete from t_intf_ydyx_kaoqinmingxi';
  --commit;
  loop
    j              := 1;
    splitcnt       := 1;
    NoCount        := 1;
    errmsg         := null;
    crew_link_line := null;
    fetch mycur
      into cur_row;
    exit when mycur%notfound;
    cur_row.startdate := cur_row.startdate;
    --cur_row.enddate   := cur_row.enddate - 1 / 24 / 60; --??????????????????????????
    cur_row.enddate := cur_row.enddate; --?????????? 2014-11-07

    pre_rec.ddo_id    := cur_row.ddo_id;
    pre_rec.work_no   := cur_row.work_no;
    pre_rec.p_code    := cur_row.p_code;
    pre_rec.c_name    := cur_row.c_name;
    pre_rec.filiale   := cur_row.filiale;
    pre_rec.cate      := cur_row.cate;
    pre_rec.startdate := cur_row.startdate;
    pre_rec.enddate   := cur_row.enddate;
    pre_rec.remarks   := cur_row.remarks;
    while j <= splitcnt loop
      if cur_row.cate = 'hb' then
        v_sql := 'select ddo_id from t_intf_ydyx_kaoqinmingxi where ddo_id=:A';
        open cur for v_sql using cur_row.ddo_id;
        fetch cur
          into crew_link_line;
        if crew_link_line is not null then
          --??????????????????????????,?????????????????????????? 2014-11-07
          execute immediate 'update t_intf_ydyx_kaoqinmingxi set enddate=:A where instr(cate,''????-'')>0 and  ddo_id=:B' using cur_row.enddate,crew_link_line;
        end if;
        close cur;
      end if;
      if crew_link_line is null then
        execute immediate 'insert into t_intf_ydyx_kaoqinmingxi (ddo_id,work_no,c_name,filiale,startdate,enddate,cate,p_code,remarks) values(:A,:B,:C,:D,:E,:F,:G,:H,:I)'
                        using cur_row.ddo_id,cur_row.work_no,cur_row.c_name,cur_row.filiale,cur_row.startdate,cur_row.enddate,cur_row.cate_name,cur_row.p_code,cur_row.remarks;
      end if;
      j       := j + 1;
      --sumrows := sumrows + 1;
      --if sumrows mod commitrows = 0 then
        --??????????????
        --commit;
      --end if;
    end loop;
    i := i + 1;
  end loop;
  --commit;
  close mycur;
  open detail for
    select ddo_id,
           work_no,
           c_name,
           filiale,
           to_char(startdate, 'yyyy-mm-dd hh24:mi:ss') startdate,
           to_char(enddate, 'yyyy-mm-dd hh24:mi:ss') enddate,
           cate,
           remarks
      from ceacrew.t_intf_ydyx_kaoqinmingxi
     order by p_code, cate, startdate;
end sp_intf_ydyx_kaoqinmingxi;
/

prompt
prompt Creating procedure SP_INTF_YDYX_KAOQINMINGXI_NEW
prompt ================================================
prompt
create or replace procedure sp_intf_ydyx_kaoqinmingxi_new(startdate in date,
                                                      enddate   in date,
                                                      work_no   in varchar2,
                                                      detail    out sys_refcursor) as

  type ref_cursor_type is ref cursor;
  type typ_rec is record(
    ddo_id    varchar2(15),
    p_code    varchar2(50),
    work_no   varchar2(10),
    c_name    varchar2(70),
    filiale   varchar2(50),
    startdate date,
    enddate   date,
    cate      varchar2(100),
    cate_name varchar2(100),
    remarks varchar2(2000)
    );
  pre_rec        typ_rec;
  i              int := 1;
  j              int := 1;
  splitcnt       int := 0; --????????????
  commitRows     int := 1000; --????????
  sumrows        int := 0; --??????
  NoCount        int := 1;
  crew_link_line varchar2(20);
  mycur          ref_cursor_type;
  cur            ref_cursor_type;
  cur_row        typ_rec;
  v_sql          varchar2(500);
  errmsg         varchar2(500);
begin
  v_sql := 'select
           ddo.ddo_id,
           ddo.p_code,
           ddo.work_no,
           ddo.c_name,
           ddo.filiale_name,
           ddo.td,
           ddo.ta,
           ddo.cate,
           ddo.cate_name,
           ddo.remarks
      from v_intf_ydfx_ddo_new ddo
     where ddo.td < to_date(''' ||
           to_char(enddate + 1, 'yyyy-mm-dd hh24:mi:ss') ||
           ''',''yyyy-mm-dd hh24:mi:ss'')' || ' and ddo.ta >=to_date(''' ||
           to_char(startdate, 'yyyy-mm-dd hh24:mi:ss') ||
           ''',''yyyy-mm-dd hh24:mi:ss'')';
  if upper(work_no) != 'N/A' then
    v_sql := v_sql || ' and work_no=''' || work_no || '''';
  end if;
  v_sql := v_sql /*|| ' order by ddo.p_code, ddo.cate_name, ddo.td'*/;
  open mycur for v_sql;
  execute immediate 'delete from t_intf_ydyx_kaoqinmingxi';
  commit;
  loop
    j              := 1;
    splitcnt       := 1;
    NoCount        := 1;
    errmsg         := null;
    crew_link_line := null;
    fetch mycur
      into cur_row;
    exit when mycur%notfound;
    cur_row.startdate := cur_row.startdate;
    --cur_row.enddate   := cur_row.enddate - 1 / 24 / 60; --??????????????????????????
    cur_row.enddate := cur_row.enddate; --?????????? 2014-11-07

    pre_rec.ddo_id    := cur_row.ddo_id;
    pre_rec.work_no   := cur_row.work_no;
    pre_rec.p_code    := cur_row.p_code;
    pre_rec.c_name    := cur_row.c_name;
    pre_rec.filiale   := cur_row.filiale;
    pre_rec.cate      := cur_row.cate;
    pre_rec.startdate := cur_row.startdate;
    pre_rec.enddate   := cur_row.enddate;
    pre_rec.remarks   := cur_row.remarks;
    dbms_output.put_line(cur_row.ddo_id);
    while j <= splitcnt loop
      if cur_row.cate = 'hb' then
        v_sql := 'select ddo_id from t_intf_ydyx_kaoqinmingxi where ddo_id=''' ||
                 cur_row.ddo_id || '''';
        open cur for v_sql;
        fetch cur
          into crew_link_line;
        if crew_link_line is not null then
          --??????????????????????????,?????????????????????????? 2014-11-07
          execute immediate 'update t_intf_ydyx_kaoqinmingxi set enddate=to_date(''' ||
                            to_char(cur_row.enddate,
                                    'yyyy-mm-dd hh24:mi:ss') ||
                            ''',''yyyy-mm-dd hh24:mi:ss'') where instr(cate,''????-'')>0 and  ddo_id=''' ||
                            crew_link_line || '''';
        end if;
        close cur;
      end if;
      if crew_link_line is null then
        execute immediate 'insert into t_intf_ydyx_kaoqinmingxi (ddo_id,work_no,c_name,filiale,startdate,enddate,cate,p_code,remarks) values(''' ||
                          cur_row.ddo_id || ''',''' || cur_row.work_no ||
                          ''',''' || cur_row.c_name || ''',''' ||
                          cur_row.filiale || ''',to_date(''' ||
                          to_char(cur_row.startdate,
                                  'yyyy-mm-dd hh24:mi:ss') ||
                          ''',''yyyy-mm-dd hh24:mi:ss''),to_date(''' ||
                          to_char(cur_row.enddate, 'yyyy-mm-dd hh24:mi:ss') ||
                          ''',''yyyy-mm-dd hh24:mi:ss''),''' ||
                          cur_row.cate_name || ''',''' || cur_row.p_code ||
                         ''',''' ||cur_row.remarks ||''')';
      end if;
      j       := j + 1;
      sumrows := sumrows + 1;
      if sumrows mod commitrows = 0 then
        --??????????????
        commit;
      end if;
    end loop;
    i := i + 1;
  end loop;
  commit;
  close mycur;
  open detail for
    select ddo_id,
           work_no,
           c_name,
           filiale,
           to_char(startdate, 'yyyy-mm-dd hh24:mi:ss') startdate,
           to_char(enddate, 'yyyy-mm-dd hh24:mi:ss') enddate,
           cate,
           remarks
      from t_intf_ydyx_kaoqinmingxi
     order by p_code, cate, startdate;
end sp_intf_ydyx_kaoqinmingxi_new;
create or replace procedure sp_intf_yxw_kaoqinmingxi(startdate in date,
                                                     enddate   in date,
                                                     filiales  varchar2,
                                                     category  in varchar2,
                                                     detail    out sys_refcursor) as

  --current_row t_intf_yxw_kaoqingmingxi%rowtype;
  --type typ_branch is table of varchar2(20) index by binary_integer;
  --filiales typ_branch;
  type typ_rec is record(
    p_code    varchar2(50),
    c_name    varchar2(70),
    filiale   varchar2(50),
    cate      varchar2(30),
    startdate date,
    enddate   date,
    work_no varchar(10)
    );
  pre_rec            typ_rec;
  i                  int := 1;
  j                  int := 1;
  splitcnt           int := 0; --????????????
  commitRows         int := 1000; --????????
  sumrows            int := 0; --??????
  Converted_filiales varchar2(60) := upper(filiales); --??????
  cursor mycur is
    select ddo.p_code,
           ddo.c_name,
           ddo.filiale_name,
           ddo.td,
           ddo.ta,
           ddo.cate,
           ddo.cate_name,
           ddo.work_no
      from v_intf_yxw_ddo ddo
     where instr(category, ddo.cate) > 0
       and instr(Converted_filiales, ddo.filiale) > 0
       and ddo.td < enddate + 1
       and ddo.ta >= startdate
       --and p_code = '13448'
     order by ddo.p_code, ddo.cate_name, ddo.td;
  cur_row mycur%rowtype;
  NoCount int := 1;
begin
  execute immediate 'delete from t_intf_yxw_kaoqinmingxi';
  commit;
  --DBMS_OUTPUT.ENABLE (buffer_size=>null);
  open mycur;
  loop
    j        := 1;
    splitcnt := 1;
    NoCount  := 1;
    fetch mycur
      into cur_row;
    exit when mycur%notfound;
    cur_row.td := trunc(cur_row.td);
    cur_row.ta := trunc(cur_row.ta - 1 / 24 / 60); --??????????????????????????
    if pre_rec.p_code = cur_row.p_code then
      if pre_rec.startdate = pre_rec.enddate and cur_row.td = cur_row.ta and
         pre_rec.startdate = cur_row.td and pre_rec.cate = cur_row.cate then
        splitcnt := 0;
        NoCount  := 0;
      else
        --??????????(??????????)????????????????????,????????????,????????+1,????????????
        if pre_rec.startdate = cur_row.td and pre_rec.enddate <> cur_row.ta and pre_rec.cate = cur_row.cate then
          --  pre_rec.cate = cur_row.cate then
          cur_row.td := cur_row.td + 1;
        end if;
        --??????????(??????????)????????,????????????????????????????????,????????+1,????????????
        -- ?????????????????????? 2014-09-26
        if pre_rec.enddate = cur_row.td and pre_rec.cate = cur_row.cate then
          cur_row.td := cur_row.td + 1;
        end if;
      end if;
    else
      null;
    end if;
    --??????????????????????????,noCount??????0
    if NoCount = 1 then
      if cur_row.td < startdate then
        cur_row.td := startdate; --??????????????????????????????,????????
      end if;
      if cur_row.ta < enddate then
        --??????????????????????????????????????????
        splitcnt := cur_row.ta - cur_row.td + 1;
      else
        --??????????????????????????????????????
        --??????????????????????????
        splitcnt   := enddate - cur_row.td + 1;
        cur_row.ta := enddate; --??????????????,??????????????????
      end if;
    end if;
    pre_rec.p_code    := cur_row.p_code;
    pre_rec.c_name    := cur_row.c_name;
    pre_rec.filiale   := cur_row.filiale_name;
    pre_rec.cate      := cur_row.cate;
    pre_rec.startdate := cur_row.td;
    pre_rec.enddate   := cur_row.ta;
    pre_rec.work_no   := cur_row.work_no;
    /* execute immediate 'select tc.c_name from t_hr_crew tc where tc.p_code=''' ||
                    cur_row.p_code || ''''
    into c_name;*/
    while j <= splitcnt loop
      execute immediate 'insert into t_intf_yxw_kaoqinmingxi values(''' ||
                        cur_row.c_name || ''',''' || cur_row.filiale_name ||
                        ''',''' ||
                        to_char(cur_row.td + (j - 1), 'yyyy-mm-dd') ||
                        ''',''' || cur_row.cate_name || ''',''' ||
                        cur_row.p_code ||''',''' || cur_row.work_no || ''')';
      j       := j + 1;
      sumrows := sumrows + 1;
      if sumrows mod commitrows = 0 then
        --??????????????
        commit;
      end if;
    end loop;
    i := i + 1;
  end loop;
  commit;
  close mycur;
  open detail for
    select p_code, c_name, filiale, startdate, cate,work_no
      from t_intf_yxw_kaoqinmingxi
     order by filiale, startdate, p_code;
end sp_intf_yxw_kaoqinmingxi;
/

prompt
prompt Creating procedure SP_INTF_YXW_KAOQINMINGXI1
prompt ============================================
prompt
create or replace procedure sp_intf_yxw_kaoqinmingxi1(startdate in date,
                                                      enddate   in date,
                                                      filiales  varchar2,
                                                      category  in varchar2,
                                                      detail    out sys_refcursor) as

  --current_row t_intf_yxw_kaoqingmingxi%rowtype;
  --type typ_branch is table of varchar2(20) index by binary_integer;
  --filiales typ_branch;
  type typ_rec is record(
    p_code    varchar2(50),
    c_name    varchar2(70),
    filiale   varchar2(50),
    cate      varchar2(30),
    cate_name varchar2(80),
    startdate date,
    enddate   date,
    work_no   varchar(10),
    priority  number(2));
  pre_rec            typ_rec;
  i                  int := 1;
  j                  int := 1;
  splitcnt           int := 0; --????????????
  commitRows         int := 1000; --????????
  sumrows            int := 0; --??????
  Converted_filiales varchar2(60) := upper(filiales); --??????
  cursor mycur is
    select ddo.p_code,
           ddo.c_name,
           ddo.dep_code,
           ddo.td,
           ddo.ta,
           ddo.cate,
           ddo.cate_name,
           ddo.work_no,
           ddo.priority
      from v_intf_yxw_ddo1 ddo
     where instr(category,ddo.cate) > 0
       and (instr(ddo.dep_code,Converted_filiales) > 0 or instr(Converted_filiales,filiale) > 0)
       and ddo.td < enddate + 1
       and ddo.ta >= startdate
    /*       and p_code = '5291'*/
     order by ddo.p_code, ddo.cate_name, ddo.td;
  cur_row mycur%rowtype;
  NoCount int := 1;
begin
  execute immediate 'delete from t_intf_yxw_kaoqinmingxi';
  commit;
  --DBMS_OUTPUT.ENABLE (buffer_size=>null);
  open mycur;
  loop
    j        := 1;
    splitcnt := 1;
    NoCount  := 1;
    fetch mycur
      into cur_row;
    --
    exit when mycur%notfound;
    cur_row.td := trunc(cur_row.td);
    --?????????????????????????????????????????????????? 2015-03-27
    if instr(cur_row.cate_name, '??') <= 0 then
      cur_row.ta := trunc(cur_row.ta - 1 / 24 / 60); --??????????????????????????
    end if;
    if pre_rec.p_code = cur_row.p_code then
      if pre_rec.startdate = pre_rec.enddate and cur_row.td = cur_row.ta and
         pre_rec.startdate = cur_row.td and
         pre_rec.cate_name = cur_row.cate_name then
        splitcnt := 0;
        NoCount  := 0;
      else
        --??????????(??????????)????????????????????,????????????,????????+1,????????????
        if pre_rec.startdate = cur_row.td and pre_rec.enddate <> cur_row.ta and
           pre_rec.cate_name = cur_row.cate_name then
          --  pre_rec.cate = cur_row.cate then
          cur_row.td := cur_row.td + 1;
        end if;
        --??????????(??????????)????????,????????????????????????????????,????????+1,????????????
        -- ?????????????????????? 2014-09-26
        if pre_rec.enddate = cur_row.td and
           pre_rec.cate_name = cur_row.cate_name then
          cur_row.td := cur_row.td + 1;
        end if;
      end if;
    else
      null;
    end if;
    --??????????????????????????,noCount??????0
    if NoCount = 1 then
      if cur_row.td < startdate then
        cur_row.td := startdate; --??????????????????????????????,????????
      end if;
      if cur_row.ta < enddate then
        --??????????????????????????????????????????
        splitcnt := cur_row.ta - cur_row.td + 1;
        /*dbms_output.put_line(cur_row.cate_name ||
                             to_char(cur_row.ta, 'yyyy-mm-dd') ||
                             to_char(enddate, 'yyyy-mm-dd'));*/
      else
        --??????????????????????????????????????
        --??????????????????????????
        splitcnt   := enddate - cur_row.td + 1;
        cur_row.ta := enddate; --??????????????,??????????????????
      end if;
    end if;
    pre_rec.p_code    := cur_row.p_code;
    pre_rec.c_name    := cur_row.c_name;
    pre_rec.filiale   := cur_row.dep_code;
    pre_rec.cate      := cur_row.cate;
    pre_rec.cate_name := cur_row.cate_name;
    pre_rec.startdate := cur_row.td;
    pre_rec.enddate   := cur_row.ta;
    pre_rec.work_no   := cur_row.work_no;
    pre_rec.priority  := cur_row.priority;
    /* execute immediate 'select tc.c_name from t_hr_crew tc where tc.p_code=''' ||
                    cur_row.p_code || ''''
    into c_name;*/
    --dbms_output.put_line(NoCount);
    while j <= splitcnt loop
      execute immediate 'insert into t_intf_yxw_kaoqinmingxi values(''' ||
                        cur_row.c_name || ''',''' || cur_row.dep_code ||
                        ''',''' ||
                        to_char(cur_row.td + (j - 1), 'yyyy-mm-dd') ||
                        ''',''' || cur_row.cate_name || ''',''' ||
                        cur_row.p_code || ''',''' || cur_row.work_no ||
                        ''',' || cur_row.priority || ')';
      j       := j + 1;
      sumrows := sumrows + 1;
      if sumrows mod commitrows = 0 then
        --??????????????
        commit;
      end if;
    end loop;
    i := i + 1;
  end loop;
  commit;
  close mycur;
  open detail for
    select p_code, c_name, filiale, startdate, cate, work_no
      from (select t1.*,row_number() over(partition by t1.p_code, t1.startdate order by t1.priority) row_no from t_intf_yxw_kaoqinmingxi t1 ) t
      where t.row_no=1 and work_no is not null
     order by filiale, startdate, p_code;
end sp_intf_yxw_kaoqinmingxi1;
/

prompt
prompt Creating procedure SP_RPT_PAIR_FLY_HOURS
prompt ========================================
prompt
CREATE OR REPLACE PROCEDURE sp_rpt_pair_fly_hours(m_date date) as
begin
   declare
    v_date_from date:=trunc(m_date, 'MONTH');
    v_date_to date:=last_day(m_date);
    v_date_to_n date:=last_day(m_date)+5;
  begin
  merge into t_rpt_pair_fly_hours ta
  using (
          select v_date_from as p_date
                  ,nvl(p0.ac_type_crew,'unknow') ac_type_crew
                  ,p0.filiale as crew_owner
                  ,sum(r.fly_hours) fly_hours
           from t_sch_pairing p0
                inner join t_flt_schedule s on p0.crew_link_line=s.crew_link_line
                inner join t_sch_roster r on s.flight_id=r.flight_id and r.fjs_order=1
           where exists (select 1 from t_sch_pairing p00 where p0.crew_pairing_line=p00.crew_pairing_line
                             group by p00.crew_pairing_line
                             having min(p00.flight_date) between v_date_from and v_date_to  )
                 and not exists (select null from t_sch_pairing p1 where p1.crew_pairing_line=p0.crew_pairing_line and p1.ac_type_crew<>p0.ac_type_crew)
                 and nvl(s.flg_cs,'A') not in ('C', 'D')  and s.flight_flag in ('A','C') and nvl(s.flight_type,'A')<>'V'
                 and s.flight_date between v_date_from and v_date_to_n
                 and p0.flight_date between v_date_from and v_date_to_n
          group by nvl(p0.ac_type_crew, 'unknow'), p0.filiale
          ) tb
  on (ta.p_date = tb.p_date and ta.ac_type_crew = tb.ac_type_crew and ta.filiale = tb.crew_owner) ????
  when matched then
    update set ta.fly_hours = tb.fly_hours, ta.oper_date=sysdate
  when not matched then
    insert
      (ta.P_DATE, ta.AC_TYPE_CREW, ta.FILIALE, ta.FLY_HOURS, ta.OPER_DATE)
    values
      (tb.p_date, tb.ac_type_crew, tb.crew_owner, tb.fly_hours, sysdate);
  commit;
  end;
end;
/

prompt
prompt Creating procedure SP_STAT_CREW_RESOURCE
prompt ========================================
prompt
create or replace procedure sp_stat_crew_resource(p_ym varchar2,p_filiale varchar2)
is
  /*??????????????*/
  cursor c1 is
  select m1.filiale,m1.ac_type,nvl(m_ftb_hours,0) + nvl(m_sch_hours,0) as m_hours
    from (
          select a.filiale,
                 d.ac_type,
                 round(sum(b.fly_hours) / 60,2) m_ftb_hours
            from t_hr_crew a,t_svc_ftb_detail b,t_flt_schedule c,t_tech_info d,t_bas_fleet e
           where a.filiale = p_filiale
             and a.p_code = b.p_code
             and b.flight_id = c.flight_id
             and c.flight_date >= f_firstday_of_month(p_ym)
             and c.flight_date <= f_lastday_of_month(p_ym)
             and a.p_code = d.p_code
             and c.ac_type = e.ac_type
             and d.ac_type = e.ac_type_crew
             and d.tech_no_i in ('C001','F001','F002','S001')
          group by a.filiale,d.ac_type
        ) m1 full join
        (
        select a.filiale,
               d.ac_type,
               round(sum(b.fly_hours) / 60,2) m_sch_hours
          from t_hr_crew a,t_sch_roster b,t_flt_schedule c,t_tech_info d,t_bas_fleet e
         where a.filiale = p_filiale
           and a.p_code = b.p_code
           and b.flight_id = c.flight_id
           and b.rank_no in ('A001','B001','C001','C002') --????????
           and c.flight_date >= f_firstday_of_month(p_ym)
           and c.flight_date <= f_lastday_of_month(p_ym)
           and (c.ftb_rec_flag is null or c.ftb_rec_flag = 'N')
           and (c.flg_cs is null or c.flg_cs <> 'C' and c.flg_cs <> 'D')
           and (c.flight_flag = 'A')
           and a.p_code = d.p_code
           and c.ac_type = e.ac_type
           and d.ac_type = e.ac_type_crew
           and d.tech_no_i in ('C001','F001','F002','S001')
        group by a.filiale,d.ac_type
       ) m2
   on m1.filiale = m2.filiale
  and m1.ac_type = m2.ac_type;

  /*????????????*/
  cursor c2 is
  select m1.filiale,m1.ac_type,nvl(m_ftb_hours,0) + nvl(m_sch_hours,0) as m_hours
    from (
          select a.filiale,
                 d.ac_type,
                 round(sum(b.fly_hours) / 60,2) m_ftb_hours
            from t_hr_crew a,t_svc_ftb_detail b,t_flt_schedule c,t_tech_info d,t_bas_fleet e
           where a.filiale = p_filiale
             and a.p_code = b.p_code
             and b.flight_id = c.flight_id
             and c.flight_date >= f_firstday_of_month(p_ym)
             and c.flight_date <= f_lastday_of_month(p_ym)
             and a.p_code = d.p_code
             and c.ac_type = e.ac_type
             and d.ac_type = e.ac_type_crew
             and d.tech_no_i in ('B00C','B00B','B00A','C002')
          group by a.filiale,d.ac_type
        ) m1 full join
        (
        select a.filiale,
               d.ac_type,
               round(sum(b.fly_hours) / 60,2) m_sch_hours
          from t_hr_crew a,t_sch_roster b,t_flt_schedule c,t_tech_info d,t_bas_fleet e
         where a.filiale = p_filiale
           and a.p_code = b.p_code
           and b.flight_id = c.flight_id
           and b.rank_no in ('A001','B001','C001','C002')
           and c.flight_date >= f_firstday_of_month(p_ym)
           and c.flight_date <= f_lastday_of_month(p_ym)
           and (c.ftb_rec_flag is null or c.ftb_rec_flag = 'N')
           and (c.flg_cs is null or c.flg_cs <> 'C' and c.flg_cs <> 'D')
           and (c.flight_flag = 'A')
           and a.p_code = d.p_code
           and c.ac_type = e.ac_type
           and d.ac_type = e.ac_type_crew
           and d.tech_no_i in ('B00C','B00B','B00A','C002')
        group by a.filiale,d.ac_type
       ) m2
   on m1.filiale = m2.filiale
  and m1.ac_type = m2.ac_type;

  /*????????????*/
  cursor c3 is
  select m.filiale,m.ac_type,round(sum(nvl(m.flt_hours / 60,0)),2) as m_hours
    from (select a.filiale,
                 d.ac_type_crew as ac_type,
                 c.flight_id,
                 b.totl_hours flt_hours
            from t_sch_pairing a,t_svc_ftb b,t_flt_schedule c,t_bas_fleet d
           where a.filiale = p_filiale
             and a.flight_date >= f_firstday_of_month(p_ym)
             and a.flight_date <= f_lastday_of_month(p_ym)
             and c.flight_date = a.flight_date
             and c.crew_link_line = a.crew_link_line
             and b.flight_id = c.flight_id
             and a.ac_type = d.ac_type
        union
        select a.filiale,
                 d.ac_type_crew as ac_type,
                 c.flight_id,
                 a.fly_hours flt_hours
            from t_sch_pairing a,t_flt_schedule c,t_bas_fleet d
           where a.filiale = p_filiale
             and a.flight_date >= f_firstday_of_month(p_ym)
             and a.flight_date <= f_lastday_of_month(p_ym)
             and c.flight_date = a.flight_date
             and c.crew_link_line = a.crew_link_line
             and (c.ftb_rec_flag is null or c.ftb_rec_flag = 'N')
             and (c.flg_cs is null or c.flg_cs <> 'C' and c.flg_cs <> 'D')
             and (c.flight_flag = 'A')
             and a.ac_type = d.ac_type
       ) m,t_sch_roster n
   where m.flight_id = n.flight_id
     and n.rank_no in ('A001','B001','C001','C002')
   group by m.filiale,m.ac_type;

  /*????????????*/
  cursor c4 is
  select m.filiale,m.ac_type,round(sum(nvl(m.flt_hours / 60,0)),2) as m_hours
    from (select a.filiale,
                 d.ac_type_crew as ac_type,
                 c.flight_id,
                 b.totl_hours flt_hours
            from t_sch_pairing a,t_svc_ftb b,t_flt_schedule c,t_bas_fleet d
           where a.filiale = p_filiale
             and a.flight_date >= f_firstday_of_month(p_ym)
             and a.flight_date <= f_lastday_of_month(p_ym)
             and c.flight_date = a.flight_date
             and c.crew_link_line = a.crew_link_line
             and b.flight_id = c.flight_id
             and a.ac_type = d.ac_type
        union
        select a.filiale,
                 d.ac_type_crew as ac_type,
                 c.flight_id,
                 a.fly_hours flt_hours
            from t_sch_pairing a,t_flt_schedule c,t_bas_fleet d
           where a.filiale = p_filiale
             and a.flight_date >= f_firstday_of_month(p_ym)
             and a.flight_date <= f_lastday_of_month(p_ym)
             and c.flight_date = a.flight_date
             and c.crew_link_line = a.crew_link_line
             and (c.ftb_rec_flag is null or c.ftb_rec_flag = 'N')
             and (c.flg_cs is null or c.flg_cs <> 'C' and c.flg_cs <> 'D')
             and (c.flight_flag = 'A')
             and a.ac_type = d.ac_type
       ) m
   group by m.filiale,m.ac_type;
begin
  delete t_intf_mrc_statistic
   where org_code = p_filiale
     and year = substr(p_ym,1,4)
     and month = substr(p_ym,5,2);

  insert into t_intf_mrc_statistic
    (org_code,ac_type,year,month,ac_count,crew_count,pc_count,cp_count,
     crew_amount,pc_amount,cp_amount,pc_balance,cp_balance,year_everage,year_peak,daily_everage,daily_peak,
     pc_flightable_hour,cp_flightable_hour,unit_flightable_hour,days)
    select filiale,ac_type,substr(p_ym,1,4),substr(p_ym,5,2),ac_cnt,fx_cnt,jz_cnt,fjs_cnt,
           kbjz,jz_zh,fjs_zh,jzyq,fjsyq,npj,nfz,rpj,rfz,
           jzkf,fjskf,jdkf,f_days_of_month(p_ym)
      from v_intf_mrc_filiale_crew
     where filiale = p_filiale;

  for lp in c1 loop
    update t_intf_mrc_statistic
       set CP_FLIGHT_HOUR = lp.m_hours
     where org_code = lp.filiale
       and ac_type = lp.ac_type
       and year = substr(p_ym,1,4)
       and month = substr(p_ym,5,2);
  end loop;

  for lp in c2 loop
    update t_intf_mrc_statistic
       set PC_FLIGHT_HOUR = lp.m_hours
     where org_code = lp.filiale
       and ac_type = lp.ac_type
       and year = substr(p_ym,1,4)
       and month = substr(p_ym,5,2);
  end loop;

  for lp in c3 loop
    update t_intf_mrc_statistic
       set CREW_FLIGHT_HOUR = lp.m_hours
     where org_code = lp.filiale
       and ac_type = lp.ac_type
       and year = substr(p_ym,1,4)
       and month = substr(p_ym,5,2);
  end loop;

  for lp in c4 loop
    update t_intf_mrc_statistic
       set AC_FLIGHT_HOUR = lp.m_hours
     where org_code = lp.filiale
       and ac_type = lp.ac_type
       and year = substr(p_ym,1,4)
       and month = substr(p_ym,5,2);
  end loop;

  update t_intf_mrc_statistic
     set ac_index_real = round(CREW_FLIGHT_HOUR/AC_FLIGHT_HOUR/2,3)
     where org_code = p_filiale
       and year = substr(p_ym,1,4)
       and month = substr(p_ym,5,2);

  commit;
end;
/

prompt
prompt Creating procedure SP_UNLOCK_TELE_CANCELLED
prompt ===========================================
prompt
create or replace procedure sp_unlock_tele_cancelled
/*??????????????????????????????????????????????????*/
as
  cursor mycur is
  select flight_id
    from t_flt_schedule t
   where t.flight_date >= trunc(sysdate - 1)
     and (t.flg_cs = 'C' or t.flg_cs = 'D')
     and t.tele_flag = 'Y';
begin
  for lp in mycur loop
    sp_intf_unlock_tele(lp.flight_id,'bg_proc');
  end loop;
exception
  when others then
    null;
end;
/

prompt
prompt Creating type body STRAGG_TYPE
prompt ==============================
prompt
create or replace type body stragg_type
is

  static function ODCIAggregateInitialize
  ( sctx in out stragg_type )
  return number
  is
  begin

    sctx := stragg_type( null ) ;

    return ODCIConst.Success ;

  end;

  member function ODCIAggregateIterate
  ( self  in out stragg_type ,
    value in     varchar2
  ) return number
  is
  begin

    self.string := self.string || ',' || value ;

    return ODCIConst.Success;

  end;

  member function ODCIAggregateTerminate
  ( self        in  stragg_type ,
    returnvalue out varchar2 ,
    flags       in  number
  ) return number
  is
  begin

    returnValue := ltrim( self.string, ',' );

    return ODCIConst.Success;

  end;

  member function ODCIAggregateMerge
  ( self in out stragg_type ,
    ctx2 in     stragg_type
  ) return number
  is
  begin

    self.string := self.string || ctx2.string;

    return ODCIConst.Success;

  end;

end;
/

prompt
prompt Creating trigger LOG_TIB_T_PRF_SCH_LOCK
prompt =======================================
prompt
CREATE OR REPLACE TRIGGER LOG_TIB_T_PRF_SCH_LOCK before insert or delete or update on T_PRF_SCH_LOCK
for each row
declare
NewKeyValues T_LOG.KEY_VALUES%type;
OldKeyValues T_LOG.KEY_VALUES%type;
ChgCulumns T_LOG.CHG_COLUMNS%type;
ChgValues T_LOG.CHG_VALUES%type;
Oper varchar2(10);
ModuleFlag varchar2(1);
Remarks varchar2(200);
OperIp varchar2(15);
OperHost varchar2(50);
UnitId varchar2(10);
Cnt number(6);
begin
  select count(1) into Cnt from t_log_user;  
  if Cnt > 0 then
    select t.user_code, t.unit_id, t.module_flag, t.remarks, t.oper_ip ,t.oper_host
      into Oper, UnitId, ModuleFlag, Remarks, OperIp, OperHost
      from t_log_user t
     where rownum = 1 ; 
  end if;    

  if(OperIp is null) then
    OperIp := sys_context('userenv','IP_ADDRESS');
  end if;    
  if(OperHost is null) then
    OperHost := sys_context('userenv','HOST');
  end if;    
  if(Remarks is null) then
    Remarks := sys_context('userenv','MODULE');
  end if;    

  if inserting then  
     NewKeyValues := '';
     ChgCulumns :='LOCK_ID'||','||'FLIGHT_DATE'||','||'FLIGHT_ID'||','||'MODULE_FLAG'||','||'P_CODE'||','||'WORK_NO'||','||'LOCK_DATE'||','||'APP_STATUS'||','||'REASON'||','||'CHANGE_REASON';
     ChgValues := f_tr(to_char(:new.LOCK_ID))||','||to_char(:new.FLIGHT_DATE,'yyyy-MM-dd hh24:mi')||','||f_tr(to_char(:new.FLIGHT_ID))||','||f_tr(to_char(:new.MODULE_FLAG))||','||f_tr(to_char(:new.P_CODE))||','||f_tr(to_char(:new.WORK_NO))||','||to_char(:new.LOCK_DATE,'yyyy-MM-dd hh24:mi')||','||f_tr(to_char(:new.APP_STATUS))||','||f_tr(to_char(:new.REASON))||','||f_tr(to_char(:new.CHANGE_REASON));
     insert into t_log(log_id, table_name, key_values, chg_columns, chg_values, uids, op_time, oper, module_flag, remarks, oper_ip, oper_host)  values(SEQ_LOG_ID.nextval, 'T_PRF_SCH_LOCK', NewKeyValues, ChgCulumns, ChgValues, 'I', sysdate, Oper, ModuleFlag, Remarks, OperIp, OperHost);
  end if; 
  if updating then   
     NewKeyValues := '';   
     ChgCulumns := '';   
     ChgValues := '';   

     ChgCulumns := ChgCulumns||',LOCK_ID';
     ChgValues := ChgValues||','||f_tr(to_char(:old.LOCK_ID))||'->'||f_tr(to_char(:new.LOCK_ID));
     ChgCulumns := ChgCulumns||',FLIGHT_DATE';
     ChgValues := ChgValues||','||f_tr(to_char(:old.FLIGHT_DATE,'yyyy-MM-dd hh24:mi'))||'->'||f_tr(to_char(:new.FLIGHT_DATE,'yyyy-MM-dd hh24:mi'));
     ChgCulumns := ChgCulumns||',FLIGHT_ID';
     ChgValues := ChgValues||','||f_tr(to_char(:old.FLIGHT_ID))||'->'||f_tr(to_char(:new.FLIGHT_ID));
     ChgCulumns := ChgCulumns||',MODULE_FLAG';
     ChgValues := ChgValues||','||f_tr(to_char(:old.MODULE_FLAG))||'->'||f_tr(to_char(:new.MODULE_FLAG));
     ChgCulumns := ChgCulumns||',P_CODE';
     ChgValues := ChgValues||','||f_tr(to_char(:old.P_CODE))||'->'||f_tr(to_char(:new.P_CODE));
     ChgCulumns := ChgCulumns||',WORK_NO';
     ChgValues := ChgValues||','||f_tr(to_char(:old.WORK_NO))||'->'||f_tr(to_char(:new.WORK_NO));
     ChgCulumns := ChgCulumns||',LOCK_DATE';
     ChgValues := ChgValues||','||f_tr(to_char(:old.LOCK_DATE,'yyyy-MM-dd hh24:mi'))||'->'||f_tr(to_char(:new.LOCK_DATE,'yyyy-MM-dd hh24:mi'));
     ChgCulumns := ChgCulumns||',APP_STATUS';
     ChgValues := ChgValues||','||f_tr(to_char(:old.APP_STATUS))||'->'||f_tr(to_char(:new.APP_STATUS));
     ChgCulumns := ChgCulumns||',REASON';
     ChgValues := ChgValues||','||f_tr(to_char(:old.REASON))||'->'||f_tr(to_char(:new.REASON));
     ChgCulumns := ChgCulumns||',CHANGE_REASON';
     ChgValues := ChgValues||','||f_tr(to_char(:old.CHANGE_REASON))||'->'||f_tr(to_char(:new.CHANGE_REASON));

     ChgCulumns := f_get_chgs(ChgCulumns,ChgValues,',','->');
     if  ChgCulumns is not null then  
         if  replace(NewKeyValues,',') is not null then 
             OldKeyValues:=OldKeyValues||'('||NewKeyValues||')';
         end if;
         insert into t_log(log_id, table_name, key_values, chg_columns, chg_values, uids, op_time, oper, module_flag, remarks, oper_ip, oper_host)  values(SEQ_LOG_ID.nextval, 'T_PRF_SCH_LOCK', NewKeyValues, ChgCulumns, ChgValues, 'U', sysdate, Oper, ModuleFlag, Remarks, OperIp, OperHost);
     end if;

  end if;

  if deleting then    
     OldKeyValues := '';
     ChgCulumns :='LOCK_ID'||','||'FLIGHT_DATE'||','||'FLIGHT_ID'||','||'MODULE_FLAG'||','||'P_CODE'||','||'WORK_NO'||','||'LOCK_DATE'||','||'APP_STATUS'||','||'REASON'||','||'CHANGE_REASON';
     ChgValues := f_tr(to_char(:old.LOCK_ID))||','||to_char(:old.FLIGHT_DATE,'yyyy-MM-dd hh24:mi')||','||f_tr(to_char(:old.FLIGHT_ID))||','||f_tr(to_char(:old.MODULE_FLAG))||','||f_tr(to_char(:old.P_CODE))||','||f_tr(to_char(:old.WORK_NO))||','||to_char(:old.LOCK_DATE,'yyyy-MM-dd hh24:mi')||','||f_tr(to_char(:old.APP_STATUS))||','||f_tr(to_char(:old.REASON))||','||f_tr(to_char(:old.CHANGE_REASON));
     insert into t_log(log_id, table_name, key_values, chg_columns, chg_values, uids, op_time, oper, module_flag, remarks, oper_ip, oper_host)  values(SEQ_LOG_ID.nextval, 'T_PRF_SCH_LOCK', OldKeyValues, chgculumns, chgvalues, 'D', sysdate, Oper, ModuleFlag, Remarks, OperIp, OperHost);
  end if; 

end;
/

prompt
prompt Creating trigger TDA_PLAN_ROSTER
prompt ================================
prompt
CREATE OR REPLACE Trigger TDA_PLAN_ROSTER
  After delete on t_plan_roster for each row
declare
   A_CurrDate date;
   A_FltType varchar2(10);
  -- 同步更新CMPS机组排班临时数据表 by lizf 2008-06-06
begin
  if :old.fly_hours is not null and :old.p_code is not null then
     A_CurrDate := Last_day(add_months(:old.flight_date, -1)) + 1; --当前月1号
     IF Not (Instr(:old.rank_no,'M00')>0 Or Instr(:old.rank_no,'S00')>0) THEN --不是随机人员
          --是否备份B 摆渡航班D
         Select X.flight_flag Into A_FltType from t_plan_fltsch X
          Where X.Plan_Id = :old.pairing_plan_id and X.flight_id= :old.Flight_id And X.flight_date = :old.Flight_date ;
         IF (A_FltType ='A' Or A_FltType='C') THEN --航班和本场处理飞行时间
           --更新本月数据
            update t_plan_roster_a t
               set t.month_fly_hours = t.month_fly_hours - :old.fly_hours
            where t.plan_id = :old.plan_id
              and t.p_code = :old.p_code
              and t.flight_date = A_CurrDate;
           --更新3月数据
            update t_plan_roster_a t3
               set t3.month3_fly_hours = t3.month3_fly_hours - :old.fly_hours
            where t3.plan_id = :old.plan_id
              and t3.p_code = :old.p_code
              and t3.flight_date >= A_CurrDate
              and t3.flight_date <= add_months(A_CurrDate,2);
           --更新本年数据
           update t_plan_roster_a ty
              set ty.year_fly_hours = ty.year_fly_hours - :old.fly_hours
            where ty.plan_id = :old.plan_id
              and ty.p_code = :old.p_code
              and to_char(ty.flight_date,'yyyy') = to_char(:old.flight_date,'yyyy');
        END IF;
     END IF;
  end if;
end ;
/

prompt
prompt Creating trigger TG_FLT_ACREG
prompt =============================
prompt
CREATE OR REPLACE TRIGGER TG_FLT_ACREG
BEFORE INSERT ON T_FLT_ACREG  FOR EACH ROW WHEN (new.FLTID is null)
begin
select SEQ_FLT_ACREG.nextval into:new.FLTID from dual;
end;
/

prompt
prompt Creating trigger TG_T_FLT_ACREGHIS_ID
prompt =====================================
prompt
CREATE OR REPLACE TRIGGER TG_T_FLT_ACREGHIS_ID
BEFORE INSERT ON T_FLT_ACREG_HIS FOR EACH ROW WHEN (new.FLT_HIS_ID is null)
begin
select SEQ_T_FLT_ACREGHIS_ID.nextval into:new.FLT_HIS_ID from dual;
end;
/

prompt
prompt Creating trigger TIA_PLAN_ROSTER
prompt ================================
prompt
create or replace trigger TIA_PLAN_ROSTER
  after insert on t_plan_roster for each row
declare
    A_count int;
    A_M3FlyHous int;
    A_YFlyHours int;
    A_CurrDate date;
    A_FltType varchar2(10);
  -- 同步更新CMPS机组排班临时数据表 by lizf 2008-06-06
begin
    if :new.fly_hours is not null and :new.p_code is not null then
       IF Not (Instr(:new.rank_no,'M00')>0 Or Instr(:new.rank_no,'S00')>0) THEN --不是随机人员
         --是否备份B 摆渡航班D
         Select X.flight_flag Into A_FltType from t_plan_fltsch X
          Where X.Plan_Id = :new.pairing_plan_id and X.flight_id= :new.Flight_id And X.flight_date = :new.Flight_date;

         IF (A_FltType ='A' Or A_FltType='C') THEN --航班和本场处理飞行时间

             A_CurrDate := Last_day(add_months(:new.flight_date, -1)) + 1; --当前月1号

             A_count := 0;
             select count(*) Into A_count from t_plan_roster_a
              where plan_id = :new.plan_id and p_code = :new.p_code  and flight_date = A_CurrDate; --当前月


             if A_count <= 0 then
                --取前2月的时间
                A_M3FlyHous := 0;
                  select Sum(month_fly_hours)  Into A_M3FlyHous
                  from t_sch_roster_a
                  where p_code = :new.p_code
                  and flight_date >= add_months(A_CurrDate,-2)  --前2月
                  and flight_date <= A_CurrDate; --当前月
                --取前一个月的年时间
                A_YFlyHours := 0;
                if(to_char(:new.flight_date,'MM') <> '01') then
                  select Sum(year_fly_hours)  Into A_YFlyHours
                  from t_sch_roster_a
                  where p_code = :new.p_code
                  and flight_date = add_months(A_CurrDate,-1); --前1月
                end if;

                Insert into t_plan_roster_a(plan_id,p_code,flight_date,month_fly_hours,month3_fly_hours,year_fly_hours)
                Values(:new.plan_id,:new.p_code,A_CurrDate, 0,A_M3FlyHous ,A_YFlyHours);
             End if;

             --更新本月数据
                update t_plan_roster_a t
                   set t.month_fly_hours = t.month_fly_hours + :new.fly_hours
                where t.plan_id = :new.plan_id
                  and t.p_code = :new.p_code
                  and t.flight_date = A_CurrDate;
             --更新3月数据
              update t_plan_roster_a t3
                   set t3.month3_fly_hours = t3.month3_fly_hours + :new.fly_hours
                where t3.plan_id = :new.plan_id
                  and t3.p_code = :new.p_code
                  and t3.flight_date >= A_CurrDate
                  and t3.flight_date <= add_months(A_CurrDate,2);
             --更新本年数据
             update t_plan_roster_a ty set ty.year_fly_hours = ty.year_fly_hours + :new.fly_hours
              where ty.plan_id = :new.plan_id
                and ty.p_code = :new.p_code
                and to_char(ty.flight_date,'yyyy') = to_char(:new.flight_date,'yyyy');

          END IF;
      END IF;
    end if;
exception
  when others then
    null;
end ;
/

prompt
prompt Creating trigger TUA_PLAN_ROSTER
prompt ================================
prompt
create or replace trigger TUA_PLAN_ROSTER
  after UPDATE OF "P_CODE","FLY_HOURS" on t_plan_roster for each row
declare
  -- 同步更新CMPS机组排班临时数据表 by lizf 2008-06-06
  A_CurrDate date;
  A_FltType varchar2(10);
begin
     A_CurrDate := Last_day(add_months(:new.flight_date, -1)) + 1; --当前月1号
    if :new.p_code = :old.p_code then
         IF Not (Instr(:new.rank_no,'M00')>0 Or Instr(:new.rank_no,'S00')>0) THEN --不是随机人员

          --是否备份B 摆渡航班D
         Select X.flight_flag Into A_FltType from t_plan_fltsch X
          Where X.plan_id = :new.pairing_plan_id and X.flight_id= :new.Flight_id;
           IF (A_FltType ='A' Or A_FltType='C') THEN --航班和本场处理飞行时间

             --更新本月数据 更新3月数据
              update t_plan_roster_a t
                 set t.month_fly_hours = Nvl(t.month_fly_hours,0) + Nvl(:new.fly_hours,0) - nvl(:old.fly_hours,0)
              where t.plan_id = :new.plan_id
                    and t.p_code = :new.p_code
                    and t.flight_date = A_CurrDate;
             --更新3月数据
              update t_plan_roster_a t3
              set t3.month3_fly_hours = Nvl(t3.month3_fly_hours,0) + Nvl(:new.fly_hours,0) - nvl(:old.fly_hours,0)
              where t3.plan_id = :new.plan_id
                and t3.p_code = :new.p_code
                and t3.flight_date >= A_CurrDate
                and t3.flight_date <= add_months(A_CurrDate,2);
             --更新本年数据
             update t_plan_roster_a ty
             set ty.year_fly_hours = Nvl(ty.year_fly_hours,0)  + Nvl(:new.fly_hours,0) - nvl(:old.fly_hours,0)
              where ty.plan_id = :new.plan_id
                and ty.p_code = :new.p_code
                and to_char(ty.flight_date,'yyyy') = to_char(:new.flight_date,'yyyy');

            END IF;
        END IF;
    else
      --是否备份B 摆渡航班D
         Select X.flight_flag Into A_FltType from t_plan_fltsch X
          Where X.plan_id=:new.pairing_plan_id and X.flight_id= :new.Flight_id;
           IF (A_FltType ='A' Or A_FltType='C') THEN --航班和本场处理飞行时间

             IF Not (Instr(:old.rank_no,'M00')>0 Or Instr(:old.rank_no,'S00')>0) THEN --不是随机人员
               --1、更新老飞行员时间-----------------------------------------------------------------
               if :old.fly_hours is not null then
                 --更新本月数据
                  update t_plan_roster_a t
                  set t.month_fly_hours = Nvl(t.month_fly_hours,0) - nvl(:old.fly_hours,0)
                  where t.plan_id = :old.plan_id
                    and t.p_code = :old.p_code
                    and t.flight_date = A_CurrDate;
                 --更新3月数据
                  update t_plan_roster_a t3
                  set t3.month3_fly_hours = Nvl(t3.month3_fly_hours,0) - nvl(:old.fly_hours,0)
                  where t3.plan_id = :old.plan_id
                    and t3.p_code = :old.p_code
                    and t3.flight_date >= A_CurrDate
                    and t3.flight_date <= add_months(A_CurrDate,2);
                 --更新本年数据
                  update t_plan_roster_a ty
                  set ty.year_fly_hours = Nvl(ty.year_fly_hours,0) - nvl(:old.fly_hours,0)
                   where ty.plan_id = :old.plan_id
                     and ty.p_code = :old.p_code
                     and to_char(ty.flight_date,'yyyy') = to_char(:old.flight_date,'yyyy');
               end if;
             END IF;

             IF Not (Instr(:new.rank_no,'M00')>0 Or Instr(:new.rank_no,'S00')>0) THEN --不是随机人员
               --2、更新新飞行时间-----------------------------------------------------------------
               if :new.fly_hours is not null then
                 --更新本月数据
                  update t_plan_roster_a t
                  set t.month_fly_hours = Nvl(t.month_fly_hours,0) + Nvl(:new.fly_hours,0)
                  where t.plan_id = :new.plan_id
                    and t.p_code = :new.p_code
                    and t.flight_date = A_CurrDate;
                 --更新3月数据
                  update t_plan_roster_a t3
                  set t3.month3_fly_hours = Nvl(t3.month3_fly_hours,0) + Nvl(:new.fly_hours,0)
                  where t3.plan_id = :new.plan_id
                    and t3.p_code = :new.p_code
                    and t3.flight_date >= A_CurrDate
                    and t3.flight_date <= add_months(A_CurrDate,2);
                 --更新本年数据
                 update t_plan_roster_a ty
                 set ty.year_fly_hours = Nvl(ty.year_fly_hours,0) + Nvl(:new.fly_hours,0)
                  where ty.plan_id = :new.plan_id
                    and ty.p_code = :new.p_code
                    and to_char(ty.flight_date,'yyyy') = to_char(:new.flight_date,'yyyy');
                end if;
           END IF;

        END IF;
    end if;
end ;
/


spool off
